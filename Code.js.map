{
  "version": 3,
  "sources": ["Source_TS/Check.ts", "Source_TS/Reset.ts", "Source_TS/Vacuum.ts", "Source_TS/Stage.ts", "Source_TS/Update.ts", "Source_TS/Hotkeys.ts", "Source_TS/Special.ts", "Source_TS/Limit.ts", "Source_TS/Player.ts", "Source_TS/Main.ts"],
  "sourcesContent": ["import Overlimit from './Limit';\nimport { global, player } from './Player';\nimport type { gameTab } from './Types';\n\nexport const checkTab = (tab: gameTab, subtab = null as null | string): boolean => {\n    switch (tab) {\n        case 'stage':\n            if (subtab === 'Advanced') { return player.stage.true >= 6; }\n            return subtab === 'Structures' || subtab === null;\n        case 'Elements':\n        case 'upgrade':\n            if (player.stage.true < 2 && player.discharge.energyMax < 12) { return false; }\n            if (subtab === 'Elements' || tab === 'Elements') { return global.stageInfo.activeAll.includes(4) && player.upgrades[4][1] === 1; }\n            return subtab === 'Upgrades' || subtab === null;\n        case 'strangeness':\n            if (player.stage.true < 7 && player.strange[0].total <= 0 && (!player.inflation.vacuum || player.stage.current < 5)) { return false; }\n            if (subtab === 'Milestones') { return player.cosmon.total >= global.inflationTreeInfo.startCost[4] || !player.inflation.vacuum; }\n            return subtab === 'Matter' || subtab === null;\n        case 'inflation':\n            if (player.stage.true < 7) { return false; }\n            return subtab === 'Researches' || subtab === 'Milestones' || subtab === null;\n        case 'settings':\n            if (subtab === 'History') { return player.stage.true >= 7 || player.strange[0].total > 0; }\n            return subtab === 'Settings' || subtab === 'Stats' || subtab === null;\n        default:\n            return false;\n    }\n};\n\nexport const checkBuilding = (index: number, stageIndex: number): boolean => {\n    if (index < 1 || global.buildingsInfo.maxActive[stageIndex] < index + 1) { return false; }\n\n    if (stageIndex === 1) {\n        return true;\n    } else if (stageIndex === 2) {\n        return true;\n    } else if (stageIndex === 3) {\n        if (player.accretion.rank === 0) { return false; }\n        if (index === 1) { return true; }\n        if (index === 2) { return player.upgrades[3][2] === 1; }\n        if (index === 3) { return player.upgrades[3][4] === 1; }\n        if (index === 4) { return player.upgrades[3][8] === 1; }\n        if (index === 5) { return player.upgrades[3][11] === 1; }\n    } else if (stageIndex === 4) {\n        if (player.collapse.mass < global.collapseInfo.unlockB[index] && player.researchesExtra[5][0] < 1) { return false; }\n        if (index === 1) { return true; }\n        if (index === 2) { return player.researchesExtra[4][0] >= 1; }\n        if (index === 3) { return player.researchesExtra[4][0] >= 2; }\n        if (index === 4) { return player.researchesExtra[4][0] >= 3; }\n        if (index === 5) { return player.elements[26] >= 1 && player.challenges.active !== 0; }\n    } else if (stageIndex === 5) {\n        if (index === 1) { return player.inflation.vacuum || player.milestones[2][0] >= 7; }\n        if (index === 2) { return player.inflation.vacuum || player.milestones[3][0] >= 7; }\n        if (index === 3) { return player.researchesExtra[5][0] >= 1; }\n    } else if (stageIndex === 6) {\n        return player.inflation.vacuum;\n    }\n\n    return false;\n};\n\nexport const checkUpgrade = (upgrade: number, stageIndex: number, type: 'upgrades' | 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'elements' | 'strangeness' | 'inflations'): boolean => {\n    switch (type) { //Some cases are handled by max level being 0\n        case 'upgrades':\n            if (global.upgradesInfo[stageIndex].maxActive < upgrade + 1) { return false; }\n            if (stageIndex === 1) {\n                if (upgrade === 0 || upgrade === 1) { return player.inflation.vacuum; }\n                if (upgrade === 3) { return player.upgrades[1][5] === 1 || player.buildings[1][player.inflation.vacuum ? 4 : 2].total.moreThan('0'); }\n                if (upgrade === 4) { return player.upgrades[1][5] === 1 || player.buildings[1][player.inflation.vacuum ? 5 : 3].total.moreThan('0'); }\n                if (upgrade > 5) {\n                    if (player.upgrades[1][5] !== 1) { return false; }\n                    if (upgrade === 10) { return player.strangeness[5][10] >= 1; }\n                }\n                return true;\n            } else if (stageIndex === 2) {\n                if (upgrade === 0) { return player.buildings[2][1].true >= 1 || player.buildings[2][2].true >= 1; }\n                if (upgrade === 7) { return player.strangeness[2][2] >= 3; }\n                if (upgrade === 8) { return player.strangeness[2][8] >= 3; }\n                return true;\n            } else if (stageIndex === 3) {\n                if (player.accretion.rank < global.accretionInfo.rankU[upgrade] || player.accretion.rank === 0) { return false; }\n                if (upgrade === 7) { return player.strangeness[3][2] >= 3; }\n                if (upgrade === 13) { return player.strangeness[5][10] >= 3; }\n                return true;\n            } else if (stageIndex === 4) {\n                const galaxy = player.researchesExtra[5][0] >= 1;\n                if (!galaxy && player.collapse.mass < global.collapseInfo.unlockU[upgrade]) { return false; }\n                if (upgrade === 2) { return player.upgrades[4][1] === 1; }\n                if (upgrade === 3) { return player.strangeness[4][2] >= 3 && player.upgrades[4][2] === 1 && (galaxy || player.collapse.stars[1] > 0); }\n                if (upgrade === 4) { return player.strangeness[4][9] >= 1 && player.upgrades[4][3] === 1; }\n                return true;\n            } else if (stageIndex === 5) {\n                if (player.buildings[6][1].true < global.mergeInfo.unlockU[upgrade]) { return false; }\n                if (upgrade === 0) { return player.inflation.vacuum || player.milestones[2][0] >= 7; }\n                if (upgrade === 1) { return player.inflation.vacuum || player.milestones[3][0] >= 7; }\n                if (upgrade === 2) { return player.buildings[5][3].true >= 1; }\n                if (upgrade === 3) { return player.inflation.vacuum ? player.accretion.rank >= 7 : player.milestones[5][1] >= 8; }\n                return player.accretion.rank >= 7;\n            }\n            break;\n        case 'researches':\n            if (global.researchesInfo[stageIndex].maxActive < upgrade + 1) { return false; }\n            if (stageIndex === 1) {\n                return player.upgrades[1][5] === 1;\n            } else if (stageIndex === 2) {\n                if (upgrade === 0) { return player.buildings[2][1].true >= 1 || player.buildings[2][2].true >= 1 || player.researches[2][0] >= 1; }\n                return true;\n            } else if (stageIndex === 3) {\n                return player.accretion.rank >= global.accretionInfo.rankR[upgrade] && player.accretion.rank !== 0;\n            } else if (stageIndex === 4) {\n                const galaxy = player.researchesExtra[5][0] >= 1;\n                if (!galaxy && player.collapse.mass < global.collapseInfo.unlockR[upgrade]) { return false; }\n                if (upgrade === 3) { return (galaxy || player.collapse.stars[0] > 0) && player.strangeness[4][2] >= 1; }\n                if (upgrade === 4) { return galaxy || player.collapse.stars[2] > 0; }\n                if (upgrade === 5) { return (galaxy || player.collapse.stars[2] > 0) && player.strangeness[4][9] >= 3; }\n                return true;\n            } else if (stageIndex === 5) {\n                if (player.buildings[6][1].true < global.mergeInfo.unlockR[upgrade]) { return false; }\n                if (upgrade === 0) { return player.inflation.vacuum || player.milestones[2][0] >= 7; }\n                if (upgrade === 1) { return player.inflation.vacuum || player.milestones[3][0] >= 7; }\n                return player.accretion.rank >= 7;\n            }\n            break;\n        case 'researchesExtra':\n            if (global.researchesExtraInfo[stageIndex].maxActive < upgrade + 1) { return false; }\n            if (stageIndex === 1) {\n                if (upgrade === 1) { return player.researchesExtra[1][2] >= 2; }\n                if (upgrade === 3) { return player.researchesExtra[1][2] >= 1; }\n                if (upgrade === 4) { return player.accretion.rank >= 6; }\n                if (upgrade === 5) { return player.accretion.rank >= 6 && player.strangeness[5][10] >= 1; }\n                return player.upgrades[1][5] === 1;\n            } else if (stageIndex === 2) {\n                if (upgrade === 3) { return player.accretion.rank >= 6; }\n                if (upgrade === 4) { return player.accretion.rank >= 7 && player.strangeness[5][10] >= 2; }\n                return player.upgrades[2][2] === 1;\n            } else if (stageIndex === 3) {\n                if (player.accretion.rank < global.accretionInfo.rankE[upgrade] || player.accretion.rank === 0) { return false; }\n                if (upgrade === 4) { return player.researchesExtra[1][2] >= 2; }\n                if (upgrade === 5) { return player.strangeness[5][10] >= 3; }\n                return true;\n            } else if (stageIndex === 4) {\n                if (upgrade === 1) { return player.collapse.stars[0] > 0 || player.researchesExtra[5][0] >= 1; }\n                if (upgrade === 2) { return (player.collapse.stars[0] > 0 || player.researchesExtra[5][0] >= 1) && player.strangeness[4][2] >= 2; }\n                if (upgrade === 3) { return (player.collapse.stars[1] > 0 || player.researchesExtra[5][0] >= 1) && player.strangeness[4][9] >= 2; }\n                return true;\n            } else if (stageIndex === 5) {\n                if (player.buildings[6][1].true < global.mergeInfo.unlockE[upgrade]) { return false; }\n                if (upgrade === 0) { return (player.inflation.vacuum || player.milestones[4][1] >= 8) && player.strangeness[5][3] >= 1; }\n                return player.accretion.rank >= 7;\n            }\n            break;\n        case 'researchesAuto': {\n            const autoStage = global.researchesAutoInfo.autoStage[upgrade][player.researchesAuto[upgrade]]; //Can be undefined\n            if (!(autoStage === stageIndex || (autoStage === 4 && stageIndex === 5))) { return false; }\n            if (upgrade === 0) { return player.inflation.vacuum; }\n            if (upgrade === 1) { return player.inflation.vacuum && player.accretion.rank >= 6; }\n            return true;\n        }\n        case 'ASR':\n            if (stageIndex === 1) { return player.upgrades[1][5] >= 1; }\n            if (stageIndex === 3) { return player.accretion.rank >= 1; }\n            return true;\n        case 'elements':\n            if (upgrade >= 29) { return player.upgrades[4][4] === 1 && player.buildings[6][1].true >= upgrade - 29; }\n            if (upgrade >= 27) { return player.upgrades[4][3] === 1; }\n            if (upgrade >= 11) { return player.upgrades[4][2] === 1 && (player.collapse.stars[1] > 0 || player.researchesExtra[5][0] >= 1); }\n            if (upgrade >= 6) { return player.upgrades[4][2] === 1; }\n            return player.upgrades[4][1] === 1 && upgrade > 0;\n        case 'strangeness':\n            if (global.strangenessInfo[stageIndex].maxActive < upgrade + 1) { return false; }\n            if (player.inflation.vacuum) {\n                if (stageIndex === 1) {\n                    if (upgrade === 7) { return player.challenges.void[1] >= 1; }\n                    if (upgrade === 8) { return player.challenges.void[1] >= 2; }\n                    if (upgrade === 9) { return player.challenges.void[4] >= 2; }\n                } else if (stageIndex === 2) {\n                    if (upgrade === 7) { return player.challenges.void[1] >= 3; }\n                    if (upgrade === 8) { return player.challenges.void[2] >= 1; }\n                    if (upgrade === 9) { return player.challenges.void[2] >= 2; }\n                } else if (stageIndex === 3) {\n                    if (upgrade === 8) { return player.challenges.void[4] >= 4; }\n                    if (upgrade === 9) { return player.challenges.void[5] >= 1; }\n                } else if (stageIndex === 4) {\n                    if (upgrade === 8) { return player.challenges.void[4] >= 3; }\n                    if (upgrade === 9) { return player.challenges.void[4] >= 5; }\n                } else if (stageIndex === 5) {\n                    if (upgrade === 4) { return player.challenges.void[4] >= 1; }\n                    if (upgrade === 8) { return player.challenges.void[3] >= 5; }\n                    if (upgrade === 9) { return player.challenges.void[3] >= 6; }\n                    if (upgrade === 10) { return player.challenges.void[2] >= 3; }\n                    if ([0, 1, 5, 7].includes(upgrade)) { return player.strangeness[5][3] >= 1; }\n                }\n                return true;\n            }\n            if (((stageIndex === 1 || stageIndex === 2) && upgrade < 6) || ((stageIndex === 3 || stageIndex === 4) && upgrade < 7)) { return true; }\n            if (player.milestones[4][0] < 8) { return false; }\n            if (stageIndex === 5) {\n                if (upgrade === 2) { return player.milestones[5][0] >= 8; }\n                if (upgrade === 4) { return player.milestones[4][1] >= 8; }\n                if ([0, 1, 3, 5].includes(upgrade)) { return player.milestones[2][0] >= 7 || player.milestones[3][0] >= 7; }\n            }\n            return true;\n        case 'inflations':\n            if (upgrade === 5) { return player.challenges.supervoid[1] >= 1; }\n            return player.stage.true >= 7;\n    }\n\n    return false;\n};\n\nexport const allowedToBeReset = (check: number, stageIndex: number, type: 'structures' | 'upgrades' | 'researches' | 'researchesExtra' | 'elements'): boolean => {\n    switch (type) {\n        case 'structures':\n            if (stageIndex === 1) { return check !== 1 || !player.inflation.vacuum || player.challenges.supervoid[3] < 1; }\n            if (stageIndex === 5) { return check !== 3; }\n            if (stageIndex === 6) { return check < 1; }\n            break;\n        case 'upgrades':\n            if (stageIndex === 1) { return check !== 5; }\n            if (stageIndex === 2) { return check !== 2; }\n            if (stageIndex === 4) { return false; }\n            if (stageIndex === 5) { return check !== 3; }\n            break;\n        case 'researches':\n            if (stageIndex === 1) { return check !== 3; }\n            break;\n        case 'researchesExtra':\n            if (stageIndex === 1) { return check !== 2; }\n            if (stageIndex === 2) { return check > 2; }\n            if (stageIndex === 4) { return check !== 0; }\n            if (stageIndex === 5) { return false; }\n            break;\n        case 'elements':\n            return ![26, 29, 30].includes(check);\n    }\n\n    return true;\n};\n\nexport const milestoneGetValue = (index: number, stageIndex: number): number | Overlimit => {\n    if (stageIndex === 1) {\n        if (index === 0) { return player.buildings[1][player.inflation.vacuum ? 1 : 0].total; }\n        if (index === 1) { return player.discharge.energy; }\n    } else if (stageIndex === 2) {\n        if (index === 0) { return player.inflation.vacuum ? player.vaporization.clouds : player.buildings[2][1].total; }\n        if (index === 1) { return player.inflation.vacuum ? player.buildings[2][1].total : player.buildings[2][2].current; }\n    } else if (stageIndex === 3) {\n        if (index === 0) { return player.buildings[3][0].total; }\n        if (index === 1) { return player.buildings[3][4].true + player.buildings[3][5].true; }\n    } else if (stageIndex === 4) {\n        if (index === 0) { return player.buildings[4][0].total; }\n        if (index === 1) { return player.inflation.vacuum ? player.collapse.stars[2] : global.collapseInfo.newMass; }\n    } else if (stageIndex === 5) {\n        if (index === 0) {\n            if (!player.inflation.vacuum) { return global.collapseInfo.trueStars; }\n            const stars = player.buildings[4];\n            return new Overlimit(stars[1].total).plus(stars[2].total, stars[3].total, stars[4].total, stars[5].total);\n        }\n        if (index === 1) { return player.buildings[5][3].true; }\n    }\n    throw new TypeError(`Milestone s${stageIndex}-i${index} doesn't exist`);\n};\nexport const milestoneCheck = (index: number, stageIndex: number): boolean => {\n    const pointer = global.milestonesInfo[stageIndex];\n    if (player.inflation.vacuum) {\n        if (player.challenges.active !== 0 || player.inflation.tree[4] < 1 ||\n            pointer.time[index] < player.time[player.challenges.super ? 'vacuum' : 'stage']) { return false; }\n    } else if (pointer.max[index] <= player.milestones[stageIndex][index] ||\n        (player.stage.true < 7 && player.stage.resets < 4) ||\n        (stageIndex === 5 && player.milestones[4][index] < 8) ||\n        (player.inflation.tree[4] < 1 && pointer.time[index] < player.time.stage)\n    ) { return false; }\n    return pointer.need[index].lessOrEqual(milestoneGetValue(index, stageIndex));\n};\n", "import { allowedToBeReset, checkTab } from './Check';\nimport { cloneArray, global, player, playerStart } from './Player';\nimport { autoResearchesSet, autoUpgradesSet, calculateMaxLevel, calculateResearchCost, autoElementsSet, assignMilestoneInformation, assignBuildingsProduction, assignResetInformation } from './Stage';\nimport { setRemnants, stageUpdate, switchTab, visualUpdateResearches, visualUpdateUpgrades } from './Update';\n\nexport const reset = (type: 'discharge' | 'vaporization' | 'rank' | 'collapse' | 'galaxy', stageIndex: number[]) => {\n    const { dischargeInfo } = global;\n    const { energyStage, energyType } = dischargeInfo;\n    const { buildings, discharge } = player;\n\n    if (type === 'galaxy') {\n        const { elements } = player;\n\n        for (let i = 1; i < playerStart.elements.length; i++) {\n            if (!allowedToBeReset(i, 4, 'elements')) { continue; }\n\n            elements[i] = 0;\n            visualUpdateUpgrades(i, 4, 'elements');\n        }\n        autoElementsSet();\n\n        global.collapseInfo.pointsLoop = 0;\n        player.collapse.mass = 0.01235;\n        player.collapse.stars = [0, 0, 0];\n    }\n\n    let energyRefund = 0;\n    for (const s of stageIndex) {\n        energyRefund += energyStage[s];\n        energyStage[s] = 0;\n\n        const building = buildings[s];\n        building[0].current.setValue(playerStart.buildings[s][0].current);\n        building[0].total.setValue(playerStart.buildings[s][0].current);\n        for (let i = 1; i < global.buildingsInfo.maxActive[s]; i++) {\n            if (!allowedToBeReset(i, s, 'structures')) {\n                if (!player.inflation.vacuum) { continue; }\n                const selfmade = building[i as 1].true;\n                if (s === 1) {\n                    building[1].current.setValue(selfmade);\n                    building[1].total.setValue(selfmade);\n                }\n                const energy = energyType[s][i] * selfmade;\n                dischargeInfo.energyTrue += energy;\n                energyStage[s] += energy;\n                continue;\n            }\n            building[i as 1].true = 0;\n            building[i].current.setValue('0');\n            building[i].total.setValue('0');\n        }\n        if (s === 2) {\n            assignBuildingsProduction.S2Levels(false);\n        } else if (s === 4) {\n            global.collapseInfo.trueStars = 0;\n            assignBuildingsProduction.S4Levels(false);\n        }\n\n        if (type === 'discharge') { continue; }\n        const upgrades = player.upgrades[s];\n\n        for (let i = 0; i < global.upgradesInfo[s].maxActive; i++) {\n            if (!allowedToBeReset(i, s, 'upgrades')) { continue; }\n\n            upgrades[i] = 0;\n            visualUpdateUpgrades(i, s, 'upgrades');\n        }\n        autoUpgradesSet(s);\n\n        if (type === 'vaporization') { continue; }\n        const researches = player.researches[s];\n\n        for (let i = 0; i < global.researchesInfo[s].maxActive; i++) {\n            if (!allowedToBeReset(i, s, 'researches')) { continue; }\n\n            researches[i] = 0;\n            visualUpdateResearches(i, s, 'researches');\n            calculateResearchCost(i, s, 'researches');\n        }\n        autoResearchesSet('researches', s);\n\n        if (type === 'rank') { continue; }\n        const researchesExtra = player.researchesExtra[s];\n\n        for (let i = 0; i < global.researchesExtraInfo[s].maxActive; i++) {\n            if (!allowedToBeReset(i, s, 'researchesExtra')) { continue; }\n\n            researchesExtra[i] = 0;\n            visualUpdateResearches(i, s, 'researchesExtra');\n            calculateResearchCost(i, s, 'researchesExtra');\n        }\n        autoResearchesSet('researchesExtra', s);\n        if (player.stage.active === 4) { setRemnants(); }\n    }\n\n    if (player.inflation.vacuum) {\n        let deficit = dischargeInfo.energyTrue - discharge.energy - energyRefund;\n        for (let s = 2; s <= 5; s++) {\n            if (stageIndex.includes(s)) { continue; }\n            const building = buildings[s];\n            for (let i = global.buildingsInfo.maxActive[s] - 1; i >= 1; i--) {\n                if (!allowedToBeReset(i, s, 'structures')) { continue; }\n\n                if (deficit > 0) {\n                    const max = Math.min(Math.ceil(deficit / energyType[s][i]), building[i as 1].true);\n                    if (max > 0) {\n                        building[i as 1].true -= max;\n                        deficit -= max * energyType[s][i];\n                        energyStage[s] -= max * energyType[s][i];\n                        if (s === 4) { global.collapseInfo.trueStars -= max; }\n                    }\n                }\n                building[i].current.setValue(building[i as 1].true);\n                building[i].total.setValue(building[i as 1].true);\n            }\n            if (s !== 5) { //Stage 5 need to use trueStars (not included because its a fake stat)\n                building[0].current.setValue(playerStart.buildings[s][0].current);\n                building[0].total.setValue(playerStart.buildings[s][0].current);\n            }\n            if (s === 2) {\n                assignBuildingsProduction.S2Levels(true);\n                assignBuildingsProduction.S2FreeBuilds();\n            } else if (s === 5) {\n                assignBuildingsProduction.S4Levels(true);\n            }\n        }\n\n        discharge.energy += deficit;\n        dischargeInfo.energyTrue = discharge.energy;\n    } else if (type === 'discharge') { //stageIndex.includes(1)\n        discharge.energy = 0;\n        dischargeInfo.energyTrue = 0;\n    }\n\n    assignBuildingsProduction.globalCache();\n    if (player.inflation.vacuum) { assignResetInformation.solarHardcap(); }\n};\n\n/** Default value for update is true; Default value for full is true (and null value for update), should be set to false only if Stage is permanent from false Vacuum */\nexport const resetStage = (stageIndex: number[], update = true as null | boolean, full = true) => {\n    const { strangeness } = player;\n    for (const s of stageIndex) {\n        const buildings = player.buildings[s];\n        const buildingResetValue = playerStart.buildings[s][0].current;\n        buildings[0].current.setValue(buildingResetValue);\n        buildings[0].total.setValue(buildingResetValue);\n        buildings[0].trueTotal.setValue(buildingResetValue);\n        if (s < 6) {\n            for (let i = 1; i < global.buildingsInfo.maxActive[s]; i++) {\n                buildings[i as 1].true = 0;\n                buildings[i].current.setValue('0');\n                buildings[i].total.setValue('0');\n                buildings[i].trueTotal.setValue('0');\n            }\n            global.dischargeInfo.energyStage[s] = 0;\n        }\n\n        player.upgrades[s] = cloneArray(playerStart.upgrades[s]);\n        player.researches[s] = cloneArray(playerStart.researches[s]);\n        player.researchesExtra[s] = cloneArray(playerStart.researchesExtra[s]);\n\n        global.lastUpgrade[s][0] = null;\n        if (s === 1) {\n            player.discharge.current = 0;\n            player.discharge.energy = 0;\n            global.dischargeInfo.energyTrue = 0;\n        } else if (s === 2) {\n            player.vaporization.clouds.setValue('0');\n            assignBuildingsProduction.S2Levels(false);\n        } else if (s === 3) {\n            if (player.inflation.vacuum) {\n                player.accretion.rank = 1;\n            } else {\n                player.accretion.rank = 0;\n                buildings[0].current.setValue('5.9722e27');\n            }\n        } else if (s === 4) {\n            global.collapseInfo.pointsLoop = 0;\n            global.collapseInfo.trueStars = 0;\n            player.collapse.mass = 0.01235;\n            player.collapse.stars = [0, 0, 0];\n            player.collapse.maxElement = 0;\n            assignBuildingsProduction.S4Levels(false);\n            player.elements = cloneArray(playerStart.elements);\n            player.elements[0] = strangeness[4][8] >= 1 ? 1 : 0;\n            autoElementsSet();\n            for (let i = 0; i < playerStart.elements.length; i++) { visualUpdateUpgrades(i, 4, 'elements'); }\n            global.lastElement = null;\n        } else if (s === 5) {\n            player.merge.reward = [0, 0, 0, 0];\n            player.merge.resets = 0;\n        }\n    }\n    if (full) {\n        player.time.stage = 0;\n        player.stage.time = 0;\n        player.stage.peak = 0;\n        global.debug.timeLimit = false;\n        player.researchesAuto[0] = strangeness[3][6];\n        player.researchesAuto[1] = strangeness[4][6];\n        player.researchesAuto[2] = player.inflation.vacuum ? (strangeness[1][4] < 1 ? 0 : strangeness[3][4] < 1 ? 1 : strangeness[2][4] < 1 ? 2 : strangeness[4][4] < 1 ? 3 : strangeness[5][9] < 1 ? 4 : 5) :\n            (strangeness[Math.min(player.stage.current, 4)][4] >= 1 ? 1 : 0);\n        for (let i = 0; i < playerStart.researchesAuto.length; i++) { visualUpdateResearches(i, 0, 'researchesAuto'); }\n    } else { assignBuildingsProduction.globalCache(); }\n\n    for (const s of stageIndex) { //Less errors if do it separatly\n        if (s >= 6) { continue; }\n        for (let i = 0; i < global.researchesInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researches'); }\n        for (let i = 0; i < global.researchesExtraInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researchesExtra'); }\n        if (strangeness[s][5] < 1) {\n            player.ASR[s] = 0;\n            visualUpdateResearches(0, s, 'ASR');\n        }\n\n        autoUpgradesSet(s);\n        autoResearchesSet('researches', s);\n        autoResearchesSet('researchesExtra', s);\n    }\n    if (update !== null) {\n        switchTab(checkTab(global.tab) ? global.tab : 'stage');\n        stageUpdate(update, true);\n        if (!update) {\n            const active = player.stage.active;\n            for (let i = 0; i < global.upgradesInfo[active].maxActive; i++) { visualUpdateUpgrades(i, active, 'upgrades'); }\n            if (active === 4) { setRemnants(); }\n        }\n    }\n};\n\nexport const resetVacuum = () => {\n    const inflations = [false];\n    for (let i = 1; i <= 5; i++) { inflations[i] = player.buildings[6][1].current.moreOrEqual(i); }\n    for (let s = 1; s <= 6; s++) {\n        const buildings = player.buildings[s];\n        const buildingResetValue = playerStart.buildings[s][0].current;\n        buildings[0].current.setValue(buildingResetValue);\n        buildings[0].total.setValue(buildingResetValue);\n        buildings[0].trueTotal.setValue(buildingResetValue);\n        if (s < 6) {\n            for (let i = 1; i < playerStart.buildings[s].length; i++) {\n                buildings[i as 1].true = 0;\n                buildings[i].current.setValue('0');\n                buildings[i].total.setValue('0');\n                buildings[i].trueTotal.setValue('0');\n            }\n            player.strangeness[s] = cloneArray(playerStart.strangeness[s]);\n            player.milestones[s] = cloneArray(playerStart.milestones[s]);\n            for (let i = 0; i < playerStart.milestones[s].length; i++) { assignMilestoneInformation(i, s); }\n        }\n\n        player.upgrades[s] = cloneArray(playerStart.upgrades[s]);\n        player.researches[s] = cloneArray(playerStart.researches[s]);\n        player.researchesExtra[s] = cloneArray(playerStart.researchesExtra[s]);\n        global.lastUpgrade[s][0] = null;\n    }\n    player.researchesAuto[0] = inflations[3] ? 3 : 0;\n    player.researchesAuto[1] = inflations[3] ? 2 : 0;\n    player.researchesAuto[2] = inflations[4] ? (player.inflation.vacuum ? 4 : 1) : 0;\n    player.stage.current = 1;\n    player.stage.resets = 0;\n    player.stage.peak = 0;\n    player.stage.time = 0;\n    player.inflation.time = 0;\n    player.time.stage = 0;\n    player.time.vacuum = 0;\n    global.debug.timeLimit = false;\n\n    //Stage 1\n    player.discharge.energy = 0;\n    player.discharge.energyMax = 0;\n    player.discharge.current = 0;\n\n    //Stage 2\n    player.vaporization.clouds.setValue('0');\n    player.vaporization.cloudsMax.setValue('0');\n    assignBuildingsProduction.S2Levels(false);\n\n    //Stage 3\n    if (player.inflation.vacuum) {\n        player.accretion.rank = 1;\n    } else {\n        player.accretion.rank = 0;\n        player.buildings[3][0].current.setValue('5.9722e27');\n\n        global.buildingsInfo.producing[4][5].setValue('0');\n    }\n\n    //Stage 4\n    global.collapseInfo.pointsLoop = 0;\n    global.collapseInfo.trueStars = 0;\n    player.collapse.mass = 0.01235;\n    player.collapse.massMax = 0.01235;\n    player.collapse.stars = [0, 0, 0];\n    player.collapse.maxElement = 0;\n    assignBuildingsProduction.S4Levels(false);\n    player.elements = cloneArray(playerStart.elements);\n    global.lastElement = null;\n\n    //Stage 5 and Strangeness\n    player.merge.resets = 0;\n    player.merge.reward = [0, 0, 0, 0];\n    player.challenges.void = cloneArray(playerStart.challenges.void);\n    global.historyStorage.stage = [];\n    player.history.stage.best = [3.1556952e16, 0, 0, 0];\n    global.lastStrangeness = [null, 0];\n    global.lastMilestone = [null, 0];\n    for (let i = 0; i < playerStart.strange.length; i++) {\n        player.time.export[i + 1] = 0;\n        player.strange[i].current = 0;\n        player.strange[i].total = 0;\n    }\n\n    if (inflations[1]) {\n        const start = player.buildings[6][1].true ** 2;\n        player.strange[0].current = start;\n        player.strange[0].total = start;\n        if (player.inflation.vacuum) { player.strangeness[1][8] = 2; }\n    }\n    if (inflations[2]) { player.strangeness[5][4] = 1; }\n    if (inflations[3]) {\n        player.strangeness[3][6] = 3;\n        player.strangeness[4][6] = 2;\n    }\n    if (inflations[5]) { player.strangeness[5][6] = player.inflation.vacuum ? 1 : 2; }\n\n    for (let i = 0; i < playerStart.researchesAuto.length; i++) { calculateMaxLevel(i, 0, 'researchesAuto'); }\n    for (let s = 1; s <= 5; s++) {\n        for (let i = 0; i < global.researchesInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researches'); }\n        for (let i = 0; i < global.researchesExtraInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researchesExtra'); }\n        calculateMaxLevel(0, s, 'ASR');\n        if (inflations[2]) {\n            player.ASR[s] = global.ASRInfo.max[s];\n            player.strangeness[s][5] = 1;\n        } else { player.ASR[s] = 0; }\n        if (inflations[4]) { player.strangeness[s][4] = 1; }\n        for (let i = 0; i < global.strangenessInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'strangeness'); }\n        autoUpgradesSet(s);\n        autoResearchesSet('researches', s);\n        autoResearchesSet('researchesExtra', s);\n    }\n    autoElementsSet();\n\n    assignBuildingsProduction.strange1();\n    assignBuildingsProduction.strange0();\n    assignResetInformation.maxRank();\n    assignResetInformation.trueEnergy();\n    for (let i = 0; i < playerStart.elements.length; i++) { visualUpdateUpgrades(i, 4, 'elements'); }\n\n    switchTab(checkTab(global.tab) ? global.tab : 'stage');\n    stageUpdate(true, true);\n};\n\nexport const cloneBeforeReset = (depth: 'stage' | 'vacuum') => {\n    const { clone } = player;\n    clone.depth = depth;\n\n    clone.buildings = [[]];\n    clone.upgrades = [[]];\n    clone.researches = [[]];\n    clone.researchesExtra = [[]];\n    clone.ASR = [0];\n    if (depth !== 'stage') {\n        clone.strangeness = [];\n        clone.milestones = [];\n    }\n    for (let s = 1; s <= 6; s++) {\n        const buildings = player.buildings[s];\n        clone.buildings[s] = [{\n            current: buildings[0].current.toString(),\n            total: buildings[0].total.toString(),\n            trueTotal: buildings[0].trueTotal.toString()\n        }];\n        if (s < 6) {\n            for (let i = 1; i < buildings.length; i++) {\n                clone.buildings[s][i] = {\n                    true: buildings[i as 1].true,\n                    current: buildings[i].current.toString(),\n                    total: buildings[i].total.toString(),\n                    trueTotal: buildings[i].trueTotal.toString()\n                };\n            }\n            clone.ASR[s] = player.ASR[s];\n            if (depth !== 'stage') {\n                clone.strangeness[s] = cloneArray(player.strangeness[s]);\n                clone.milestones[s] = cloneArray(player.milestones[s]);\n            }\n        }\n        clone.upgrades[s] = cloneArray(player.upgrades[s]);\n        clone.researches[s] = cloneArray(player.researches[s]);\n        clone.researchesExtra[s] = cloneArray(player.researchesExtra[s]);\n    }\n    clone.stage = {\n        current: player.stage.current,\n        time: player.stage.time,\n        peak: player.stage.peak\n    };\n    clone.time = {\n        stage: player.time.stage\n    };\n    clone.researchesAuto = cloneArray(player.researchesAuto);\n\n    clone.discharge = {\n        current: player.discharge.current,\n        energy: player.discharge.energy\n    };\n    clone.vaporization = {\n        clouds: player.vaporization.clouds.toString()\n    };\n    clone.accretion = {\n        rank: player.accretion.rank\n    };\n    clone.collapse = {\n        mass: player.collapse.mass,\n        stars: cloneArray(player.collapse.stars),\n        maxElement: player.collapse.maxElement\n    };\n    clone.elements = cloneArray(player.elements);\n    clone.merge = {\n        reward: cloneArray(player.merge.reward),\n        resets: player.merge.resets\n    };\n    if (depth !== 'stage') {\n        clone.strange = [];\n        for (let i = 0; i < player.strange.length; i++) {\n            clone.strange[i] = {\n                current: player.strange[i].current,\n                total: player.strange[i].total\n            };\n        }\n        clone.history = {\n            stage: {\n                list: global.historyStorage.stage.slice(0, player.history.stage.input[0]),\n                best: cloneArray(player.history.stage.best)\n            }\n        };\n        clone.challenges = {\n            void: cloneArray(player.challenges.void)\n        };\n        clone.inflation = {\n            vacuum: player.inflation.vacuum,\n            time: player.inflation.time\n        };\n        clone.time.export = cloneArray(player.time.export);\n        clone.time.vacuum = player.time.vacuum;\n        clone.stage.resets = player.stage.resets;\n        clone.discharge.energyMax = player.discharge.energyMax;\n        clone.vaporization.cloudsMax = player.vaporization.cloudsMax.toString();\n        clone.collapse.massMax = player.collapse.massMax;\n    }\n};\n\nexport const loadFromClone = () => {\n    const { clone } = player;\n    const depth = clone.depth;\n\n    for (let s = 1; s <= 6; s++) {\n        const buildings = player.buildings[s];\n        const buildingsClone = clone.buildings[s];\n\n        buildings[0].current.setValue(buildingsClone[0].current);\n        buildings[0].total.setValue(buildingsClone[0].total);\n        buildings[0].trueTotal.setValue(buildingsClone[0].trueTotal);\n        if (s < 6) {\n            for (let i = 1; i < buildingsClone.length; i++) {\n                buildings[i as 1].true = buildingsClone[i].true;\n                buildings[i].current.setValue(buildingsClone[i].current);\n                buildings[i].total.setValue(buildingsClone[i].total);\n                buildings[i].trueTotal.setValue(buildingsClone[i].trueTotal);\n            }\n            player.ASR[s] = clone.ASR[s];\n            if (depth !== 'stage') {\n                player.strangeness[s] = clone.strangeness[s];\n                player.milestones[s] = clone.milestones[s];\n                for (let i = 0; i < playerStart.milestones[s].length; i++) { assignMilestoneInformation(i, s); }\n            }\n        }\n\n        player.upgrades[s] = clone.upgrades[s];\n        player.researches[s] = clone.researches[s];\n        player.researchesExtra[s] = clone.researchesExtra[s];\n        global.lastUpgrade[s][0] = null;\n    }\n    player.researchesAuto = clone.researchesAuto;\n    player.stage.current = clone.stage.current;\n    player.stage.time = clone.stage.time;\n    player.stage.peak = clone.stage.peak;\n    player.time.stage = clone.time.stage;\n    global.debug.timeLimit = false;\n\n    player.discharge.current = clone.discharge.current;\n    player.discharge.energy = clone.discharge.energy;\n    player.vaporization.clouds.setValue(clone.vaporization.clouds);\n    player.accretion.rank = clone.accretion.rank;\n    assignBuildingsProduction.S2Levels(true);\n    const trueStars = clone.buildings[4];\n    global.collapseInfo.trueStars = trueStars[1].true + trueStars[2].true + trueStars[3].true + trueStars[4].true + trueStars[5].true;\n    global.collapseInfo.pointsLoop = 0;\n    player.collapse.mass = clone.collapse.mass;\n    player.collapse.stars = clone.collapse.stars;\n    player.collapse.maxElement = clone.collapse.maxElement;\n    assignBuildingsProduction.S4Levels(true);\n    player.elements = clone.elements;\n    global.lastElement = null;\n    player.merge.reward = clone.merge.reward;\n    player.merge.resets = clone.merge.resets;\n\n    if (depth !== 'stage') {\n        for (let i = 0; i < clone.strange.length; i++) {\n            player.time.export[i + 1] = clone.time.export[i + 1];\n            player.strange[i].current = clone.strange[i].current;\n            player.strange[i].total = clone.strange[i].total;\n        }\n        player.stage.resets = clone.stage.resets;\n        player.time.vacuum = clone.time.vacuum;\n        player.inflation.time = clone.inflation.time;\n        global.historyStorage.stage = clone.history.stage.list;\n        player.history.stage.best = clone.history.stage.best;\n        player.challenges.void = clone.challenges.void;\n        player.discharge.energyMax = clone.discharge.energyMax;\n        player.vaporization.cloudsMax.setValue(clone.vaporization.cloudsMax);\n        player.collapse.massMax = clone.collapse.massMax;\n        global.lastStrangeness = [null, 0];\n        global.lastMilestone = [null, 0];\n    }\n\n    for (let i = 0; i < playerStart.researchesAuto.length; i++) { calculateMaxLevel(i, 0, 'researchesAuto'); }\n    for (let s = 1; s <= 5; s++) {\n        for (let i = 0; i < global.researchesInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researches'); }\n        for (let i = 0; i < global.researchesExtraInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researchesExtra'); }\n        calculateMaxLevel(0, s, 'ASR');\n        if (depth !== 'stage') {\n            for (let i = 0; i < global.strangenessInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'strangeness'); }\n        }\n        autoUpgradesSet(s);\n        autoResearchesSet('researches', s);\n        autoResearchesSet('researchesExtra', s);\n    }\n    for (let i = 0; i < playerStart.elements.length; i++) { visualUpdateUpgrades(i, 4, 'elements'); }\n    autoElementsSet();\n\n    assignResetInformation.trueEnergy();\n    if (depth !== 'stage') {\n        assignBuildingsProduction.strange1();\n        assignBuildingsProduction.strange0();\n        assignResetInformation.maxRank();\n    }\n\n    switchTab(checkTab(global.tab) ? global.tab : 'stage');\n    stageUpdate(true, true);\n    player.clone = {};\n};\n", "import type Overlimit from './Limit';\nimport { getId, getQuery } from './Main';\nimport { global, player, playerStart } from './Player';\nimport { resetVacuum } from './Reset';\nimport { globalSave, playEvent, specialHTML } from './Special';\nimport { setActiveStage } from './Stage';\nimport { visualTrueStageUnlocks } from './Update';\n\nexport const prepareVacuum = (state: boolean) => { //Must not use direct player values\n    const { buildings } = playerStart;\n    const { buildingsInfo, upgradesInfo, researchesInfo, researchesExtraInfo, strangenessInfo } = global;\n    const star3ExpId = getQuery('#star3Effect > span:last-of-type');\n    const milestone1S1 = getQuery('#milestone1Stage1Div > img') as HTMLImageElement;\n    const milestone1S2 = getQuery('#milestone1Stage2Div > img') as HTMLImageElement;\n    const milestone2S2 = getQuery('#milestone2Stage2Div > img') as HTMLImageElement;\n    const milestone1S4 = getQuery('#milestone1Stage4Div > img') as HTMLImageElement;\n    let upgrades1Cost, researches1Cost, researches1Scaling, strangeness1Cost, strangeness1Scaling, strangeness2Cost, strangeness2Scaling, strangeness3Cost, strangeness3Scaling, strangeness4Cost, strangeness4Scaling, strangeness5Cost, strangeness5Scaling;\n\n    if (state) {\n        specialHTML.footerStatsHTML[1][0] = ['Energy%20mass.png', 'stage1borderImage cyanText', 'Mass'];\n        buildingsInfo.hoverText[2][0] = 'Tritium';\n        buildingsInfo.hoverText[3][0] = 'Preons hardcap';\n        buildings[1][0].current.setValue('5.476e-3');\n        buildings[2][0].current.setValue('0');\n        buildings[3][0].current.setValue('9.76185667392e-36');\n        buildingsInfo.maxActive[1] = 6;\n        buildingsInfo.maxActive[2] = 7;\n        buildingsInfo.maxActive[3] = 6;\n        buildingsInfo.maxActive[4] = 6;\n        if (buildingsInfo.name[1][0] !== 'Mass') {\n            specialHTML.buildingHTML[1].unshift('Preon.png', 'Quarks.png');\n            buildingsInfo.name[1].unshift('Mass', 'Preons');\n            buildingsInfo.hoverText[1].unshift('Mass', 'Preons');\n        }\n        buildingsInfo.startCost[1] = [0, 0.005476, 6, 3, 24, 3];\n        buildingsInfo.type[2][0] = 'improving';\n        buildingsInfo.type[3][0] = 'delaying';\n        star3ExpId.textContent = 'Boost to Solar mass gain and delay to Preons hardcap';\n\n        upgrades1Cost = [40, 60, 100, 120, 180, 360, 1200, 3600, 12000, 80000];\n        (upgradesInfo[2].startCost[0] as Overlimit).setValue('10');\n        (upgradesInfo[5].startCost[3] as Overlimit).setValue('1e160');\n        upgradesInfo[1].maxActive = 11;\n        upgradesInfo[2].maxActive = 9;\n        upgradesInfo[3].maxActive = 14;\n        upgradesInfo[4].maxActive = 5;\n        upgradesInfo[5].maxActive = 5;\n\n        researches1Cost = [1600, 4800, 16000, 32000, 16000, 24000];\n        researches1Scaling = [400, 1200, 8000, 40000, 16000, 16000];\n        researchesInfo[2].scaling[2] = 1e2;\n        researchesInfo[2].scaling[3] = 1e3;\n        //researchesInfo[1].maxActive = 6;\n        //researchesInfo[2].maxActive = 6;\n        //researchesInfo[3].maxActive = 9;\n        researchesInfo[4].maxActive = 6;\n        researchesInfo[5].maxActive = 4;\n\n        researchesExtraInfo[1].maxActive = 6;\n        researchesExtraInfo[2].maxActive = 5;\n        researchesExtraInfo[3].maxActive = 6;\n        researchesExtraInfo[4].maxActive = 4;\n        researchesExtraInfo[5].maxActive = 3;\n\n        global.elementsInfo.startCost[27].setValue('1e54');\n        global.elementsInfo.startCost[28].setValue('1e58');\n\n        global.ASRInfo.costRange[1] = [2000, 8000, 16000, 32000, 56000];\n        global.ASRInfo.costRange[3][3] = 2.45576045e31;\n\n        strangeness1Cost = [1, 1, 1, 2, 12, 2, 24];\n        strangeness1Scaling = [2.46, 2, 6, 6, 400, 1, 1];\n        strangeness2Cost = [1, 1, 2, 2, 12, 4, 24];\n        strangeness2Scaling = [2.46, 2, 3, 3.4, 800, 1, 1];\n        strangeness3Cost = [1, 2, 2, 24, 12, 4, 4, 24];\n        strangeness3Scaling = [2, 3.4, 3, 1, 100, 1, 1.74, 1];\n        strangeness4Cost = [1, 2, 4, 2, 12, 6, 6, 24];\n        strangeness4Scaling = [2, 3.4, 3, 6, 1900, 1, 1.74, 1];\n        strangeness5Cost = [24, 36, 6, 24, 15600, 24, 240, 120];\n        strangeness5Scaling = [2, 2, 3.4, 1, 1, 1, 1, 1];\n        strangenessInfo[1].maxActive = 10;\n        strangenessInfo[2].maxActive = 10;\n        strangenessInfo[3].maxActive = 10;\n        strangenessInfo[4].maxActive = 10;\n        strangenessInfo[5].maxActive = 11;\n\n        getId('milestonesExtra').innerHTML = 'Requires <span class=\"darkvioletText\">\\'Void Milestones\\'</span> Inflation to be active to enable effects';\n        milestone1S1.src = milestone1S1.src.replace('Quarks.png', 'Preon.png');\n        global.milestonesInfo[2].name[0] = 'Distant Clouds';\n        getQuery('#milestone1Stage2Main > span').textContent = 'Distant Clouds';\n        milestone1S2.src = milestone1S2.src.replace('Drop.png', 'Clouds.png');\n        milestone1S2.alt = 'Distant Clouds';\n        milestone2S2.src = milestone2S2.src.replace('Puddle.png', 'Drop.png');\n        (getQuery('#milestone1Stage3Div > img') as HTMLImageElement).alt = 'Center of gravity';\n        global.milestonesInfo[3].name[0] = 'Center of gravity';\n        getQuery('#milestone1Stage3Main > span').textContent = 'Center of gravity';\n        milestone1S4.src = milestone1S4.src.replace('Main_sequence%20mass.png', 'Black%20hole.png');\n        getId('mergeResetText').innerHTML = '<span class=\"darkvioletText\">Merge</span> does a <span class=\"grayText\">Galaxy</span> reset, while also converting self-made <span class=\"grayText\">Galaxies</span> into non self-made.';\n        getQuery('#toggleAuto0Main label > span').textContent = 'Stage';\n        getQuery('#stageHistory > h3').textContent = 'Stage resets:';\n\n        getId('preonCap').style.display = '';\n        getId('molesProduction').style.display = '';\n        getId('massProduction').style.display = '';\n        getId('mainCapHardS5').style.display = '';\n        getId('element0').style.display = '';\n        getId('strange1Effect1Allowed').style.display = '';\n        getId('strange7Stage1').style.display = '';\n        getId('strange7Stage2').style.display = '';\n        getId('strange8Stage3').style.display = '';\n        getId('strange8Stage4').style.display = '';\n        getId('strange3Stage5').style.display = '';\n        getId('strange4Stage5').style.display = '';\n        getId('stageAutoInterstellar').style.display = '';\n        getId('vaporizationLimit').style.display = '';\n        getId('collapseCapped').style.display = '';\n        getId('mergeToggleReset').style.display = '';\n\n        getId('strange1Effect1Disabled').style.display = 'none';\n        getId('stageAutoElse').style.display = 'none';\n    } else {\n        specialHTML.footerStatsHTML[1][0] = ['Quarks.png', 'stage1borderImage cyanText', 'Quarks'];\n        buildingsInfo.hoverText[2][0] = 'Moles';\n        buildingsInfo.hoverText[3][0] = 'Mass';\n        buildings[1][0].current.setValue('3');\n        buildings[2][0].current.setValue('2.7753108348135e-3');\n        buildings[3][0].current.setValue('1e-19');\n        if (buildingsInfo.name[1][0] === 'Mass') {\n            specialHTML.buildingHTML[1].splice(0, 2);\n            buildingsInfo.name[1].splice(0, 2);\n            buildingsInfo.hoverText[1].splice(0, 2);\n        }\n        buildingsInfo.maxActive[1] = 4;\n        buildingsInfo.maxActive[2] = 6;\n        buildingsInfo.maxActive[3] = 5;\n        buildingsInfo.maxActive[4] = 5;\n        buildingsInfo.startCost[1] = [0, 3, 24, 3];\n        buildingsInfo.type[2][0] = 'producing';\n        buildingsInfo.type[3][0] = 'producing';\n        star3ExpId.textContent = 'Boost to Solar mass gain';\n\n        upgrades1Cost = [0, 0, 12, 36, 120, 240, 480, 1600, 3200, 20800];\n        (upgradesInfo[2].startCost[0] as Overlimit).setValue('1e4');\n        (upgradesInfo[5].startCost[3] as Overlimit).setValue('1e150');\n        upgradesInfo[1].maxActive = 10;\n        upgradesInfo[2].maxActive = 8;\n        upgradesInfo[3].maxActive = 13;\n        upgradesInfo[4].maxActive = 4;\n        upgradesInfo[5].maxActive = 4;\n\n        researches1Cost = [600, 2000, 4000, 4000, 6000, 6000];\n        researches1Scaling = [200, 400, 2000, 12000, 4000, 6000];\n        researchesInfo[2].scaling[2] = 1e3;\n        researchesInfo[2].scaling[3] = 1e2;\n        researchesInfo[1].maxActive = 6;\n        researchesInfo[2].maxActive = 6;\n        researchesInfo[3].maxActive = 9;\n        researchesInfo[4].maxActive = 5;\n        researchesInfo[5].maxActive = 2;\n\n        researchesExtraInfo[1].maxActive = 0;\n        researchesExtraInfo[2].maxActive = 3;\n        researchesExtraInfo[3].maxActive = 4;\n        researchesExtraInfo[4].maxActive = 3;\n        researchesExtraInfo[5].maxActive = 1;\n\n        global.elementsInfo.startCost[27].setValue('1e52');\n        global.elementsInfo.startCost[28].setValue('1e54');\n\n        global.ASRInfo.costRange[1] = [2000, 8000, 16000];\n        global.ASRInfo.costRange[3][3] = 2e30;\n\n        strangeness1Cost = [1, 1, 1, 2, 4, 2, 24];\n        strangeness1Scaling = [1, 0.75, 1.5, 3, 0, 0, 0];\n        strangeness2Cost = [1, 1, 2, 2, 4, 2, 24];\n        strangeness2Scaling = [0.5, 0.75, 2, 2, 0, 0, 0];\n        strangeness3Cost = [1, 1, 2, 6, 4, 2, 6, 24];\n        strangeness3Scaling = [0.75, 1.5, 2, 0, 0, 0, 3, 0];\n        strangeness4Cost = [1, 1, 3, 2, 4, 2, 4, 24];\n        strangeness4Scaling = [1, 2, 2.5, 2, 0, 0, 68, 0];\n        strangeness5Cost = [20, 24, 240, 24, 6000, 24, 20, 120];\n        strangeness5Scaling = [20, 24, 240, 0, 0, 0, 220, 0];\n        strangenessInfo[1].maxActive = 7;\n        strangenessInfo[2].maxActive = 7;\n        strangenessInfo[3].maxActive = 8;\n        strangenessInfo[4].maxActive = 8;\n        strangenessInfo[5].maxActive = 8;\n\n        getId('milestonesExtra').innerHTML = 'Completing any tier will award 1 <span class=\"greenText\">Strange quark</span>';\n        milestone1S1.src = milestone1S1.src.replace('Preon.png', 'Quarks.png');\n        global.milestonesInfo[2].name[0] = 'A Nebula of Drops';\n        getQuery('#milestone1Stage2Main > span').textContent = 'A Nebula of Drops';\n        milestone1S2.src = milestone1S2.src.replace('Clouds.png', 'Drop.png');\n        milestone1S2.alt = 'A Nebula of Drops';\n        milestone2S2.src = milestone2S2.src.replace('Drop.png', 'Puddle.png');\n        (getQuery('#milestone1Stage3Div > img') as HTMLImageElement).alt = 'Cluster of Mass';\n        global.milestonesInfo[3].name[0] = 'Cluster of Mass';\n        getQuery('#milestone1Stage3Main > span').textContent = 'Cluster of Mass';\n        milestone1S4.src = milestone1S4.src.replace('Black%20hole.png', 'Main_sequence%20mass.png');\n        getId('mergeResetText').innerHTML = 'Attempt to <span class=\"darkvioletText\">Merge</span> <span class=\"grayText\">Galaxies</span> together, which will result in <span class=\"orchidText\">Vacuum</span> decaying into its true state.';\n        getQuery('#toggleAuto0Main label > span').textContent = 'Interstellar Stage';\n        getQuery('#stageHistory > h3').textContent = 'Interstellar Stage resets:';\n\n        getId('strange8Stage5').style.display = '';\n        getId('milestonesProgressArea').style.display = '';\n        getId('stageAutoElse').style.display = '';\n        getId('rankStat0').style.display = '';\n\n        getId('preonCap').style.display = 'none';\n        getId('molesProduction').style.display = 'none';\n        getId('massProduction').style.display = 'none';\n        getId('dustCap').style.display = 'none';\n        getId('submersionBoost').style.display = 'none';\n        getId('mainCap').style.display = 'none';\n        getId('mainCapHardS5').style.display = 'none';\n        getId('mergeBoost').style.display = 'none';\n        getId('mergeEffects').style.display = 'none';\n        getId('mergeBoostTotal').style.display = 'none';\n        getId('researchAuto1').style.display = 'none';\n        getId('researchAuto2').style.display = 'none';\n        getId('vaporizationLimit').style.display = 'none';\n        getId('collapseCapped').style.display = 'none';\n        getId('element0').style.display = 'none';\n        for (let s = 1; s < strangenessInfo.length; s++) {\n            for (let i = strangenessInfo[s].maxActive + 1; i <= strangenessInfo[s].startCost.length; i++) {\n                getId(`strange${i}Stage${s}`).style.display = 'none';\n            }\n        }\n        getId('toggleAuto9Main').style.display = 'none';\n        getId('energyGainStage1Build1Name').style.display = 'none';\n        getId('energyGainStage1Build2Name').style.display = 'none';\n        getId('energyGainStage1Build1').style.display = 'none';\n        getId('energyGainStage1Build2').style.display = 'none';\n        for (let s = 2; s <= 5; s++) {\n            getId(`energyGainStage${s}`).style.display = 'none';\n        }\n        getId('mergeResets').style.display = 'none';\n    }\n\n    upgradesInfo[1].startCost.splice(0, upgrades1Cost.length, ...upgrades1Cost);\n    researchesInfo[1].startCost.splice(0, researches1Cost.length, ...researches1Cost);\n    researchesInfo[1].scaling.splice(0, researches1Scaling.length, ...researches1Scaling);\n    strangenessInfo[1].startCost.splice(0, strangeness1Cost.length, ...strangeness1Cost);\n    strangenessInfo[1].scaling.splice(0, strangeness1Scaling.length, ...strangeness1Scaling);\n    strangenessInfo[2].startCost.splice(0, strangeness2Cost.length, ...strangeness2Cost);\n    strangenessInfo[2].scaling.splice(0, strangeness2Scaling.length, ...strangeness2Scaling);\n    strangenessInfo[3].startCost.splice(0, strangeness3Cost.length, ...strangeness3Cost);\n    strangenessInfo[3].scaling.splice(0, strangeness3Scaling.length, ...strangeness3Scaling);\n    strangenessInfo[4].startCost.splice(0, strangeness4Cost.length, ...strangeness4Cost);\n    strangenessInfo[4].scaling.splice(0, strangeness4Scaling.length, ...strangeness4Scaling);\n    strangenessInfo[5].startCost.splice(0, strangeness5Cost.length, ...strangeness5Cost);\n    strangenessInfo[5].scaling.splice(0, strangeness5Scaling.length, ...strangeness5Scaling);\n    if (globalSave.SRSettings[0]) { star3ExpId.textContent = ` (${star3ExpId.textContent})`; }\n    for (let s = 1; s <= 3; s++) {\n        const newValue = buildings[s][0].current;\n        buildings[s][0].total.setValue(newValue);\n        buildings[s][0].trueTotal.setValue(newValue);\n    }\n};\n\nexport const switchVacuum = () => {\n    if (player.inflation.vacuum) { return; }\n    let income = 0;\n    if (player.stage.true >= 7) {\n        income = 1;\n        player.cosmon.current += income;\n        player.cosmon.total += income;\n    } else {\n        player.stage.true = 6;\n        player.collapse.show = 0;\n        player.event = false;\n        visualTrueStageUnlocks();\n        playEvent(6);\n    }\n\n    const history = player.history.vacuum;\n    const storage = global.historyStorage.vacuum;\n    const realTime = player.time.vacuum;\n    storage.unshift([realTime, false, income]);\n    if (storage.length > 100) { storage.length = 100; }\n    if (income / realTime > history.best[2] / history.best[0]) {\n        history.best = [realTime, false, income];\n    }\n\n    if ((player.toggles.normal[0] && global.tab !== 'inflation') || player.stage.active < 6) { setActiveStage(1); }\n    player.inflation.vacuum = true;\n    player.inflation.resets++;\n    player.clone = {};\n    player.challenges.active = null;\n    prepareVacuum(true);\n    resetVacuum();\n};\n", "import { checkBuilding, checkUpgrade, milestoneCheck } from './Check';\nimport Overlimit, { compareFunc } from './Limit';\nimport { changeRewardType, getId, simulateOffline } from './Main';\nimport { effectsCache, global, logAny, player, playerStart } from './Player';\nimport { cloneBeforeReset, loadFromClone, reset, resetStage, resetVacuum } from './Reset';\nimport { Confirm, Notify, globalSave, playEvent } from './Special';\nimport type { calculateEffectsType } from './Types';\nimport { format, numbersUpdate, setRemnants, stageUpdate, switchTab, visualTrueStageUnlocks, visualUpdate, visualUpdateResearches, visualUpdateUpgrades } from './Update';\nimport { prepareVacuum, switchVacuum } from './Vacuum';\n\n/** Normal game tick */\nexport const timeUpdate = (tick: number, timeWarp = 0) => {\n    const { time } = player;\n    const { auto, buildings: autoBuy } = player.toggles;\n    const { maxActive } = global.buildingsInfo;\n    const activeAll = global.stageInfo.activeAll;\n\n    let passedSeconds: number;\n    if (timeWarp > 0) {\n        const extraTime = Math.min(tick, timeWarp);\n        passedSeconds = extraTime;\n        timeWarp -= extraTime;\n    } else {\n        const currentTime = Date.now();\n        passedSeconds = (currentTime - time.updated) / 1000;\n        time.updated = currentTime;\n        time.export[0] += passedSeconds;\n        global.lastSave += passedSeconds;\n        if (passedSeconds > tick) {\n            if (passedSeconds > tick * 600) { return void simulateOffline(passedSeconds); }\n            timeWarp = passedSeconds - tick;\n            passedSeconds = tick;\n        } else if (passedSeconds <= 0) {\n            time.offline += passedSeconds;\n            return;\n        }\n        time.online += passedSeconds;\n    }\n    const trueSeconds = passedSeconds;\n    time.stage += trueSeconds;\n    time.vacuum += trueSeconds;\n    time.universe += trueSeconds;\n\n    global.inflationInfo.instability = calculateEffects.inflation3() ** player.inflation.tree[3];\n    passedSeconds *= assignBuildingsProduction.globalSpeed();\n    player.stage.time += passedSeconds;\n    player.inflation.time += passedSeconds;\n    player.inflation.age += passedSeconds;\n\n    if (player.toggles.normal[3]) { exitChallengeAuto(); }\n    if (!player.inflation.vacuum) {\n        if (activeAll.includes(4)) { stageResetCheck(5, trueSeconds); }\n        if (auto[0]) {\n            if (activeAll.includes(3)) { stageResetCheck(3, 0); }\n            if (activeAll.includes(2)) { stageResetCheck(2, 0); }\n            if (activeAll.includes(1)) { stageResetCheck(1, 0); }\n        }\n    } else { stageResetCheck(5, trueSeconds); }\n\n    const vacuum = player.inflation.vacuum;\n    assignBuildingsProduction.globalCache();\n    if (activeAll.includes(6)) {\n        gainBuildings(0, 6, passedSeconds); //Dark matter\n    }\n    if (activeAll.includes(4)) {\n        if (auto[8]) { autoElementsBuy(); }\n        if (activeAll.includes(5)) {\n            if (player.strangeness[5][3] >= 1 || player.buildings[6][1].current.moreOrEqual('3')) {\n                if (auto[5]) { autoUpgradesBuy(5); }\n                if (auto[6]) { autoResearchesBuy('researches', 5); }\n                if (auto[7]) { autoResearchesBuy('researchesExtra', 5); }\n            }\n            for (let i = maxActive[5] - 1; i >= 1; i--) {\n                if (autoBuy[5][i]) { buyBuilding(i, 5, 0, true); }\n            }\n            assignBuildingsProduction.stage5Cache();\n            gainBuildings(0, 5, passedSeconds); //Brown dwarfs\n            const research = player.researches[5][0];\n            if (research >= 1) { gainBuildings(1, 5, passedSeconds); } //Main sequence\n            if (research >= 2) { gainBuildings(2, 5, passedSeconds); } //Red supergiants\n            if (research >= 3) { gainBuildings(3, 5, passedSeconds); } //Blue hypergiants\n            if (research >= 4 && player.challenges.active !== 0) { gainBuildings(4, 5, passedSeconds); } //Quasi-stars\n        } else { assignBuildingsProduction.stage5Cache(); }\n        if (auto[5]) { autoUpgradesBuy(4); }\n        if (auto[6]) { autoResearchesBuy('researches', 4); }\n        if (auto[7]) { autoResearchesBuy('researchesExtra', 4); }\n        assignBuildingsProduction.stage4Cache();\n        for (let i = maxActive[4] - 1; i >= 1; i--) {\n            if (autoBuy[4][i]) { buyBuilding(i, 4, 0, true); }\n            gainBuildings(i - 1, 4, passedSeconds); //Elements\n        }\n        assignBuildingsProduction.S4Levels();\n        awardMilestone(0, 5);\n        awardMilestone(0, 4);\n        if (!collapseResetCheck(true) && vacuum && auto[9]) { mergeResetCheck(true); }\n        awardMilestone(1, 4);\n    } else if (vacuum) { assignResetInformation.solarHardcap(); }\n    if (activeAll.includes(3)) {\n        if (auto[3]) { rankResetCheck(true); }\n        if (auto[5]) { autoUpgradesBuy(3); }\n        if (auto[6]) { autoResearchesBuy('researches', 3); }\n        if (auto[7]) { autoResearchesBuy('researchesExtra', 3); }\n        assignBuildingsProduction.stage3Cache();\n        if (vacuum) { global.accretionInfo.disableAuto = player.researchesExtra[3][5] < 1 && player.strangeness[1][8] >= 2 && assignBuildingsProduction.S3Build1(true) >= calculateEffects.dustHardcap(); }\n        for (let i = 1; i < maxActive[3]; i++) {\n            if (autoBuy[3][i]) { buyBuilding(i, 3, 0, true); }\n        }\n        gainBuildings(2, 3, passedSeconds); //Planetesimals\n        gainBuildings(1, 3, passedSeconds); //Cosmic dust\n        if (!vacuum) { gainBuildings(0, 3, passedSeconds); } //Mass\n    }\n    if (activeAll.includes(2)) {\n        vaporizationResetCheck(trueSeconds);\n        if (auto[5]) { autoUpgradesBuy(2); }\n        if (auto[6]) { autoResearchesBuy('researches', 2); }\n        if (auto[7]) { autoResearchesBuy('researchesExtra', 2); }\n        for (let i = maxActive[2] - 1; i >= 1; i--) {\n            if (autoBuy[2][i]) { buyBuilding(i, 2, 0, true); }\n        }\n        gainBuildings(1, 2, passedSeconds); //Drops\n        if (!vacuum) { gainBuildings(0, 2, passedSeconds); } //Moles\n        awardMilestone(1, 2);\n        awardMilestone(0, 2);\n    }\n    if (activeAll.includes(1)) {\n        if (auto[5]) { autoUpgradesBuy(1); }\n        if (auto[6]) { autoResearchesBuy('researches', 1); }\n        if (auto[7]) { autoResearchesBuy('researchesExtra', 1); }\n        assignBuildingsProduction.stage1Cache();\n        gainBuildings(5, 1, passedSeconds); //Molecules\n        for (let i = maxActive[1] - 1; i >= 1; i--) {\n            if (autoBuy[1][i]) { buyBuilding(i, 1, 0, true); }\n            gainBuildings(i - 1, 1, passedSeconds); //Rest of Microworld\n        }\n        awardMilestone(1, 1);\n        awardMilestone(0, 1);\n        dischargeResetCheck(true);\n    }\n\n    if (timeWarp > 0) { timeUpdate(tick, timeWarp); }\n};\n\nexport const calculateEffects: calculateEffectsType = {\n    effectiveEnergy: () => {\n        let energy = player.discharge.energy;\n        if (player.upgrades[1][10] === 1) { energy *= 2; }\n        if (player.inflation.vacuum && player.inflation.tree[4] >= 1) { energy *= global.milestonesInfo[1].reward[1]; }\n        return Math.max(energy, 1);\n    },\n    effectiveGoals: () => {\n        let goals = player.discharge.current + (player.strangeness[1][3] / 2);\n        if (player.inflation.vacuum) { goals += player.inflation.tree[5]; }\n        return goals;\n    },\n    dischargeScaling: (research = player.researches[1][3], strangeness = player.strangeness[1][2], inflation = player.inflation.tree[5]) => {\n        let scale = (2 * research) + (strangeness / 2);\n        if (player.inflation.vacuum) { scale += inflation; }\n        return 10 - scale;\n    },\n    dischargeCost: (scaling = calculateEffects.dischargeScaling()) => {\n        let next = scaling ** player.discharge.current;\n        if (player.inflation.vacuum && player.strangeness[5][10] >= 1) { next /= calculateEffects.S5Strange9_stage1(); }\n        return next;\n    },\n    dischargeBase: (research = player.researches[1][4]) => {\n        let base = (4 + research) / 2;\n        if (player.inflation.vacuum) { base += player.inflation.tree[5] / 2; }\n        if (player.challenges.active === 0) { base **= 0.5; }\n        return base;\n    },\n    S1Upgrade6: () => 10 + 3 * player.researches[1][0],\n    S1Upgrade7: (preons = false) => {\n        let base = 2 + player.researches[1][1];\n        const selfBoost = (base + 100) / 100;\n        if (!preons || player.buildings[1][1].true >= 1001) { return selfBoost; }\n\n        base = (base * 1.6 + 100) / 100; //Formula is '(selfPreons * step ** ((true - 1) / 2)) ** true'; Step is '(selfBoost / selfPreons) ** (1 / 500)'\n        return (selfBoost / base) ** ((player.buildings[1][1].true - 1) / 1000) * base;\n    },\n    S1Upgrade9: () => {\n        let effect = calculateEffects.effectiveEnergy();\n        if (player.upgrades[1][10] !== 1) { effect **= 0.5; }\n        return effect;\n    },\n    S1Research2: (level = player.strangeness[1][1]) => 20 + (level * (player.inflation.vacuum ? 1.5 : 1)),\n    S1Research5: () => {\n        const discharges = global.dischargeInfo.total;\n        if (!player.inflation.vacuum) { return discharges > 5 ? discharges + 15 : discharges * 4; }\n        return discharges > 7 ? discharges + 14 : discharges * 3;\n    },\n    S1Extra1: (level = player.researchesExtra[1][1]) => level >= 4 ? 1.1 : level >= 3 ? 1.2 : (20 - 3 * level) / 10,\n    S1Extra3: (level = player.researchesExtra[1][3]) => level / 20,\n    S1Extra4: (research = player.researchesExtra[1][5]) => (global.dischargeInfo.base + calculateEffects.effectiveEnergy() ** 0.1) * (research + 1) / 100 + 1,\n    preonsHardcap: (laterPreons) => 1e14 * laterPreons * effectsCache.S1SolarDelay * assignBuildingsProduction.S3Build1(),\n    clouds: (post = false) => {\n        const effect = new Overlimit(player.vaporization.clouds).plus('1');\n        if (post) { effect.plus(global.vaporizationInfo.get); }\n\n        if (effect.moreThan('1e4')) { effect.minus('1e4').power(0.7).plus('1e4'); }\n        return effect;\n    },\n    cloudsGain: () => player.challenges.active === 0 ? 0.4 : player.inflation.vacuum ? 0.5 : 0.6,\n    S2Upgrade1: () => {\n        const puddles = player.buildings[2][2];\n        const maxTrue = Math.min(puddles.true, 200);\n        return new Overlimit('1.02').power((puddles.current.toNumber() - maxTrue) ** 0.7 + maxTrue);\n    },\n    S2Upgrade2: () => {\n        let effect = 1e10 / (player.inflation.vacuum ? 2.5 : 2) ** player.strangeness[2][3];\n        if (player.inflation.vacuum && player.inflation.tree[4] >= 1) { effect /= global.milestonesInfo[2].reward[0]; }\n        return effect;\n    },\n    S2Upgrade3_power: (research = player.researches[2][2]) => (1 + research / 2) / 100,\n    S2Upgrade3: (power = calculateEffects.S2Upgrade3_power()) => new Overlimit(player.buildings[2][0].current).max('1').power(power).toNumber(),\n    S2Upgrade4_power: (research = player.researches[2][3]) => (1 + research / 2) / 100,\n    S2Upgrade4: (power = calculateEffects.S2Upgrade4_power()) => new Overlimit(player.buildings[2][1].current).max('1').power(power).toNumber(),\n    S2Extra1: (level, post = false) => { //+^0.05 per level; Drops up to +^(0.05 / 3) after softcap\n        if (level <= 0) { return 1; }\n        const effect = new Overlimit(player.vaporization.clouds);\n        if (post) { effect.plus(global.vaporizationInfo.get); }\n        return Math.max(new Overlimit(effect).power(level / 60).multiply(effect.min('1e6').power(level / 30)).toNumber(), 1);\n    },\n    S2Extra2: (rain, level = player.researchesExtra[2][2]) => level >= 1 ? (rain - 1) / 32 + 1 : 1,\n    submersion: () => {\n        const drops = new Overlimit(player.buildings[2][1].current).plus('1');\n        return new Overlimit(drops).power(0.6).divide(drops.min('1e10').power(0.4)).plus('1').log(2).toNumber(); //^0.2 before softcap, ^0.6 after\n    },\n    effectiveRank: () => {\n        let rank = player.accretion.rank;\n        if (player.inflation.vacuum && player.inflation.tree[4] >= 1) { rank += global.milestonesInfo[3].reward[1]; }\n        return rank;\n    },\n    S3Upgrade0: () => (101 + player.researches[3][1]) / 100,\n    S3Upgrade1_power: (research = player.researchesExtra[3][3]) => (11 + research) / 100, //Two times stronger for self-made ones\n    S3Upgrade1: (power = calculateEffects.S3Upgrade1_power()) => Math.max(new Overlimit(player.buildings[3][1].current).multiply(player.buildings[3][1].true + 1).power(power).toNumber(), 1),\n    S3Upgrade3: () => (204 + player.researches[3][4]) / 200, //1.02 + 0.005\n    S3Research6: (level = player.researches[3][6]) => { //+^0.025 per level; Drops up to +^(0.025 / 3) after softcap\n        const mass = Math.max(player.buildings[3][0].current.toNumber(), 1);\n        return mass ** (level / 120) * Math.min(mass, 1e21) ** (level / 60);\n    },\n    S3Extra1: (level = player.researchesExtra[3][1]) => (100 + 11 * level) / 100,\n    S3Extra4: (level = player.researchesExtra[3][4]) => level > 0 ? 8 ** ((global.accretionInfo.effective + level) / 8) : 1,\n    dustDelay: () => {\n        let delay = effectsCache.S3SolarDelay * (1.4 ** player.strangeness[3][8]);\n        if (player.strangeness[5][10] >= 3) { delay *= calculateEffects.S5Strange9_stage3(); }\n        return delay;\n    },\n    dustHardcap: () => (player.accretion.rank >= 5 ? 1e48 : 8e46) * calculateEffects.dustDelay(),\n    mass: (post = false) => {\n        let effect = player.collapse.mass;\n        if (post) {\n            if (global.collapseInfo.newMass > effect) { effect = global.collapseInfo.newMass; }\n        }\n\n        if (effect > 1) {\n            if (player.elements[21] >= 1) { effect **= 1.1; }\n            if (player.challenges.active === 0) { effect **= 0.2; }\n        }\n        return effect;\n    },\n    star: [\n        (post = false) => {\n            let effect = player.collapse.stars[0] + 1;\n            if (post) {\n                effect += global.collapseInfo.starCheck[0];\n            }\n            if (player.elements[27] >= 1) { effect += player.buildings[4][3].true; }\n\n            if (player.elements[6] >= 1) { effect **= calculateEffects.element6(); }\n            return effect;\n        },\n        (post = false) => {\n            let stars = player.collapse.stars[1] * (1 + player.strangeness[4][8]);\n            if (post) {\n                stars += global.collapseInfo.starCheck[1] * (1 + player.strangeness[4][8]);\n                if (player.elements[22] >= 1) { stars += global.collapseInfo.starCheck[0]; }\n            }\n            if (player.elements[22] >= 1) { stars += player.collapse.stars[0]; }\n\n            let effect = (stars + 1) ** (0.5 + player.strangeness[4][8] / 8);\n            if (player.elements[12] >= 1) { effect *= logAny(stars + 4, 4); }\n            return effect;\n        },\n        (post = false) => {\n            let blackHoles = player.collapse.stars[2];\n            if (post) {\n                blackHoles += global.collapseInfo.starCheck[2];\n            }\n            if (blackHoles <= 0) { return 1; }\n\n            const base = player.elements[18] >= 1 ? 3 : 2;\n            let effect = (blackHoles + 1) / logAny(blackHoles + base, base);\n            if (player.inflation.vacuum && player.inflation.tree[4] >= 1) { effect *= global.milestonesInfo[4].reward[1]; }\n            return effect;\n        }\n    ],\n    massGain: () => {\n        const elements = player.elements;\n\n        let massGain = 0.004;\n        if (elements[3] >= 1) { massGain += 0.002; }\n        if (elements[5] >= 1) { massGain += 0.0002 * player.buildings[4][1].true; }\n        massGain *= elements[15] >= 1 ? global.collapseInfo.trueStars : player.buildings[4][1].true;\n        if (player.inflation.vacuum) {\n            massGain = (massGain * (player.challenges.active === 0 ? 48 : 96)) + 1;\n        } else {\n            if (elements[10] >= 1) { massGain *= 2; }\n            if (player.researchesExtra[4][1] >= 1) { massGain *= calculateEffects.S4Extra1(); }\n            massGain *= calculateEffects.star[2]();\n            if (player.strangeness[5][7] >= 1) { massGain *= global.strangeInfo.stageBoost[5]; }\n        }\n        return massGain;\n    },\n    S4Shared: () => {\n        const multiplier = new Overlimit(calculateEffects.S4Research1()).power(global.collapseInfo.trueStars);\n        if (player.elements[24] >= 1) { multiplier.multiply(calculateEffects.element24()); }\n        if (player.inflation.vacuum) {\n            if (player.researchesExtra[1][4] >= 1) { multiplier.multiply(calculateEffects.S1Extra4() ** global.dischargeInfo.total); }\n        }\n        return multiplier;\n    },\n    S4Research0_base: (disc = player.researches[4][2]) => (14 + disc) / 10,\n    S4Research0: (base = calculateEffects.S4Research0_base()) => {\n        let levels = player.researches[4][0];\n        if (player.elements[19] >= 1) { levels++; }\n        return base ** levels;\n    },\n    S4Research1: (level = player.researches[4][1], transfer = player.researchesExtra[4][1]) => {\n        let effective = level > 0 ? 1 + Math.min(level, 4) : 0;\n        if (level > 4) { effective += 0.5; }\n        if (level > 5) { effective += Math.min(level - 5, 2) / 4; }\n        if (level > 7) { effective += (level - 7) / 8; }\n        return 1 + (transfer >= 1 ? 0.006 : 0.005) * effective;\n    },\n    S4Research4: (post = false, level = player.researches[4][4]) => {\n        if (level < 1) { return 1; }\n\n        let blackHoles = player.collapse.stars[2];\n        let mass = player.collapse.mass;\n        if (post) {\n            blackHoles += global.collapseInfo.starCheck[2];\n            if (global.collapseInfo.newMass > mass) { mass = global.collapseInfo.newMass; }\n        }\n\n        const base = level >= 2 ? 2 : 3;\n        let effect = logAny(blackHoles + base, base);\n        if (player.elements[23] >= 1 && mass > 1) { effect *= mass ** 0.1; }\n        return effect;\n    },\n    S4Extra1: () => (10 + player.researches[4][1]) / 10,\n    mergeMaxResets: () => {\n        let max = 1;\n        if (player.elements[30] >= 1) { max += player.collapse.maxElement - 29; }\n        return max;\n    },\n    reward: [\n        (post = false) => {\n            let effect = player.merge.reward[0] + 1;\n            if (post) { effect += global.mergeInfo.checkReward[0]; }\n            return effect * calculateEffects.S5Extra2(global.mergeInfo.S5Extra2, post);\n        }\n    ],\n    S5Upgrade0: () => 3 * ((player.inflation.vacuum ? 1.6 : 1.8) ** player.strangeness[5][1]),\n    S5Upgrade1: () => 2 * ((player.inflation.vacuum ? 1.6 : 1.8) ** player.strangeness[5][1]),\n    S5Upgrade2: (post = false, level = player.upgrades[5][2]) => {\n        if (level < 1) { return 0; }\n        let effect = player.collapse.mass;\n        if (post) {\n            if (global.collapseInfo.newMass > effect) { effect = global.collapseInfo.newMass; }\n        }\n\n        effect = Math.log10(Math.max(effect / 1e5, 1)) / 4 + 0.25;\n        if (!player.inflation.vacuum) { effect *= 2; }\n        return effect;\n    },\n    S5Research2: () => 1 + player.researches[5][2] * 0.0075,\n    S5Research3: () => 1 + player.researches[5][3] * 0.0075,\n    S5Extra2: (level, post = false) => {\n        let groups = player.merge.reward[0];\n        if (post) { groups += global.mergeInfo.checkReward[0]; }\n        return (10 + level * groups) / 10;\n    },\n    element6: () => player.researchesExtra[4][2] >= 1 ? 2 : 1.5,\n    element24_power: () => player.elements[27] >= 1 ? 0.02 : 0.01,\n    element24: () => new Overlimit(player.buildings[4][0].current).max('1').power(calculateEffects.element24_power()),\n    element26: () => {\n        let effect = new Overlimit(player.buildings[4][0].trueTotal).log(10).toNumber() - 48;\n        if (player.elements[29] >= 1) { effect = (199 + effect) * effect / 200; }\n        return Math.max(effect, 0);\n    },\n    S2Strange9: () => new Overlimit(player.vaporization.clouds).plus('1').log(10).toNumber() / 80 + 1,\n    S5Strange9_stage1: () => global.mergeInfo.galaxies ** 2 + 1,\n    S5Strange9_stage2: () => global.mergeInfo.galaxies + 1,\n    S5Strange9_stage3: () => global.mergeInfo.galaxies / 100 + 1,\n    inflation0: () => Math.max(2 ** (1 - player.time.stage / 1200), 1),\n    inflation1_power: (level = player.inflation.tree[1]) => level / 32,\n    inflation1: (power = calculateEffects.inflation1_power()) => new Overlimit(player.buildings[6][0].current).plus('1').power(power).toNumber(),\n    inflation3: () => (1 + global.inflationInfo.totalSuper) / 10 + 1,\n    strangeGain: (interstellar: boolean, type = 0) => {\n        let base = type === 1 ? 0 : player.inflation.vacuum ?\n            (player.strangeness[5][3] >= 1 ? 5 : 4) :\n            (player.milestones[1][0] >= 6 ? 2 : 1);\n        if (interstellar) {\n            base = (base + effectsCache.element26) * (global.mergeInfo.galaxies + 1);\n            if (player.inflation.vacuum) {\n                base *= effectsCache.S2Strange9 * calculateEffects.S5Extra2(player.researchesExtra[5][2]);\n            }\n        }\n        if (type === 0) {\n            base *= (1.4 ** player.strangeness[5][2]) * (1.4 ** player.inflation.tree[2]);\n        }\n        return base * global.strangeInfo.strangeletsInfo[1] * global.inflationInfo.instability;\n    }\n};\n\nexport const assignBuildingsProduction = {\n    /* Can be moved into calculateEffects */\n    globalSpeed: (): number => {\n        const { tree } = player.inflation;\n        const challenge = player.challenges.active;\n        let speed = calculateEffects.inflation1() * global.inflationInfo.instability;\n        if (tree[0] >= 1) { speed *= 2; }\n        if (tree[0] >= 2 && (player.inflation.vacuum ? challenge === null : tree[4] >= 1)) { speed *= calculateEffects.inflation0(); }\n        if (challenge === 0) {\n            speed *= 1.2 ** Math.min(tree[2], tree[3] * 2);\n            if (tree[4] >= 1 && !player.challenges.super) { speed *= 3; }\n            if (player.challenges.super) { speed /= 5; }\n        }\n        return (global.inflationInfo.globalSpeed = speed);\n    },\n    /** Have to be after auto Strangeness, Inflation and interstellar Stage */\n    globalCache: () => {\n        global.dischargeInfo.total = calculateEffects.effectiveGoals();\n        global.dischargeInfo.base = calculateEffects.dischargeBase();\n        effectsCache.S2Upgrade3 = player.upgrades[2][3] === 1 ? calculateEffects.S2Upgrade3() : 1;\n        effectsCache.S2Upgrade4 = player.upgrades[2][4] === 1 ? calculateEffects.S2Upgrade4() : 1;\n        global.accretionInfo.effective = calculateEffects.effectiveRank();\n        global.mergeInfo.galaxies = player.buildings[5][3].current.toNumber();\n    },\n    /** Have to be after auto Upgrades */\n    stage1Cache: () => {\n        effectsCache.S1Upgrade6 = player.upgrades[1][6] === 1 ? calculateEffects.S1Upgrade6() : 0;\n        effectsCache.S1Upgrade7 = player.upgrades[1][7] === 1 ? calculateEffects.S1Upgrade7() : 1;\n        let multiplier = (player.inflation.vacuum ? 2 : 1.8) ** player.strangeness[1][0];\n        if (player.upgrades[1][5] === 1) { multiplier *= global.dischargeInfo.base ** global.dischargeInfo.total; }\n        if (player.strangeness[1][6] >= 1) { multiplier *= global.strangeInfo.stageBoost[1]; }\n        if (player.inflation.vacuum && player.inflation.tree[4] >= 1) { multiplier *= global.milestonesInfo[1].reward[0]; }\n        if (player.challenges.active === 0) { multiplier /= 4; }\n        effectsCache.microworld = multiplier;\n    },\n    /** Preons, true vacuum only, visual will assign effect */\n    S1Build1: (noHardcap = false, visual = false): number => {\n        const structure = player.buildings[1][1];\n\n        const laterPreons = calculateEffects.effectiveEnergy() ** calculateEffects.S1Extra3();\n        let multiplier = 6e-4 * effectsCache.microworld * laterPreons;\n        const preonsExcess = new Overlimit(structure.current).minus(structure.true);\n        if (preonsExcess.moreThan('1')) {\n            multiplier *= preonsExcess.power(0.11).toNumber() + structure.true;\n        } else { multiplier *= structure.current.toNumber(); }\n        if (player.upgrades[1][7] === 1) { multiplier *= calculateEffects.S1Upgrade7(true) ** Math.min(structure.true, 1001); }\n        if (!noHardcap) {\n            const preonCap = calculateEffects.preonsHardcap(laterPreons);\n            if (multiplier > preonCap) { multiplier = preonCap; }\n        }\n        if (visual) { global.buildingsInfo.producing[1][1].setValue(multiplier); }\n        return multiplier;\n    },\n    /** Quarks, true vacuum only */\n    S1Build2: (): Overlimit => global.buildingsInfo.producing[1][2].setValue(0.4 * effectsCache.microworld).multiply(player.buildings[1][2].current, new Overlimit(effectsCache.S1Upgrade7).power(player.buildings[1][2].true)),\n    /** Particles */\n    S1Build3: (): Overlimit => {\n        const index = player.inflation.vacuum ? 3 : 1;\n\n        let multiplier = (player.inflation.vacuum ? 0.2 : 1.6) * effectsCache.microworld;\n        if (player.upgrades[1][0] === 1) { multiplier *= 8; }\n        return global.buildingsInfo.producing[1][index].setValue(multiplier).multiply(player.buildings[1][index].current, new Overlimit(effectsCache.S1Upgrade7).power(player.buildings[1][index].true));\n    },\n    /** Atoms */\n    S1Build4: (): Overlimit => {\n        const vacuum = player.inflation.vacuum;\n        const index = vacuum ? 4 : 2;\n\n        let multiplier = (vacuum ? 0.8 : 0.4) * effectsCache.microworld;\n        if (player.upgrades[1][3] === 1) { multiplier *= vacuum ? 6 : 4; }\n        return global.buildingsInfo.producing[1][index].setValue(multiplier).multiply(player.buildings[1][index].current, new Overlimit(effectsCache.S1Upgrade7).power(player.buildings[1][index].true));\n    },\n    /** Molecules */\n    S1Build5: (): Overlimit => {\n        const b5 = player.inflation.vacuum ? 5 : 3;\n\n        let multiplier = 0.2 * effectsCache.microworld;\n        if (player.upgrades[1][4] === 1) { multiplier *= 4; }\n        return global.buildingsInfo.producing[1][b5].setValue(multiplier).multiply(player.buildings[1][b5].current, new Overlimit(effectsCache.S1Upgrade7).power(player.buildings[1][b5].true));\n    },\n    /* Tritium */\n    S1Build6: (): Overlimit => {\n        let multiplier = (calculateEffects.S1Research2() ** player.researches[1][2]) * (calculateEffects.S1Research5() ** player.researches[1][5]);\n        if (player.upgrades[1][9] === 1) { multiplier *= calculateEffects.S1Upgrade9(); }\n        effectsCache.tritium.setValue(assignBuildingsProduction.S1Build5()).plus('1').log(calculateEffects.S1Extra1()).multiply(multiplier);\n        if (player.inflation.vacuum) { return effectsCache.tritium.multiply(assignBuildingsProduction.S2Build1()); }\n        return effectsCache.tritium;\n    },\n    /** Reset being false will set all levels to 0, true will recalculate them afterwards */\n    S2Levels: (reset = null as boolean | null) => {\n        const info = global.vaporizationInfo;\n        if (reset !== null) {\n            info.S2Extra1 = 0;\n            info.S2Research1 = 0;\n            info.S2Research0 = 0;\n            if (!reset) { return; }\n        }\n        const totalDrops = player.buildings[2][1].total.toNumber(); //Infinity is fine here\n        if (info.S2Extra1 !== player.researchesExtra[2][1]) { info.S2Extra1 = player.researchesExtra[2][2] >= 1 ? player.researchesExtra[2][1] : Math.min(player.researchesExtra[2][1], logAny(totalDrops * 9.99e-10 + 1, 1e3)); }\n        if (info.S2Research1 !== player.researches[2][1]) { info.S2Research1 = Math.min(player.researches[2][1], logAny(totalDrops / 100 + 1, 5)); } //Formula is: logAny(totalDrops * (scaling - 1) / startCost + 1, scaling)'\n        if (info.S2Research0 !== player.researches[2][0]) { info.S2Research0 = Math.min(player.researches[2][0], Math.max(logAny(totalDrops / 10, 1.366) + 1, logAny(totalDrops * 0.0366 + 1, 1.366))); }\n    },\n    S2FreeBuilds: () => {\n        const buildings = player.buildings[2];\n        const upgrades = player.upgrades[2];\n\n        let water5 = buildings[5].true;\n        let water4 = buildings[4].true;\n        let water3 = buildings[3].true;\n        let water2 = buildings[2].true;\n        if (upgrades[8] === 1) { water5 += buildings[6].true; }\n        if (upgrades[7] === 1) { water4 += water5; }\n        if (upgrades[6] === 1) { water3 += water4 * (1 + player.researches[2][5]); }\n        if (upgrades[5] === 1) { water2 += water3 * (1 + player.researches[2][4]); }\n        buildings[5].current.setValue(water5);\n        buildings[4].current.setValue(water4);\n        buildings[3].current.setValue(water3);\n        buildings[2].current.setValue(water2);\n    },\n    /** Drops */\n    S2Build1: (): Overlimit => {\n        const vacuum = player.inflation.vacuum;\n        const structure = player.buildings[2][1];\n\n        const multiplierList = [structure.current];\n        if (player.challenges.active === 0) {\n            multiplierList[0] = new Overlimit(structure.current).min(1);\n        } else if (vacuum) {\n            const excess = new Overlimit(structure.current).minus(structure.true);\n            if (excess.moreThan('1')) { multiplierList[0] = excess.power(0.2).plus(structure.true); }\n        }\n        if (player.upgrades[2][0] === 1) { multiplierList.push(new Overlimit(vacuum ? '1.02' : '1.04').power(structure.true)); }\n        global.buildingsInfo.producing[2][1].setValue((vacuum ? 2 : 8e-4) * (3 ** global.vaporizationInfo.S2Research0) * (2 ** player.strangeness[2][0])).multiply(...multiplierList);\n        if (vacuum) { return global.buildingsInfo.producing[2][1].max('1'); }\n        return global.buildingsInfo.producing[2][1];\n    },\n    /** Puddles, visual will only assign Ponds and above */\n    S2Build2: (visual = false): Overlimit => {\n        const producings = global.buildingsInfo.producing[2];\n        const structures = player.buildings[2];\n        if (!visual && structures[2].true < 1) {\n            let multiplier = calculateEffects.S2Extra1(player.researchesExtra[2][1]) - 1;\n            if (player.inflation.vacuum && player.strangeness[5][10] >= 2) { multiplier *= calculateEffects.S5Strange9_stage2(); }\n            return producings[2].setValue(multiplier);\n        }\n        const rain = calculateEffects.S2Extra1(global.vaporizationInfo.S2Extra1);\n        const flow = 1.24 ** player.strangeness[2][7];\n\n        const producing6 = structures[6].true < 1 ? 1 : (player.upgrades[2][8] === 1 ? 1.1 : 1.08) ** structures[6].true * flow;\n        if (visual) { producings[6].setValue(producing6); }\n\n        const producing5 = Math.max(2 * structures[5].current.toNumber() * calculateEffects.S2Extra2(rain) * flow, 1);\n        if (visual) { producings[5].setValue(producing5); }\n\n        const producing4 = Math.max(2 * structures[4].current.toNumber() * flow, 1);\n        if (visual) { producings[4].setValue(producing4); }\n\n        const producing3 = Math.max(2 * structures[3].current.toNumber() * flow, 1);\n        if (visual) { return producings[3].setValue(producing3); }\n\n        const multiplierList = [structures[2].current, calculateEffects.clouds()];\n        let multiplier = (player.challenges.active === 0 ? 6e-4 : 4.8) * producing3 * producing4 * producing5 * producing6 * effectsCache.S2Upgrade3 * effectsCache.S2Upgrade4 * (2 ** global.vaporizationInfo.S2Research1) * rain * ((player.inflation.vacuum ? 1.8 : 1.6) ** player.strangeness[2][1]);\n        if (player.upgrades[2][1] === 1) { multiplierList.push(calculateEffects.S2Upgrade1()); }\n        if (player.inflation.vacuum) {\n            multiplier *= calculateEffects.S3Extra4();\n            if (player.elements[1] >= 1) { multiplier *= 2; }\n            if (player.inflation.tree[4] >= 1) { multiplier *= global.milestonesInfo[2].reward[1]; }\n            if (player.strangeness[5][10] >= 2) { multiplier *= calculateEffects.S5Strange9_stage2(); }\n        }\n        if (player.strangeness[2][6] >= 1) { multiplier *= global.strangeInfo.stageBoost[2]; }\n        return producings[2].setValue(multiplier).multiply(...multiplierList);\n    },\n    /** Have to be after auto Upgrades, visual will only assign subsatellites */\n    stage3Cache: (visual = false) => {\n        const producing5 = 1.1 ** player.buildings[3][5].true;\n        if (visual) {\n            global.buildingsInfo.producing[3][5].setValue(producing5);\n            return;\n        }\n        effectsCache.S3Strange1 = (player.inflation.vacuum ? 1.48 : 1.6) ** player.strangeness[3][1];\n\n        const producing4 = (player.upgrades[3][12] === 1 ? 1.14 : 1.1) ** player.buildings[3][4].true * producing5;\n        global.buildingsInfo.producing[3][4].setValue(producing4);\n        effectsCache.S3Strange3 = producing4 ** (player.inflation.vacuum ? 0.1 : 0.2);\n    },\n    /** Cosmic dust and related softcap, visual will assign effect */\n    S3Build1: (noHardcap = false, visual = false): number => {\n        const researchesS3 = player.researches[3];\n        const upgradesS3 = player.upgrades[3];\n        const vacuum = player.inflation.vacuum;\n\n        let multiplier = (vacuum ? 2 : 8e-20) * player.buildings[3][1].current.toNumber() * (3 ** researchesS3[0]) * (2 ** researchesS3[3]) * (3 ** researchesS3[5]) * (1.11 ** player.researchesExtra[3][0]) * (calculateEffects.S3Extra1() ** global.accretionInfo.effective) * (1.8 ** player.strangeness[3][0]);\n        if (vacuum) {\n            multiplier *= calculateEffects.submersion();\n            if (player.elements[4] >= 1) { multiplier *= 1.4; }\n            if (player.elements[14] >= 1) { multiplier *= 1.4; }\n            if (player.strangeness[5][10] >= 3) { multiplier *= calculateEffects.S5Strange9_stage2(); }\n            if (player.inflation.tree[4] >= 1) { multiplier *= global.milestonesInfo[3].reward[0]; }\n        }\n        if (upgradesS3[0] === 1) { multiplier *= calculateEffects.S3Upgrade0() ** player.buildings[3][1].true; }\n        if (upgradesS3[1] === 1) { multiplier *= calculateEffects.S3Upgrade1(); }\n        if (upgradesS3[2] === 1) { multiplier *= 2; }\n        if (upgradesS3[5] === 1) { multiplier *= 3; }\n        if (upgradesS3[6] === 1) { multiplier *= 2 * 1.5 ** researchesS3[7]; }\n        if (upgradesS3[9] === 1) { multiplier *= 2; }\n        if (upgradesS3[10] === 1) { multiplier *= 8 * 2 ** researchesS3[8]; }\n        if (player.strangeness[3][3] >= 1) { multiplier *= effectsCache.S3Strange3; }\n        if (player.challenges.active === 0) {\n            global.accretionInfo.dustSoft = player.accretion.rank >= 5 ? 0.8 : 0.9;\n        } else if (player.accretion.rank >= 5) {\n            global.accretionInfo.dustSoft = vacuum || multiplier > 1 ? 0.9 : 1.1;\n        } else { global.accretionInfo.dustSoft = 1; }\n        multiplier **= global.accretionInfo.dustSoft;\n        if (vacuum) {\n            if (player.researchesExtra[3][5] >= 2) {\n                multiplier *= calculateEffects.dustDelay();\n            } else if (!noHardcap && player.researchesExtra[3][5] < 1) {\n                const dustCap = calculateEffects.dustHardcap();\n                if (multiplier > dustCap) { multiplier = dustCap; }\n            }\n            if (multiplier < 1) { multiplier = 1; }\n        }\n        if (visual) { global.buildingsInfo.producing[3][1].setValue(multiplier); }\n        return multiplier;\n    },\n    /** Planetesimals, visual will assign effect */\n    S3Build2: (visual = false): number => {\n        let multiplier = player.buildings[3][2].current.toNumber() * (3 ** player.researches[3][2]) * calculateEffects.S3Research6() * effectsCache.S3Strange1;\n        if (player.upgrades[3][3] === 1) { multiplier *= calculateEffects.S3Upgrade3() ** player.buildings[3][2].true; }\n        if (player.upgrades[3][4] === 1) { multiplier *= 3; }\n        if (player.strangeness[3][3] >= 1) { multiplier *= effectsCache.S3Strange3; }\n        if (visual) { global.buildingsInfo.producing[3][2].setValue(multiplier); }\n        return multiplier;\n    },\n    /** Protoplanets, visual will assign effect */\n    S3Build3: (visual = false): number => {\n        let multiplier = 0.4 * player.buildings[3][3].current.toNumber() * global.buildingsInfo.producing[3][4].toNumber() * effectsCache.S3Strange1;\n        if (player.researchesExtra[3][2] >= 1) { multiplier *= 2; }\n        if (player.upgrades[3][7] === 1) { multiplier *= 1.02 ** player.buildings[3][3].true; }\n        if (visual) { global.buildingsInfo.producing[3][3].setValue(multiplier); }\n        return multiplier;\n    },\n    /** Have to be after auto Upgrades */\n    stage4Cache: () => {\n        effectsCache.mass = calculateEffects.mass();\n        effectsCache.star1 = calculateEffects.star[1]();\n\n        let multiplier = calculateEffects.S4Research0() * effectsCache.mass * effectsCache.star1 * calculateEffects.S4Research4() * (1.6 ** player.strangeness[4][0]);\n        if (player.elements[4] >= 1) { multiplier *= 1.4; }\n        if (player.elements[14] >= 1) { multiplier *= 1.4; }\n        if (player.inflation.vacuum) {\n            if (player.researchesExtra[2][3] >= 1) { multiplier *= effectsCache.S2Upgrade3; }\n            if (player.researchesExtra[2][3] >= 3) {\n                multiplier *= effectsCache.S2Upgrade4;\n            } else if (player.researchesExtra[2][3] === 2) { multiplier *= effectsCache.S2Upgrade4 ** 0.5; }\n            if (player.inflation.tree[4] >= 1) { multiplier *= global.milestonesInfo[4].reward[0]; }\n        }\n        if (player.strangeness[4][7] >= 1) { multiplier *= global.strangeInfo.stageBoost[4]; }\n        if (player.challenges.active === 0) { multiplier /= 8000; }\n        effectsCache.interstellar = multiplier;\n    },\n    /** Reset being false will set all levels to 0, true will recalculate them afterwards */\n    S4Levels: (reset = null as boolean | null) => {\n        if (reset !== null) {\n            global.mergeInfo.S5Extra2 = 0;\n            if (!reset) { return; }\n        }\n        if (global.mergeInfo.S5Extra2 !== player.researchesExtra[5][2]) { global.mergeInfo.S5Extra2 = Math.min(player.researchesExtra[5][2], Math.max(new Overlimit(player.buildings[4][0].total).divide('1e280').log(1e30).toNumber(), 0)); }\n    },\n    /** Brown dwarfs */\n    S4Build1: (): Overlimit => {\n        const multiplierList = [player.buildings[4][1].current, calculateEffects.S4Shared()];\n        let multiplier = 40 * effectsCache.interstellar;\n        if (player.elements[1] >= 1) { multiplier *= 2; }\n        if (player.elements[19] >= 1 && effectsCache.mass > 1) { multiplier *= effectsCache.mass; }\n        const level = player.inflation.vacuum ? 4 : 3;\n        if (player.researches[5][1] >= level) {\n            multiplierList.push(global.buildingsInfo.producing[5][2]);\n            multiplier /= 2 ** level;\n        }\n        return global.buildingsInfo.producing[4][1].setValue(multiplier).multiply(...multiplierList);\n    },\n    /** Main sequence */\n    S4Build2: (): Overlimit => {\n        const multiplierList = [player.buildings[4][2].current, calculateEffects.S4Shared()];\n        let multiplier = 1200 * effectsCache.interstellar * calculateEffects.star[0]() * (2 ** player.researches[4][3]);\n        const level = player.inflation.vacuum ? 3 : 2;\n        if (player.researches[5][1] >= level) {\n            multiplierList.push(global.buildingsInfo.producing[5][2]);\n            multiplier /= 2 ** level;\n        }\n        return global.buildingsInfo.producing[4][2].setValue(multiplier).multiply(...multiplierList);\n    },\n    /** Red supergiants */\n    S4Build3: (): Overlimit => {\n        const multiplierList = [player.buildings[4][3].current, calculateEffects.S4Shared()];\n        let multiplier = 6e7 * effectsCache.interstellar;\n        const level = player.inflation.vacuum ? 2 : 1;\n        if (player.researches[5][1] >= level) {\n            multiplierList.push(global.buildingsInfo.producing[5][2]);\n            multiplier /= 2 ** level;\n        }\n        return global.buildingsInfo.producing[4][3].setValue(multiplier).multiply(...multiplierList);\n    },\n    /** Blue hypergiants */\n    S4Build4: (): Overlimit => {\n        const multiplierList = [player.buildings[4][4].current, calculateEffects.S4Shared()];\n        let multiplier = 6e9 * effectsCache.interstellar;\n        const level = player.inflation.vacuum ? 1 : 0;\n        if (player.researches[5][1] >= level) {\n            multiplierList.push(global.buildingsInfo.producing[5][2]);\n            multiplier /= 2 ** level;\n        }\n        return global.buildingsInfo.producing[4][4].setValue(multiplier).multiply(...multiplierList);\n    },\n    /** Quasi-stars */\n    S4Build5: (): Overlimit => {\n        if (player.challenges.active === 0) { return global.buildingsInfo.producing[4][5].setValue('0'); }\n        return global.buildingsInfo.producing[4][5].setValue(2e11 * effectsCache.interstellar).multiply(player.buildings[4][5].current, calculateEffects.S4Shared(), global.buildingsInfo.producing[5][2]);\n    },\n    /** All Intergalactic Structures productions, have to be after auto Galaxies */\n    stage5Cache: () => {\n        const vacuum = player.inflation.vacuum;\n        const production = global.buildingsInfo.producing[5][3];\n\n        effectsCache.S5Upgrade2 = calculateEffects.S5Upgrade2();\n        let base = (vacuum ? 2 : 6) + effectsCache.S5Upgrade2;\n        if (vacuum && player.inflation.tree[4] >= 1) { base += global.milestonesInfo[5].reward[1]; }\n        effectsCache.galaxyBase = base;\n\n        production.setValue(base).power(player.buildings[5][3].true);\n        if (vacuum && global.mergeInfo.galaxies > 0) { production.multiply(((global.mergeInfo.galaxies + 1) / (player.buildings[5][3].true + 1)) * calculateEffects.reward[0]()); }\n\n        let globalMult = (vacuum ? 1.4 : 1.6) ** player.strangeness[5][0];\n        if (vacuum && player.inflation.tree[4] >= 1) { globalMult *= global.milestonesInfo[5].reward[0]; }\n\n        let multiplier2 = 2 * (2 ** player.researches[5][1]) * globalMult;\n        if (player.upgrades[5][1] === 1) { multiplier2 *= calculateEffects.S5Upgrade1(); }\n        if (vacuum && player.upgrades[3][13] === 1) { multiplier2 *= (calculateEffects.S3Research6() / 2e5) ** 0.5 + 1; }\n        global.buildingsInfo.producing[5][2].setValue(multiplier2).multiply(player.buildings[5][2].current, production, new Overlimit(calculateEffects.S5Research3()).power(player.buildings[5][2].true)).max(2 ** player.researches[5][1]);\n\n        let multiplier1 = 6 * (2 ** player.researches[5][0]) * globalMult;\n        if (player.upgrades[5][0] === 1) { multiplier1 *= calculateEffects.S5Upgrade0(); }\n        if (vacuum) {\n            if (player.researchesExtra[2][4] >= 1) { multiplier1 *= effectsCache.S2Upgrade3; }\n            if (player.researchesExtra[2][4] >= 3) {\n                multiplier1 *= effectsCache.S2Upgrade4;\n            } else if (player.researchesExtra[2][4] === 2) { multiplier1 *= effectsCache.S2Upgrade4 ** 0.5; }\n        }\n        global.buildingsInfo.producing[5][1].setValue(multiplier1).multiply(player.buildings[5][1].current, production, new Overlimit(calculateEffects.S5Research2()).power(player.buildings[5][1].true));\n    },\n    /** Universes */\n    S6Build1: (): Overlimit => global.buildingsInfo.producing[6][1].setValue(player.buildings[6][1].current).power(player.buildings[6][1].true / 4 + 1),\n    /** Quarks */\n    strange0: () => {\n        const vacuum = player.inflation.vacuum;\n        const stageBoost = global.strangeInfo.stageBoost;\n        const strangeQuarks = player.strange[0].current + 1;\n\n        stageBoost[1] = strangeQuarks ** (vacuum ? 0.26 : 0.22);\n        stageBoost[2] = strangeQuarks ** (vacuum ? 0.22 : 0.18);\n        stageBoost[3] = strangeQuarks ** (vacuum ? 0.68 : 0.76);\n        stageBoost[4] = strangeQuarks ** (player.elements[26] >= 1 ? 0.32 : 0.16);\n        stageBoost[5] = strangeQuarks ** 0.06;\n    },\n    /** Strangelets */\n    strange1: () => {\n        const information = global.strangeInfo.strangeletsInfo;\n        const strangelets = player.strange[1].current;\n\n        information[0] = (Math.log2(strangelets + 2) - 1) / 100;\n        information[1] = strangelets ** 0.4 / 80 + 1;\n    }\n};\n\nexport const assignResetInformation = {\n    /** And energyType, energyStage */\n    trueEnergy: () => {\n        const energyType = player.inflation.vacuum ? [[],\n            [0, 1, 3, 5, 10, 20],\n            [0, 20, 30, 40, 50, 60, 120],\n            [0, 20, 40, 60, 120, 160],\n            [0, 80, 160, 240, 320, 400],\n            [0, 400, 400, 2000]\n        ] : [[], [0, 1, 5, 20], [], [], [], []];\n        if (player.inflation.vacuum) {\n            energyType[1][1] += player.strangeness[1][7] * 2;\n            if (player.strangeness[5][10] >= 1) { energyType[5][3] *= 5; }\n            if (player.challenges.active === 0) {\n                for (let s = 2; s < energyType.length; s++) {\n                    for (let i = 1; i < energyType[s].length; i++) {\n                        energyType[s][i] /= (s >= 4 ? 4 : 2);\n                    }\n                }\n            }\n        }\n\n        let energyTrue = 0;\n        for (let s = 1; s < energyType.length; s++) {\n            let add = 0;\n            for (let i = 1; i < energyType[s].length; i++) {\n                add += energyType[s][i] * player.buildings[s][i as 1].true;\n            }\n            global.dischargeInfo.energyStage[s] = add;\n            energyTrue += add;\n        }\n        global.dischargeInfo.energyType = energyType;\n        global.dischargeInfo.energyTrue = energyTrue;\n    },\n    newClouds: (): Overlimit => {\n        const softcap = calculateEffects.cloudsGain();\n        return global.vaporizationInfo.get.setValue(player.vaporization.clouds).power(1 / softcap).plus(\n            new Overlimit(player.buildings[2][1][player.researchesExtra[2][0] >= 1 ? 'total' : 'current']).divide(calculateEffects.S2Upgrade2())\n        ).power(softcap).minus(player.vaporization.clouds);\n    },\n    maxRank: () => {\n        if (player.inflation.vacuum) {\n            global.accretionInfo.maxRank = player.strangeness[3][9] >= 1 ? 7 : 6;\n        } else {\n            global.accretionInfo.maxRank = player.stage.true >= 4 || (player.stage.true === 3 && player.event) ? 5 : 4;\n        }\n    },\n    solarHardcap: () => {\n        effectsCache.S3SolarDelay = calculateEffects.massGain();\n        let effectS1 = calculateEffects.star[2]();\n        if (player.elements[10] >= 1) { effectS1 *= 2; }\n        if (player.researchesExtra[4][1] >= 1) { effectS1 *= calculateEffects.S4Extra1(); }\n        effectsCache.S1SolarDelay = effectS1;\n\n        global.collapseInfo.solarCap = 0.01235 * effectsCache.S3SolarDelay * effectS1;\n        if (player.strangeness[5][7] >= 1) { global.collapseInfo.solarCap *= global.strangeInfo.stageBoost[5]; }\n    },\n    /** Have to be after assignResetInformation.newMass() */\n    timeUntil: (firstCall = true) => {\n        if (player.inflation.vacuum) {\n            if (firstCall) {\n                assignBuildingsProduction.stage3Cache();\n                assignBuildingsProduction.stage1Cache();\n            }\n            global.collapseInfo.timeUntil = (global.collapseInfo.solarCap / 8.96499278339628e-67 - player.buildings[1][0].current.toNumber()) / assignBuildingsProduction.S1Build1() / global.inflationInfo.globalSpeed;\n            if (isNaN(global.collapseInfo.timeUntil)) { global.collapseInfo.timeUntil = Infinity; }\n        } else { global.collapseInfo.timeUntil = 0; }\n    },\n    newMass: () => {\n        if (player.inflation.vacuum) {\n            assignResetInformation.solarHardcap();\n            global.collapseInfo.newMass = Math.min(player.buildings[1][0].current.toNumber() * 8.96499278339628e-67, global.collapseInfo.solarCap); //1.78266192e-33 / 1.98847e33\n        } else { global.collapseInfo.newMass = calculateEffects.massGain(); }\n    },\n    newStars: (reset = false) => {\n        const starCheck = global.collapseInfo.starCheck;\n        if (reset) {\n            starCheck[0] = 0;\n            starCheck[1] = 0;\n            starCheck[2] = 0;\n            return;\n        }\n        const building = player.buildings[4];\n        const stars = player.collapse.stars;\n        starCheck[0] = building[2].trueTotal.moreThan('0') ? Math.max(building[2].true + Math.floor(building[1].true * player.strangeness[4][3] / 10) - stars[0], 0) : 0;\n        starCheck[1] = Math.max(building[3].true - stars[1], 0);\n        starCheck[2] = Math.max(building[4].true + (building[5].true * player.researches[4][5]) - stars[2], 0);\n    },\n    /** Returns Groups Galaxy requirement, because I was lazy */\n    mergeReward: (): number => {\n        let requirement = 40;\n        if (player.researchesExtra[5][1] >= 2) { requirement -= 4 * (player.researchesExtra[5][1] - 1); }\n\n        global.mergeInfo.checkReward[0] = player.researchesExtra[5][1] < 1 ? Math.floor(player.buildings[5][3].true / requirement) :\n            Math.max(Math.floor(global.mergeInfo.galaxies / requirement) - player.merge.reward[0], 0);\n        return requirement;\n    },\n    /** Interstellar only, also assigns related cache */\n    quarksGain: () => {\n        global.mergeInfo.galaxies = player.buildings[5][3].current.toNumber();\n        effectsCache.element26 = calculateEffects.element26();\n        effectsCache.S2Strange9 = player.inflation.vacuum && player.strangeness[2][9] >= 1 ? calculateEffects.S2Strange9() : 1;\n        global.strangeInfo.quarksGain = player.stage.true >= 6 || player.strange[0].total >= 1 ? calculateEffects.strangeGain(true) : 1;\n    }\n};\n\nexport const buyBuilding = (index: number, stageIndex: number, howMany = player.toggles.shop.input, auto = false) => {\n    if (!checkBuilding(index, stageIndex) || (auto ? player.ASR[stageIndex] < index : global.offline.active)) { return; }\n    const building = player.buildings[stageIndex][index as 1];\n\n    let currency; //Readonly\n    let free = false;\n    let multi = true;\n    let special = '' as '' | 'Mass' | 'Galaxy' | 'Universe';\n    if (stageIndex === 1) {\n        currency = player.buildings[1][index - 1].current;\n        if (index === 1 && player.inflation.vacuum) {\n            free = player.strangeness[1][8] >= 1 && (player.researchesExtra[1][2] >= 1 || player.challenges.supervoid[1] >= 2);\n        }\n    } else if (stageIndex === 2) {\n        currency = player.buildings[2][index === 1 ? 0 : 1].current;\n    } else if (stageIndex === 3) {\n        if (player.inflation.vacuum) { special = 'Mass'; }\n        currency = player.buildings[3][0].current;\n    } else if (stageIndex === 6) {\n        currency = player.merge.reward[0];\n        special = 'Universe';\n        multi = false;\n    } else {\n        if (stageIndex === 5 && index === 3) {\n            special = 'Galaxy';\n            currency = player.collapse.mass;\n            multi = false;\n        } else { currency = player.buildings[4][0].current; }\n    }\n\n    const budget = new Overlimit(currency);\n    if (auto && building.true >= 1 && !free && multi) {\n        if (special === 'Mass' && global.accretionInfo.disableAuto) {\n            if (player.accretion.rank >= 6) {\n                budget.minus(global.collapseInfo.solarCap * 1.98847e33);\n            } else if (player.strangeness[3][4] < 2 && player.challenges.supervoid[1] >= 2) {\n                budget.minus(global.accretionInfo.rankCost[player.accretion.rank]);\n            } else {\n                budget.divide(player.toggles.shop.wait[stageIndex]);\n            }\n        } else {\n            budget.divide(player.toggles.shop.wait[stageIndex]);\n        }\n    }\n\n    const total = calculateBuildingsCost(index, stageIndex);\n    if (total.moreThan(budget)) { return; }\n\n    let afford = 1;\n    if (howMany !== 1 && multi) {\n        const scaling = global.buildingsInfo.increase[stageIndex][index]; //Must be >1\n        if (free) {\n            afford = Math.floor(budget.divide(total).log(scaling).toNumber()) + 1;\n\n            if (howMany > 0) {\n                if (afford < howMany) { return; }\n                afford = howMany;\n            }\n        } else {\n            afford = Math.floor(budget.multiply(scaling - 1).divide(total).plus('1').log(scaling).toNumber());\n\n            if (howMany > 0) {\n                if (afford < howMany) { return; }\n                afford = howMany;\n            }\n            if (afford > 1) { total.multiply(new Overlimit(scaling).power(afford).minus('1').divide(scaling - 1)); }\n        }\n    }\n\n    building.true += afford;\n    building.current.plus(afford);\n    building.total.plus(afford);\n    building.trueTotal.plus(afford);\n\n    if (typeof currency === 'object') {\n        if (!free) {\n            currency.minus(total);\n            if (special === 'Mass') {\n                player.buildings[1][0].current.setValue(currency).divide('1.78266192e-33');\n            } else if (player.inflation.vacuum && index === 1) {\n                if (stageIndex === 1) {\n                    player.buildings[3][0].current.setValue(currency).multiply('1.78266192e-33');\n                } else if (stageIndex === 2) {\n                    player.buildings[1][5].current.setValue(currency).multiply('6.02214076e23');\n                }\n            }\n        }\n\n        if (player.inflation.vacuum || stageIndex === 1) { addEnergy(afford, index, stageIndex); }\n        if (stageIndex === 1) { //True vacuum only\n            if (index === 5 && player.upgrades[1][8] === 0) { player.buildings[2][0].current.setValue(building.current).divide('6.02214076e23'); }\n        } else if (stageIndex === 2) {\n            if (index === 1) {\n                if (player.buildings[2][2].true < 1) { assignBuildingsProduction.S2Levels(); }\n            } else { assignBuildingsProduction.S2FreeBuilds(); }\n        } else if (stageIndex === 3) {\n            if (index >= 4) {\n                assignBuildingsProduction.stage3Cache();\n                awardMilestone(1, 3);\n            }\n        } else if (stageIndex === 4) {\n            global.collapseInfo.trueStars += afford;\n        }\n\n        if (!auto) {\n            numbersUpdate();\n            if (globalSave.SRSettings[0]) { getId('SRMain').textContent = `Made ${format(afford)} '${global.buildingsInfo.name[stageIndex][index]}'`; }\n        }\n    } else if (special === 'Galaxy') {\n        //global.mergeInfo.galaxies = player.buildings[5][3].current.toNumber();\n        reset('galaxy', player.inflation.vacuum ? [1, 2, 3, 4, 5] : [4, 5]);\n        calculateMaxLevel(0, 4, 'researches');\n        calculateMaxLevel(1, 4, 'researches');\n        calculateMaxLevel(2, 4, 'researches');\n        calculateMaxLevel(5, 4, 'researches');\n        awardVoidReward(5);\n        awardMilestone(1, 5);\n        if (!auto) {\n            numbersUpdate();\n            if (globalSave.SRSettings[0]) { getId('SRMain').textContent = `Caused Galaxy reset to gain ${format(afford)} new 'Galaxies'`; }\n        }\n    } else if (special === 'Universe') {\n        if (player.stage.true < 7) {\n            player.stage.true = 7;\n            //player.event = false;\n            visualTrueStageUnlocks();\n        }\n        if ((player.toggles.normal[0] && global.tab !== 'inflation') || player.stage.active < 6) { setActiveStage(1); }\n        const realTime = player.time.vacuum;\n        const income = building.true;\n        player.cosmon.current += income;\n        player.cosmon.total += income;\n        player.inflation.vacuum = false;\n        player.inflation.resets++;\n        player.inflation.age = 0;\n        player.time.universe = 0;\n        player.clone = {};\n        player.challenges.active = null;\n        prepareVacuum(false);\n        resetVacuum();\n\n        const history = player.history.vacuum;\n        const storage = global.historyStorage.vacuum;\n        storage.unshift([realTime, true, income]);\n        if (storage.length > 100) { storage.length = 100; }\n        if (income / realTime > history.best[2] / history.best[0]) {\n            history.best = [realTime, true, income];\n        }\n        if (!auto && globalSave.SRSettings[0]) { getId('SRMain').textContent = `Caused Universe reset to gain ${format(afford)} new 'Universes'`; }\n    }\n};\n\n/** Increase is how many new Structures have been gained */\nexport const addEnergy = (increase: number, index: number, stage: number) => {\n    const { discharge } = player;\n    const { dischargeInfo } = global;\n\n    const add = dischargeInfo.energyType[stage][index] * increase;\n    dischargeInfo.energyStage[stage] += add;\n    dischargeInfo.energyTrue += add;\n    discharge.energy += add;\n    if (discharge.energyMax < discharge.energy) { discharge.energyMax = discharge.energy; }\n};\n\nexport const calculateBuildingsCost = (index: number, stageIndex: number): Overlimit => {\n    const scaling = global.buildingsInfo.increase[stageIndex];\n    let firstCost = global.buildingsInfo.startCost[stageIndex][index];\n    if (stageIndex === 1) {\n        scaling[index] = (140 - effectsCache.S1Upgrade6) / 100;\n        if (index === 1) {\n            if (!player.inflation.vacuum && player.upgrades[1][2] === 1) { firstCost /= 8; }\n        } else if (index === 3) {\n            if (player.upgrades[1][1] === 1) { firstCost /= 16; }\n        } else if (index === 4) {\n            if (player.upgrades[1][2] === 1) { firstCost /= 8; }\n            if (player.researchesExtra[1][0] >= 1) { firstCost /= 16; }\n        }\n    } else if (stageIndex === 3) {\n        if (player.strangeness[3][7] >= 1) { firstCost /= global.strangeInfo.stageBoost[3]; }\n        if (index === 4) {\n            scaling[4] = player.upgrades[3][11] === 1 ? 5 : 10;\n        }\n    } else if (stageIndex === 4) {\n        let increase = 125 + 15 * index;\n        if (player.elements[2] >= 1) { increase -= 10; }\n        if (player.elements[8] >= 1) { increase -= 5; }\n        scaling[index] = increase / 100;\n\n        firstCost /= 2 ** player.strangeness[4][1];\n        if (player.researchesExtra[4][3] >= 1) { firstCost /= effectsCache.star1; }\n        if (player.elements[13] >= 1) { firstCost /= 100; }\n    } else if (stageIndex === 5) {\n        if (index === 3) {\n            scaling[3] = player.elements[31] >= 1 ? 1.1 : 1.11;\n            if (player.challenges.active === 0) { scaling[3] += 0.05; }\n        }\n    }\n\n    return new Overlimit(scaling[index]).power(player.buildings[stageIndex][index as 1].true).multiply(firstCost);\n};\n\nconst gainBuildings = (get: number, stageIndex: number, time: number) => {\n    let stageGet = stageIndex;\n    const add = new Overlimit(time);\n    if (stageIndex === 1) {\n        if (!player.inflation.vacuum && get < 5) { get += 2; }\n        add.multiply(assignBuildingsProduction[`S1Build${get + 1}` as 'S1Build1']());\n        if (get === 5 && player.upgrades[1][8] !== 1) { return; }\n        if (!player.inflation.vacuum) { get -= 2; }\n    } else if (stageIndex === 5) {\n        add.multiply(global.buildingsInfo.producing[5][1]).divide(4 ** get);\n        stageGet = 4;\n        get++;\n    } else {\n        add.multiply(assignBuildingsProduction[`S${stageIndex}Build${get + 1}` as 'S2Build1']());\n        if (stageIndex === 4) { get = 0; }\n    }\n    if (add.lessOrEqual('0')) { return; }\n    if (!add.isFinite()) {\n        if (global.debug.errorGain) {\n            global.debug.errorGain = false;\n            Notify(`Error while gaining ${add} '${global.buildingsInfo.name[stageGet][get]}'`);\n            setTimeout(() => { global.debug.errorGain = true; }, 6e4);\n        }\n        return;\n    }\n\n    const building = player.buildings[stageGet][get];\n    building.current.plus(add);\n    building.total.plus(add);\n    building.trueTotal.plus(add);\n\n    if (stageIndex === 1) {\n        if (player.inflation.vacuum) {\n            if (get === 0) {\n                player.buildings[3][0].current.setValue(building.current).multiply('1.78266192e-33');\n                player.buildings[3][0].total.setValue(building.total).multiply('1.78266192e-33');\n                awardMilestone(0, 3);\n            } else if (get === 5) {\n                player.buildings[2][0].current.setValue(building.current).divide('6.02214076e23');\n            }\n        }\n    } else if (stageIndex === 2) {\n        if (get === 1) {\n            assignBuildingsProduction.S2Levels();\n        }\n    } else if (stageIndex === 3) {\n        if (get === 0) { //False vacuum only\n            if (player.accretion.rank < 5 && building.current.moreThan('1e30')) { building.current.setValue('1e30'); }\n            awardMilestone(0, 3);\n        }\n    }\n};\n\nconst gainStrange = (time: number) => {\n    const strange = player.strange[0];\n    const add = global.strangeInfo.strangeletsInfo[0] * (global.strangeInfo.quarksGain / player.time.stage) * time;\n    if (add <= 0) { return; }\n    if (!isFinite(add)) {\n        if (global.debug.errorGain) {\n            global.debug.errorGain = false;\n            Notify(`Error while gaining ${add} '${global.strangeInfo.name[0]}'`);\n            setTimeout(() => { global.debug.errorGain = true; }, 6e4);\n        }\n        return;\n    }\n    strange.current += add;\n    strange.total += add;\n    assignBuildingsProduction.strange0();\n};\n\nexport const buyUpgrades = (upgrade: number, stageIndex: number, type: 'upgrades' | 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'elements', auto = false): boolean => {\n    if (!auto && (!checkUpgrade(upgrade, stageIndex, type) || global.offline.active)) { return false; } //Auto should had already checked\n\n    let free = false;\n    let currency: Overlimit; //Readonly\n    if (stageIndex === 1) {\n        currency = new Overlimit(player.discharge.energy);\n        if (player.inflation.vacuum) { free = player.accretion.rank >= 6 && player.strangeness[1][9] >= 1; }\n    } else if (stageIndex === 2) {\n        currency = player.buildings[2][1].current;\n    } else if (stageIndex === 3) {\n        currency = player.buildings[3][0].current;\n    } else if (stageIndex === 6) {\n        currency = player.buildings[6][0].current;\n    } else {\n        currency = player.buildings[4][0].current;\n    }\n\n    if (type === 'upgrades') {\n        if (player.upgrades[stageIndex][upgrade] >= 1) { return false; }\n\n        const pointer = global.upgradesInfo[stageIndex];\n        const cost = pointer.startCost[upgrade];\n        if (currency.lessThan(cost)) { return false; }\n\n        player.upgrades[stageIndex][upgrade]++;\n        if (!free) { currency.minus(cost); }\n\n        /* Special cases */\n        if (stageIndex === 2) {\n            if (upgrade === 3) {\n                effectsCache.S2Upgrade3 = calculateEffects.S2Upgrade3();\n            } else if (upgrade === 4) {\n                effectsCache.S2Upgrade4 = calculateEffects.S2Upgrade4();\n            } else if (upgrade >= 5 /*&& upgrade < 9*/) { assignBuildingsProduction.S2FreeBuilds(); }\n        } else if (stageIndex === 4 && upgrade === 1 && global.tab === 'upgrade') { switchTab('upgrade'); }\n        if (!auto && globalSave.SRSettings[0]) { getId('SRMain').textContent = `New upgrade '${pointer.name[upgrade]}', has been created`; }\n    } else if (type === 'researches' || type === 'researchesExtra') {\n        const pointer = global[`${type}Info`][stageIndex];\n        const level = player[type][stageIndex];\n\n        if (level[upgrade] >= pointer.max[upgrade]) { return false; }\n        let cost: number | Overlimit = pointer.cost[upgrade] as number;\n        if (currency.lessThan(cost)) { return false; }\n\n        let newLevels = 1;\n        if ((auto || player.toggles.max[0]) && pointer.max[upgrade] > 1) {\n            const scaling = pointer.scaling[upgrade]; //Must be >1 (>0 for Stage 1)\n            if (stageIndex === 1) {\n                if (free) {\n                    newLevels = Math.min(Math.floor((currency.toNumber() - cost) / scaling + 1), pointer.max[upgrade] - level[upgrade]);\n                } else {\n                    const simplify = cost - scaling / 2;\n                    newLevels = Math.min(Math.floor(((simplify ** 2 + 2 * scaling * currency.toNumber()) ** 0.5 - simplify) / scaling), pointer.max[upgrade] - level[upgrade]);\n                    if (newLevels > 1) { cost = newLevels * (newLevels * scaling / 2 + simplify); }\n                }\n            } else {\n                newLevels = Math.min(Math.floor(new Overlimit(currency).multiply(scaling - 1).divide(cost).plus('1').log(scaling).toNumber()), pointer.max[upgrade] - level[upgrade]);\n                if (newLevels > 1) { cost = new Overlimit(scaling).power(newLevels).minus('1').divide(scaling - 1).multiply(cost); }\n            }\n        }\n\n        level[upgrade] += newLevels;\n        if (!free) { currency.minus(cost); }\n\n        /* Special cases */\n        if (type === 'researches') {\n            if (stageIndex === 1) {\n                if (upgrade === 4) {\n                    global.dischargeInfo.base = calculateEffects.dischargeBase();\n                }\n            } else if (stageIndex === 2) {\n                if (upgrade === 0 || upgrade === 1) {\n                    assignBuildingsProduction.S2Levels();\n                } else if (upgrade === 2) {\n                    if (player.upgrades[2][3] === 1) { effectsCache.S2Upgrade3 = calculateEffects.S2Upgrade3(); }\n                } else if (upgrade === 3) {\n                    if (player.upgrades[2][4] === 1) { effectsCache.S2Upgrade4 = calculateEffects.S2Upgrade4(); }\n                } else if (upgrade >= 4 /*&& upgrade < 7*/) {\n                    assignBuildingsProduction.S2FreeBuilds();\n                }\n            } else if (stageIndex === 4) {\n                if (upgrade === 2 || upgrade === 3) {\n                    calculateMaxLevel(0, 4, 'researches');\n                    if (auto) { buyUpgrades(0, 4, 'researches'); }\n                    autoResearchesAddOne('researches', 4, 0);\n                }\n            }\n        } else if (type === 'researchesExtra') {\n            if (stageIndex === 1) {\n                if (upgrade === 2) {\n                    let update = false;\n                    if (player.stage.current < 4) {\n                        player.stage.current = player.researchesExtra[1][2] > 1 ? 2 : 3;\n                        if (player.toggles.normal[0] && player.stage.active < 4) {\n                            setActiveStage(player.stage.current);\n                            update = true;\n                        }\n                    }\n                    stageUpdate(update, true);\n                    awardVoidReward(1);\n                }\n            } else if (stageIndex === 2) {\n                if (upgrade === 1) {\n                    assignBuildingsProduction.S2Levels();\n                }\n            } else if (stageIndex === 4) {\n                if (upgrade === 2 || upgrade === 3) {\n                    calculateMaxLevel(1, 4, 'researches', true);\n                    if (player.stage.active === 4) { setRemnants(); }\n                }\n            }\n        }\n        if (!auto && globalSave.SRSettings[0]) { getId('SRMain').textContent = `Level increased ${level[upgrade] >= pointer.max[upgrade] ? 'and maxed at' : 'to'} ${format(level[upgrade])} for '${pointer.name[upgrade]}' ${type === 'researches' ? 'Stage' : ['', 'Energy', 'Cloud', 'Rank', 'Collapse', 'Galaxy'][player.stage.active]} Research`; }\n    } else if (type === 'researchesAuto' || type === 'ASR') {\n        if (type === 'ASR') { upgrade = stageIndex; }\n        const pointer = global[`${type}Info`];\n        const level = player[type];\n\n        let effective = level[upgrade];\n        if (effective >= pointer.max[upgrade]) { return false; }\n        if (type === 'researchesAuto') {\n            if (upgrade === 1) {\n                if (player.strangeness[4][6] >= 1) { effective--; }\n            } else if (upgrade === 2) {\n                if (player.strangeness[1][4] >= 1) { effective--; }\n                if (player.strangeness[2][4] >= 1) { effective--; }\n                if (player.strangeness[3][4] >= 1) { effective--; }\n                if (player.strangeness[4][4] >= 1) { effective--; }\n                if (player.strangeness[5][9] >= 1) { effective--; }\n            }\n        }\n        const cost = pointer.costRange[upgrade][Math.max(effective, 0)];\n        if (currency.lessThan(cost)) { return false; }\n\n        level[upgrade]++;\n        if (!free) { currency.minus(cost); }\n\n        /* Special cases */\n        if (type === 'researchesAuto') {\n            if (upgrade === 1) {\n                for (let i = 1; i < playerStart.elements.length; i++) {\n                    i = player.elements.indexOf(0.5, i);\n                    if (i < 1) { break; }\n                    buyUpgrades(i, 4, 'elements', true);\n                }\n            } else if (upgrade === 2) {\n                if (player.inflation.vacuum) {\n                    if (level[upgrade] === 1 && player.strangeness[3][4] >= 1) { level[upgrade] = 2; }\n                    if (level[upgrade] === 2 && player.strangeness[2][4] >= 1) { level[upgrade] = 3; }\n                    if (level[upgrade] === 3 && player.strangeness[4][4] >= 1) { level[upgrade] = 4; }\n                    if (level[upgrade] === 4 && player.strangeness[5][9] >= 1) { level[upgrade] = 5; }\n                }\n            }\n        }\n        if (!auto && globalSave.SRSettings[0]) { getId('SRMain').textContent = `Level increased ${level[upgrade] >= pointer.max[upgrade] ? 'and maxed at' : 'to'} ${format(level[upgrade])} for '${type === 'ASR' ? pointer.name : pointer.name[upgrade]}' automatization Research`; }\n    } else if (type === 'elements') {\n        let level = player.elements[upgrade];\n        if (level >= 1) { return false; }\n\n        if (level === 0) {\n            const cost = global.elementsInfo.startCost[upgrade];\n            if (currency.lessThan(cost)) { return false; }\n            /*if (!free) {*/ currency.minus(cost); //}\n        } else if (!auto) { return false; }\n        level = player.researchesAuto[1] >= 1 || level > 0 ? 1 : 0.5;\n        player.elements[upgrade] = level;\n\n        /* Special cases */\n        if (player.collapse.show < upgrade) { player.collapse.show = upgrade; }\n        if (level === 1) {\n            if (player.collapse.maxElement < upgrade) { player.collapse.maxElement = upgrade; }\n\n            if (upgrade === 7 || upgrade === 16 || upgrade === 20 || upgrade === 25 || upgrade === 28) {\n                calculateMaxLevel(1, 4, 'researches', true);\n            } else if (upgrade === 9 || upgrade === 17) {\n                calculateMaxLevel(0, 4, 'researches', true);\n            } else if (upgrade === 11) {\n                calculateMaxLevel(2, 4, 'researches', true);\n            } else if (upgrade === 26) {\n                player.stage.current = 5;\n                if (player.stage.true < 5) {\n                    player.stage.true = 5;\n                    player.event = false;\n                    visualTrueStageUnlocks();\n                }\n                if (player.toggles.normal[0] && player.stage.active === 4 && (!player.inflation.vacuum || player.strangeness[5][3] >= 1)) {\n                    setActiveStage(5);\n                    stageUpdate(true, true);\n                } else { stageUpdate(false, true); }\n                assignBuildingsProduction.strange0();\n                awardVoidReward(4);\n            } else if (upgrade === 32) {\n                calculateMaxLevel(5, 4, 'researches', true);\n            }\n        }\n        if (!auto && globalSave.SRSettings[0]) { getId('SRMain').textContent = `New Element '${global.elementsInfo.name[upgrade]}' ${player.elements[upgrade] >= 1 ? 'obtained' : 'awaiting activation'}`; }\n    }\n\n    if (!free) {\n        if (stageIndex === 1) {\n            player.discharge.energy = Math.round(currency.toNumber());\n        } else if (stageIndex === 2) {\n            const drops = player.buildings[2][1];\n            const old = drops.true;\n            if (player.buildings[2][2].true < 1 && currency.lessThan(old)) {\n                drops.true = Math.floor(currency.toNumber());\n                if (player.inflation.vacuum) {\n                    addEnergy(drops.true - old, 1, 2);\n                } else if (currency.lessOrEqual('0')) {\n                    player.buildings[2][0].current.max('2.7753108348135e-3');\n                }\n            }\n        } else if (stageIndex === 3) {\n            if (player.inflation.vacuum) { player.buildings[1][0].current.setValue(currency).divide('1.78266192e-33'); }\n        }\n    }\n\n    if (type === 'upgrades' || type === 'elements') {\n        visualUpdateUpgrades(upgrade, stageIndex, type);\n    } else {\n        if (type !== 'researchesAuto' && type !== 'ASR') { calculateResearchCost(upgrade, stageIndex, type); }\n        visualUpdateResearches(upgrade, stageIndex, type);\n    }\n    if (!auto) { numbersUpdate(); }\n    return true;\n};\n\nexport const buyStrangeness = (upgrade: number, stageIndex: number, type: 'strangeness' | 'inflations', auto = false): boolean => {\n    if (!auto && (!checkUpgrade(upgrade, stageIndex, type) || global.offline.active)) { return false; }\n\n    if (type === 'strangeness') {\n        const pointer = global.strangenessInfo[stageIndex];\n\n        if (player.strangeness[stageIndex][upgrade] >= pointer.max[upgrade]) { return false; }\n        if (player.strange[0].current < pointer.cost[upgrade]) { return false; }\n\n        player.strangeness[stageIndex][upgrade]++;\n        player.strange[0].current -= pointer.cost[upgrade];\n\n        /* Special cases */\n        if (stageIndex === 1) {\n            if (upgrade === 4) {\n                if (player.inflation.vacuum) {\n                    const maxLevel = player.strangeness[3][4] < 1 ? 1 : player.strangeness[2][4] < 1 ? 2 : player.strangeness[4][4] < 1 ? 3 : player.strangeness[5][9] < 1 ? 4 : 5;\n                    if (player.clone.depth === 'stage' && player.clone.researchesAuto[2] < 1) { player.clone.researchesAuto[2] = maxLevel; }\n                    if (player.researchesAuto[2] < 1) { player.researchesAuto[2] = maxLevel; }\n                } else if (player.stage.current === 1 && player.researchesAuto[2] < 1) { player.researchesAuto[2] = 1; }\n                visualUpdateResearches(2, 0, 'researchesAuto');\n            } else if (upgrade === 5) {\n                if (player.clone.depth === 'stage') { player.clone.ASR[1] = global.ASRInfo.max[1]; }\n                player.ASR[1] = global.ASRInfo.max[1];\n                visualUpdateResearches(0, 1, 'ASR');\n            } else if (upgrade === 7) {\n                assignResetInformation.trueEnergy();\n            }\n        } else if (stageIndex === 2) {\n            if (upgrade === 2) {\n                calculateMaxLevel(4, 2, 'researches', true);\n                calculateMaxLevel(5, 2, 'researches', true);\n            } else if (upgrade === 4) {\n                if (player.inflation.vacuum) {\n                    const maxLevel = player.strangeness[4][4] < 1 ? 3 : player.strangeness[5][9] < 1 ? 4 : 5;\n                    if (player.clone.depth === 'stage' && player.clone.researchesAuto[2] === 2) { player.clone.researchesAuto[2] = maxLevel; }\n                    if (player.researchesAuto[2] === 2) { player.researchesAuto[2] = maxLevel; }\n                } else if (player.stage.current === 2 && player.researchesAuto[2] < 1) { player.researchesAuto[2] = 1; }\n                visualUpdateResearches(2, 0, 'researchesAuto');\n            } else if (upgrade === 5) {\n                if (player.clone.depth === 'stage') { player.clone.ASR[2] = global.ASRInfo.max[2]; }\n                player.ASR[2] = global.ASRInfo.max[2];\n                visualUpdateResearches(0, 2, 'ASR');\n            } else if (upgrade === 8) {\n                calculateMaxLevel(2, 2, 'researches', true);\n                calculateMaxLevel(3, 2, 'researches', true);\n            }\n        } else if (stageIndex === 3) {\n            if (upgrade === 2) {\n                calculateMaxLevel(0, 3, 'researchesExtra', true);\n                calculateMaxLevel(1, 3, 'researchesExtra', true);\n            } else if (upgrade === 4) {\n                if (player.inflation.vacuum) {\n                    const maxLevel = player.strangeness[2][4] < 1 ? 2 : player.strangeness[4][4] < 1 ? 3 : player.strangeness[5][9] < 1 ? 4 : 5;\n                    if (player.clone.depth === 'stage' && player.clone.researchesAuto[2] === 1) { player.clone.researchesAuto[2] = maxLevel; }\n                    if (player.researchesAuto[2] === 1) { player.researchesAuto[2] = maxLevel; }\n                } else if (player.stage.current === 3 && player.researchesAuto[2] < 1) { player.researchesAuto[2] = 1; }\n                visualUpdateResearches(2, 0, 'researchesAuto');\n            } else if (upgrade === 5) {\n                if (player.clone.depth === 'stage') { player.clone.ASR[3] = global.ASRInfo.max[3]; }\n                player.ASR[3] = global.ASRInfo.max[3];\n                visualUpdateResearches(0, 3, 'ASR');\n            } else if (upgrade === 6) {\n                if (player.clone.depth === 'stage') { player.clone.researchesAuto[0] = Math.max(player.strangeness[3][6], player.clone.researchesAuto[0]); }\n                player.researchesAuto[0] = Math.max(player.strangeness[3][6], player.researchesAuto[0]);\n                visualUpdateResearches(0, 0, 'researchesAuto');\n            } else if (upgrade === 9) {\n                calculateMaxLevel(2, 0, 'researchesAuto', true);\n                global.debug.rankUpdated = null;\n                assignResetInformation.maxRank();\n            }\n        } else if (stageIndex === 4) {\n            if (upgrade === 4) {\n                if (player.inflation.vacuum) {\n                    const maxLevel = player.strangeness[5][9] < 1 ? 4 : 5;\n                    if (player.clone.depth === 'stage' && player.clone.researchesAuto[2] === 3) { player.clone.researchesAuto[2] = maxLevel; }\n                    if (player.researchesAuto[2] === 3) { player.researchesAuto[2] = maxLevel; }\n                } else if (player.stage.current === 4 && player.researchesAuto[2] < 1) { player.researchesAuto[2] = 1; }\n                visualUpdateResearches(2, 0, 'researchesAuto');\n            } else if (upgrade === 5) {\n                if (player.clone.depth === 'stage') { player.clone.ASR[4] = global.ASRInfo.max[4]; }\n                player.ASR[4] = global.ASRInfo.max[4];\n                visualUpdateResearches(0, 4, 'ASR');\n            } else if (upgrade === 6) {\n                if (player.clone.depth === 'stage') { player.clone.researchesAuto[1] = Math.max(player.strangeness[4][6], player.clone.researchesAuto[1]); }\n                player.researchesAuto[1] = Math.max(player.strangeness[4][6], player.researchesAuto[1]);\n                visualUpdateResearches(1, 0, 'researchesAuto');\n                for (let i = 1; i < playerStart.elements.length; i++) {\n                    i = player.elements.indexOf(0.5, i);\n                    if (i < 1) { break; }\n                    buyUpgrades(i, 4, 'elements', true);\n                }\n            } else if (upgrade === 8) {\n                if (player.clone.depth === 'stage') { player.clone.elements[0] = 1; }\n                if (player.elements[0] < 1) {\n                    player.elements[0] = 1;\n                    visualUpdateUpgrades(0, 4, 'elements');\n                }\n            }\n        } else if (stageIndex === 5) {\n            if (upgrade === 3) {\n                if (player.inflation.vacuum) { stageUpdate(false, true); }\n            } else if (upgrade === 4) {\n                if (player.strangeness[5][5] >= 1) {\n                    if (player.clone.depth === 'stage') { player.clone.ASR[5] = global.ASRInfo.max[5]; }\n                    player.ASR[5] = global.ASRInfo.max[5];\n                    visualUpdateResearches(0, 5, 'ASR');\n                }\n            } else if (upgrade === 5) {\n                const newLevel = player.strangeness[5][4] >= 1 ? global.ASRInfo.max[5] : 2;\n                if (player.clone.depth === 'stage') { player.clone.ASR[5] = newLevel; }\n                player.ASR[5] = newLevel;\n                visualUpdateResearches(0, 5, 'ASR');\n            } else if (upgrade === 9) {\n                if (player.clone.depth === 'stage' && player.clone.researchesAuto[2] === 4) { player.clone.researchesAuto[2] = 5; }\n                if (player.researchesAuto[2] === 4) {\n                    player.researchesAuto[2] = 5;\n                    visualUpdateResearches(2, 0, 'researchesAuto');\n                }\n            } else if (upgrade === 10) {\n                assignResetInformation.trueEnergy();\n            }\n        }\n        assignBuildingsProduction.strange0();\n        if (!auto && globalSave.SRSettings[0]) { getId('SRMain').textContent = `Level increased ${player.strangeness[stageIndex][upgrade] >= pointer.max[upgrade] ? 'and maxed at' : 'to'} ${format(player.strangeness[stageIndex][upgrade])} for '${pointer.name[upgrade]}' Strangeness from ${global.stageInfo.word[stageIndex]} section`; }\n    } else if (type === 'inflations') {\n        const pointer = global.inflationTreeInfo;\n\n        if (player.inflation.tree[upgrade] >= pointer.max[upgrade]) { return false; }\n        const cost = pointer.cost[upgrade];\n        if (player.cosmon.current < cost) { return false; }\n\n        if (pointer.refundable[upgrade]) {\n            player.inflation.spent += cost;\n        } else if (cost !== 0) { return false; }\n        player.inflation.tree[upgrade]++;\n        player.cosmon.current -= cost;\n\n        /* Special cases */\n        if (upgrade === 0) {\n            assignChallengeInformation();\n            for (let s = 1; s < 6; s++) {\n                for (let i = 0; i < playerStart.milestones[s].length; i++) {\n                    assignMilestoneInformation(i, s);\n                }\n            }\n        } else if (upgrade === 4) {\n            if (!player.challenges.super) { assignChallengeInformation(); }\n        }\n        if (globalSave.SRSettings[0]) { getId('SRMain').textContent = `Strength of Inflation Research '${pointer.name[upgrade]}' increased ${player.inflation.tree[upgrade] >= pointer.max[upgrade] ? 'and maxed at' : 'to'} ${format(player.inflation.tree[upgrade])}`; }\n    }\n\n    calculateResearchCost(upgrade, stageIndex, type);\n    visualUpdateResearches(upgrade, stageIndex, type);\n    if (!auto) { numbersUpdate(); }\n    return true;\n};\n\nexport const inflationRefund = async() => {\n    const { tree } = player.inflation;\n    const challenge = player.challenges.active;\n    if (global.offline.active || (player.inflation.spent === 0 && tree[0] < 1) || !await Confirm(`This will cause Stage reset to refund spent Cosmon${challenge !== null ? ' and restart current Challenge' : ''}, continue?`)) { return; }\n\n    if (challenge !== null) {\n        player.challenges.active = null;\n        challengeReset(null, challenge);\n    }\n    stageFullReset();\n    if (challenge !== null) {\n        player.challenges.active = challenge;\n        challengeReset(challenge, null);\n    }\n\n    player.cosmon.current += player.inflation.spent;\n    player.inflation.spent = 0;\n    const refundable = global.inflationTreeInfo.refundable;\n    for (let i = 0; i < refundable.length; i++) {\n        if (!refundable[i]) { continue; }\n\n        tree[i] = 0;\n        visualUpdateResearches(i, 0, 'inflations');\n        calculateResearchCost(i, 0, 'inflations');\n    }\n\n    /* Special cases */\n    assignChallengeInformation();\n    for (let s = 1; s < 6; s++) {\n        for (let i = 0; i < playerStart.milestones[s].length; i++) {\n            assignMilestoneInformation(i, s);\n        }\n    }\n    numbersUpdate();\n    if (globalSave.SRSettings[0]) { getId('SRMain').textContent = 'Cosmon has been refunded'; }\n};\n\nexport const calculateResearchCost = (research: number, stageIndex: number, type: 'researches' | 'researchesExtra' | 'strangeness' | 'inflations') => {\n    if (type === 'researches' || type === 'researchesExtra') {\n        const pointer = global[`${type}Info`][stageIndex];\n\n        if (stageIndex === 1) {\n            pointer.cost[research] = (pointer.startCost[research] as number) + pointer.scaling[research] * player[type][stageIndex][research];\n        } else {\n            (pointer.cost[research] as Overlimit).setValue(pointer.scaling[research]).power(player[type][stageIndex][research]).multiply(pointer.startCost[research]);\n        }\n    } else if (type === 'strangeness') {\n        const pointer = global.strangenessInfo[stageIndex];\n\n        pointer.cost[research] = player.inflation.vacuum ?\n            Math.floor(Math.round((pointer.startCost[research] * pointer.scaling[research] ** player.strangeness[stageIndex][research]) * 100) / 100) :\n            Math.floor(Math.round((pointer.startCost[research] + pointer.scaling[research] * player.strangeness[stageIndex][research]) * 100) / 100);\n    } else if (type === 'inflations') {\n        const pointer = global.inflationTreeInfo;\n\n        pointer.cost[research] = Math.floor(Math.round((pointer.startCost[research] + pointer.scaling[research] * player.inflation.tree[research]) * 100) / 100);\n    }\n};\n\nexport const calculateMaxLevel = (research: number, stageIndex: number, type: 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'strangeness' | 'inflations', addAuto = false) => {\n    let max = null;\n    if (type === 'researches') {\n        if (stageIndex === 2) {\n            if (research === 2) {\n                max = 4;\n                if (player.strangeness[2][8] >= 1) { max += 3; }\n            } else if (research === 3) {\n                max = 4;\n                if (player.strangeness[2][8] >= 2) { max++; }\n            } else if (research === 4) {\n                max = 2;\n                if (player.strangeness[2][2] >= 1) { max++; }\n            } else if (research === 5) {\n                max = 1;\n                if (player.strangeness[2][2] >= 2) { max++; }\n            }\n        } else if (stageIndex === 4) {\n            if (research === 0) {\n                max = 3 + (3 * player.researches[4][2]) + (3 * player.researches[4][3]);\n                if (player.elements[9] >= 1) { max += 12; }\n                if (player.elements[17] >= 1) { max += 24; }\n            } else if (research === 1) {\n                max = 2 + player.researchesExtra[4][2] + player.researchesExtra[4][3];\n                if (player.elements[7] >= 1) { max += 2; }\n                if (player.elements[16] >= 1) { max++; }\n                if (player.elements[20] >= 1) { max++; }\n                if (player.elements[25] >= 1) { max++; }\n                if (player.elements[28] >= 1) { max++; }\n            } else if (research === 2) {\n                max = 1;\n                if (player.elements[11] >= 1) { max++; }\n            } else if (research === 5) {\n                max = 1;\n                if (player.elements[32] >= 1) { max++; }\n            }\n        } else if (stageIndex === 5) {\n            if (research === 0) {\n                max = player.inflation.vacuum ? 4 : 3;\n            } else if (research === 1) {\n                max = player.inflation.vacuum ? 4 : 3;\n            } else if (research === 2) {\n                max = player.buildings[6][1].true >= 3 ? 6 : 2;\n            } else if (research === 3) {\n                max = player.buildings[6][1].true >= 3 ? 6 : 2;\n            }\n        }\n    } else if (type === 'researchesExtra') {\n        if (stageIndex === 3) {\n            if (research === 0) {\n                max = Math.floor(14 + (2 * calculateEffects.effectiveRank()));\n                if (player.strangeness[3][2] >= 1) { max += 6; }\n            } else if (research === 1) {\n                max = 6;\n                if (player.strangeness[3][2] >= 2) { max += 2; }\n            } else if (research === 4) {\n                max = player.accretion.rank - 2;\n            }\n        } else if (stageIndex === 5) {\n            if (research === 1) {\n                max = player.buildings[6][1].true >= 3 ? 2 : 1;\n            }\n        }\n    } else if (type === 'researchesAuto') {\n        if (research === 2) {\n            max = player.inflation.vacuum ? (player.strangeness[3][9] >= 1 ? 5 : 4) : 1;\n        }\n    } else if (type === 'ASR') {\n        if (stageIndex === 1) {\n            max = player.inflation.vacuum ? 5 : 3;\n        } else if (stageIndex === 2) {\n            max = player.inflation.vacuum ? 6 : 5;\n        } else if (stageIndex === 3) {\n            max = player.inflation.vacuum ? 5 : 4;\n        } else if (stageIndex === 4) {\n            max = player.inflation.vacuum ? 5 : 4;\n        }\n    } else if (type === 'strangeness') {\n        if (stageIndex === 1) {\n            if (research === 0) {\n                max = 6;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 3) {\n                max = 2;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 4) {\n                max = player.inflation.vacuum && player.challenges.void[4] >= 1 ? 2 : 1;\n            }\n        } else if (stageIndex === 2) {\n            if (research === 1) {\n                max = 8;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 3) {\n                max = 2;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 4) {\n                max = player.inflation.vacuum && player.challenges.void[4] >= 1 ? 2 : 1;\n            }\n        } else if (stageIndex === 3) {\n            if (research === 0) {\n                max = 8;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 1) {\n                max = 4;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 4) {\n                max = player.inflation.vacuum && player.challenges.void[4] >= 1 ? 2 : 1;\n            }\n        } else if (stageIndex === 4) {\n            if (research === 0) {\n                max = 8;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 1) {\n                max = 4;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 4) {\n                max = player.inflation.vacuum && player.challenges.void[4] >= 1 ? 2 : 1;\n            } else if (research === 6) {\n                max = player.inflation.vacuum || player.milestones[4][0] >= 8 || player.buildings[6][1].current.moreOrEqual('3') ? 2 : 1;\n            }\n        } else if (stageIndex === 5) {\n            if (research === 2) {\n                max = 2;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 6) {\n                max = !player.inflation.vacuum && (player.milestones[5][0] >= 8 || player.buildings[6][1].current.lessThan('5')) ? 2 : 1;\n            }\n        }\n    }\n    if (max !== null) {\n        if (max < 0) { max = 0; }\n        if (type === 'inflations') {\n            global.inflationTreeInfo.max[research] = max;\n        } else if (type === 'researchesAuto' || type === 'ASR') {\n            global[`${type}Info`].max[type === 'ASR' ? stageIndex : research] = max;\n        } else {\n            global[`${type}Info`][stageIndex].max[research] = max;\n        }\n    }\n\n    if (type !== 'researchesAuto' && type !== 'ASR') { calculateResearchCost(research, stageIndex, type); }\n    visualUpdateResearches(research, stageIndex, type);\n    if (addAuto && (type === 'researches' || type === 'researchesExtra')) { autoResearchesAddOne(type, stageIndex, research); }\n};\n\nexport const autoUpgradesSet = (which: number) => {\n    if (!player.toggles.auto[5]) { return; }\n    const array = [];\n    const level = player.upgrades[which];\n    for (let i = 0; i < global.upgradesInfo[which].maxActive; i++) {\n        if (level[i] < 1) { array.push(i); }\n    }\n    if (which === 1) {\n        const startCost = global.upgradesInfo[which].startCost as number[];\n        array.sort((a, b) => startCost[a] - startCost[b]);\n    } else {\n        const startCost = global.upgradesInfo[which].startCost as Overlimit[];\n        array.sort((a, b) => compareFunc(startCost[a], startCost[b]));\n    }\n    global.automatization.autoU[which] = array;\n};\n\nconst autoUpgradesBuy = (stageIndex: number) => {\n    const auto = global.automatization.autoU[stageIndex];\n    if (auto.length < 1 || player.researchesAuto[0] < 1) { return; }\n\n    for (let i = 0; i < auto.length; i++) {\n        const index = auto[i];\n\n        if (!checkUpgrade(index, stageIndex, 'upgrades')) { continue; }\n        buyUpgrades(index, stageIndex, 'upgrades', true);\n\n        if (player.upgrades[stageIndex][index] >= 1) {\n            auto.splice(i, 1);\n            i--;\n        } else { break; }\n    }\n};\n\nexport const autoResearchesSet = (type: 'researches' | 'researchesExtra', which: number) => {\n    if (!player.toggles.auto[type === 'researches' ? 6 : 7]) { return; }\n    const array = [];\n    const level = player[type][which];\n    const pointer = global[`${type}Info`][which];\n    for (let i = 0; i < pointer.maxActive; i++) {\n        if (level[i] < pointer.max[i]) { array.push(i); }\n    }\n    if (which === 1) {\n        const cost = pointer.cost as number[];\n        array.sort((a, b) => cost[a] - cost[b]);\n    } else {\n        const cost = pointer.cost as Overlimit[];\n        array.sort((a, b) => compareFunc(cost[a], cost[b]));\n    }\n    global.automatization[type === 'researches' ? 'autoR' : 'autoE'][which] = array;\n};\n/** Add Research if it isn't already present */\nconst autoResearchesAddOne = (type: 'researches' | 'researchesExtra', stageIndex: number, which: number) => {\n    const pointer = global[`${type}Info`][stageIndex];\n    if (player[type][stageIndex][which] >= pointer.max[which] || !player.toggles.auto[type === 'researches' ? 6 : 7]) { return; }\n\n    const auto = global.automatization[type === 'researches' ? 'autoR' : 'autoE'][stageIndex];\n    if (auto.includes(which)) { return; }\n    const cost = pointer.cost[which] as Overlimit;\n    for (let i = 0; i < auto.length; i++) {\n        if (stageIndex === 1 ? cost < pointer.cost[auto[i]] : cost.lessThan(pointer.cost[auto[i]])) {\n            auto.splice(i, 0, which);\n            return;\n        }\n    }\n    auto.push(which);\n};\n\nconst autoResearchesBuy = (type: 'researches' | 'researchesExtra', stageIndex: number) => {\n    const auto = global.automatization[type === 'researches' ? 'autoR' : 'autoE'][stageIndex];\n    if (auto.length < 1 || player.researchesAuto[0] < (type === 'researches' ? 2 : 3)) { return; }\n    const pointer = global[`${type}Info`][stageIndex];\n\n    for (let i = 0; i < auto.length; i++) {\n        if (!checkUpgrade(auto[i], stageIndex, type)) { continue; }\n        const bought = buyUpgrades(auto[i], stageIndex, type, true);\n\n        if (player[type][stageIndex][auto[i]] >= pointer.max[auto[i]]) {\n            auto.splice(i, 1);\n            i--;\n        } else if (bought) {\n            const index = i;\n            if (stageIndex === 1) {\n                while (pointer.cost[auto[index]] > pointer.cost[auto[i + 1]]) { i++; }\n            } else {\n                while ((pointer.cost[auto[index]] as Overlimit).moreThan(pointer.cost[auto[i + 1]])) { i++; }\n            }\n            if (index === i) { break; }\n            auto.splice(i, 0, auto.splice(index, 1)[0]);\n            i = index - 1;\n        } else { break; }\n    }\n};\n\nexport const autoElementsSet = () => {\n    if (!player.toggles.auto[8]) { return; }\n\n    const array = [];\n    const elements = player.elements;\n    for (let i = 1; i < (player.inflation.vacuum ? playerStart.elements.length : 29); i++) {\n        if (elements[i] < 1) { array.push(i); }\n    }\n    global.automatization.elements = array;\n};\n\nconst autoElementsBuy = () => {\n    const auto = global.automatization.elements;\n    if (auto.length < 1 || player.researchesAuto[1] < 2) { return; }\n    const elements = player.elements;\n\n    for (let i = 0; i < auto.length; i++) {\n        const index = auto[i];\n\n        if (!checkUpgrade(index, 4, 'elements')) { break; }\n        buyUpgrades(index, 4, 'elements', true);\n\n        if (elements[index] > 0) {\n            auto.splice(i, 1);\n            i--;\n        } else { break; }\n    }\n};\n\nexport const toggleSwap = (number: number, type: 'buildings' | 'normal' | 'hover' | 'max' | 'auto', change = false) => {\n    const toggles = type === 'buildings' ? player.toggles.buildings[player.stage.active] : player.toggles[type];\n\n    if (change) {\n        if (global.offline.active) { return; }\n        if (type === 'buildings') {\n            const maxLength = playerStart.buildings[player.stage.active].length;\n            if (number === 0) {\n                toggles[0] = !toggles[0];\n                for (let i = 1; i < maxLength; i++) {\n                    toggles[i] = toggles[0];\n                    toggleSwap(i, 'buildings');\n                }\n            } else {\n                if (number >= maxLength) { return; }\n\n                let anyOn = false;\n                toggles[number] = !toggles[number];\n                for (let i = 1; i <= player.ASR[player.stage.active]; i++) {\n                    if (toggles[i]) {\n                        anyOn = true;\n                        break;\n                    }\n                }\n                if (toggles[0] !== anyOn) {\n                    toggles[0] = anyOn;\n                    toggleSwap(0, 'buildings');\n                }\n            }\n        } else { toggles[number] = !toggles[number]; }\n    }\n\n    let extraText;\n    let toggleHTML;\n    if (type === 'buildings') {\n        toggleHTML = getId(`toggleBuilding${number}`);\n        extraText = number === 0 ? 'All ' : 'Auto ';\n    } else if (type === 'hover') {\n        toggleHTML = getId(`toggleHover${number}`);\n        extraText = 'Hover to create ';\n    } else if (type === 'max') {\n        toggleHTML = getId(`toggleMax${number}`);\n        extraText = 'Max create ';\n    } else if (type === 'auto') {\n        toggleHTML = getId(`toggleAuto${number}`);\n        extraText = 'Auto ';\n    } else {\n        toggleHTML = getId(`toggleNormal${number}`);\n        extraText = '';\n    }\n\n    if (!toggles[number]) {\n        toggleHTML.style.color = 'var(--red-text)';\n        toggleHTML.style.borderColor = 'crimson';\n        toggleHTML.textContent = `${extraText}OFF`;\n    } else {\n        toggleHTML.style.color = '';\n        toggleHTML.style.borderColor = '';\n        toggleHTML.textContent = `${extraText}ON`;\n    }\n};\n\nexport const toggleConfirm = (number: number, change = false) => {\n    const toggles = player.toggles.confirm;\n    if (change) { toggles[number] = toggles[number] === 'Safe' ? 'None' : 'Safe'; }\n\n    const toggleHTML = getId(`toggleConfirm${number}`);\n    toggleHTML.textContent = toggles[number];\n    if (toggles[number] === 'Safe') {\n        toggleHTML.style.color = '';\n        toggleHTML.style.borderColor = '';\n    } else {\n        toggleHTML.style.color = 'var(--red-text)';\n        toggleHTML.style.borderColor = 'crimson';\n    }\n};\n\n/** Returns true for Auto only if reset happened */\nexport const stageResetCheck = (stageIndex: number, quarks = null as number | null): boolean => {\n    const allowedChallenge = player.challenges.active === null || global.challengesInfo[player.challenges.active].resetType !== 'stage';\n    if (stageIndex === 5) {\n        assignResetInformation.quarksGain(); //Also visually updates numbers\n        if (quarks !== null) {\n            if (player.elements[26] < 0.5) { return false; }\n\n            const { stage } = player;\n            const peakCheck = global.strangeInfo.quarksGain / player.time.stage;\n            if (stage.peak < peakCheck) { stage.peak = peakCheck; }\n\n            if (player.elements[26] < 1 || !allowedChallenge) { return false; }\n            if (player.strangeness[5][8] >= 1) { gainStrange(quarks); }\n\n            if (!player.toggles.auto[0] || player.strangeness[5][6] < (player.inflation.vacuum ? 1 : 2) ||\n                (stage.input[0] <= 0 && stage.input[1] <= 0) || stage.input[0] > global.strangeInfo.quarksGain || stage.input[1] > player.time.stage) { return false; }\n            stageResetReward(stageIndex);\n            return true;\n        }\n        return allowedChallenge && player.elements[26] >= 1;\n    } else if (stageIndex === 3) {\n        if (player.buildings[3][0].current.lessThan('2.45576045e31')) { return false; }\n    } else if (stageIndex === 2) {\n        if (player.buildings[2][1].current.lessThan('1.19444e29')) { return false; }\n    } else if (stageIndex === 1) {\n        if (player.buildings[1][3].current.lessThan('1.67133125e21')) { return false; }\n    } else { return false; }\n\n    if (!allowedChallenge) { return false; }\n    if (quarks !== null) { //Just checks if auto\n        if (player.strangeness[5][6] < 1) { return false; }\n        if (player.toggles.normal[2]) { //False vacuum only\n            const info = global.milestonesInfo[stageIndex];\n            const unlimitedTime = player.inflation.tree[4] >= 1;\n            for (let i = 0; i < info.max.length; i++) {\n                if (player.milestones[stageIndex][i] < info.max[i] && (unlimitedTime || info.time[i] >= player.time.stage)) { return false; }\n            }\n        }\n        stageResetReward(stageIndex);\n    }\n    return true;\n};\nexport const stageResetUser = async() => {\n    if (global.offline.active) { return; }\n    const active = player.inflation.vacuum || (player.stage.active === 4 && (player.stage.true >= 7 || player.event)) ? 5 : player.stage.active;\n    if (!stageResetCheck(active)) { return; }\n\n    if (player.toggles.confirm[0] !== 'None' && active === 5) {\n        const array = [];\n        if (player.upgrades[5][3] === 1) {\n            if (player.inflation.vacuum) {\n                assignResetInformation.mergeReward();\n                const universeCost = calculateBuildingsCost(1, 6).toNumber();\n                const maxResets = calculateEffects.mergeMaxResets();\n                if (universeCost <= player.merge.reward[0] + (player.merge.resets < maxResets ? global.mergeInfo.checkReward[0] : 0)) {\n                    array.push(`can create an Universe${universeCost > player.merge.reward[0] ? ' after Merge' : ''}`);\n                } else if (player.merge.resets < maxResets) {\n                    array.push('still capable to do more Merge resets');\n                }\n            } else if (player.buildings[5][3].true >= 22) {\n                array.push('can Collapse Vacuum into its true state');\n            }\n        }\n        if (player.researchesExtra[5][0] >= 1) {\n            const galaxyCost = calculateBuildingsCost(3, 5).toNumber();\n            if (galaxyCost <= Math.max(player.collapse.mass, global.collapseInfo.newMass)) {\n                array.push(`can afford a Galaxy${galaxyCost > player.collapse.mass ? ' after Collapse' : ''}`);\n            }\n        }\n        if (array.length > 0) {\n            if (!await Confirm(`Prevented Stage reset because ${array.join(',\\nAlso ')}\\nReset anyway?`)) { return; }\n            if (!stageResetCheck(active)) { return Notify('Stage reset canceled, requirements are no longer met'); }\n        }\n    }\n    if (globalSave.SRSettings[0]) {\n        let message;\n        if (player.stage.true >= 5) {\n            message = `Caused Stage reset for ${format(active >= 4 ? global.strangeInfo.quarksGain : calculateEffects.strangeGain(false))} Strange quarks`;\n            const strangelets = player.strangeness[5][8] >= 1 ? calculateEffects.strangeGain(active >= 4, 1) : 0;\n            if (strangelets > 0) { message += ` and ${format(strangelets)} Strangelets`; }\n        } else { message = `${global.stageInfo.word[player.stage.true]} Stage ended, but new one started`; }\n        getId('SRMain').textContent = message;\n    }\n    stageResetReward(active);\n};\n\nconst stageResetReward = (stageIndex: number) => {\n    const { stage } = player;\n\n    stage.resets++;\n    let fullReset = true;\n    let update: null | boolean = true;\n    const resetThese = player.inflation.vacuum ? [1, 2, 3, 4, 5] : [stageIndex];\n    if (player.inflation.vacuum) {\n        if (stage.active === 1 || stage.active >= 6) {\n            update = false;\n        } else { setActiveStage(1); }\n        stage.current = 1;\n        if (stage.true >= 7) {\n            resetThese.push(6);\n        } else if (stage.resets < 2) { playEvent(7); }\n    } else if (stageIndex === stage.current) {\n        if (stageIndex < 4) {\n            const check = stage.current === stage.active;\n            stage.current++;\n            if (stage.current === 2 && player.milestones[2][1] >= 7) { stage.current++; }\n            if (stage.current === 3 && player.milestones[3][1] >= 7) { stage.current++; }\n            if (check) {\n                setActiveStage(stage.current);\n            } else { update = false; }\n            if (stage.current > stage.true) {\n                stage.true = stage.current;\n                player.event = false;\n                visualTrueStageUnlocks();\n            }\n        } else {\n            stage.current = player.milestones[1][1] < 6 ? 1 : player.milestones[2][1] < 7 ? 2 : player.milestones[3][1] < 7 ? 3 : 4;\n            if ((stage.active === 4 && stage.current !== 4) || stage.active === 5) {\n                setActiveStage(stage.current);\n            } else { update = false; }\n            resetThese.unshift(4);\n        }\n        if (stage.true >= 7) { resetThese.push(6); }\n    } else {\n        update = stageIndex === stage.active ? false : null;\n        fullReset = false;\n    }\n\n    if (stage.true >= 5) {\n        const { strange } = player;\n        const exportReward = player.time.export;\n        const quarks = stageIndex >= 4 ? global.strangeInfo.quarksGain : calculateEffects.strangeGain(false);\n        const strangelets = player.strangeness[5][8] >= 1 ? calculateEffects.strangeGain(stageIndex >= 4, 1) : 0;\n        strange[0].current += quarks;\n        strange[0].total += quarks;\n        if (strangelets > 0) {\n            strange[1].current += strangelets;\n            strange[1].total += strangelets;\n            if (strangelets > exportReward[2]) { exportReward[2] = strangelets; }\n            assignBuildingsProduction.strange1();\n        }\n        if (quarks > exportReward[1]) { exportReward[1] = quarks; }\n        if (resetThese.includes(4)) { player.elements[26] = 0; } //Lazy fix for Strange boost\n        assignBuildingsProduction.strange0();\n\n        if (stageIndex >= 4) {\n            const history = player.history.stage;\n            const storage = global.historyStorage.stage;\n            const realTime = player.time.stage;\n            storage.unshift([realTime, quarks, strangelets, 0]);\n            if (storage.length > 100) { storage.length = 100; }\n            if (quarks / realTime > history.best[1] / history.best[0]) {\n                history.best = [realTime, quarks, strangelets, 0];\n            }\n        }\n    }\n\n    resetStage(resetThese, update, fullReset);\n};\n/* Export if required */\nconst stageFullReset = () => {\n    const vacuum = player.inflation.vacuum;\n    const current = vacuum ? 5 : player.stage.current;\n    if (!vacuum) {\n        if (current !== 1 && player.milestones[1][1] >= 6) {\n            if (stageResetCheck(1)) {\n                stageResetReward(1);\n            } else { resetStage([1], false, false); }\n        }\n        if (current !== 2 && player.milestones[2][1] >= 7) {\n            if (stageResetCheck(2)) {\n                stageResetReward(2);\n            } else { resetStage([2], false, false); }\n        }\n        if (current !== 3 && player.milestones[3][1] >= 7) {\n            if (stageResetCheck(3)) {\n                stageResetReward(3);\n            } else { resetStage([3], false, false); }\n        }\n    }\n\n    if (stageResetCheck(current)) {\n        stageResetReward(current);\n    } else {\n        const resetThese = vacuum ? [1, 2, 3, 4, 5] : [current];\n        if (player.stage.true >= 7) { resetThese.push(6); }\n        let update = false;\n        if (vacuum) {\n            if (player.stage.active !== 1 && player.stage.active < 6) {\n                setActiveStage(1);\n                update = true;\n            }\n            player.stage.current = 1;\n        }\n        resetStage(resetThese, update);\n    }\n};\n\nexport const switchStage = (stage: number, active = stage) => {\n    if (!global.stageInfo.activeAll.includes(stage) || player.stage.active === stage) {\n        if (player.stage.active === stage && global.trueActive !== stage) {\n            global.trueActive = stage;\n            getId(`stageSwitch${stage}`).style.textDecoration = 'underline';\n        }\n        if (!global.offline.active) {\n            visualUpdate();\n            numbersUpdate();\n        }\n        return;\n    }\n\n    setActiveStage(stage, active);\n    stageUpdate();\n};\n\n/** Doesn't check for Stage being unlocked, requires stageUpdate() call afterwards */\nexport const setActiveStage = (stage: number, active = stage) => {\n    getId(`stageSwitch${player.stage.active}`).style.textDecoration = '';\n    player.stage.active = stage;\n    global.trueActive = active;\n    getId(`stageSwitch${stage}`).style.textDecoration = 'underline' + (global.trueActive !== stage ? ' dashed' : '');\n\n    if (global.tab === 'inflation') {\n        if (stage !== 6) { switchTab('upgrade'); }\n    } else if (global.tab === 'Elements') {\n        if (stage !== 4 && stage !== 5) { switchTab('upgrade'); }\n    }\n    if (global.tab === 'upgrade') {\n        if (global.subtab.upgradeCurrent === 'Elements' && stage !== 4 && stage !== 5) { switchTab('upgrade', 'Upgrades'); }\n    }\n};\n\n/** Returns true for Auto only if reset happened */\nconst dischargeResetCheck = (goals = false): boolean => {\n    if (player.upgrades[1][5] !== 1) { return false; }\n    const info = global.dischargeInfo;\n    const energy = player.discharge.energy;\n    const level = player.strangeness[1][4];\n\n    global.dischargeInfo.next = calculateEffects.dischargeCost();\n    if (goals) {\n        if (level >= 2 && energy >= info.next) {\n            dischargeReset(true);\n            if (!player.toggles.auto[1]) { return false; }\n        } else if (!player.toggles.auto[1] || (level < 1 && (player.researchesAuto[2] < 1 || (!player.inflation.vacuum && player.stage.current !== 1)))) { return false; }\n\n        if (energy >= info.energyTrue && (level >= 2 || energy < info.next)) { return false; }\n        dischargeReset();\n        return true;\n    }\n    return energy < info.energyTrue || (level < 2 && energy >= info.next);\n};\nexport const dischargeResetUser = async() => {\n    if (global.offline.active || !dischargeResetCheck()) { return; }\n\n    if (player.toggles.confirm[1] !== 'None') {\n        if (player.stage.active !== 1) {\n            if (!await Confirm(\"Prevented Discharge because current active Stage isn't Microworld\\nReset anyway?\")) { return; }\n            if (!dischargeResetCheck()) { return Notify('Discharge canceled, requirements are no longer met'); }\n        }\n    }\n\n    if (globalSave.SRSettings[0]) { getId('SRMain').textContent = `Caused Discharge to reset spent Energy${player.discharge.energy >= global.dischargeInfo.next ? ', also reached new goal' : ''}`; }\n    dischargeReset();\n    numbersUpdate();\n};\n\nconst dischargeReset = (noReset = false) => {\n    if (player.discharge.energy >= global.dischargeInfo.next && (noReset || player.strangeness[1][4] < 2)) {\n        player.discharge.current++;\n        if (!noReset) {\n            player.discharge.energy -= global.dischargeInfo.next;\n        } else { global.dischargeInfo.total = calculateEffects.effectiveGoals(); }\n    }\n    awardVoidReward(1);\n    if (!noReset) { reset('discharge', player.challenges.active === 0 ? [1, 2, 3, 4, 5] : [1]); }\n};\n\n/** Returns true for Auto only if reset happened */\nconst vaporizationResetCheck = (clouds = null as number | null): boolean => {\n    assignResetInformation.newClouds(); //Also visually updates numbers\n    if (player.upgrades[2][2] < 1 || global.vaporizationInfo.get.lessOrEqual('0')) { return false; } //Can be negative\n\n    if (clouds !== null) {\n        const level = player.strangeness[2][4];\n        if (level >= 2) {\n            vaporizationReset(clouds);\n            if (!player.toggles.auto[2] || player.toggles.normal[1]) { return false; }\n            assignResetInformation.newClouds();\n        } else if (!player.toggles.auto[2] || (level < 1 && (player.inflation.vacuum ? player.researchesAuto[2] < 3 : (player.researchesAuto[2] < 1 || player.stage.current !== 2)))) { return false; }\n\n        const vaporization = player.vaporization;\n        if (player.inflation.vacuum && vaporization.input[1] > 0 && vaporization.clouds.moreOrEqual(vaporization.input[1])) { return false; }\n        const rainNow = calculateEffects.S2Extra1(player.researchesExtra[2][1]);\n        const rainAfter = calculateEffects.S2Extra1(player.researchesExtra[2][1], true);\n        const storm = calculateEffects.S2Extra2(rainAfter) / calculateEffects.S2Extra2(rainNow);\n        if (calculateEffects.clouds(true).divide(calculateEffects.clouds()).multiply((rainAfter / rainNow) * storm).lessThan(vaporization.input[0])) { return false; }\n        vaporizationReset();\n    }\n    return true;\n};\nexport const vaporizationResetUser = async() => {\n    if (global.offline.active || !vaporizationResetCheck()) { return; }\n\n    if (player.toggles.confirm[2] !== 'None') {\n        const array = [];\n        if (player.strangeness[2][4] >= 2) {\n            array.push('already gaining Clouds without needing to reset');\n        }\n        const rainNow = calculateEffects.S2Extra1(player.researchesExtra[2][1]);\n        const rainAfter = calculateEffects.S2Extra1(player.researchesExtra[2][1], true);\n        const storm = calculateEffects.S2Extra2(rainAfter) / calculateEffects.S2Extra2(rainNow);\n        if (calculateEffects.clouds(true).divide(calculateEffects.clouds()).multiply((rainAfter / rainNow) * storm).lessThan('2')) {\n            array.push('boost from doing it is below 2x');\n        }\n        if (player.stage.active !== 2) {\n            array.push(\"current active Stage isn't Submerged\");\n        }\n        if (array.length > 0) {\n            if (!await Confirm(`Prevented Vaporization because ${array.join(',\\nAlso ')}\\nReset anyway?`)) { return; }\n            if (!vaporizationResetCheck()) { return Notify('Vaporization canceled, requirements are no longer met'); }\n        }\n    }\n\n    if (globalSave.SRSettings[0]) {\n        getId('SRMain').textContent = `Caused Vaporization for ${format(global.vaporizationInfo.get)} Clouds, +${format(player.vaporization.clouds.moreThan('0') ? new Overlimit(global.vaporizationInfo.get).divide(player.vaporization.clouds).multiply('1e2') : 100)}%`;\n    }\n    vaporizationReset();\n    numbersUpdate();\n};\n\nconst vaporizationReset = (autoClouds = null as number | null) => {\n    const vaporization = player.vaporization;\n\n    if (autoClouds !== null) {\n        vaporization.clouds.plus(new Overlimit(global.vaporizationInfo.get).multiply(autoClouds / 40));\n    } else { vaporization.clouds.plus(global.vaporizationInfo.get); }\n    if (vaporization.cloudsMax.lessThan(vaporization.clouds)) { vaporization.cloudsMax.setValue(vaporization.clouds); }\n    awardVoidReward(2);\n    if (autoClouds === null) { reset('vaporization', player.challenges.active === 0 ? [1, 2, 3, 4, 5] : player.inflation.vacuum ? [1, 2] : [2]); }\n};\n\n/** Returns true for Auto only if reset happened */\nconst rankResetCheck = (auto = false): boolean => {\n    if (player.accretion.rank >= global.accretionInfo.maxRank || (player.buildings[3][0][player.strangeness[3][4] >= 2 ? 'total' : 'current']).lessThan(global.accretionInfo.rankCost[player.accretion.rank])) { return false; }\n\n    if (auto) {\n        if (player.strangeness[3][4] < 1 && (player.inflation.vacuum ? player.researchesAuto[2] < 2 : (player.researchesAuto[2] < 1 || player.stage.current !== 3))) { return false; }\n        rankReset();\n    }\n    return true;\n};\nexport const rankResetUser = async() => {\n    if (global.offline.active || !rankResetCheck()) { return; }\n\n    if (player.toggles.confirm[3] !== 'None' && player.accretion.rank !== 0) {\n        const array = [];\n        if (player.inflation.vacuum && (player.researchesExtra[2][1] <= 0 || player.vaporization.clouds.lessOrEqual('0')) && player.accretion.rank >= 4) {\n            array.push(`current ${player.researchesExtra[2][1] <= 0 ? \"level for Clouds Research 'Rain Clouds'\" : 'Cloud amount'} is 0, which could make next Rank slow`);\n        }\n        if (player.stage.active !== 3) {\n            array.push(\"current active Stage isn't Accretion\");\n        }\n        if (array.length > 0) {\n            if (!await Confirm(`Prevented Rank increase because ${array.join(',\\nAlso ')}\\nReset anyway?`)) { return; }\n            if (!rankResetCheck()) { return Notify('Rank increase canceled, requirements are no longer met'); }\n        }\n    }\n\n    rankReset();\n    numbersUpdate();\n    if (globalSave.SRSettings[0]) { getId('SRMain').textContent = `Rank increased to '${global.accretionInfo.rankName[player.accretion.rank]}' (Rank number is ${player.accretion.rank})`; }\n};\n\nconst rankReset = () => {\n    player.accretion.rank++;\n    if (player.accretion.rank === 6) {\n        player.stage.current = 4;\n        if (player.toggles.normal[0] && player.stage.active < 4) {\n            setActiveStage(4);\n            stageUpdate(true, true);\n        } else { stageUpdate(false, true); }\n    }\n    awardVoidReward(3);\n    //global.accretionInfo.effective = calculateEffects.effectiveRank();\n    reset('rank', player.challenges.active === 0 ? [1, 2, 3, 4, 5] : player.inflation.vacuum ? [1, 2, 3] : [3]);\n    calculateMaxLevel(0, 3, 'researchesExtra', true);\n    calculateMaxLevel(4, 3, 'researchesExtra', true);\n    if (player.stage.active === 3 && !global.offline.active) { visualUpdate(); }\n};\n\n/** Returns true for Auto only if reset happened */\nconst collapseResetCheck = (remnants = false): boolean => {\n    assignResetInformation.newStars(); //Also visually updates numbers\n    assignResetInformation.newMass();\n    if (player.upgrades[4][0] < 1) { return false; }\n    const info = global.collapseInfo;\n    const collapse = player.collapse;\n    const level = player.strangeness[4][4];\n\n    assignResetInformation.timeUntil();\n    if (remnants) {\n        if (level >= 2 && (info.starCheck[0] > 0 || info.starCheck[1] > 0 || info.starCheck[2] > 0)) {\n            collapseReset(true);\n            if (!player.toggles.auto[4]) { return false; }\n            //assignBuildingsProduction.S5Build3_base();\n            //effectsCache.mass = calculateEffects.mass();\n            effectsCache.star1 = calculateEffects.star[1]();\n            assignResetInformation.newStars(true);\n            assignResetInformation.newMass();\n            assignResetInformation.timeUntil(false);\n        } else if (!player.toggles.auto[4] || (level < 1 && (player.inflation.vacuum ? player.researchesAuto[2] < 4 : (player.researchesAuto[2] < 1 || player.stage.current < 4)))) { return false; }\n\n        if (player.strangeness[5][4] >= 1 && player.toggles.buildings[5][3] && player.ASR[5] >= 3 && player.researchesExtra[5][0] >= 1 && calculateBuildingsCost(3, 5).toNumber() <= info.newMass) {\n            collapseReset();\n            return true;\n        }\n        if (info.timeUntil > 0 && info.timeUntil < collapse.input[1]) { return false; }\n        while (info.pointsLoop < collapse.points.length) {\n            const point = collapse.points[info.pointsLoop];\n            if (point > info.newMass || (point > 40 && player.strangeness[5][4] < 1)) { break; }\n            if (point > collapse.mass) {\n                info.pointsLoop++;\n                collapseReset();\n                return true;\n            }\n            info.pointsLoop++;\n        }\n        const massBoost = (calculateEffects.mass(true) / effectsCache.mass) * (calculateEffects.S4Research4(true) / calculateEffects.S4Research4()) * ((1 + (calculateEffects.S5Upgrade2(true) - effectsCache.S5Upgrade2) / effectsCache.galaxyBase) ** (player.buildings[5][3].true * 2));\n        if (massBoost >= collapse.input[0]) {\n            collapseReset();\n            return true;\n        } else if (level >= 2) { return false; }\n        const calculateStar = calculateEffects.star;\n        const starProd = global.buildingsInfo.producing[4];\n        const restProd = new Overlimit(starProd[1]).plus(starProd[3], starProd[4], starProd[5]);\n        if (!(massBoost * new Overlimit(starProd[2]).multiply(calculateStar[0](true) / calculateStar[0]()).plus(restProd).divide(restProd.plus(starProd[2])).toNumber() * (calculateStar[1](true) / effectsCache.star1) * (calculateStar[2](true) / calculateStar[2]()) >= collapse.input[0])) { return false; } //Done this way to remove NaN\n        collapseReset();\n        return true;\n    }\n    return info.newMass > collapse.mass || (level < 2 && (info.starCheck[0] > 0 || info.starCheck[1] > 0 || info.starCheck[2] > 0)) || player.elements.includes(0.5, 1);\n};\nexport const collapseResetUser = async() => {\n    if (global.offline.active || !collapseResetCheck()) { return; }\n\n    if (player.toggles.confirm[4] !== 'None') {\n        const array = [];\n        if (player.inflation.vacuum) {\n            const unlockedG = player.researchesExtra[5][0] >= 1;\n            const cantAffordG = !unlockedG || calculateBuildingsCost(3, 5).toNumber() > global.collapseInfo.newMass;\n            if (global.collapseInfo.timeUntil > 0 && global.collapseInfo.timeUntil < 1e6 && cantAffordG) {\n                array.push(`${unlockedG ? 'will not be able to afford new Galaxy and ' : ''}Solar mass isn't hardcapped, but can be hardcapped soon`);\n            }\n            if (player.researchesExtra[2][1] <= 0 || player.vaporization.clouds.lessOrEqual('0')) {\n                array.push(`current ${player.researchesExtra[2][1] <= 0 ? \"level for Clouds Research 'Rain Clouds'\" : 'Cloud amount'} is 0, which could make recovering from Collapse really slow`);\n            }\n        }\n        if (player.stage.active !== 4 && player.stage.active !== 5) {\n            array.push(\"current active Stage isn't Interstellar\");\n        }\n        if (array.length > 0) {\n            if (!await Confirm(`Prevented Collapse because ${array.join(',\\nAlso ')}\\nReset anyway?`)) { return; }\n            if (!collapseResetCheck()) { return Notify('Collapse canceled, requirements are no longer met'); }\n        }\n    }\n\n    if (globalSave.SRSettings[0]) {\n        const { starCheck: newStars, newMass } = global.collapseInfo;\n        let count = 0;\n        for (let i = 1; i < playerStart.elements.length; i++) {\n            i = player.elements.indexOf(0.5, i);\n            if (i < 1) { break; }\n            count++;\n        }\n        let message = `Caused Collapse to${count > 0 ? ` activate ${format(count)} new Elements and` : ''} ${newMass > player.collapse.mass ? `increase Solar mass to ${format(newMass)}` : ''}`;\n        if (newStars[0] > 0 || newStars[1] > 0 || newStars[2] > 0) {\n            message += newMass > player.collapse.mass ? ', also gained' : 'gain';\n            if (newStars[0] > 0) { message += ` ${format(newStars[0])} Red giants`; }\n            if (newStars[1] > 0) { message += `, ${format(newStars[1])} Neutron stars`; }\n            if (newStars[2] > 0) { message += `, ${format(newStars[2])} Black holes`; }\n        }\n        getId('SRMain').textContent = message;\n    }\n    collapseReset();\n    numbersUpdate();\n};\n\nconst collapseReset = (noReset = false) => {\n    const collapseInfo = global.collapseInfo;\n    const collapse = player.collapse;\n\n    collapse.stars[0] += collapseInfo.starCheck[0];\n    collapse.stars[1] += collapseInfo.starCheck[1];\n    collapse.stars[2] += collapseInfo.starCheck[2];\n    if (!noReset) {\n        if (collapseInfo.newMass > collapse.mass) {\n            collapse.mass = collapseInfo.newMass;\n            if (collapse.massMax < collapse.mass) { collapse.massMax = collapse.mass; }\n        }\n        for (let i = 1; i < playerStart.elements.length; i++) { //Must be below mass and star checks\n            i = player.elements.indexOf(0.5, i);\n            if (i < 1) { break; }\n            buyUpgrades(i, 4, 'elements', true);\n        }\n\n        reset('collapse', player.challenges.active === 0 ? [1, 2, 3, 4, 5] : player.inflation.vacuum ? [1, 2, 3, 4] : (player.strangeness[5][3] < 1 ? [4, 5] : [4]));\n        calculateMaxLevel(0, 4, 'researches');\n        calculateMaxLevel(1, 4, 'researches');\n    }\n    awardVoidReward(4);\n};\n\nconst mergeResetCheck = (auto = false): boolean => {\n    if (player.upgrades[5][3] !== 1) { return false; }\n    const galaxies = player.buildings[5][3].true;\n    if (!player.inflation.vacuum) { return galaxies >= 22; }\n    if (player.merge.resets >= calculateEffects.mergeMaxResets() || galaxies < 1) { return false; }\n\n    if (auto) {\n        if ((player.strangeness[5][9] < 1 && player.researchesAuto[2] < 5) || (!player.toggles.normal[5] && global.collapseInfo.timeUntil > 0) || galaxies < player.merge.input) { return false; }\n        mergeReset();\n        return true;\n    }\n    return true;\n};\nexport const mergeResetUser = async() => {\n    if (global.offline.active || !mergeResetCheck()) { return; }\n\n    if (player.toggles.confirm[5] !== 'None' && player.inflation.vacuum) {\n        const array = [];\n        const galaxyCost = calculateBuildingsCost(3, 5).toNumber();\n        if (galaxyCost <= Math.max(player.collapse.mass, global.collapseInfo.newMass)) {\n            array.push(`can afford a Galaxy${galaxyCost > player.collapse.mass ? ' after Collapse' : ''}`);\n        }\n        if (player.stage.active !== 5) {\n            array.push(\"current active Stage isn't Intergalactic\");\n        }\n        if (array.length > 0) {\n            if (!await Confirm(`Prevented Merging because ${array.join(',\\nAlso ')}\\nReset anyway?`)) { return; }\n            if (!mergeResetCheck()) { return Notify('Merge canceled, requirements are no longer met'); }\n        }\n    }\n\n    mergeReset();\n    numbersUpdate();\n    if (globalSave.SRSettings[0]) {\n        const { checkReward } = global.mergeInfo;\n        getId('SRMain').textContent = player.inflation.vacuum ? `Merged Galaxies${checkReward[0] > 0 ? `, which resulted in +${format(checkReward[0])} new Groups` : ''}` : 'Vacuum decayed into its true state';\n    }\n};\n\nconst mergeReset = () => {\n    if (!player.inflation.vacuum) { return switchVacuum(); }\n    assignResetInformation.mergeReward();\n\n    player.merge.resets++;\n    player.buildings[5][3].true = 0;\n    player.merge.reward[0] += global.mergeInfo.checkReward[0];\n    reset('galaxy', [1, 2, 3, 4, 5]);\n    calculateMaxLevel(0, 4, 'researches');\n    calculateMaxLevel(1, 4, 'researches');\n    calculateMaxLevel(2, 4, 'researches');\n    calculateMaxLevel(5, 4, 'researches');\n    if (player.stage.current < 6) {\n        player.stage.current = 6;\n        stageUpdate(false, true);\n    }\n};\n\nexport const assignMilestoneInformation = (index: number, stageIndex: number) => {\n    const pointer = global.milestonesInfo[stageIndex];\n    const level = player.milestones[stageIndex][index];\n    if (player.inflation.vacuum) {\n        pointer.time[index] = 1200;\n        if (stageIndex === 1) {\n            if (index === 0) {\n                pointer.need[0].setValue('1e32').power(level).multiply('1e32');\n                pointer.reward[0] = 1.05 ** level;\n            } else if (index === 1) {\n                pointer.need[1].setValue(24000 + 24000 * level);\n                pointer.reward[1] = 1.03 ** level;\n            }\n        } else if (stageIndex === 2) {\n            if (index === 0) {\n                pointer.need[0].setValue('1e1').power(level).multiply('1e1');\n                pointer.reward[0] = 1.12 ** level;\n            } else if (index === 1) {\n                pointer.need[1].setValue('1e3').power(level).multiply('1e3');\n                pointer.reward[1] = 1.08 ** level;\n            }\n        } else if (stageIndex === 3) {\n            if (index === 0) {\n                pointer.need[0].setValue(1e-12 * 1e4 ** level);\n                pointer.reward[0] = 1.08 ** level;\n            } else if (index === 1) {\n                pointer.need[1].setValue(6 + 6 * level);\n                pointer.reward[1] = level / 4;\n            }\n        } else if (stageIndex === 4) {\n            if (index === 0) {\n                pointer.need[0].setValue('1e6').power(level).multiply('1e6');\n                pointer.reward[0] = 1.06 ** level;\n            } else if (index === 1) {\n                pointer.need[1].setValue(28 + 28 * level);\n                pointer.reward[1] = 1.01 ** level;\n            }\n        } else if (stageIndex === 5) {\n            if (index === 0) {\n                pointer.need[0].setValue('1e1').power(level).multiply('1e1');\n                pointer.reward[0] = 1.04 ** level;\n            } else if (index === 1) {\n                pointer.need[1].setValue(1 + level);\n                pointer.reward[1] = level / 100;\n            }\n        }\n    } else {\n        const percentage = level / (pointer.max[index] - 1);\n        if (stageIndex === 1) {\n            pointer.time[index] = 14400 / (percentage * (index === 1 ? 11 : 3) + 1) ** percentage;\n        } else if (stageIndex === 2) {\n            pointer.time[index] = 28800 / (percentage * (index === 1 ? 23 : 7) + 1) ** percentage;\n        } else if (stageIndex === 3) {\n            pointer.time[index] = 43200 / (percentage * (index === 1 ? 35 : 11) + 1) ** percentage;\n        } else if (stageIndex === 4) {\n            pointer.time[index] = 57600 / (percentage * (index === 1 ? 47 : 15) + 1) ** percentage;\n        } else if (stageIndex === 5) {\n            pointer.time[index] = index === 0 ? (3600 / (percentage * 2 + 1)) : 1200;\n        }\n        pointer.need[index].setValue(pointer.scaling[index][level]);\n    }\n    if (player.inflation.tree[0] === 1) { pointer.time[index] /= 4; }\n};\n\nconst awardMilestone = (index: number, stageIndex: number, count = 0) => {\n    if (!milestoneCheck(index, stageIndex)) {\n        if (count > 0) {\n            Notify(`Milestone '${global.milestonesInfo[stageIndex].name[index]}' new tier completed${!player.inflation.vacuum && player.milestones[stageIndex][index] >= global.milestonesInfo[stageIndex].max[index] ? ', maxed' : ''}`, count - 1);\n            if (!player.inflation.vacuum) {\n                player.strange[0].current += count;\n                player.strange[0].total += count;\n                assignBuildingsProduction.strange0();\n                if (stageIndex === 4) {\n                    if (index === 0 && player.milestones[4][0] >= 8) { calculateMaxLevel(6, 4, 'strangeness', true); }\n                } else if (stageIndex === 5) {\n                    if (index === 0 && player.milestones[5][0] >= 8) { calculateMaxLevel(6, 5, 'strangeness', true); }\n                }\n            } else if (stageIndex === 3 && index === 1) {\n                global.accretionInfo.effective = calculateEffects.effectiveRank();\n                calculateMaxLevel(0, 3, 'researchesExtra', true);\n            }\n        }\n        return;\n    }\n\n    player.milestones[stageIndex][index]++;\n    assignMilestoneInformation(index, stageIndex);\n    awardMilestone(index, stageIndex, count + 1);\n};\n\n/** Also updates related information */\nexport const toggleSupervoid = (change = false) => {\n    const info = global.challengesInfo[0];\n    if (change) {\n        if (player.challenges.active === 0) { return Notify(`Can't be toggled while inside ${info.name}`); }\n        player.challenges.super = !player.challenges.super;\n    }\n\n    if (player.challenges.super) {\n        info.name = 'Supervoid';\n        info.resetType = 'vacuum';\n        changeRewardType(true);\n    } else {\n        info.name = 'Void';\n        info.resetType = 'stage';\n        changeRewardType(false);\n    }\n    assignChallengeInformation();\n    if (change) { numbersUpdate(); }\n};\n\n/* For now just index 0 */\nexport const assignChallengeInformation = () => {\n    let time = player.challenges.super || player.inflation.tree[4] >= 1 ? 1200 : 3600;\n    if (player.inflation.tree[0] === 1) { time /= 4; }\n    global.challengesInfo[0].time = time;\n};\n\nconst awardVoidReward = (index: number): void => {\n    if (player.challenges.active !== 0) { return; }\n\n    let progress = 1;\n    if (index === 1) {\n        progress += player.researchesExtra[1][2];\n    } else if (index === 2) {\n        if (player.vaporization.clouds.moreThan('1e4')) { progress++; }\n        if (player.vaporization.clouds.moreThan('1e12') && player.accretion.rank <= 1) { progress++; }\n    } else if (index === 3) {\n        progress = Math.min(player.accretion.rank - 1, 6);\n    } else if (index === 4) {\n        if (player.collapse.stars[0] >= 1) { progress++; }\n        if (player.collapse.stars[1] >= 1) { progress++; }\n        if (player.collapse.stars[2] >= 1) { progress++; }\n        if (player.elements[26] >= 1) { progress++; }\n    } else if (index === 5) {\n        if (player.merge.resets >= 1) { progress++; }\n        if (player.merge.reward[0] >= 1) { progress++; }\n    }\n\n    const pointer = player.challenges.void;\n    if (pointer[index] < progress && player.time.stage <= global.challengesInfo[0].time) {\n        pointer[index]++;\n        const excess = progress !== pointer[index];\n        if (excess) { progress = pointer[index]; }\n        if (player.challenges.voidCheck[index] < progress) { player.challenges.voidCheck[index] = progress; }\n        const totalProgress = pointer[1] + pointer[2] + pointer[3] + pointer[4] + pointer[5];\n        player.strange[0].current += totalProgress;\n        player.strange[0].total += totalProgress;\n        assignBuildingsProduction.strange0();\n\n        Notify(`New Void reward unlocked:\\n${global.challengesInfo[0].rewardText[0][index][progress - 1]}`);\n        if (index === 3) {\n            if (progress <= 4) {\n                calculateMaxLevel(0, 1, 'strangeness', true);\n                calculateMaxLevel(3, 1, 'strangeness', true);\n                calculateMaxLevel(1, 2, 'strangeness', true);\n                calculateMaxLevel(3, 2, 'strangeness', true);\n                calculateMaxLevel(0, 3, 'strangeness', true);\n                calculateMaxLevel(1, 3, 'strangeness', true);\n                calculateMaxLevel(0, 4, 'strangeness', true);\n                calculateMaxLevel(1, 4, 'strangeness', true);\n                calculateMaxLevel(2, 5, 'strangeness', true);\n            }\n        } else if (index === 4) {\n            if (progress === 1) {\n                calculateMaxLevel(4, 1, 'strangeness', true);\n                calculateMaxLevel(4, 2, 'strangeness', true);\n                calculateMaxLevel(4, 3, 'strangeness', true);\n                calculateMaxLevel(4, 4, 'strangeness', true);\n            }\n        }\n        if (excess) { return awardVoidReward(index); }\n    }\n\n    if (!player.challenges.super) { return; }\n    const pointer2 = player.challenges.supervoid;\n    if (pointer2[index] < progress && player.time.vacuum <= global.challengesInfo[0].time) {\n        pointer2[index]++;\n        const excess = progress !== pointer2[index];\n        if (excess) { progress = pointer2[index]; }\n        player.cosmon.current++;\n        player.cosmon.total++;\n\n        Notify(`New Supervoid reward unlocked:\\n${global.challengesInfo[0].rewardText[1][index][progress - 1]}`);\n        if (excess) { return awardVoidReward(index); }\n        global.inflationInfo.totalSuper = pointer2[1] + pointer2[2] + pointer2[3] + pointer2[4] + pointer2[5];\n    }\n};\n\n/** Null means exit if possible, nothing if isn't. Entering same challenge will exit out of it */\nexport const enterExitChallengeUser = (index: number | null) => {\n    if (global.offline.active) { return; }\n    const old = player.challenges.active;\n    if (old === index || index === null) {\n        if (old === null) { return; }\n        player.challenges.active = null;\n\n        challengeReset(null, old);\n        Notify(`Left the '${global.challengesInfo[old].name}'`);\n    } else {\n        if (index === 0) {\n            if (player.challenges.super ? player.buildings[6][1].current.lessThan('2') : !player.inflation.vacuum) { return; }\n        } else if (index === 1) { return; }\n        player.challenges.active = index;\n\n        challengeReset(index, old);\n        Notify(`'${global.challengesInfo[index].name}' is now active`);\n    }\n};\nconst exitChallengeAuto = () => {\n    const old = player.challenges.active;\n    if (old === null) { return; }\n    const info = global.challengesInfo[old];\n    if (player.time[info.resetType] <= info.time) { return; }\n\n    player.challenges.active = null;\n    challengeReset(null, old);\n    Notify(`Automatically left the '${info.name}'`);\n};\n/** Handles all required resets related to challenges */\nconst challengeReset = (next: number | null, old: number | null) => {\n    if (next !== null) {\n        const resetType = global.challengesInfo[next].resetType;\n        if (old !== null) { challengeReset(null, old); }\n        cloneBeforeReset(resetType);\n        if (resetType === 'vacuum') {\n            if (player.stage.active < 6) { setActiveStage(1); }\n            if (!player.inflation.vacuum) {\n                player.inflation.vacuum = true;\n                prepareVacuum(true);\n            }\n            resetVacuum();\n        } else {\n            stageFullReset();\n            if (next === 0) { assignResetInformation.trueEnergy(); }\n        }\n    } else if (old !== null) {\n        if (player.stage.active < 6) { setActiveStage(Math.min(player.clone.stage.current, (player.clone.depth !== 'stage' ? player.clone : player).strangeness[5][3] >= 1 ? 5 : 4)); }\n        if (player.clone.inflation?.vacuum === false) {\n            global.buildingsInfo.producing[4][5].setValue('0');\n            player.inflation.vacuum = false;\n            prepareVacuum(false);\n        }\n        loadFromClone();\n    }\n};\n", "import { checkTab, milestoneGetValue } from './Check';\nimport Overlimit from './Limit';\nimport { getClass, getId, getQuery } from './Main';\nimport { effectsCache, global, player } from './Player';\nimport { Notify, SRHotkeysInfo, globalSave, playEvent, setTheme, specialHTML } from './Special';\nimport { calculateBuildingsCost, stageResetCheck, toggleSwap, setActiveStage, calculateEffects, assignBuildingsProduction, assignResetInformation } from './Stage';\nimport type { gameTab } from './Types';\n\nexport const switchTab = (tab: gameTab, subtab = null as null | string) => {\n    if (subtab === null) {\n        const oldTab = global.tab;\n        getId(`${oldTab}Tab`).style.display = 'none';\n        getId(`${oldTab}TabBtn`).classList.remove('tabActive');\n        for (const inside of global.tabList[`${oldTab}Subtabs`]) {\n            getId(`${oldTab}SubtabBtn${inside}`).style.display = 'none';\n        }\n\n        global.tab = tab;\n        let subtabAmount = 0;\n        getId(`${tab}Tab`).style.display = '';\n        getId(`${tab}TabBtn`).classList.add('tabActive');\n        for (const inside of global.tabList[`${tab}Subtabs`]) {\n            if (checkTab(tab, inside)) {\n                getId(`${tab}SubtabBtn${inside}`).style.display = '';\n                subtabAmount++;\n            } else if (global.subtab[`${tab}Current`] === inside) {\n                switchTab(tab, global.tabList[`${tab}Subtabs`][0]);\n            }\n        }\n        getId('subtabs').style.display = subtabAmount > 1 ? '' : 'none';\n        if (globalSave.SRSettings[0]) { getId('SRTab').textContent = `Current tab is '${tab}'${subtabAmount > 1 ? ` and subtab is '${global.subtab[`${tab}Current`]}'` : ''}`; }\n    } else {\n        const oldSubtab = global.subtab[`${tab}Current`];\n        getId(`${tab}Subtab${oldSubtab}`).style.display = 'none';\n        getId(`${tab}SubtabBtn${oldSubtab}`).classList.remove('tabActive');\n\n        global.subtab[`${tab as Exclude<gameTab, 'Elements'>}Current`] = subtab;\n        getId(`${tab}Subtab${subtab}`).style.display = '';\n        getId(`${tab}SubtabBtn${subtab}`).classList.add('tabActive');\n        if (global.tab !== tab) { return; }\n        if (globalSave.SRSettings[0]) { getId('SRTab').textContent = `Current subtab is '${subtab}', part of '${tab}' tab`; }\n    }\n\n    const active = player.stage.active;\n    if ((tab === 'upgrade' && global.subtab.upgradeCurrent === 'Elements') || tab === 'Elements') {\n        if (active !== 4 && active !== 5) {\n            if (tab === 'upgrade' && subtab === null) {\n                switchTab('upgrade', 'Upgrades');\n            } else {\n                setActiveStage(global.trueActive === 5 ? 5 : 4, global.trueActive);\n                stageUpdate();\n            }\n            return;\n        }\n    } else if (tab === 'inflation') {\n        if (active !== 6) {\n            setActiveStage(6, global.trueActive);\n            stageUpdate();\n            return;\n        }\n    } else if (global.trueActive !== active) {\n        setActiveStage(global.stageInfo.activeAll.includes(global.trueActive) ? global.trueActive : Math.min(player.stage.current, 5));\n        stageUpdate();\n        return;\n    }\n    if (!global.offline.active) {\n        visualUpdate();\n        numbersUpdate();\n    }\n};\n\nexport const numbersUpdate = () => {\n    const { tab, subtab } = global;\n    const active = player.stage.active;\n    const buildings = player.buildings[active];\n    const vacuum = player.inflation.vacuum;\n\n    if (!global.debug.timeLimit) {\n        const challenge = player.challenges.active;\n        let noTime = null as boolean | null;\n        if (vacuum) {\n            if (challenge !== null) { noTime = player.time[global.challengesInfo[challenge].resetType] > global.challengesInfo[challenge].time; }\n        } else if (player.inflation.tree[4] < 1 && (player.stage.true >= 7 || player.stage.resets >= 4)) {\n            const s = Math.min(player.stage.current, 4);\n            const info = global.milestonesInfo;\n            let maxTime = 0;\n            for (let i = 0; i < info[s].need.length; i++) {\n                if (player.milestones[s][i] >= info[s].max[i]) {\n                    if (s === 4 && player.milestones[5][i] < info[5].max[i]) {\n                        maxTime = Math.max(info[5].time[i], maxTime);\n                    }\n                    continue;\n                }\n                maxTime = Math.max(info[s].time[i], maxTime);\n            }\n            if (maxTime > 0) { noTime = player.time.stage > maxTime; }\n        }\n\n        if (noTime) {\n            Notify(`Time limit has been reached for ${challenge !== null ? global.challengesInfo[challenge].name : 'all Milestones'}`);\n            global.debug.timeLimit = true;\n        } else if (noTime === null) { global.debug.timeLimit = true; }\n    }\n\n    if (global.footer) {\n        if (active === 1) {\n            getId('footerStat1Span').textContent = format(buildings[0].current, { padding: true });\n            getId('footerStat2Span').textContent = format(player.discharge.energy, { padding: 'exponent' });\n        } else if (active === 2) {\n            getId('footerStat1Span').textContent = format(buildings[0].current, { padding: true });\n            getId('footerStat2Span').textContent = format(buildings[1].current, { padding: true });\n            getId('footerStat3Span').textContent = format(player.vaporization.clouds, { padding: true });\n        } else if (active === 3) {\n            getId('footerStat1Span').textContent = format(buildings[0].current, { padding: true });\n        } else if (active === 4 || active === 5) {\n            const stars = player.buildings[4];\n\n            getId('footerStat1Span').textContent = format(player.collapse.mass, { padding: true });\n            getId('footerStat2Span').textContent = format(stars[0].current, { padding: true });\n            if (active === 5) {\n                getId('footerStat3Span').textContent = format(new Overlimit(stars[1].current).plus(stars[2].current, stars[3].current, stars[4].current, stars[5].current), { padding: true });\n            }\n        } else if (active === 6) {\n            getId('footerStat1Span').textContent = format(buildings[0].current, { padding: true });\n            getId('footerStat2Span').textContent = format(player.cosmon.current, { padding: 'exponent' });\n        }\n    }\n    if (tab === 'stage') {\n        if (subtab.stageCurrent === 'Structures') {\n            const { buildingsInfo } = global;\n            const producing = buildingsInfo.producing[active];\n            const howMany = global.hotkeys.shift ? (global.hotkeys.ctrl ? 100 : 1) : global.hotkeys.ctrl ? 10 : player.toggles.shop.input;\n            const speed = global.inflationInfo.globalSpeed;\n\n            //Visual fixes for stuff that makes no sense to assign\n            if (active === 1) {\n                if (vacuum) { assignBuildingsProduction.S1Build1(false, true); }\n            } else if (active === 2) {\n                assignBuildingsProduction.S2Build2(true);\n            } else if (active === 3) {\n                if (vacuum) { assignBuildingsProduction.stage3Cache(true); }\n                assignBuildingsProduction.S3Build1(false, true);\n                assignBuildingsProduction.S3Build2(true);\n                assignBuildingsProduction.S3Build3(true);\n            }\n            for (let i = 1; i < buildingsInfo.maxActive[active]; i++) {\n                const trueCountID = getId(`building${i}True`);\n                getId(`building${i}Cur`).textContent = format(buildings[i].current, { padding: trueCountID.style.display !== 'none' });\n                getId(`building${i}Prod`).textContent = format(buildingsInfo.type[active][i - 1] === 'producing' ? new Overlimit(producing[i]).multiply(speed) : producing[i], { padding: true });\n                trueCountID.textContent = `[${format(buildings[i as 1].true, { padding: 'exponent' })}]`;\n\n                let lockText;\n                if (active === 3) {\n                    if (i > 1 && player.upgrades[3][global.accretionInfo.unlockA[i - 2]] !== 1) {\n                        lockText = 'Unlocked with Upgrade';\n                    }\n                } else if (active === 4) {\n                    if (i === 5 && player.challenges.active === 0) {\n                        lockText = 'Cannot be created';\n                    } else if (player.researchesExtra[5][0] < 1 && player.collapse.mass < global.collapseInfo.unlockB[i]) {\n                        lockText = `Unlocked at ${format(global.collapseInfo.unlockB[i])} Mass`;\n                    }\n                } else if (active === 6) {\n                    if (!player.inflation.vacuum) {\n                        lockText = 'Requires true Vacuum state';\n                    }\n                }\n                if (lockText !== undefined) {\n                    getId(`building${i}`).classList.remove('availableBuilding');\n                    getId(`building${i}Btn`).textContent = lockText;\n                    getId(`building${i}BuyX`).textContent = 'Locked';\n                    continue;\n                }\n\n                let costName: string;\n                let currency: number | Overlimit;\n                let free = false;\n                let multi = true;\n                if (active === 6) { //Universe\n                    costName = 'Groups';\n                    currency = player.merge.reward[0];\n                    multi = false;\n                } else if (active === 5 && i === 3) { //Galaxy\n                    costName = 'Mass';\n                    currency = player.collapse.mass;\n                    multi = false;\n                } else {\n                    let e = i - 1;\n                    let extra = active;\n                    if (active === 1) {\n                        if (i === 1 && vacuum) { free = player.researchesExtra[1][2] >= 1 && player.strangeness[1][8] >= 1; }\n                    } else if (active === 2) {\n                        if (i !== 1) { e = 1; }\n                    } else if (active >= 3) {\n                        e = 0;\n                        if (active === 5) { extra = 4; }\n                    }\n\n                    costName = buildingsInfo.name[extra][e];\n                    currency = player.buildings[extra][e].current;\n                }\n\n                let buy = 1;\n                const cost = calculateBuildingsCost(i, active);\n                if (howMany !== 1 && multi) {\n                    const scaling = buildingsInfo.increase[active][i];\n                    if (free) {\n                        buy = howMany <= 0 ? Math.max(Math.floor(new Overlimit(currency).divide(cost).log(scaling).toNumber()) + 1, 1) : howMany;\n                        if (buy > 1) { cost.multiply(new Overlimit(scaling).power(buy - 1)); }\n                    } else {\n                        buy = howMany <= 0 ? Math.max(Math.floor(new Overlimit(currency).multiply(scaling - 1).divide(cost).plus('1').log(scaling).toNumber()), 1) : howMany;\n                        if (buy > 1) { cost.multiply(new Overlimit(scaling).power(buy).minus('1').divide(scaling - 1)); }\n                    }\n                }\n\n                getId(`building${i}`).classList[cost.lessOrEqual(currency) ? 'add' : 'remove']('availableBuilding');\n                getId(`building${i}Btn`).textContent = `Need: ${format(cost, { padding: true })} ${costName}`;\n                getId(`building${i}BuyX`).textContent = format(buy, { padding: 'exponent' });\n            }\n            if (active === 1) {\n                const { dischargeInfo } = global;\n                getId('reset1Button').textContent = `Next goal is ${format(calculateEffects.dischargeCost(), { padding: true })} Energy`;\n                getQuery('#tritiumEffect > span').textContent = format(new Overlimit(effectsCache.tritium).multiply(speed), { padding: true });\n                getQuery('#dischargeEffect > span').textContent = format(dischargeInfo.base ** dischargeInfo.total, { padding: true });\n                getQuery('#energySpent > span').textContent = format(dischargeInfo.energyTrue - player.discharge.energy, { padding: 'exponent' });\n                if (vacuum) {\n                    const preonCap = calculateEffects.preonsHardcap(calculateEffects.effectiveEnergy() ** calculateEffects.S1Extra3());\n                    getQuery('#preonCap > span').textContent = format(preonCap * speed, { padding: true });\n                    getId('preonCapRatio').textContent = format(assignBuildingsProduction.S1Build1(true) / preonCap, { padding: true });\n                }\n            } else if (active === 2) {\n                getId('reset1Button').textContent = `Reset for ${format(global.vaporizationInfo.get, { padding: true })} Clouds`;\n                getQuery('#cloudEffect > span').textContent = format(calculateEffects.clouds(), { padding: true });\n                if (vacuum) {\n                    getQuery('#molesProduction > span').textContent = format(new Overlimit(effectsCache.tritium).divide(6.02214076e23 / speed), { padding: true });\n                }\n\n                const rainNow = calculateEffects.S2Extra1(player.researchesExtra[2][1]);\n                const rainAfter = calculateEffects.S2Extra1(player.researchesExtra[2][1], true);\n                const storm = calculateEffects.S2Extra2(rainAfter) / calculateEffects.S2Extra2(rainNow);\n                getQuery('#vaporizationBoostTotal > span').textContent = format(calculateEffects.clouds(true).divide(calculateEffects.clouds()).toNumber() * (rainAfter / rainNow) * storm, { padding: true });\n            } else if (active === 3) {\n                getQuery('#dustSoftcap > span').textContent = format(global.accretionInfo.dustSoft);\n                if (player.accretion.rank < global.accretionInfo.maxRank && player.strangeness[3][4] >= 2) { getId('reset1Button').textContent = `Next Rank after ${format(Math.max(global.accretionInfo.rankCost[player.accretion.rank] - buildings[0].total.toNumber(), 0), { padding: true })} Mass`; }\n                if (vacuum) {\n                    getQuery('#massProduction > span').textContent = format(assignBuildingsProduction.S1Build1() * 1.78266192e-33 * speed, { padding: true });\n                    getQuery('#submersionBoost > span').textContent = format(calculateEffects.submersion(), { padding: true });\n                    if (player.researchesExtra[3][5] < 1) {\n                        const dustCap = calculateEffects.dustHardcap();\n                        getQuery('#dustCap > span').textContent = format(dustCap, { padding: true });\n                        getId('dustCapRatio').textContent = format(assignBuildingsProduction.S3Build1(true) / dustCap, { padding: true });\n                    }\n                }\n            } else if (active === 4 || active === 5) {\n                const { collapseInfo } = global;\n                const calculateStar = calculateEffects.star;\n                const starEffect = [calculateStar[0](), effectsCache.star1, calculateStar[2]()];\n                const starProd = buildingsInfo.producing[4];\n                let total = (calculateEffects.mass(true) / effectsCache.mass) * (calculateEffects.S4Research4(true) / calculateEffects.S4Research4()) * ((1 + (calculateEffects.S5Upgrade2(true) - effectsCache.S5Upgrade2) / effectsCache.galaxyBase) ** (player.buildings[5][3].true * 2));\n                if (player.strangeness[4][4] < 2) {\n                    const restProd = new Overlimit(starProd[1]).plus(starProd[3], starProd[4], starProd[5]);\n                    total *= new Overlimit(starProd[2]).multiply(calculateStar[0](true) / starEffect[0]).plus(restProd).divide(restProd.plus(starProd[2])).replaceNaN('1').toNumber() * (calculateStar[1](true) / starEffect[1]) * (calculateStar[2](true) / starEffect[2]);\n                }\n\n                if (active === 4) {\n                    getId('reset1Button').textContent = `Collapse is at ${format(collapseInfo.newMass, { padding: true })} Mass`;\n                    getQuery('#solarMassEffect > span').textContent = format(effectsCache.mass, { padding: true });\n                    for (let i = 0; i < 3; i++) {\n                        getId(`special${i + 1}Cur`).textContent = format(player.collapse.stars[i], { padding: 'exponent' });\n                        getId(`special${i + 1}Get`).textContent = format(collapseInfo.starCheck[i], { padding: 'exponent' });\n                        getQuery(`#star${i + 1}Effect > span`).textContent = format(starEffect[i], { padding: true });\n                    }\n                    getQuery('#collapseBoostTotal > span').textContent = format(total, { padding: true });\n                    if (vacuum) {\n                        getQuery('#mainCap > span').textContent = format(collapseInfo.solarCap, { padding: true });\n                        getId('mainCapTill').textContent = format(collapseInfo.timeUntil, { padding: true });\n                    }\n                } else if (active === 5) {\n                    if (vacuum) {\n                        const groupsCost = assignResetInformation.mergeReward();\n                        const mergeEffects = [calculateEffects.reward[0]()];\n                        const remaining = calculateEffects.mergeMaxResets() - player.merge.resets;\n                        getId('reset1Button').textContent = `Can reset ${remaining} more time${remaining !== 1 ? 's' : ''}`;\n                        for (let i = 0; i < 1; i++) {\n                            getId(`special${i + 1}Cur`).textContent = format(player.merge.reward[i], { padding: 'exponent' });\n                            getId(`special${i + 1}Get`).textContent = format(global.mergeInfo.checkReward[i], { padding: 'exponent' });\n                            getQuery(`#merge${i + 1}Effect > span`).textContent = format(mergeEffects[i], { padding: true });\n                        }\n                        getQuery('#merge1Effect > span > span').textContent = format(groupsCost);\n                        getQuery('#mainCapHardS5 > span').textContent = format(collapseInfo.solarCap, { padding: true });\n                        getQuery('#mergeBoostTotal > span').textContent = format((buildings[3].true / (global.mergeInfo.galaxies + 1) + 1) * (calculateEffects.reward[0](true) / mergeEffects[0]), { padding: true });\n                    }\n                    if (player.strangeness[4][4] < 2) { getQuery('#mainCapPostS5 > span').textContent = format(collapseInfo[vacuum ? 'solarCap' : 'newMass'] * (calculateStar[2](true) / starEffect[2]), { padding: true }); }\n                    getQuery('#elementsProductionS5 > span').textContent = format(new Overlimit(starProd[1]).plus(starProd[2], starProd[3], starProd[4], starProd[5]).multiply(speed), { padding: true });\n                    getQuery('#collapseBoostTotalS5 > span').textContent = format(total, { padding: true });\n                    getQuery('#mainCapS5 > span').textContent = format(collapseInfo.newMass, { padding: true });\n                }\n            } else if (active === 6) {\n                getQuery('#globalSpeed > span').textContent = format(global.inflationInfo.globalSpeed, { padding: true });\n                getId('cosmonGainTrue').textContent = format(buildings[1].true + 1, { padding: 'exponent' });\n                getQuery('#universeTime > span').textContent = format(player.inflation.age, { type: 'time' });\n                getQuery('#universeTimeReal > span').textContent = format(player.time.universe, { type: 'time' });\n            }\n\n            if (!vacuum && (active >= 6 ? player.stage.current : active) < 4) {\n                getId('stageReward').textContent = format(calculateEffects.strangeGain(false), { padding: true });\n                if (active < 4) { getId('stageReset').textContent = stageResetCheck(active) ? 'Requirements are met' : `Requires ${active === 3 ? `${format(2.45576045e31)} Mass` : active === 2 ? `${format(1.19444e29)} Drops` : `${format(1.67133125e21)} Molecules`}`; }\n            } else { getId('stageReward').textContent = format(global.strangeInfo.quarksGain, { padding: true }); }\n            getQuery('#stageTime > span').textContent = format(player.stage.time, { type: 'time' });\n            getQuery('#stageTimeReal > span').textContent = format(player.time.stage, { type: 'time' });\n        } else if (subtab.stageCurrent === 'Advanced') {\n            const last = global.lastChallenge;\n            getChallengeDescription(last[0]);\n            if (last[0] === 0) { getChallengeReward(last[1]); }\n        }\n    } else if (tab === 'upgrade' || tab === 'Elements') {\n        const trueSubtab = tab === 'Elements' ? tab : subtab.upgradeCurrent;\n        if (trueSubtab === 'Upgrades') {\n            getUpgradeDescription(global.lastUpgrade[active][0], global.lastUpgrade[active][1]);\n        } else if (trueSubtab === 'Elements') {\n            if (global.lastElement !== 0) { getUpgradeDescription(global.lastElement, 'elements'); }\n        }\n    } else if (tab === 'strangeness') {\n        if (subtab.strangenessCurrent === 'Matter') {\n            const interstellar = vacuum || (active >= 6 ? player.stage.current : active) >= 4;\n            const quarksGain = interstellar ? global.strangeInfo.quarksGain : calculateEffects.strangeGain(false);\n            getId('strange0Gain').textContent = format(quarksGain, { padding: true });\n            getId('strange1Gain').textContent = format(calculateEffects.strangeGain(interstellar, 1), { padding: true });\n            getId('strangeRate').textContent = format(quarksGain / player.time.stage, { type: 'income' });\n            getId('strangePeak').textContent = interstellar ? format(player.stage.peak, { type: 'income' }) : 'Interstellar Stage only';\n            getId('strange0Cur').textContent = format(player.strange[0].current, { padding: true });\n            getId('strange1Cur').textContent = format(player.strange[1].current, { padding: true });\n            getId('stageTimeStrangeness').textContent = format(player.time.stage, { type: 'time' });\n            getId('stageTimeBestReset').textContent = format(player.history.stage.best[0], { type: 'time' });\n            if (getId('strange1EffectsMain').style.display === '') { //Slow, but probably better than nothing\n                const information = global.strangeInfo.strangeletsInfo;\n                getId('strange1Effect1Stat0').textContent = format(information[0] * 100, { padding: true });\n                if (interstellar) { getId('strange1Effect1Stat1').textContent = format(stageResetCheck(5) ? information[0] * quarksGain / player.time.stage : 0, { type: 'income' }); }\n                getId('strange1Effect2Stat').textContent = format(information[1], { padding: true });\n            }\n            if (getId('strange0EffectsMain').style.display === '') {\n                const { stageBoost } = global.strangeInfo;\n                const { strangeness } = player;\n\n                getId('strange0Effect1Stat').textContent = format(strangeness[1][6] >= 1 ? stageBoost[1] : 1, { padding: true });\n                getId('strange0Effect2Stat').textContent = format(strangeness[2][6] >= 1 ? stageBoost[2] : 1, { padding: true });\n                getId('strange0Effect3Stat').textContent = format(strangeness[3][7] >= 1 ? stageBoost[3] : 1, { padding: true });\n                getId('strange0Effect4Stat').textContent = format(strangeness[4][7] >= 1 ? stageBoost[4] : 1, { padding: true });\n                getId('strange0Effect5Stat').textContent = format(strangeness[5][7] >= 1 ? stageBoost[5] : 1, { padding: true });\n            }\n            getStrangenessDescription(global.lastStrangeness[0], global.lastStrangeness[1], 'strangeness');\n        } else if (subtab.strangenessCurrent === 'Milestones') {\n            const { milestonesInfo: info } = global;\n            const time = player.time[player.challenges.active === 0 && player.challenges.super ? 'vacuum' : 'stage'];\n            const timeLimited = vacuum || player.inflation.tree[4] < 1;\n            for (let s = 1; s < info.length; s++) {\n                for (let i = 0; i < info[s].need.length; i++) {\n                    getId(`milestone${i + 1}Stage${s}Current`).textContent = format(milestoneGetValue(i, s), { padding: true });\n                    getId(`milestone${i + 1}Stage${s}Required`).textContent = !vacuum && player.milestones[s][i] >= info[s].max[i] ? 'Maxed' :\n                        timeLimited && time > info[s].time[i] ? 'No time' : format(info[s].need[i], { padding: true });\n                }\n            }\n            getStrangenessDescription(global.lastMilestone[0], global.lastMilestone[1], 'milestones');\n        }\n    } else if (tab === 'inflation') {\n        if (subtab.inflationCurrent === 'Researches') {\n            getUpgradeDescription(global.lastInflation, 'inflation');\n        }\n    } else if (tab === 'settings') {\n        if (subtab.settingsCurrent === 'Settings') {\n            const exportReward = player.time.export;\n            const conversion = Math.min(exportReward[0] / 86400, 1);\n            getId('exportQuarks').textContent = format((exportReward[1] / 2.5 + 1) * conversion, { padding: true });\n            getId('exportStrangelets').textContent = format(exportReward[2] / 2.5 * conversion, { padding: true });\n            if (global.lastSave >= 1) { getId('isSaved').textContent = `${format(global.lastSave, { type: 'time' })} ago`; }\n        } else if (subtab.settingsCurrent === 'Stats') {\n            getId('firstPlayAgo').textContent = format((Date.now() - player.time.started) / 1000, { type: 'time' });\n            getId('onlineTotal').textContent = format(player.time.online, { type: 'time' });\n            getQuery('#stageResets > span').textContent = `${player.stage.resets}`;\n\n            const exportReward = player.time.export;\n            getId('exportQuarksMax').textContent = format(exportReward[1] / 2.5 + 1, { padding: true });\n            getId('exportStrangeletsMax').textContent = format(exportReward[2] / 2.5, { padding: true });\n            getId('exportTimeToMax').textContent = format(86400 - exportReward[0], { type: 'time' });\n            getId('exportQuarksStorage').textContent = format(exportReward[1], { padding: true });\n            getId('exportStrangeletsStorage').textContent = format(exportReward[2], { padding: true });\n            if (active === 1) {\n                getQuery('#dischargeStat > span').textContent = format(global.dischargeInfo.total);\n                getId('dischargeStatTrue').textContent = ` [${player.discharge.current}]`;\n                getQuery('#dischargeScaleStat > span').textContent = format(calculateEffects.dischargeScaling());\n                for (let s = 1; s <= (vacuum ? 5 : 1); s++) {\n                    const buildings = player.buildings[s];\n                    const energyType = global.dischargeInfo.energyType[s];\n                    for (let i = 1; i < global.buildingsInfo.maxActive[s]; i++) {\n                        getQuery(`#energyGainStage${s}Build${i + (vacuum ? 0 : 2)} > span`).textContent = format(energyType[i] * buildings[i as 1].true, { padding: 'exponent' });\n                        getId(`energyGainStage${s}Build${i + (vacuum ? 0 : 2)}Per`).textContent = format(energyType[i]);\n                    }\n                }\n                getQuery('#effectiveEnergyStat > span').textContent = format(calculateEffects.effectiveEnergy(), { padding: true });\n                getQuery('#maxEnergyStat > span').textContent = format(player.discharge.energyMax, { padding: 'exponent' });\n            } else if (active === 2) {\n                const clouds = calculateEffects.clouds(true).divide(calculateEffects.clouds()).toNumber();\n                getQuery('#cloudStat > span').textContent = format(clouds, { padding: true });\n                const rainNow = calculateEffects.S2Extra1(player.researchesExtra[2][1]);\n                const rainAfter = calculateEffects.S2Extra1(player.researchesExtra[2][1], true);\n                const rain = rainAfter / rainNow;\n                const storm = calculateEffects.S2Extra2(rainAfter) / calculateEffects.S2Extra2(rainNow);\n                getQuery('#rainStat > span').textContent = format(rain, { padding: true });\n                getQuery('#stormStat > span').textContent = format(storm, { padding: true });\n                getId('cloudEffectTotal').textContent = format(clouds * rain * storm, { padding: true });\n                getQuery('#maxCloudStat > span').textContent = format(player.vaporization.cloudsMax, { padding: true });\n\n                if (vacuum) {\n                    buildings[0].total.setValue(player.buildings[1][5].total).divide('6.02214076e23');\n                    buildings[0].trueTotal.setValue(player.buildings[1][5].trueTotal).divide('6.02214076e23');\n                }\n            } else if (active === 3) {\n                getId('currentRank').textContent = format(global.accretionInfo.effective);\n                getId('currentRankTrue').textContent = ` [${player.accretion.rank}]`;\n                if (vacuum) {\n                    buildings[0].trueTotal.setValue(player.buildings[1][0].trueTotal).multiply('1.78266192e-33');\n                }\n            } else if (active === 4 || active === 5) {\n                getQuery('#maxSolarMassStat > span').textContent = format(player.collapse.massMax, { padding: true });\n                if (active === 4) {\n                    const auto2 = player.strangeness[4][4] >= 2;\n                    const calculateStar = calculateEffects.star;\n                    const mass = calculateEffects.mass(true) / effectsCache.mass;\n                    getQuery('#solarMassStat > span').textContent = format(mass, { padding: true });\n                    let star0 = 1;\n                    if (!auto2) {\n                        const starProd = global.buildingsInfo.producing[4];\n                        const restProd = new Overlimit(starProd[1]).plus(starProd[3], starProd[4], starProd[5]);\n                        star0 = new Overlimit(starProd[2]).multiply(calculateStar[0](true) / calculateStar[0]()).plus(restProd).divide(restProd.plus(starProd[2])).replaceNaN('1').toNumber();\n                    }\n                    const star1 = auto2 ? 1 : calculateStar[1](true) / effectsCache.star1;\n                    const star2 = auto2 ? 1 : calculateStar[2](true) / calculateStar[2]();\n                    if (!auto2) {\n                        getQuery('#star1Stat > span').textContent = format(star0, { padding: true });\n                        getQuery('#star2Stat > span').textContent = format(star1, { padding: true });\n                        getQuery('#star3Stat > span').textContent = format(star2, { padding: true });\n                    }\n                    const gamma = calculateEffects.S4Research4(true) / calculateEffects.S4Research4();\n                    getQuery('#gammaRayStat > span').textContent = format(gamma, { padding: true });\n                    const quasar = (1 + (calculateEffects.S5Upgrade2(true) - effectsCache.S5Upgrade2) / effectsCache.galaxyBase) ** player.buildings[5][3].true;\n                    getQuery('#quasarStat > span').textContent = format(quasar, { padding: true });\n                    getId('starTotal').textContent = format(mass * star0 * star1 * star2 * gamma * (quasar ** 2), { padding: true });\n                } else if (active === 5) {\n                    getQuery('#galaxyBase > span').textContent = format(effectsCache.galaxyBase, { padding: true });\n                    getId('trueStarsStat').textContent = format(global.collapseInfo.trueStars, { padding: 'exponent' });\n                    const stars = player.buildings[4];\n                    buildings[0].current.setValue(stars[1].current).plus(stars[2].current, stars[3].current, stars[4].current, stars[5].current);\n                    buildings[0].total.setValue(stars[1].total).plus(stars[2].total, stars[3].total, stars[4].total, stars[5].total);\n                    buildings[0].trueTotal.setValue(stars[1].trueTotal).plus(stars[2].trueTotal, stars[3].trueTotal, stars[4].trueTotal, stars[5].trueTotal);\n                    if (vacuum) {\n                        getQuery('#mergeResets > span').textContent = `${player.merge.resets}`;\n                        getQuery('#mergeResets > span:last-of-type').textContent = `${calculateEffects.mergeMaxResets()}`;\n                        assignResetInformation.mergeReward();\n                        const base = buildings[3].true / (global.mergeInfo.galaxies + 1) + 1;\n                        getQuery('#mergeBaseStat > span').textContent = format(base, { padding: true });\n                        const reward1 = calculateEffects.reward[0](true) / calculateEffects.reward[0]();\n                        getQuery('#merge1Stat > span').textContent = format(reward1, { padding: true });\n                        getId('mergeTotal').textContent = format(base * reward1, { padding: true });\n                    }\n                }\n            }\n            for (let i = 0; i < global.buildingsInfo.maxActive[active]; i++) {\n                getId(`building${i}StatTotal`).textContent = format(buildings[i].total, { padding: true });\n                getId(`building${i}StatTrueTotal`).textContent = format(buildings[i].trueTotal, { padding: true });\n            }\n\n            getId('strange0StatTotal').textContent = format(player.strange[0].total, { padding: true });\n            getId('strange1StatTotal').textContent = format(player.strange[1].total, { padding: true });\n            getId('cosmonStatTotal').textContent = format(player.cosmon.total, { padding: 'exponent' });\n        }\n    }\n};\n\nexport const visualUpdate = () => {\n    const { tab, subtab } = global;\n    const { active, true: highest } = player.stage;\n    const vacuum = player.inflation.vacuum;\n\n    if (!player.event) {\n        if (highest === 6) {\n            if (player.merge.resets >= 1) { playEvent(8, false); }\n        } else if (highest === 5) {\n            if (active === 5) { playEvent(5, false); }\n        } else if (highest === 4) {\n            if (player.collapse.stars[1] >= 1) { playEvent(4, false); }\n        } else if (highest === 3) {\n            if (player.buildings[3][0].current.moreOrEqual('5e29')) { playEvent(3, false); }\n        } else if (highest === 2) {\n            if (new Overlimit(assignResetInformation.newClouds()).plus(player.vaporization.clouds).moreThan('1e4')) { playEvent(2, false); }\n        } else if (highest === 1) {\n            if (player.upgrades[1][9] === 1) { playEvent(1, false); }\n        }\n    }\n\n    if (global.footer) {\n        if (globalSave.toggles[1]) { getId('ElementsTabBtn').style.display = player.upgrades[4][1] === 1 ? '' : 'none'; }\n        if (active === 1) {\n            if (highest < 2) {\n                getId('footerStat2').style.display = player.discharge.energyMax >= 12 ? '' : 'none';\n                getId('upgradeTabBtn').style.display = player.discharge.energyMax >= 12 ? '' : 'none';\n            }\n        } else if (active === 2) {\n            getId('footerStat3').style.display = player.upgrades[2][2] === 1 ? '' : 'none';\n        }\n    }\n    if (globalSave.MDSettings[0]) {\n        let showReset1 = tab === 'stage' || tab === 'upgrade' || tab === 'Elements' || tab === 'inflation';\n        getId('structuresFooter').style.display = showReset1 ? '' : 'none';\n        if (active === 4) {\n            getId('resetGalaxyFooter').style.display = showReset1 && player.researchesExtra[5][0] >= 1 ? '' : 'none';\n        } else if (active === 5) {\n            getId('resetCollapseFooter').style.display = showReset1 ? '' : 'none';\n        }\n        if (showReset1) {\n            if (active === 1) {\n                showReset1 = player.upgrades[1][5] === 1;\n            } else if (active === 2) {\n                showReset1 = player.upgrades[2][2] === 1;\n            } else if (active === 4) {\n                showReset1 = player.upgrades[4][0] === 1;\n            } else if (active === 5) {\n                showReset1 = player.upgrades[5][3] === 1;\n            } else if (active === 6) {\n                showReset1 = false;\n            }\n        }\n        getId('reset1Footer').style.display = showReset1 ? '' : 'none';\n        getId('stageFooter').style.display = (tab === 'stage' && (highest >= 2 || player.upgrades[1][9] === 1)) || tab === 'strangeness' ? '' : 'none';\n    }\n\n    if (tab === 'stage') {\n        if (subtab.stageCurrent === 'Structures') {\n            const buildings = player.buildings[active];\n            const ASR = player.ASR[active];\n\n            getId('stageTimeReal').style.display = player.stage.time !== player.time.stage ? '' : 'none';\n            getId('exportMaxed').style.display = player.time.export[0] >= 86400 && (highest >= 7 || player.strange[0].total > 0) ? '' : 'none';\n            if (highest < 7) {\n                if (highest < 2) { getId('toggleBuilding0').style.display = ASR >= 1 ? '' : 'none'; }\n                getId('resetStage').style.display = player.stage.resets >= 1 || (vacuum ? player.elements[26] >= 1 : player.upgrades[1][9] === 1) ? '' : 'none';\n            }\n            for (let i = 1; i < global.buildingsInfo.maxActive[active]; i++) {\n                getId(`building${i}True`).style.display = buildings[i].current.notEqual(buildings[i as 1].true) ? '' : 'none';\n                getId(`toggleBuilding${i}`).style.display = ASR >= i ? '' : 'none';\n            }\n            if (active === 1) {\n                getId('reset1Main').style.display = player.upgrades[1][5] === 1 ? '' : 'none';\n                getId('building2').style.display = buildings[1].trueTotal.moreOrEqual(vacuum ? '5' : '18') ? '' : 'none';\n                getId('building3').style.display = buildings[2].trueTotal.moreOrEqual('2') ? '' : 'none';\n                if (vacuum) {\n                    getId('building4').style.display = buildings[3].trueTotal.moreOrEqual('18') || player.upgrades[1][2] === 1 ? '' : 'none';\n                    getId('building5').style.display = buildings[4].trueTotal.moreOrEqual('2') ? '' : 'none';\n                }\n                getId('stageInfo').style.display = player.upgrades[1][5] === 1 ? '' : 'none';\n                getId('tritiumEffect').style.display = player.upgrades[1][8] === 1 ? '' : 'none';\n                getId('energySpent').style.display = !(player.accretion.rank >= 6 && player.strangeness[1][9] >= 1) || player.discharge.energy !== global.dischargeInfo.energyTrue ? '' : 'none';\n                if (highest < 7) { getId('resets').style.display = player.stage.resets >= 1 || player.upgrades[1][5] === 1 ? '' : 'none'; }\n            } else if (active === 2) {\n                getId('reset1Main').style.display = player.upgrades[2][2] === 1 ? '' : 'none';\n                getId('building2').style.display = buildings[1].trueTotal.moreOrEqual('4e2') || buildings[1].true >= 100 ? '' : 'none';\n                getId('building3').style.display = buildings[1].trueTotal.moreOrEqual('8e6') ? '' : 'none';\n                getId('building4').style.display = buildings[1].trueTotal.moreOrEqual('8e17') ? '' : 'none';\n                getId('building5').style.display = buildings[1].trueTotal.moreOrEqual('8e22') ? '' : 'none';\n                getId('cloudEffect').style.display = player.upgrades[2][2] === 1 ? '' : 'none';\n                getId('vaporizationBoostTotal').style.display = player.upgrades[2][2] === 1 ? '' : 'none';\n                if (vacuum) {\n                    getId('building6').style.display = buildings[1].trueTotal.moreOrEqual('2e25') ? '' : 'none';\n                    if (highest < 7) { getId('resets').style.display = player.stage.resets >= 1 || player.upgrades[2][2] === 1 ? '' : 'none'; }\n                } else { getId('stageInfo').style.display = player.upgrades[2][2] === 1 ? '' : 'none'; }\n            } else if (active === 3) {\n                const upgrades = player.upgrades[3];\n\n                getId('buildings').style.display = player.accretion.rank >= 1 ? '' : 'none';\n                getId('building2').style.display = upgrades[2] === 1 || buildings[2].trueTotal.moreThan('0') ? '' : 'none';\n                getId('building3').style.display = upgrades[4] === 1 || buildings[3].trueTotal.moreThan('0') ? '' : 'none';\n                getId('building4').style.display = upgrades[8] === 1 || buildings[4].trueTotal.moreThan('0') ? '' : 'none';\n                getId('dustSoftcap').style.display = global.accretionInfo.dustSoft !== 1 ? '' : 'none';\n                if (vacuum) {\n                    getId('building5').style.display = upgrades[11] === 1 || buildings[5].trueTotal.moreThan('0') ? '' : 'none';\n                    getId('dustCap').style.display = player.researchesExtra[3][5] < 1 ? '' : 'none';\n                    getId('submersionBoost').style.display = player.researchesExtra[1][2] >= 2 ? '' : 'none';\n                } else { getId('stageInfo').style.display = global.accretionInfo.dustSoft !== 1 ? '' : 'none'; }\n                updateRankInfo();\n            } else if (active === 4) {\n                const nova = player.researchesExtra[4][0];\n\n                getId('reset1Main').style.display = player.upgrades[4][0] === 1 ? '' : 'none';\n                getId('specials').style.display = buildings[2].trueTotal.moreThan('0') ? '' : 'none';\n                getId('special2').style.display = buildings[3].trueTotal.moreThan('0') ? '' : 'none';\n                getId('special3').style.display = buildings[4].trueTotal.moreThan('0') ? '' : 'none';\n                getId('building2').style.display = nova >= 1 ? '' : 'none';\n                getId('building3').style.display = nova >= 2 ? '' : 'none';\n                getId('building4').style.display = nova >= 3 ? '' : 'none';\n                getId('star1Effect').style.display = buildings[2].trueTotal.moreThan('0') ? '' : 'none';\n                getId('star2Effect').style.display = buildings[3].trueTotal.moreThan('0') ? '' : 'none';\n                getId('star3Effect').style.display = buildings[4].trueTotal.moreThan('0') ? '' : 'none';\n                getId('collapseBoostTotal').style.display = player.upgrades[4][0] === 1 ? '' : 'none';\n                if (vacuum) {\n                    getId('building5').style.display = player.elements[26] >= 1 ? '' : 'none';\n                    getId('mainCap').style.display = player.upgrades[4][0] === 1 ? '' : 'none';\n                    if (highest < 7) { getId('resets').style.display = player.stage.resets >= 1 || player.upgrades[4][0] === 1 ? '' : 'none'; }\n                }\n            } else if (active === 5) {\n                getId('reset1Main').style.display = player.upgrades[5][3] === 1 ? '' : 'none';\n                if (vacuum) {\n                    getId('specials').style.display = player.upgrades[5][3] === 1 ? '' : 'none';\n                    getId('mergeEffects').style.display = player.upgrades[5][3] === 1 ? '' : 'none';\n                    getId('mergeBoostTotal').style.display = player.upgrades[5][3] === 1 ? '' : 'none';\n                } else {\n                    getId('buildings').style.display = player.milestones[2][0] >= 7 || player.milestones[3][0] >= 7 ? '' : 'none';\n                    getId('building1').style.display = player.milestones[2][0] >= 7 ? '' : 'none';\n                    getId('building2').style.display = player.milestones[3][0] >= 7 ? '' : 'none';\n                    if (highest < 7) { getId('mergeResetText').innerHTML = 'Attempt to <span class=\"darkvioletText\">Merge</span> <span class=\"grayText\">Galaxies</span> together to create even bigger Structures. Might have severe consequences.'; }\n                }\n                getId('building3').style.display = player.researchesExtra[5][0] >= 1 ? '' : 'none';\n                getId('mainCapPostS5').style.display = player.strangeness[4][4] < 2 && player.researchesExtra[5][0] >= 1 ? '' : 'none';\n            } else if (active === 6) {\n                getId('universeTimeReal').style.display = player.inflation.age !== player.time.universe ? '' : 'none';\n            }\n        } else if (subtab.stageCurrent === 'Advanced') {\n            if (global.lastChallenge[0] === 0) {\n                const progress = player.challenges.voidCheck;\n                getId('voidRewards').style.display = '';\n                getId('voidReward2').style.display = progress[1] >= 3 ? '' : 'none';\n                getId('voidReward3').style.display = progress[1] >= 2 ? '' : 'none';\n                getId('voidReward4').style.display = progress[3] >= 5 ? '' : 'none';\n                getId('voidReward5').style.display = progress[4] >= 5 ? '' : 'none';\n                (getId('rewardsType') as HTMLButtonElement).disabled = player.buildings[6][1].current.lessThan('2');\n            } else { getId('voidRewards').style.display = 'none'; }\n            (getId('challengeName') as HTMLButtonElement).disabled = global.lastChallenge[0] !== 0 || (player.buildings[6][1].current.lessThan('2') && !player.challenges.super);\n            if (highest < 7) {\n                getId('challenge1').style.display = player.stage.resets >= 1 ? '' : 'none';\n                getId('challengesToggles').style.display = player.stage.resets >= 1 ? '' : 'none';\n            }\n        }\n    } else if (tab === 'upgrade' || tab === 'Elements') {\n        const trueSubtab = tab === 'Elements' ? tab : subtab.upgradeCurrent;\n        if (trueSubtab === 'Upgrades') {\n            if (vacuum) {\n                getId('researchAuto1').style.display = player.researchesExtra[1][2] >= 2 ? '' : 'none';\n                getId('researchAuto2').style.display = player.accretion.rank >= 6 ? '' : 'none';\n            }\n            if (active === 1) {\n                const superposition = player.upgrades[1][5] === 1;\n\n                getId('upgrade7').style.display = superposition ? '' : 'none';\n                getId('upgrade8').style.display = superposition ? '' : 'none';\n                getId('upgrade9').style.display = superposition ? '' : 'none';\n                getId('upgrade10').style.display = superposition ? '' : 'none';\n                getId('stageResearches').style.display = superposition ? '' : 'none';\n                if (vacuum) {\n                    getId('upgrade11').style.display = superposition && player.strangeness[5][10] >= 1 ? '' : 'none';\n                    getId('extraResearches').style.display = superposition ? '' : 'none';\n                    getId('researchExtra2').style.display = player.researchesExtra[1][2] >= 2 ? '' : 'none';\n                    getId('researchExtra4').style.display = player.researchesExtra[1][2] >= 1 ? '' : 'none';\n                    getId('researchExtra5').style.display = player.accretion.rank >= 6 ? '' : 'none';\n                    getId('researchExtra6').style.display = player.accretion.rank >= 6 && player.strangeness[5][10] >= 1 ? '' : 'none';\n                }\n                if (highest < 7) { getId('researches').style.display = superposition ? '' : 'none'; }\n            } else if (active === 2) {\n                const buildings = player.buildings[2];\n\n                getId('upgrade2').style.display = buildings[2].trueTotal.moreThan('0') ? '' : 'none';\n                getId('upgrade3').style.display = buildings[3].trueTotal.moreThan('0') ? '' : 'none';\n                getId('upgrade4').style.display = buildings[2].trueTotal.moreThan('0') ? '' : 'none';\n                getId('upgrade5').style.display = buildings[2].trueTotal.moreThan('0') ? '' : 'none';\n                getId('upgrade6').style.display = buildings[3].trueTotal.moreThan('0') ? '' : 'none';\n                getId('upgrade7').style.display = buildings[4].trueTotal.moreThan('0') ? '' : 'none';\n                getId('upgrade8').style.display = buildings[5].trueTotal.moreThan('0') && player.strangeness[2][2] >= 3 ? '' : 'none';\n                if (vacuum) {\n                    getId('upgrade9').style.display = buildings[6].trueTotal.moreThan('0') && player.strangeness[2][8] >= 3 ? '' : 'none';\n                    getId('researchExtra4').style.display = player.accretion.rank >= 6 ? '' : 'none';\n                    getId('researchExtra5').style.display = player.accretion.rank >= 7 && player.strangeness[5][10] >= 2 ? '' : 'none';\n                }\n                getId('research2').style.display = buildings[2].trueTotal.moreThan('0') ? '' : 'none';\n                getId('research3').style.display = buildings[2].trueTotal.moreThan('0') ? '' : 'none';\n                getId('research4').style.display = buildings[2].trueTotal.moreThan('0') ? '' : 'none';\n                getId('research5').style.display = buildings[3].trueTotal.moreThan('0') ? '' : 'none';\n                getId('research6').style.display = buildings[4].trueTotal.moreThan('0') ? '' : 'none';\n                getId('extraResearches').style.display = player.upgrades[2][2] === 1 ? '' : 'none';\n                getId('researchExtra3').style.display = buildings[5].trueTotal.moreThan('0') ? '' : 'none';\n            } else if (active === 3) {\n                const rank = player.accretion.rank;\n                const planetesimal = player.buildings[3][2].trueTotal.moreThan('0');\n\n                getId('upgrade3').style.display = rank >= 2 ? '' : 'none';\n                getId('upgrade4').style.display = planetesimal ? '' : 'none';\n                getId('upgrade5').style.display = rank >= 3 ? '' : 'none';\n                getId('upgrade6').style.display = rank >= 4 || player.upgrades[3][4] === 1 ? '' : 'none';\n                getId('upgrade7').style.display = rank >= 4 ? '' : 'none';\n                getId('upgrade8').style.display = rank >= 4 && player.strangeness[3][2] >= 3 ? '' : 'none';\n                getId('upgrade9').style.display = rank >= 4 ? '' : 'none';\n                getId('upgrade10').style.display = rank >= 4 ? '' : 'none';\n                getId('upgrade11').style.display = rank >= 5 ? '' : 'none';\n                getId('upgrade12').style.display = rank >= 5 ? '' : 'none';\n                getId('upgrade13').style.display = rank >= 5 ? '' : 'none';\n                getId('research3').style.display = planetesimal ? '' : 'none';\n                getId('research4').style.display = planetesimal ? '' : 'none';\n                getId('research5').style.display = rank >= 3 ? '' : 'none';\n                getId('research6').style.display = rank >= 3 ? '' : 'none';\n                getId('research7').style.display = rank >= 4 || player.upgrades[3][4] === 1 ? '' : 'none';\n                getId('research8').style.display = rank >= 4 ? '' : 'none';\n                getId('research9').style.display = rank >= 5 ? '' : 'none';\n                getId('extraResearches').style.display = rank >= 2 ? '' : 'none';\n                getId('researchExtra2').style.display = rank >= 3 ? '' : 'none';\n                getId('researchExtra3').style.display = rank >= 4 ? '' : 'none';\n                getId('researchExtra4').style.display = rank >= 5 ? '' : 'none';\n                if (vacuum) {\n                    getId('upgrade14').style.display = rank >= 7 && player.strangeness[5][10] >= 3 ? '' : 'none';\n                    getId('researchExtra5').style.display = rank >= 3 && player.researchesExtra[1][2] >= 2 ? '' : 'none';\n                    getId('researchExtra6').style.display = rank >= 6 && player.strangeness[5][10] >= 3 ? '' : 'none';\n                } else {\n                    getId('upgrades').style.display = rank >= 1 ? '' : 'none';\n                    getId('stageResearches').style.display = rank >= 1 ? '' : 'none';\n                }\n            } else if (active === 4) {\n                const { strangeness } = player;\n                const stars = player.collapse.stars;\n                const galaxy = player.researchesExtra[5][0] >= 1;\n\n                getId('upgrade4').style.display = strangeness[4][2] >= 3 ? '' : 'none';\n                getId('upgrade5').style.display = strangeness[4][9] >= 1 ? '' : 'none';\n                getId('research4').style.display = (galaxy || stars[0] > 0) && strangeness[4][2] >= 1 ? '' : 'none';\n                getId('research5').style.display = galaxy || stars[2] > 0 ? '' : 'none';\n                getId('research6').style.display = (galaxy || stars[2] > 0) && strangeness[4][9] >= 3 ? '' : 'none';\n                getId('researchExtra2').style.display = galaxy || stars[0] > 0 ? '' : 'none';\n                getId('researchExtra3').style.display = (galaxy || stars[0] > 0) && strangeness[4][2] >= 2 ? '' : 'none';\n                getId('researchExtra4').style.display = (galaxy || stars[1] > 0) && strangeness[4][9] >= 2 ? '' : 'none';\n            } else if (active === 5) {\n                const galaxy = player.researchesExtra[5][0] >= 1;\n                if (vacuum) {\n                    const protogalaxy = player.accretion.rank >= 7;\n                    getId('upgrade4').style.display = galaxy && protogalaxy ? '' : 'none';\n                    getId('upgrade5').style.display = protogalaxy ? '' : 'none';\n                    getId('research3').style.display = protogalaxy ? '' : 'none';\n                    getId('research4').style.display = protogalaxy ? '' : 'none';\n                    getId('researchExtra2').style.display = protogalaxy ? '' : 'none';\n                    getId('researchExtra3').style.display = protogalaxy ? '' : 'none';\n                } else {\n                    const nebula = player.milestones[2][0] >= 7;\n                    const cluster = player.milestones[3][0] >= 7;\n\n                    getId('upgrades').style.display = nebula || cluster ? '' : 'none';\n                    getId('upgrade1').style.display = nebula ? '' : 'none';\n                    getId('upgrade2').style.display = cluster ? '' : 'none';\n                    getId('upgrade4').style.display = galaxy && player.milestones[5][1] >= 8 ? '' : 'none';\n                    getId('stageResearches').style.display = nebula || cluster ? '' : 'none';\n                    getId('research1').style.display = nebula ? '' : 'none';\n                    getId('research2').style.display = cluster ? '' : 'none';\n                    getId('extraResearches').style.display = player.milestones[4][1] >= 8 ? '' : 'none';\n                }\n                getId('upgrade3').style.display = galaxy ? '' : 'none';\n            } else if (active === 6) {\n                getId('upgrades').style.display = 'none';\n                getId('stageResearches').style.display = 'none';\n            }\n        } else if (trueSubtab === 'Elements') {\n            const upgrades = player.upgrades[4];\n            const neutron = player.upgrades[4][2] === 1 && (player.collapse.stars[1] > 0 || player.researchesExtra[5][0] >= 1);\n\n            let columns = 18 - (upgrades[3] === 1 ? 0 : 2) - (upgrades[4] === 1 ? (player.buildings[6][1].true > 1 ? 0 : 1) : 2);\n            getId('elementsGrid').style.display = upgrades[2] === 1 ? '' : 'flex';\n            for (let i = 6; i <= 10; i++) { getId(`element${i}`).style.display = upgrades[2] === 1 ? '' : 'none'; }\n            for (let i = 11; i <= 26; i++) { getId(`element${i}`).style.display = neutron ? '' : 'none'; }\n            if (!neutron) {\n                columns = 8;\n            } else if (player.collapse.show < 23) { //26 - showAhead\n                for (let i = 26; i > Math.max(player.collapse.show + 3, 10); i--) { getId(`element${i}`).style.display = 'none'; }\n                columns = Math.max(player.collapse.show - 9, 8); //min + show + showAhead - 20\n            }\n            getId('element27').style.display = upgrades[3] === 1 ? '' : 'none';\n            getId('element28').style.display = upgrades[3] === 1 ? '' : 'none';\n            for (let i = 29; i < global.elementsInfo.name.length; i++) {\n                getId(`element${i}`).style.display = upgrades[4] === 1 && player.buildings[6][1].true >= i - 29 ? '' : 'none';\n            }\n            document.documentElement.style.setProperty('--elements-columns', `${columns}`);\n        }\n    } else if (tab === 'strangeness') {\n        if (subtab.strangenessCurrent === 'Matter') {\n            const universes = player.buildings[6][1].current;\n            const show1 = global.sessionToggles[1] || universes.lessThan('2');\n            const show2 = global.sessionToggles[1] || universes.lessThan('3');\n            const show3 = global.sessionToggles[1] || universes.lessThan('4');\n            getId('strange1').style.display = player.strangeness[5][8] >= 1 ? '' : 'none';\n            getId('strange1Unlocked').style.display = player.strangeness[5][8] >= 1 ? '' : 'none';\n            if (vacuum) {\n                const bound = player.strangeness[5][3] >= 1;\n                const voidProgress = player.challenges.void;\n\n                getId('strange5Stage1').style.display = show3 || voidProgress[4] >= 1 ? '' : 'none';\n                getId('strange8Stage1').style.display = voidProgress[1] >= 1 ? '' : 'none';\n                getId('strange9Stage1').style.display = (universes.moreOrEqual('1') ? global.sessionToggles[1] : voidProgress[1] >= 2) ? '' : 'none';\n                getId('strange10Stage1').style.display = voidProgress[4] >= 2 ? '' : 'none';\n                getId('strange5Stage2').style.display = show3 || voidProgress[4] >= 1 ? '' : 'none';\n                getId('strange8Stage2').style.display = voidProgress[1] >= 3 ? '' : 'none';\n                getId('strange9Stage2').style.display = voidProgress[2] >= 1 ? '' : 'none';\n                getId('strange10Stage2').style.display = voidProgress[2] >= 2 ? '' : 'none';\n                getId('strange5Stage3').style.display = show3 || voidProgress[4] >= 1 ? '' : 'none';\n                getId('strange9Stage3').style.display = voidProgress[4] >= 4 ? '' : 'none';\n                getId('strange10Stage3').style.display = voidProgress[5] >= 1 ? '' : 'none';\n                getId('strange5Stage4').style.display = show3 || voidProgress[4] >= 1 ? '' : 'none';\n                getId('strange9Stage4').style.display = voidProgress[4] >= 3 ? '' : 'none';\n                getId('strange10Stage4').style.display = voidProgress[4] >= 5 ? '' : 'none';\n                getId('strange1Stage5').style.display = bound ? '' : 'none';\n                getId('strange2Stage5').style.display = bound ? '' : 'none';\n                getId('strange5Stage5').style.display = (universes.moreOrEqual('2') ? show1 : voidProgress[4] >= 1) && bound ? '' : 'none';\n                getId('strange6Stage5').style.display = show1 && bound ? '' : 'none';\n                getId('strange8Stage5').style.display = bound ? '' : 'none';\n                getId('strange9Stage5').style.display = voidProgress[3] >= 5 ? '' : 'none';\n                getId('strange10Stage5').style.display = voidProgress[3] >= 6 ? '' : 'none';\n                getId('strange11Stage5').style.display = voidProgress[2] >= 3 ? '' : 'none';\n            } else {\n                const { milestones } = player;\n                const strange5 = milestones[4][0] >= 8;\n                const firstTwo = milestones[2][0] >= 7 || milestones[3][0] >= 7;\n\n                getId('strange5Stage1').style.display = show3 ? '' : 'none';\n                getId('strange7Stage1').style.display = strange5 ? '' : 'none';\n                getId('strange5Stage2').style.display = show3 ? '' : 'none';\n                getId('strange7Stage2').style.display = strange5 ? '' : 'none';\n                getId('strange5Stage3').style.display = show3 ? '' : 'none';\n                getId('strange8Stage3').style.display = strange5 ? '' : 'none';\n                getId('strange5Stage4').style.display = show3 ? '' : 'none';\n                getId('strange8Stage4').style.display = strange5 ? '' : 'none';\n                getId(`strangeness${globalSave.MDSettings[0] ? 'Page' : 'Section'}5`).style.display = strange5 ? '' : 'none';\n                getId('strange1Stage5').style.display = firstTwo ? '' : 'none';\n                getId('strange2Stage5').style.display = firstTwo ? '' : 'none';\n                getId('strange3Stage5').style.display = milestones[5][0] >= 8 ? '' : 'none';\n                getId('strange4Stage5').style.display = firstTwo ? '' : 'none';\n                getId('strange5Stage5').style.display = show1 && milestones[4][1] >= 8 ? '' : 'none';\n                getId('strange6Stage5').style.display = show1 && firstTwo ? '' : 'none';\n            }\n            getId('strange6Stage1').style.display = show1 ? '' : 'none';\n            getId('strange6Stage2').style.display = show1 ? '' : 'none';\n            getId('strange6Stage3').style.display = show1 ? '' : 'none';\n            getId('strange7Stage3').style.display = show2 ? '' : 'none';\n            getId('strange6Stage4').style.display = show1 ? '' : 'none';\n            getId('strange7Stage4').style.display = show2 ? '' : 'none';\n            getId('strange7Stage5').style.display = global.sessionToggles[1] || universes.lessThan('5') ? '' : 'none';\n        } else if (subtab.strangenessCurrent === 'Milestones') {\n            if (!vacuum) {\n                const milestonesS4 = player.milestones[4];\n                getId('milestone1Stage5Div').style.display = milestonesS4[0] >= 8 ? '' : 'none';\n                getId('milestone2Stage5Div').style.display = milestonesS4[1] >= 8 ? '' : 'none';\n                if (global.stageInfo.activeAll.includes(4)) { getId('milestonesStage5Main').style.display = milestonesS4[0] >= 8 ? '' : 'none'; }\n                if (global.stageInfo.activeAll.includes(5)) { getId('milestone2Stage5Main').style.display = milestonesS4[1] >= 8 ? '' : 'none'; }\n            }\n        }\n    } else if (tab === 'inflation') {\n        if (subtab.inflationCurrent === 'Researches') {\n            const supervoid = player.challenges.supervoid;\n            getId('inflation4').style.display = player.cosmon.total >= global.inflationTreeInfo.startCost[3] ? '' : 'none';\n            getId('inflation5').style.display = player.cosmon.total >= global.inflationTreeInfo.startCost[4] ? '' : 'none';\n            getId('inflationsDiv2').style.display = supervoid[1] >= 1 ? '' : 'none';\n            getId('inflation6').style.display = supervoid[1] >= 1 ? '' : 'none';\n        } else if (subtab.inflationCurrent === 'Milestones') {\n            const universes = player.buildings[6][1].current;\n            const supervoid = player.challenges.supervoid;\n            getId('inflationSupervoid').style.display = supervoid[1] >= 2 ? '' : 'none';\n            getId('inflationSupervoid2').style.display = supervoid[3] >= 1 ? '' : 'none';\n            for (let i = 1; i <= 5; i++) {\n                getId(`inflationMilestone${i}`).classList[universes.moreOrEqual(i) ? 'add' : 'remove']('completed');\n            }\n        }\n    } else if (tab === 'settings') {\n        if (subtab.settingsCurrent === 'Settings') {\n            const { researchesAuto, strangeness } = player;\n\n            getQuery('#exportReward > span:last-of-type').style.display = player.challenges.active !== null && global.challengesInfo[player.challenges.active].resetType !== 'stage' ? '' : 'none';\n            getId('collapsePointsMax').textContent = strangeness[5][4] >= 1 ? 'There is no maximum value' : 'Maximum value is 40';\n            getId('exportStrangeletsUnlocked').style.display = strangeness[5][8] >= 1 ? '' : 'none';\n            getId('toggleAuto0').style.display = strangeness[5][6] >= 1 ? '' : 'none';\n            getId('toggleAuto0Main').style.display = strangeness[5][6] >= 1 ? '' : 'none';\n            if (!vacuum) { getId('stageAutoInterstellar').style.display = strangeness[5][6] >= 2 ? '' : 'none'; }\n            getId('autoTogglesUpgrades').style.display = researchesAuto[0] >= 1 || researchesAuto[1] >= 2 ? '' : 'none';\n            getId('autoToggle5').style.display = researchesAuto[0] >= 1 ? '' : 'none';\n            getId('autoToggle6').style.display = researchesAuto[0] >= 2 ? '' : 'none';\n            getId('autoToggle7').style.display = researchesAuto[0] >= 3 ? '' : 'none';\n            getId('autoToggle8').style.display = researchesAuto[1] >= 2 ? '' : 'none';\n            getId('toggleAuto1').style.display = strangeness[1][4] >= 1 || (researchesAuto[2] >= 1 && (vacuum || player.stage.current === 1)) ? '' : 'none';\n            const showAuto2 = strangeness[2][4] >= 1 || (vacuum ? researchesAuto[2] >= 3 : (researchesAuto[2] >= 1 && player.stage.current === 2));\n            getId('toggleAuto2').style.display = showAuto2 ? '' : 'none';\n            getId('toggleAuto2Main').style.display = showAuto2 ? '' : 'none';\n            getId('toggleAuto3').style.display = strangeness[3][4] >= 1 || (vacuum ? researchesAuto[2] >= 2 : (researchesAuto[2] >= 1 && player.stage.current === 3)) ? '' : 'none';\n            const showAuto4 = strangeness[4][4] >= 1 || (vacuum ? researchesAuto[2] >= 4 : (researchesAuto[2] >= 1 && player.stage.current >= 4));\n            getId('toggleAuto4').style.display = showAuto4 ? '' : 'none';\n            getId('toggleAuto4Main').style.display = showAuto4 ? '' : 'none';\n            const showAuto5 = strangeness[5][9] >= 1 || researchesAuto[2] >= 5;\n            getId('toggleAuto9').style.display = showAuto5 ? '' : 'none';\n            getId(vacuum ? 'toggleAuto9Main' : 'mergeToggleReset').style.display = showAuto5 ? '' : 'none';\n            if (highest < 7) {\n                const hotkeyTest = getId('stageHotkey', true);\n                if (highest < 2) {\n                    getId('resetToggles').style.display = player.upgrades[1][5] === 1 ? '' : 'none';\n                    if (hotkeyTest !== null) {\n                        hotkeyTest.style.display = player.upgrades[1][9] === 1 ? '' : 'none';\n                        getId('dischargeHotkey').style.display = player.upgrades[1][5] === 1 ? '' : 'none';\n                    }\n                }\n                if (highest < 3) {\n                    getId('vaporizationToggleReset').style.display = player.upgrades[2][2] === 1 ? '' : 'none';\n                    if (hotkeyTest !== null) { getId('vaporizationHotkey').style.display = player.upgrades[2][2] === 1 ? '' : 'none'; }\n                }\n                if (highest < 5) {\n                    getId('collapseToggleReset').style.display = player.upgrades[4][0] === 1 ? '' : 'none';\n                    getId('elementsAsTab').style.display = player.upgrades[4][1] === 1 ? '' : 'none';\n                    if (hotkeyTest !== null) { getId('collapseHotkey').style.display = player.upgrades[4][0] === 1 ? '' : 'none'; }\n                }\n                if (highest < 6) {\n                    getId('saveFileNameGalaxy').style.display = player.milestones[4][1] >= 8 ? '' : 'none';\n                    if (hotkeyTest !== null) { getId('galaxyHotkey').style.display = player.milestones[4][1] >= 8 ? '' : 'none'; }\n                }\n                getId('stageToggleReset').style.display = player.stage.resets >= 1 || (vacuum ? player.elements[26] >= 1 : player.upgrades[1][9] === 1) ? '' : 'none';\n                getId('vaporizationExtra').style.display = player.challenges.void[4] >= 1 ? '' : 'none';\n                getId('exportReward').style.display = player.strange[0].total > 0 ? '' : 'none';\n                getId('mergeToggleReset').style.display = vacuum && player.upgrades[5][3] === 1 ? '' : 'none';\n                if (hotkeyTest !== null) {\n                    getId('exitChallengeHotkey').style.display = highest >= 6 && player.stage.resets >= 1 ? '' : 'none';\n                    getId('mergeHotkey').style.display = player.upgrades[5][3] === 1 ? '' : 'none';\n                }\n            }\n        } else if (subtab.settingsCurrent === 'History') {\n            updateStageHistory();\n            updateVacuumHistory();\n        } else if (subtab.settingsCurrent === 'Stats') {\n            const { strangeness } = player;\n            const buildings = player.buildings[active];\n\n            getId('firstPlay').textContent = new Date(player.time.started).toLocaleString();\n            getId('exportStatsStrangeletsUnlocked').style.display = strangeness[5][8] >= 1 ? '' : 'none';\n            if (highest < 7) {\n                getId('stageResets').style.display = player.stage.resets >= 1 ? '' : 'none';\n                getId('exportStats').style.display = player.strange[0].total > 0 ? '' : 'none';\n            }\n            for (let i = 1; i < global.buildingsInfo.maxActive[active]; i++) {\n                getId(`building${i}Stats`).style.display = buildings[i].trueTotal.moreThan('0') ? '' : 'none';\n            }\n            getId('strangeAllStats').style.display = player.strange[0].total > 0 ? '' : 'none';\n            getId('strange1Stats').style.display = player.strange[1].total > 0 ? '' : 'none';\n\n            getId('maxSolarMassStat').style.display = active === 4 || active === 5 ? '' : 'none';\n            if (active === 1) {\n                getId('dischargeStat').style.display = player.upgrades[1][5] === 1 ? '' : 'none';\n                getId('dischargeStatTrue').style.display = player.discharge.current !== global.dischargeInfo.total ? '' : 'none';\n                getId('dischargeScaleStat').style.display = player.upgrades[1][5] === 1 ? '' : 'none';\n                for (let s = 1; s <= (vacuum ? 5 : 1); s++) {\n                    let anyUnlocked = false;\n                    for (let i = 1; i < global.buildingsInfo.maxActive[s]; i++) {\n                        const unlocked = player.buildings[s][i].trueTotal.moreThan('0');\n                        if (!anyUnlocked) { anyUnlocked = unlocked; }\n                        getId(`energyGainStage${s}Build${i + (vacuum ? 0 : 2)}Name`).style.display = unlocked ? '' : 'none';\n                        getId(`energyGainStage${s}Build${i + (vacuum ? 0 : 2)}`).style.display = unlocked ? '' : 'none';\n                    }\n                    getId(s === 1 ? 'energyGainStats' : `energyGainStage${s}`).style.display = anyUnlocked ? '' : 'none';\n                }\n                getId('effectiveEnergyStat').style.display = calculateEffects.effectiveEnergy() !== player.discharge.energy ? '' : 'none';\n                if (highest < 2) {\n                    getId('maxEnergyStat').style.display = player.discharge.energyMax >= 12 ? '' : 'none';\n                    getId('energyGainStats').style.display = player.discharge.energyMax >= 12 ? '' : 'none';\n                }\n            } else if (active === 2) {\n                getId('vaporizationBoost').style.display = player.upgrades[2][2] === 1 ? '' : 'none';\n                getId('rainStat').style.display = player.researchesExtra[2][1] >= 1 ? '' : 'none';\n                getId('stormStat').style.display = player.researchesExtra[2][2] >= 1 ? '' : 'none';\n                getId('maxCloudStat').style.display = player.upgrades[2][2] === 1 ? '' : 'none';\n            } else if (active === 3) {\n                getId('currentRankTrue').style.display = global.accretionInfo.effective !== player.accretion.rank ? '' : 'none';\n                if (vacuum) {\n                    getId('rankStat0').style.display = strangeness[2][9] >= 1 ? '' : 'none';\n                }\n                for (let i = 1; i < global.accretionInfo.rankImage.length; i++) { getId(`rankStat${i}`).style.display = player.accretion.rank >= i ? '' : 'none'; }\n            } else if (active === 4) {\n                const auto2 = strangeness[4][4] >= 2;\n                getId('star1Stat').style.display = !auto2 && buildings[2].trueTotal.moreThan('0') ? '' : 'none';\n                getId('star2Stat').style.display = !auto2 && buildings[3].trueTotal.moreThan('0') ? '' : 'none';\n                getId('star3Stat').style.display = !auto2 && buildings[4].trueTotal.moreThan('0') ? '' : 'none';\n                getId('gammaRayStat').style.display = player.researchesExtra[5][0] >= 1 || player.collapse.stars[2] >= 1 ? '' : 'none';\n                getId('quasarStat').style.display = player.researchesExtra[5][0] >= 1 ? '' : 'none';\n            } else if (active === 5) {\n                getId('galaxyBase').style.display = player.researchesExtra[5][0] >= 1 ? '' : 'none';\n                if (vacuum) {\n                    getId('mergeResets').style.display = player.upgrades[5][3] === 1 ? '' : 'none';\n                    getQuery('#mergeResets > span').className = `${player.merge.resets >= calculateEffects.mergeMaxResets() ? 'green' : 'red'}Text`;\n                    getId('mergeBoost').style.display = player.upgrades[5][3] === 1 ? '' : 'none';\n                }\n            }\n        }\n    }\n};\nexport const visualTrueStageUnlocks = () => {\n    const highest = player.stage.true;\n    const hotkeyTest = getId('stageHotkey', true);\n\n    getId('stageRewardOld').style.display = highest < 5 ? '' : 'none';\n    getId('stageRewardNew').style.display = highest >= 5 ? '' : 'none';\n    getId('autoWaitMain').style.display = highest >= 3 ? '' : 'none';\n    getId('researchAuto3').style.display = highest >= 7 ? '' : 'none';\n    getId(globalSave.MDSettings[0] ? 'toggleHover0' : 'researchToggles').style.display = highest >= 2 ? '' : 'none';\n    getId('toggleMax0').style.display = highest >= 4 ? '' : 'none';\n    getId('globalSpeed').style.display = highest >= 7 ? '' : 'none';\n    getId('strange1GlobalSpeedInfo').style.display = highest >= 7 ? '' : 'none';\n    getQuery('#strangenessHeader > span:last-of-type').style.display = highest >= 7 ? '' : 'none';\n    getQuery('#resetToggles > h2 > span').style.display = highest >= 5 ? '' : 'none';\n    getId('themeArea').style.display = highest >= 2 || globalSave.theme !== null ? '' : 'none';\n    getId('switchTheme2').style.display = highest >= 2 ? '' : 'none';\n    getId('switchTheme3').style.display = highest >= 3 ? '' : 'none';\n    getId('switchTheme4').style.display = highest >= 4 ? '' : 'none';\n    getId('switchTheme5').style.display = highest >= 5 ? '' : 'none';\n    getId('switchTheme6').style.display = highest >= 7 ? '' : 'none';\n    getId('saveFileNameStrange').style.display = highest >= 5 ? '' : 'none';\n    getId('saveFileNameVacuum').style.display = highest >= 6 ? '' : 'none';\n    getId('saveFileNameUniverse').style.display = highest >= 7 ? '' : 'none';\n    getId('saveFileNameCosmon').style.display = highest >= 7 ? '' : 'none';\n    getId('autoStageSwitch').style.display = highest >= 5 ? '' : 'none';\n    getId('cosmonStat').style.display = highest >= 7 ? '' : 'none';\n    getId('vacuumHistory').style.display = highest >= 7 ? '' : 'none';\n    if (hotkeyTest !== null) {\n        getId('stageRightHotkey').style.display = highest >= 5 ? '' : 'none';\n        getId('stageLeftHotkey').style.display = highest >= 5 ? '' : 'none';\n    }\n    if (highest >= 2) {\n        getId('toggleBuilding0').style.display = '';\n        getId('resetToggles').style.display = '';\n        getId('maxEnergyStat').style.display = '';\n        getId('upgradeTabBtn').style.display = '';\n        if (hotkeyTest !== null) { hotkeyTest.style.display = ''; }\n    }\n    if (highest >= 5) {\n        getId('elementsAsTab').style.display = '';\n    }\n    if (highest >= 6) {\n        getId('dischargeToggleReset').style.display = '';\n        getId('saveFileNameGalaxy').style.display = '';\n        for (let s = 2; s <= 5; s++) {\n            getId(`strangeness${globalSave.MDSettings[0] ? 'Page' : 'Section'}${s}`).style.display = '';\n            getId(`milestone1Stage${s}Div`).style.display = '';\n            getId(`milestone2Stage${s}Div`).style.display = '';\n        }\n    }\n    if (highest >= 7) {\n        getId('stageSelect').style.display = '';\n        getId('resets').style.display = '';\n        getId('resetStage').style.display = '';\n        getId('challenge1').style.display = '';\n        getId('challengesToggles').style.display = '';\n        getId('researches').style.display = '';\n        getId('vaporizationExtra').style.display = '';\n        getId('stageToggleReset').style.display = '';\n        getId('vaporizationToggleReset').style.display = '';\n        getId('rankToggleReset').style.display = '';\n        getId('collapseToggleReset').style.display = '';\n        getId('strangenessTabBtn').style.display = '';\n        getId('stageResets').style.display = '';\n        getId('exportReward').style.display = '';\n        getId('exportStats').style.display = '';\n        if (hotkeyTest !== null) { getId('exitChallengeHotkey').style.display = ''; }\n    }\n};\n\nexport const getUpgradeDescription = (index: number | null, type: 'upgrades' | 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'elements' | 'inflation') => {\n    if (type === 'inflation') {\n        if (index === null) {\n            getId('inflationText').textContent = 'Hover to see.';\n            getId('inflationEffect').textContent = 'Hover to see.';\n            getId('inflationCost').textContent = 'Cosmon.';\n            return;\n        }\n        const pointer = global.inflationTreeInfo;\n        const level = player.inflation.tree[index];\n\n        getId('inflationText').textContent = `${pointer.name[index]}. (Level ${level} out of ${pointer.max[index]})`;\n        getId('inflationEffect').textContent = pointer.effectText[index]();\n        getId('inflationCost').textContent = `${level >= pointer.max[index] ? 'Fully activated' : pointer.refundable[index] || pointer.cost[index] === 0 ? `${format(pointer.cost[index])} Cosmon` : 'Requires X self-made Universes'}.${pointer.refundable[index] ? '' : \" (Can't be refunded)\"}`;\n        return;\n    }\n    if (type === 'elements') {\n        if (index === null) {\n            getId('elementText').textContent = 'Hover to see.';\n            getId('elementEffect').textContent = 'Hover to see.';\n            getId('elementCost').textContent = 'Elements.';\n            return;\n        }\n        const pointer = global.elementsInfo;\n\n        getId('elementText').textContent = `${pointer.name[index]}.`;\n        getId('elementEffect').textContent = player.elements[index] > 0 || (player.collapse.show >= index && index !== 0) ? pointer.effectText[index]() : 'Effect is not yet known.';\n        getId('elementCost').textContent = player.elements[index] >= 1 ? 'Obtained.' :\n            player.elements[index] > 0 ? 'Awaiting Collapse.' :\n            index === 0 ? 'Unknown.' : `${format(pointer.startCost[index])} Elements.${globalSave.MDSettings[0] ? ' (Hold to create)' : ''}`;\n        return;\n    }\n\n    const stageIndex = player.stage.active;\n    if (index === null) {\n        getId('upgradeText').textContent = 'Hover to see.';\n        getId('upgradeEffect').textContent = 'Hover to see.';\n        getId('upgradeCost').textContent = `${global.stageInfo.costName[stageIndex]}.`;\n        return;\n    }\n    if (type === 'upgrades') {\n        const pointer = global[`${type}Info`][stageIndex];\n\n        getId('upgradeText').textContent = `${pointer.name[index]}.`;\n        getId('upgradeEffect').textContent = pointer.effectText[index]();\n        getId('upgradeCost').textContent = player.upgrades[stageIndex][index] === 1 ? 'Created.' :\n            stageIndex === 4 && global.collapseInfo.unlockU[index] > player.collapse.mass && player.researchesExtra[5][0] < 1 ? `Unlocked at ${format(global.collapseInfo.unlockU[index])} Mass.` :\n            stageIndex === 5 && global.mergeInfo.unlockU[index] > player.buildings[6][1].true ? `Requires at least ${global.mergeInfo.unlockU[index]} self-made ${player.stage.true >= 7 || player.event ? 'Universes' : '(Unknown)'}.` :\n            `${format(pointer.startCost[index])} ${global.stageInfo.costName[stageIndex]}.`;\n    } else if (type === 'researches' || type === 'researchesExtra') {\n        const pointer = global[`${type}Info`][stageIndex];\n        const level = player[type][stageIndex][index];\n        if (type === 'researchesExtra' && stageIndex === 4 && index === 0) { pointer.name[0] = ['Nova', 'Supernova', 'Hypernova'][Math.min(level, 2)]; }\n\n        getId('upgradeText').textContent = `${pointer.name[index]}. (Level ${level} out of ${pointer.max[index]})`;\n        getId('upgradeEffect').textContent = pointer.effectText[index]();\n        if (level >= pointer.max[index]) {\n            getId('upgradeCost').textContent = 'Maxed.';\n        } else if (stageIndex === 4 && type === 'researches' && global.collapseInfo.unlockR[index] > player.collapse.mass && player.researchesExtra[5][0] < 1) {\n            getId('upgradeCost').textContent = `Unlocked at ${format(global.collapseInfo.unlockR[index])} Mass.`;\n        } else if (stageIndex === 5 && global.mergeInfo[`unlock${type === 'researches' ? 'R' : 'E'}`][index] > player.buildings[6][1].true) {\n            getId('upgradeCost').textContent = `Requires at least ${global.mergeInfo[`unlock${type === 'researches' ? 'R' : 'E'}`][index]} self-made ${player.stage.true >= 7 || player.event ? 'Universes' : '(Unknown)'}.`;\n        } else {\n            let newLevels = 1;\n            let cost: number | Overlimit = pointer.cost[index] as number;\n            if (player.toggles.max[0] && pointer.max[index] > 1) {\n                const scaling = pointer.scaling[index];\n                if (stageIndex === 1) {\n                    if (player.accretion.rank >= 6 && player.strangeness[1][9] >= 1) {\n                        newLevels = Math.min(Math.max(Math.floor((player.discharge.energy - cost) / scaling + 1), 1), pointer.max[index] - level);\n                        if (newLevels > 1) { cost += (newLevels - 1) * scaling; }\n                    } else {\n                        const simplify = cost - scaling / 2;\n                        newLevels = Math.min(Math.max(Math.floor(((simplify ** 2 + 2 * scaling * player.discharge.energy) ** 0.5 - simplify) / scaling), 1), pointer.max[index] - level);\n                        if (newLevels > 1) { cost = newLevels * (newLevels * scaling / 2 + simplify); }\n                    }\n                } else {\n                    const currency = stageIndex === 2 ? player.buildings[2][1].current : stageIndex === 3 ? player.buildings[3][0].current : player.buildings[4][0].current;\n                    newLevels = Math.min(Math.max(Math.floor(new Overlimit(currency).multiply(scaling - 1).divide(cost).plus('1').log(scaling).toNumber()), 1), pointer.max[index] - level);\n                    if (newLevels > 1) { cost = new Overlimit(scaling).power(newLevels).minus('1').divide(scaling - 1).multiply(cost); }\n                }\n            }\n\n            getId('upgradeCost').textContent = `${format(cost)} ${global.stageInfo.costName[stageIndex]}.${newLevels > 1 ? ` [x${newLevels}]` : ''}`;\n        }\n    } else if (type === 'researchesAuto') {\n        const pointer = global.researchesAutoInfo;\n        let level = player.researchesAuto[index];\n\n        getId('upgradeText').textContent = `${pointer.name[index]}. (Level ${level} out of ${pointer.max[index]})`;\n        getId('upgradeEffect').textContent = pointer.effectText[index]();\n        if (level >= pointer.max[index]) {\n            getId('upgradeCost').textContent = 'Maxed.';\n        } else {\n            const autoStage = pointer.autoStage[index][level];\n            if (index === 1) { //Level from here can only be used for cost\n                if (player.strangeness[4][6] >= 1) { level--; }\n            } else if (index === 2) {\n                if (player.strangeness[1][4] >= 1) { level--; }\n                if (player.strangeness[2][4] >= 1) { level--; }\n                if (player.strangeness[3][4] >= 1) { level--; }\n                if (player.strangeness[4][4] >= 1) { level--; }\n                if (player.strangeness[5][9] >= 1) { level--; }\n            }\n            if (index === 1 && player.strangeness[4][6] >= 1) { level = Math.max(level - 1, 0); }\n            getId('upgradeCost').textContent = !(autoStage === stageIndex || (stageIndex === 5 && autoStage === 4)) ? `This level can only be created within '${global.stageInfo.word[autoStage]}'.` :\n                `${format(pointer.costRange[index][Math.max(level, 0)])} ${global.stageInfo.costName[stageIndex]}.`;\n        }\n    } else if (type === 'ASR') {\n        const pointer = global.ASRInfo;\n        const level = player.ASR[stageIndex];\n\n        getId('upgradeText').textContent = `${pointer.name}. (Level ${level} out of ${pointer.max[stageIndex]})`;\n        getId('upgradeEffect').textContent = pointer.effectText();\n        getId('upgradeCost').textContent = level >= pointer.max[stageIndex] ? 'Maxed.' :\n            stageIndex === 1 && player.upgrades[1][5] !== 1 ? \"Cannot be created without 'Superposition' Upgrade\" :\n            stageIndex === 3 && player.accretion.rank < 1 ? \"Cannot be created at 'Ocean world' Rank.\" :\n            `${format(pointer.costRange[stageIndex][level])} ${global.stageInfo.costName[stageIndex]}.`;\n    }\n};\n\nexport const getStrangenessDescription = (index: number | null, stageIndex: number, type: 'strangeness' | 'milestones') => {\n    const stageText = getId(`${type}Stage`);\n    if (index !== null) {\n        stageText.style.color = `var(--${global.stageInfo.textColor[stageIndex]}-text)`;\n        stageText.textContent = `${global.stageInfo.word[stageIndex]}. `;\n    } else { stageText.textContent = ''; }\n    if (type === 'strangeness') {\n        if (index === null) {\n            getId('strangenessText').textContent = 'Hover to see.';\n            getId('strangenessEffect').textContent = 'Hover to see.';\n            getId('strangenessCost').textContent = 'Strange quarks.';\n            return;\n        }\n        const pointer = global.strangenessInfo[stageIndex];\n        const level = player.strangeness[stageIndex][index];\n\n        getId('strangenessText').textContent = `${pointer.name[index]}. (Level ${level} out of ${pointer.max[index]})`;\n        getId('strangenessEffect').textContent = pointer.effectText[index]();\n        getId('strangenessCost').textContent = level >= pointer.max[index] ? 'Maxed.' : `${format(pointer.cost[index])} Strange quarks.`;\n    } else {\n        let text;\n        if (index === null) {\n            getId('milestonesText').textContent = 'Hover to see.';\n            text = `<p class=\"orchidText\">Requirement: <span class=\"greenText\">Hover to see.</span></p>\n            <p class=\"blueText\">Time limit: <span class=\"greenText\">Hover to see.</span></p>\n            <p class=\"darkvioletText\">${player.inflation.vacuum ? 'Effect' : 'Unlock'}: <span class=\"greenText\">Hover to see.</span></p>`;\n        } else {\n            const pointer = global.milestonesInfo[stageIndex];\n            const level = player.milestones[stageIndex][index];\n            getId('milestonesText').textContent = `${pointer.name[index]}. (Tier ${level}${player.inflation.vacuum ? '' : ` out of ${pointer.max[index]}`})`;\n            if (player.inflation.vacuum) {\n                const isActive = player.challenges.active === 0 && player.inflation.tree[4] >= 1;\n                text = `<p class=\"orchidText\">Requirement: <span class=\"greenText\">${pointer.needText[index]()}</span></p>\n                <p class=\"blueText\">Time limit: <span class=\"greenText\">${format(pointer.time[index] - (isActive ? player.time[player.challenges.super ? 'vacuum' : 'stage'] : 0), { type: 'time' })} ${isActive ? 'remains ' : ''}to increase this tier within ${player.challenges.super ? 'Super ' : ''}Void.</span></p>\n                <p class=\"darkvioletText\">Effect: <span class=\"greenText\">${pointer.rewardText[index]()}</span>${player.inflation.tree[4] < 1 ? ' <span class=\"redText\">(Disabled)</span>' : ''}</p>`;\n            } else if (level < pointer.max[index]) {\n                const isActive = global.stageInfo.activeAll.includes(Math.min(stageIndex, 4));\n                text = `<p class=\"orchidText\">Requirement: <span class=\"greenText\">${pointer.needText[index]()}</span></p>\n                <p class=\"blueText\">Time limit: <span class=\"greenText\">${format(pointer.time[index] - (isActive && player.inflation.tree[4] < 1 ? player.time.stage : 0), { type: 'time' })} ${isActive && player.inflation.tree[4] < 1 ? 'remains ' : ''}to complete this tier within ${isActive ? 'current' : global.stageInfo.word[index === 0 && stageIndex === 5 ? 4 : stageIndex]} Stage.</span></p>\n                <p class=\"darkvioletText\">Unlock: <span class=\"greenText\">Main reward unlocked after ${pointer.max[index] - level} more completions.</span></p>`;\n            } else { text = `<p class=\"darkvioletText\">Reward: <span class=\"greenText\">${pointer.rewardText[index]()}</span></p>`; }\n        }\n\n        const multilineID = getId('milestonesMultiline');\n        if (specialHTML.cache.innerHTML.get(multilineID) !== text) {\n            specialHTML.cache.innerHTML.set(multilineID, text);\n            multilineID.innerHTML = text;\n        }\n        const container = multilineID.parentElement as HTMLElement;\n        container.style.minHeight = `${container.offsetHeight}px`;\n    }\n};\n\nexport const getChallengeDescription = (index: number) => {\n    const info = global.challengesInfo[index as 0];\n    const isActive = player.challenges.active === index;\n    const nameID = getId('challengeName');\n    nameID.textContent = info.name;\n    nameID.className = `selectBtn ${info.color}Text`;\n    getId('challengeActive').style.display = isActive ? '' : 'none';\n\n    let text;\n    if (index === 1) {\n        const gain = player.inflation.vacuum ? player.buildings[6][1].true + 1 : 1;\n        text = `<p class=\"orchidText\">Vacuum state: <span class=\"${player.inflation.vacuum ? 'greenText\">true' : 'redText\">false'}</span> | Resets: <span class=\"darkorchidText\">${player.inflation.resets}</span></p>\n        ${player.stage.true >= 7 || player.event ? `<p class=\"darkvioletText\">Current Cosmon gain: <span class=\"${player.inflation.vacuum ? 'green' : 'red'}Text\">${format(gain, { padding: 'exponent' })}</span> | Rate: <span class=\"${player.inflation.vacuum ? 'green' : 'red'}Text\">${format(gain / player.time.vacuum, { type: 'income' })}</span></p>` : ''}\n        <p class=\"orchidText\">Time since last reset: <span class=\"darkorchidText\">${format(player.inflation.time, { type: 'time' })}</span>${player.inflation.time !== player.time.vacuum ? ` (Real: <span class=\"darkorchidText\">${format(player.time.vacuum, { type: 'time' })}</span>)` : ''}</p>`;\n    } else {\n        text = `<p class=\"whiteText\">${info.description()}</p>\n        <div><h4 class=\"${info.color}Text bigWord\">Effect:</h4>\n        <div>${info.effectText()}</div>\n        <p class=\"blueText\">${isActive ? 'Remaining time' : 'Time limit'} is <span class=\"cyanText\">${format(info.time - (isActive ? player.time[info.resetType] : 0), { type: 'time' })}</span></p></div>`;\n    }\n\n    if (specialHTML.cache.innerHTML.get('challengeMultiline') !== text) {\n        specialHTML.cache.innerHTML.set('challengeMultiline', text);\n        getId('challengeMultiline').innerHTML = text;\n    }\n};\n\n/** Void only at the moment */\nexport const getChallengeReward = (index: number) => {\n    const supervoid = global.sessionToggles[0];\n    const info = global.challengesInfo[0];\n    const reward = info.rewardText[supervoid ? 1 : 0][index];\n    const current = player.challenges[supervoid ? 'supervoid' : 'void'][index];\n    const best = supervoid ? current : player.challenges.voidCheck[index];\n    let text = `<p class=\"greenText center\">All unlocks are ${supervoid ? 'permanent and related to Inflations' : 'related to Strangeness'}<br>Also ${supervoid ? 'a single Cosmon for unlocking any reward' : 'gain Strange quarks equal to unlocked rewards'}</p>`;\n    for (let i = 0; i < reward.length; i++) {\n        const unlocked = current > i;\n        let failText;\n        if (!unlocked && player.challenges.active === 0) {\n            if (player.time[supervoid ? 'vacuum' : 'stage'] > info.time) {\n                failText = 'Out of time';\n            } else if (index === 2 && i === 2 && player.accretion.rank > 1) {\n                failText = 'Failed';\n            }\n        }\n        text += `<div><p><span class=\"${unlocked ? 'greenText' : 'redText'}\">\u2192</span> ${info.needText[index][i]()}${failText !== undefined ? ` <span class=\"redText\">(${failText})</span>` : ''}</p>\n        <p><span class=\"${unlocked ? 'greenText' : 'redText'}\">Reward:</span> ${best > i ? `${reward[i]}${!unlocked && globalSave.SRSettings[0] ? ' (not unlocked)' : ''}` : 'Not yet unlocked'}</p></div>`;\n    }\n    if (specialHTML.cache.innerHTML.get('voidRewards') !== text) {\n        specialHTML.cache.innerHTML.set('voidRewards', text);\n        getId('voidRewardsMultiline').innerHTML = text;\n    }\n};\n\nexport const visualUpdateUpgrades = (index: number, stageIndex: number, type: 'upgrades' | 'elements') => {\n    if (type === 'upgrades') {\n        if (stageIndex !== player.stage.active) { return; }\n\n        let color = '';\n        const image = getId(`upgrade${index + 1}`);\n        if (player.upgrades[stageIndex][index] === 1) {\n            if (stageIndex === 1) {\n                color = 'green';\n            } else if (stageIndex === 2) {\n                color = 'darkgreen';\n            } else if (stageIndex === 3) {\n                color = '#0000b1'; //Darker blue\n            } else if (stageIndex === 4) {\n                color = '#1f1f8f'; //Brigher midnightblue\n            } else if (stageIndex === 5) {\n                color = '#990000'; //Brigher maroon\n            }\n            image.tabIndex = globalSave.SRSettings[0] && globalSave.SRSettings[1] ? 0 : -1;\n        } else { image.tabIndex = 0; }\n        image.style.backgroundColor = color;\n    } else if (type === 'elements') {\n        const image = getId(`element${index}`);\n        if (player.elements[index] >= 1) {\n            image.classList.remove('awaiting');\n            image.classList.add('created');\n            image.tabIndex = globalSave.SRSettings[0] && globalSave.SRSettings[1] ? 0 : -1;\n        } else if (player.elements[index] > 0) {\n            image.classList.add('awaiting');\n            image.classList.remove('created');\n            image.tabIndex = 0;\n        } else {\n            image.classList.remove('awaiting');\n            image.classList.remove('created');\n            image.tabIndex = 0;\n        }\n    }\n};\n\nexport const visualUpdateResearches = (index: number, stageIndex: number, type: 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'strangeness' | 'inflations') => {\n    let max: number;\n    let level: number;\n    let upgradeHTML: HTMLElement;\n    let image: HTMLElement;\n    if (type === 'researches' || type === 'researchesExtra') {\n        if (stageIndex !== player.stage.active) { return; }\n        max = global[`${type}Info`][stageIndex].max[index];\n        level = player[type][stageIndex][index];\n\n        const extra = type === 'researches' ? '' : 'Extra';\n        upgradeHTML = getId(`research${extra}${index + 1}Level`);\n        getId(`research${extra}${index + 1}Max`).textContent = `${max}`;\n        image = getId(`research${extra}${index + 1}Image`);\n    } else if (type === 'researchesAuto') {\n        max = global.researchesAutoInfo.max[index];\n        level = player.researchesAuto[index];\n\n        upgradeHTML = getId(`researchAuto${index + 1}Level`);\n        getId(`researchAuto${index + 1}Max`).textContent = `${max}`;\n        image = getId(`researchAuto${index + 1}Image`);\n    } else if (type === 'ASR') {\n        if (stageIndex !== player.stage.active) { return; }\n        max = global.ASRInfo.max[stageIndex];\n        level = player.ASR[stageIndex];\n\n        upgradeHTML = getId('ASRLevel');\n        getId('ASRMax').textContent = `${max}`;\n        image = getId('ASRImage');\n    } else if (type === 'strangeness') {\n        max = global.strangenessInfo[stageIndex].max[index];\n        level = player.strangeness[stageIndex][index];\n\n        upgradeHTML = getId(`strange${index + 1}Stage${stageIndex}Level`);\n        getId(`strange${index + 1}Stage${stageIndex}Max`).textContent = `${max}`;\n        image = getId(`strange${index + 1}Stage${stageIndex}Image`);\n    } else /*if (type === 'inflations')*/ {\n        max = global.inflationTreeInfo.max[index];\n        level = player.inflation.tree[index];\n\n        upgradeHTML = getId(`inflation${index + 1}Level`);\n        getId(`inflation${index + 1}Max`).textContent = `${max}`;\n        image = getId(`inflation${index + 1}Image`);\n    }\n\n    upgradeHTML.textContent = `${level}`;\n    if (level >= max) {\n        upgradeHTML.className = 'greenText';\n        image.tabIndex = globalSave.SRSettings[0] && globalSave.SRSettings[1] ? 0 : -1;\n    } else if (level === 0) {\n        upgradeHTML.className = 'redText';\n        image.tabIndex = 0;\n    } else {\n        upgradeHTML.className = 'orchidText';\n        image.tabIndex = 0;\n    }\n};\n\nconst updateRankInfo = () => {\n    const rank = player.accretion.rank;\n    if (global.debug.rankUpdated === rank) { return; }\n    const rankInfo = global.accretionInfo;\n    const name = getId('rankName');\n\n    getId('reset1Button').textContent = rank >= rankInfo.maxRank ? 'Max Rank achieved' : `Next Rank is ${format(rankInfo.rankCost[rank])} Mass`;\n    (getId('rankImage') as HTMLImageElement).src = `Used_art/${rankInfo.rankImage[rank]}`;\n    name.textContent = rankInfo.rankName[rank];\n    name.style.color = `var(--${rankInfo.rankColor[rank]}-text)`;\n    global.debug.rankUpdated = rank;\n};\n\nexport const setRemnants = () => {\n    if (player.stage.active === 4) {\n        const whiteDwarf = player.researchesExtra[4][2] >= 1;\n        getId('special1').title = whiteDwarf ? 'White dwarfs (Red giants)' : 'Red giants';\n        (getQuery('#special1 > img') as HTMLImageElement).src = `Used_art/${whiteDwarf ? 'White%20dwarf' : 'Red%20giant'}.png`;\n        getId('special1Cur').className = whiteDwarf ? 'cyanText' : 'redText';\n\n        const quarkStar = player.researchesExtra[4][3] >= 1;\n        getId('special2').title = quarkStar ? 'Quark stars (Neutron stars)' : 'Neutron stars';\n        (getQuery('#special2 > img') as HTMLImageElement).src = `Used_art/${quarkStar ? 'Quark%20star' : 'Neutron%20star'}.png`;\n        const text2 = `Boost${quarkStar ? ' and cost decrease' : ''} to all Stars`;\n        getQuery('#star2Effect > span:last-of-type').textContent = globalSave.SRSettings[0] ? ` (${text2})` : text2;\n        if (globalSave.SRSettings[0]) { getId('specials').ariaLabel = 'Stars remnants'; }\n    } else if (player.stage.active === 5) {\n        getId('special1').title = 'Galaxy groups';\n        (getQuery('#special1 > img') as HTMLImageElement).src = 'Used_art/Galaxy%20group.png';\n        getId('special1Cur').className = 'grayText';\n        if (globalSave.SRSettings[0]) { getId('specials').ariaLabel = 'Merge results'; }\n    }\n};\n\nconst updateStageHistory = () => {\n    if (global.debug.historyStage === player.stage.resets) { return; }\n    const list = global.historyStorage.stage;\n    const length = Math.min(list.length, player.history.stage.input[1]);\n\n    let text = '';\n    if (length > 0) {\n        for (let i = 0; i < length; i++) {\n            text += `<li class=\"whiteText\"><span class=\"greenText\">${format(list[i][1], { padding: true })} Strange quarks</span>${list[i][2] > 0 ? `, <span class=\"greenText\">${format(list[i][2], { padding: true })} Strangelets</span>` : ''}, <span class=\"blueText\">${format(list[i][0], { type: 'time' })}</span>, <span class=\"darkorchidText\">${format(list[i][1] / list[i][0], { type: 'income' })}</span></li>`;\n        }\n    } else { text = '<li class=\"redText\">Reference list is empty</li>'; }\n    getId('stageHistoryList').innerHTML = text;\n\n    const best = player.history.stage.best;\n    getId('stageHistoryBest').innerHTML = `<span class=\"greenText\">${format(best[1], { padding: true })} Strange quarks</span>${best[2] > 0 ? `, <span class=\"greenText\">${format(best[2], { padding: true })} Strangelets</span>` : ''}, <span class=\"blueText\">${format(best[0], { type: 'time' })}</span>, <span class=\"darkorchidText\">${format(best[1] / best[0], { type: 'income' })}</span>`;\n    global.debug.historyStage = player.stage.resets;\n};\nconst updateVacuumHistory = () => {\n    if (global.debug.historyVacuum === player.inflation.resets) { return; }\n    const list = global.historyStorage.vacuum;\n    const length = Math.min(list.length, player.history.vacuum.input[1]);\n\n    let text = '';\n    if (length > 0) {\n        for (let i = 0; i < length; i++) {\n            text += `<li class=\"whiteText\"><span class=\"darkvioletText\">${format(list[i][2], { padding: true })} Cosmon</span>, <span class=\"blueText\">${format(list[i][0], { type: 'time' })}</span>, <span class=\"darkorchidText\">${format(list[i][2] / list[i][0], { type: 'income' })}</span>, <span class=\"${list[i][1] ? 'greenText\">true' : 'redText\">false'} Vacuum</span></li>`;\n        }\n    } else { text = '<li class=\"redText\">Reference list is empty</li>'; }\n    getId('vacuumHistoryList').innerHTML = text;\n\n    const best = player.history.vacuum.best;\n    getId('vacuumHistoryBest').innerHTML = `<span class=\"darkvioletText\">${format(best[2], { padding: true })} Cosmon</span>, <span class=\"blueText\">${format(best[0], { type: 'time' })}</span>, <span class=\"darkorchidText\">${format(best[2] / best[0], { type: 'income' })}</span>, <span class=\"${best[1] ? 'greenText\">true' : 'redText\">false'} Vacuum</span>`;\n    global.debug.historyVacuum = player.inflation.resets;\n};\n\n/** @param padding 'exponent' value will behave as true, but only after number turns into its shorter version */\nexport const format = (input: number | Overlimit, settings = {} as { type?: 'number' | 'input' | 'time' | 'income', padding?: boolean | 'exponent' }): string => {\n    if (typeof input === 'object') { return input?.format(settings as any); }\n    const type = settings.type ?? 'number';\n    let padding = settings.padding;\n\n    let extra;\n    if (type === 'income') { //1.2345e6 per second\n        const inputAbs = Math.abs(input);\n        if (inputAbs >= 1) {\n            extra = 'per second';\n        } else if (inputAbs >= 1 / 60) {\n            input *= 60;\n            extra = 'per minute';\n        } else if (inputAbs >= 1 / 3600) {\n            input *= 3600;\n            extra = 'per hour';\n        } else if (inputAbs >= 1 / 86400) {\n            input *= 86400;\n            extra = 'per day';\n        } else if (inputAbs >= 1 / 31556952) {\n            input *= 31556952;\n            extra = 'per year';\n        } else if (inputAbs >= 1 / 3.1556952e10) {\n            input *= 3.1556952e10;\n            extra = 'per millennium';\n        } else if (inputAbs >= 1 / 3.1556952e13) {\n            input *= 3.1556952e13;\n            extra = 'per megaannum';\n        } else {\n            input *= 3.1556952e16;\n            extra = 'per eon';\n        }\n\n        if (padding === undefined) { padding = true; }\n    } else if (type === 'time') { //12 Minutes 34 Seconds\n        const inputAbs = Math.abs(input);\n        if (inputAbs < 60) {\n            extra = 'seconds';\n        } else if (inputAbs < 3600) {\n            const minutes = Math.trunc(input / 60);\n            const seconds = Math.trunc(input - minutes * 60);\n            if (padding === false && seconds === 0) { return `${minutes} minutes`; }\n            return `${minutes} minutes ${seconds} seconds`;\n        } else if (inputAbs < 86400) {\n            const hours = Math.trunc(input / 3600);\n            const minutes = Math.trunc(input / 60 - hours * 60);\n            if (padding === false && minutes === 0) { return `${hours} hours`; }\n            return `${hours} hours ${minutes} minutes`;\n        } else if (inputAbs < 31556952) {\n            const days = Math.trunc(input / 86400);\n            const hours = Math.trunc(input / 3600 - days * 24);\n            if (padding === false && hours === 0) { return `${days} days`; }\n            return `${days} days ${hours} hours`;\n        } else if (inputAbs < 3.1556952e10) {\n            const years = Math.trunc(input / 31556952);\n            const days = Math.trunc(input / 86400 - years * 365.2425);\n            if (padding === false && days === 0) { return `${years} years`; }\n            return `${years} years ${days} days`;\n        } else if (inputAbs < 3.1556952e13) {\n            input /= 3.1556952e10;\n            extra = 'millenniums';\n        } else if (inputAbs < 3.1556952e16) {\n            input /= 3.1556952e13;\n            extra = 'megaannums';\n        } else {\n            input /= 3.1556952e16;\n            extra = 'eons';\n        }\n\n        if (padding === undefined) { padding = true; }\n    }\n    if (!isFinite(input)) { return extra !== undefined ? `${input} ${extra}` : `${input}`; }\n\n    const inputAbs = Math.abs(input);\n    if (inputAbs >= 1e6 || (inputAbs < 1e-4 && inputAbs > 0)) { //1.23e123 (-1.23e-123)\n        if (padding === 'exponent') { padding = true; }\n\n        let digits = Math.floor(Math.log10(inputAbs));\n        let precision = 3 - Math.floor(Math.log10(Math.abs(digits)));\n        let result = Math.round(input / 10 ** (digits - precision)) / 10 ** precision;\n        if (Math.abs(result) === 10) { //To remove rare bugs\n            result /= 10;\n            digits++;\n            if (digits === -4) { return format(1e-4 * result, settings); }\n            if (padding) { precision = 3 - Math.floor(Math.log10(Math.abs(digits))); }\n        }\n\n        let formated = padding ? result.toFixed(precision) : `${result}`;\n        if (type === 'input') { return `${formated}e${digits}`; }\n        formated = `${formated.replace('.', globalSave.format[0])}e${digits}`;\n        return extra !== undefined ? `${formated} ${extra}` : formated;\n    }\n\n    //12345 (-12345)\n    let precision = inputAbs < 10 ? 5 : (5 - Math.floor(Math.log10(inputAbs)));\n    const result = Math.round(input * 10 ** precision) / 10 ** precision;\n\n    const resultAbs = Math.abs(result); //To remove rare bugs\n    if (resultAbs === 1e6) { return format(result, settings); }\n    if (padding === 'exponent') {\n        padding = false;\n    } else if (padding) { precision = resultAbs < 10 ? 5 : (5 - Math.floor(Math.log10(resultAbs))); }\n\n    let formated = padding ? result.toFixed(precision) : `${result}`;\n    if (type === 'input') { return formated; }\n    formated = formated.replace('.', globalSave.format[0]);\n    if (result >= 1e3) { formated = formated.replace(/\\B(?=(\\d{3})+(?!\\d))/, globalSave.format[1]); }\n    return extra !== undefined ? `${formated} ${extra}` : formated;\n};\n\n/** @param offline used to return early if game is paused due to calculating offline, requires another call after calculations are done */\nexport const stageUpdate = (changed = true, offline = false) => {\n    const { stageInfo, buildingsInfo } = global;\n    const { active, current, true: highest } = player.stage;\n    const activeAll = stageInfo.activeAll;\n    const vacuum = player.inflation.vacuum;\n    const challenge = player.challenges.active;\n\n    activeAll.length = 0;\n    if (vacuum) {\n        activeAll.push(1);\n        if (player.researchesExtra[1][2] >= 2) { activeAll.push(2); }\n        if (current >= 2) { activeAll.push(3); } //player.researchesExtra[1][2] >= 1\n        if (current >= 4) { activeAll.push(4); } //player.accretion.rank >= 6\n        if (current >= 5 && player.strangeness[5][3] >= 1) { activeAll.push(5); } //player.elements[26] >= 1\n    } else {\n        if (current === 1 || player.milestones[1][1] >= 6) { stageInfo.activeAll.push(1); }\n        if (current === 2 || player.milestones[2][1] >= 7) { stageInfo.activeAll.push(2); }\n        if (current === 3 || player.milestones[3][1] >= 7) { stageInfo.activeAll.push(3); }\n        if (current >= 4) { activeAll.push(4); }\n        if (current >= 5) { activeAll.push(5); } //player.elements[26] >= 1\n    }\n    if (highest >= 7 || (player.event && highest === 6)) { activeAll.push(6); }\n    if (offline && global.offline.active) {\n        if (!global.offline.stageUpdate) { global.offline.stageUpdate = changed; }\n        return;\n    }\n\n    for (let s = 1; s <= 6; s++) {\n        for (const element of getClass(`stage${s}Only`)) { element.style.display = active === s ? '' : 'none'; }\n        for (const element of getClass(`stage${s}Include`)) { element.style.display = activeAll.includes(s) ? '' : 'none'; }\n    }\n\n    const stageWord = getId('stageWord');\n    stageWord.textContent = stageInfo.word[current];\n    stageWord.style.color = `var(--${stageInfo.textColor[current]}-text)`;\n    if ((challenge !== null && global.challengesInfo[challenge].resetType === 'stage') || (!vacuum && active >= 6)) {\n        getId('stageReset').textContent = 'No Stage resets available';\n    } else if (vacuum || active >= 4) {\n        getId('stageReset').textContent = highest >= 6 || (player.event && highest === 5) ? (current >= 5 ? 'Requirements are met' : \"Requires '[26] Iron' Element\") : 'Requirements are unknown';\n    }\n    if (challenge !== null) {\n        getId('currentChallenge').style.display = '';\n        const currentID = getQuery('#currentChallenge > span');\n        currentID.textContent = global.challengesInfo[challenge].name;\n        currentID.style.color = `var(--${global.challengesInfo[challenge].color}-text)`;\n    } else { getId('currentChallenge').style.display = 'none'; }\n\n    if (highest < 7) {\n        getId('stageSelect').style.display = activeAll.length > 1 ? '' : 'none';\n        const showAll = vacuum && player.stage.resets >= 1;\n        if (highest < 6) { getId('dischargeToggleReset').style.display = activeAll.includes(1) ? '' : 'none'; }\n        getId('vaporizationToggleReset').style.display = showAll || activeAll.includes(2) ? '' : 'none';\n        getId('rankToggleReset').style.display = showAll || activeAll.includes(3) ? '' : 'none';\n        getId('collapseToggleReset').style.display = showAll || activeAll.includes(4) ? '' : 'none';\n        getId('strangenessTabBtn').style.display = player.strange[0].total > 0 || (vacuum && current >= 5) ? '' : 'none';\n        getId('inflationTabBtn').style.display = 'none';\n        if (changed) {\n            getId('resets').style.display = '';\n            getId('researches').style.display = '';\n        }\n    }\n    if (vacuum) {\n        getId('milestonesProgressArea').style.display = challenge === 0 && player.inflation.tree[4] >= 1 ? '' : 'none';\n    } else {\n        const interstellar = (active >= 6 ? current : active) >= 4;\n        getId('strange1Effect1Allowed').style.display = interstellar ? '' : 'none';\n        getId('strange1Effect1Disabled').style.display = !interstellar ? '' : 'none';\n        if (highest < 6) {\n            for (let s = 2; s <= 4; s++) {\n                const unlocked = player.stage.resets >= s + 3;\n                getId(`strangeness${globalSave.MDSettings[0] ? 'Page' : 'Section'}${s}`).style.display = unlocked ? '' : 'none';\n                getId(`milestone1Stage${s}Div`).style.display = unlocked ? '' : 'none';\n                getId(`milestone2Stage${s}Div`).style.display = unlocked ? '' : 'none';\n            }\n        }\n    }\n\n    if (!changed) {\n        visualUpdate();\n        numbersUpdate();\n        return;\n    }\n    const extraText = `${['Energy', 'Clouds', 'Rank', 'Collapse', 'Galaxy', ''][active - 1]} Researches (Special)`;\n    if (globalSave.MDSettings[0]) {\n        getId('reset1Footer').textContent = specialHTML.resetHTML[active];\n    }\n    if (globalSave.SRSettings[0]) {\n        SRHotkeysInfo(true);\n        for (let i = 1; i < buildingsInfo.maxActive[active]; i++) {\n            getId(`building${i}`).ariaDescription = `Hotkeys are ${i} and Shift ${i})`;\n        }\n        getId('extraResearches').ariaLabel = extraText;\n        getId('SRStage').textContent = `Current active Stage is '${stageInfo.word[active]}'${active !== global.trueActive ? `, will be changed to '${stageInfo.word[global.trueActive]}' after changing tab` : ''}`;\n    }\n\n    const upgradesInfo = global.upgradesInfo[active];\n    const researchesInfo = global.researchesInfo[active];\n    const researchesExtraInfo = global.researchesExtraInfo[active];\n    const footerStatsHTML = specialHTML.footerStatsHTML[active];\n    for (let i = buildingsInfo.maxActive[active]; i < specialHTML.longestBuilding; i++) {\n        getId(`building${i}Stats`).style.display = 'none';\n        getId(`building${i}`).style.display = 'none';\n    }\n    for (let i = upgradesInfo.maxActive; i < specialHTML.longestUpgrade; i++) {\n        getId(`upgrade${i + 1}`).style.display = 'none';\n    }\n    for (let i = researchesInfo.maxActive; i < specialHTML.longestResearch; i++) {\n        getId(`research${i + 1}`).style.display = 'none';\n    }\n    for (let i = researchesExtraInfo.maxActive; i < specialHTML.longestResearchExtra; i++) {\n        getId(`researchExtra${i + 1}`).style.display = 'none';\n    }\n    for (let i = footerStatsHTML.length; i < specialHTML.longestFooterStats; i++) {\n        getId(`footerStat${i + 1}`).style.display = 'none';\n    }\n\n    const showU: number[] = []; //Upgrades\n    const showR: number[] = []; //Researches\n    const showRE: number[] = []; //ResearchesExtra\n    const showF: number[] = []; //Footer stats\n    if (active === 1) {\n        showU.push(2, 3, 4, 5);\n        showR.push(0, 1, 2, 3, 4, 5);\n        showF.push(0, 1, 2);\n        getId('specials').style.display = 'none';\n        if (vacuum) {\n            showU.push(0, 1);\n            showRE.push(0, 2);\n        } else {\n            getId('upgrade1').style.display = 'none';\n            getId('upgrade2').style.display = 'none';\n            getId('extraResearches').style.display = 'none';\n        }\n    } else if (active === 2) {\n        showU.push(0);\n        showR.push(0, 1);\n        showRE.push(0, 1);\n        showF.push(0, 1);\n        getId('specials').style.display = 'none';\n        if (vacuum) { getId('stageInfo').style.display = ''; }\n    } else if (active === 3) {\n        showU.push(0, 1);\n        showR.push(0, 1);\n        showRE.push(0);\n        showF.push(0);\n        global.debug.rankUpdated = null;\n        getId('specials').style.display = 'none';\n        getId('reset1Main').style.display = '';\n        if (vacuum) { getId('stageInfo').style.display = ''; }\n    } else if (active === 4) {\n        showU.push(0, 1, 2);\n        showR.push(0, 1, 2);\n        showRE.push(0);\n        showF.push(0, 1);\n        getId('stageInfo').style.display = '';\n        getId('extraResearches').style.display = '';\n        setRemnants();\n    } else if (active === 5) {\n        showRE.push(0);\n        showF.push(0, 1, 2);\n        getId('stageInfo').style.display = '';\n        if (vacuum) {\n            getId('building2').style.display = '';\n            showU.push(0, 1);\n            showR.push(0, 1);\n            getId('extraResearches').style.display = '';\n            getId('special2').style.display = 'none';\n            getId('special3').style.display = 'none';\n        } else {\n            getId('reset1Button').textContent = 'Requires 22 Galaxies';\n            getId('specials').style.display = 'none';\n        }\n        setRemnants();\n    } else if (active === 6) {\n        showF.push(0, 1);\n        getId('stageInfo').style.display = '';\n        getId('reset1Main').style.display = 'none';\n        getId('specials').style.display = 'none';\n        getId('extraResearches').style.display = 'none';\n    }\n    getId('buildings').style.display = '';\n    getId('building1').style.display = '';\n    getId('upgrades').style.display = '';\n    getId('stageResearches').style.display = '';\n    (getId('autoWaitInput') as HTMLInputElement).value = format(player.toggles.shop.wait[active], { type: 'input' });\n\n    const buildingHTML = specialHTML.buildingHTML[active];\n    const buildingName = buildingsInfo.name[active];\n    const buildingType = buildingsInfo.type[active];\n    const buildingHoverText = buildingsInfo.hoverText[active];\n    for (let i = 1; i < buildingsInfo.maxActive[active]; i++) {\n        (getQuery(`#building${i} > img`) as HTMLImageElement).src = `Used_art/${buildingHTML[i - 1]}`;\n        getQuery(`#building${i}Stats > h4`).textContent = buildingName[i];\n        getId(`building${i}Name`).textContent = buildingName[i];\n        getQuery(`#building${i}ProdDiv > span`).textContent = buildingType[i - 1];\n        getId(`building${i}ProdDiv`).title = buildingHoverText[i - 1];\n        toggleSwap(i, 'buildings');\n    }\n    getQuery('#building0Stats > h4').textContent = buildingName[0];\n    toggleSwap(0, 'buildings');\n\n    const upgradeHTML = specialHTML.upgradeHTML[active];\n    for (let i = 0; i < upgradesInfo.maxActive; i++) {\n        const image = getId(`upgrade${i + 1}`) as HTMLInputElement;\n        if (showU.includes(i)) { image.style.display = ''; }\n        image.src = `Used_art/${upgradeHTML[i]}`;\n        image.alt = upgradesInfo.name[i];\n        visualUpdateUpgrades(i, active, 'upgrades');\n    }\n\n    const researchHTML = specialHTML.researchHTML[active];\n    for (let i = 0; i < researchesInfo.maxActive; i++) {\n        const main = getId(`research${i + 1}`);\n        if (showR.includes(i)) { main.style.display = ''; }\n        main.className = researchHTML[i][1];\n        const image = getId(`research${i + 1}Image`) as HTMLInputElement;\n        image.src = `Used_art/${researchHTML[i][0]}`;\n        image.alt = researchesInfo.name[i];\n        visualUpdateResearches(i, active, 'researches');\n    }\n\n    const researchExtraHTML = specialHTML.researchExtraHTML[active];\n    for (let i = 0; i < researchesExtraInfo.maxActive; i++) {\n        const main = getId(`researchExtra${i + 1}`);\n        if (showRE.includes(i)) { main.style.display = ''; }\n        main.className = researchExtraHTML[i][1];\n        const image = getId(`researchExtra${i + 1}Image`) as HTMLInputElement;\n        image.src = `Used_art/${researchExtraHTML[i][0]}`;\n        image.alt = researchesExtraInfo.name[i];\n        visualUpdateResearches(i, active, 'researchesExtra');\n    }\n    getQuery('#extraResearches > div').className = `researchesDiv ${specialHTML.researchExtraDivHTML[active][1]}`;\n    const extraImgId = getQuery('#extraResearches > img') as HTMLImageElement;\n    extraImgId.src = `Used_art/${specialHTML.researchExtraDivHTML[active][0]}`;\n    extraImgId.title = extraText;\n    visualUpdateResearches(0, active, 'ASR');\n\n    for (let i = 0; i < footerStatsHTML.length; i++) {\n        if (showF.includes(i)) { getId(`footerStat${i + 1}`).style.display = ''; }\n        (getQuery(`#footerStat${i + 1} > img`) as HTMLImageElement).src = `Used_art/${footerStatsHTML[i][0]}`;\n        getQuery(`#footerStat${i + 1} > p`).className = footerStatsHTML[i][1];\n        getQuery(`#footerStat${i + 1} span`).textContent = footerStatsHTML[i][2];\n    }\n\n    const body = document.documentElement.style;\n    body.setProperty('--stage-text', `var(--${stageInfo.textColor[active]}-text)`);\n    body.setProperty('--stage-button-border', stageInfo.buttonBorder[active]);\n    body.setProperty('--stage-image-borderColor', stageInfo.imageBorderColor[active]);\n    body.setProperty('--image-border', `url(\"Used_art/Stage${active} border.png\")`);\n    getId('currentSwitch').textContent = stageInfo.word[active];\n\n    visualUpdate();\n    numbersUpdate();\n    if (globalSave.theme === null) { setTheme(); }\n};\n", "import { global, player } from './Player';\nimport { checkTab } from './Check';\nimport { switchTab } from './Update';\nimport { buyBuilding, collapseResetUser, dischargeResetUser, enterExitChallengeUser, mergeResetUser, rankResetUser, stageResetUser, switchStage, toggleSwap, vaporizationResetUser } from './Stage';\nimport { buyAll, pauseGameUser } from './Main';\nimport { SRHotkeysInfo, globalSave, specialHTML } from './Special';\nimport type { hotkeysList } from './Types';\n\nexport const hotkeys = {} as Record<string, hotkeysList>;\nconst hotkeyFunction = {\n    makeAll: () => buyAll(),\n    stage: (event) => {\n        if (event.repeat && (player.inflation.vacuum || player.stage.active >= 4)) { return; }\n        void stageResetUser();\n    },\n    discharge: () => void dischargeResetUser(),\n    vaporization: (event) => {\n        if (event.repeat) { return; }\n        void vaporizationResetUser();\n    },\n    rank: () => void rankResetUser(),\n    collapse: (event) => {\n        if (event.repeat) { return; }\n        void collapseResetUser();\n    },\n    galaxy: () => buyBuilding(3, 5),\n    pause: (event) => {\n        if (event.repeat) { return; }\n        pauseGameUser();\n    },\n    toggleAll: (event) => {\n        if (event.repeat) { return; }\n        toggleSwap(0, 'buildings', true);\n    },\n    merge: (event) => {\n        if (event.repeat) { return; }\n        void mergeResetUser();\n    },\n    universe: () => buyBuilding(1, 6),\n    exitChallenge: () => enterExitChallengeUser(null),\n    tabRight: (event) => {\n        if (event.repeat) { return; }\n        changeTab('Right');\n    },\n    tabLeft: (event) => {\n        if (event.repeat) { return; }\n        changeTab('Left');\n    },\n    subtabUp: (event) => {\n        if (event.repeat) { return; }\n        changeSubtab('Up');\n    },\n    subtabDown: (event) => {\n        if (event.repeat) { return; }\n        changeSubtab('Down');\n    },\n    stageRight: (event) => {\n        if (event.repeat) { return; }\n        changeStage('Right');\n    },\n    stageLeft: (event) => {\n        if (event.repeat) { return; }\n        changeStage('Left');\n    }\n} as Record<hotkeysList, (event: KeyboardEvent) => void>;\n\n/** Will remove identical hotkeys from globalSave */\nexport const assignHotkeys = () => {\n    for (const key in hotkeys) { delete hotkeys[key]; } //Don't know better way for now\n    const index = globalSave.toggles[0] ? 0 : 1;\n    for (const key in globalSave.hotkeys) {\n        const hotkey = globalSave.hotkeys[key as hotkeysList][index];\n        if (hotkey === '' || hotkey == null) { continue; }\n        if (hotkeys[hotkey] !== undefined) {\n            globalSave.hotkeys[key as hotkeysList] = [];\n        } else { hotkeys[hotkey] = key as hotkeysList; }\n    }\n    if (globalSave.SRSettings[0]) { SRHotkeysInfo(); }\n};\n\n/** Removes hotkey if exist, returns name of removed hotkey */\nexport const removeHotkey = (remove: string): string | null => {\n    const test = hotkeys[remove];\n    if (test === undefined) { return null; }\n    globalSave.hotkeys[test] = [];\n    return test;\n};\n\nexport const detectHotkey = (check: KeyboardEvent) => {\n    let { shiftKey } = check;\n    const { key, code } = check;\n    if (code === 'Tab' || code === 'Enter' || code === 'Space') {\n        if (check.metaKey || check.ctrlKey || check.altKey) { return; }\n        if (code === 'Tab') { global.hotkeys.tab = true; }\n        document.body.classList.remove('noFocusOutline');\n        return;\n    } else {\n        const activeType = (document.activeElement as HTMLInputElement)?.type;\n        if (activeType === 'text' || activeType === 'number') { return; }\n        document.body.classList.add('noFocusOutline');\n    }\n    if (global.hotkeys.disabled) { return; }\n    if (shiftKey) { global.hotkeys.shift = true; }\n    if (check.ctrlKey) { global.hotkeys.ctrl = true; }\n\n    if (code === 'Escape') {\n        if (check.metaKey || check.ctrlKey || shiftKey || check.altKey ||\n            specialHTML.alert[0] !== null || specialHTML.bigWindow !== null) { return; }\n        const notification = specialHTML.notifications[0];\n        if (notification !== undefined) { notification[1](true); }\n        return;\n    }\n\n    const numberKey = Number(code.replace('Digit', '').replace('Numpad', ''));\n    if (!isNaN(numberKey) && code !== '') {\n        if (check.metaKey || check.ctrlKey || check.altKey) { return; }\n        if (isNaN(Number(key))) {\n            if (!shiftKey) { //Numpad\n                shiftKey = true;\n                check.preventDefault();\n            }\n        }\n\n        if (shiftKey) {\n            if (check.repeat) { return; }\n            toggleSwap(numberKey, 'buildings', true);\n        } else if (numberKey !== 0) {\n            buyBuilding(numberKey, player.stage.active);\n        } else { buyAll(); }\n    } else {\n        let name = check.metaKey ? 'Meta ' : '';\n        if (check.ctrlKey) { name += 'Ctrl '; }\n        if (shiftKey) { name += 'Shift '; }\n        if (check.altKey) { name += 'Alt '; }\n        name += globalSave.toggles[0] ?\n            (key.length === 1 ? key.toUpperCase() : key.replace('Arrow', 'Arrow ')) :\n            (key.length === 1 ? code.replace('Key', '') : code.replace('Arrow', 'Arrow '));\n        const functionTest = hotkeyFunction[hotkeys[name]];\n        if (functionTest !== undefined) {\n            functionTest(check);\n            check.preventDefault();\n        }\n    }\n};\n\nconst changeTab = (direction: 'Left' | 'Right') => {\n    const tabs = global.tabList.tabs;\n    let index = tabs.indexOf(global.tab);\n\n    if (direction === 'Left') {\n        do {\n            if (index <= 0) {\n                index = tabs.length - 1;\n            } else { index--; }\n        } while (!checkTab(tabs[index]));\n        switchTab(tabs[index]);\n    } else {\n        do {\n            if (index >= tabs.length - 1) {\n                index = 0;\n            } else { index++; }\n        } while (!checkTab(tabs[index]));\n        switchTab(tabs[index]);\n    }\n};\n\nconst changeSubtab = (direction: 'Down' | 'Up') => {\n    const tab = global.tab;\n    const subtabs = global.tabList[`${tab}Subtabs`] as string[];\n    if (subtabs.length < 2) { return; } //To remove never[]\n    let index = subtabs.indexOf(global.subtab[`${tab}Current`]);\n\n    if (direction === 'Down') {\n        do {\n            if (index <= 0) {\n                index = subtabs.length - 1;\n            } else { index--; }\n        } while (!checkTab(tab, subtabs[index]));\n        switchTab(tab, subtabs[index]);\n    } else {\n        do {\n            if (index >= subtabs.length - 1) {\n                index = 0;\n            } else { index++; }\n        } while (!checkTab(tab, subtabs[index]));\n        switchTab(tab, subtabs[index]);\n    }\n};\n\nconst changeStage = (direction: 'Left' | 'Right') => {\n    const activeAll = global.stageInfo.activeAll;\n    if (activeAll.length === 1) { return; }\n    let index = activeAll.indexOf(player.stage.active);\n\n    if (direction === 'Left') {\n        if (index <= 0) {\n            index = activeAll.length - 1;\n        } else { index--; }\n        switchStage(activeAll[index]);\n    } else {\n        if (index >= activeAll.length - 1) {\n            index = 0;\n        } else { index++; }\n        switchStage(activeAll[index]);\n    }\n};\n\n/* preventDefault should not be used here */\nexport const handleTouchHotkeys = (event: TouchEvent) => {\n    const touches = event.changedTouches;\n    if (touches.length > 1) { return; }\n    const mainHTML = document.documentElement;\n    const horizontal = (touches[0].clientX - specialHTML.mobileDevice.start[0]) / mainHTML.clientWidth;\n    const vertical = (touches[0].clientY - specialHTML.mobileDevice.start[1]) / mainHTML.clientHeight;\n\n    if (Math.abs(vertical) > 0.2) {\n        if (Math.abs(vertical) < 0.8 || Math.abs(horizontal) > 0.2) { return; }\n        changeSubtab(vertical > 0 ? 'Up' : 'Down');\n        return;\n    } else if (Math.abs(horizontal) < 0.6) { return; }\n    changeTab(horizontal > 0 ? 'Left' : 'Right');\n};\n", "import { assignHotkeys, removeHotkey } from './Hotkeys';\nimport { getId, getQuery, globalSaveStart, pauseGame } from './Main';\nimport { deepClone, global, player } from './Player';\nimport { assignResetInformation } from './Stage';\nimport type { globalSaveType, hotkeysList } from './Types';\nimport { format, numbersUpdate, stageUpdate, visualTrueStageUnlocks, visualUpdate } from './Update';\n\nexport const globalSave: globalSaveType = {\n    intervals: {\n        main: 20,\n        offline: 40,\n        numbers: 80,\n        visual: 1000,\n        autoSave: 20000\n    },\n    hotkeys: {\n        stage: ['S', 'S'],\n        discharge: ['D', 'D'],\n        vaporization: ['V', 'V'],\n        rank: ['R', 'R'],\n        collapse: ['C', 'C'],\n        galaxy: ['G', 'G'],\n        pause: ['P', 'P'],\n        makeAll: ['M', 'M'],\n        toggleAll: ['Shift A', 'Shift A'],\n        merge: ['Shift M', 'Shift M'],\n        universe: ['Shift U', 'Shift U'],\n        exitChallenge: ['Shift E', 'Shift E'],\n        tabRight: ['Arrow Right', 'Arrow Right'],\n        tabLeft: ['Arrow Left', 'Arrow Left'],\n        subtabUp: ['Arrow Up', 'Arrow Up'],\n        subtabDown: ['Arrow Down', 'Arrow Down'],\n        stageRight: ['Shift Arrow Right', 'Shift Arrow Right'],\n        stageLeft: ['Shift Arrow Left', 'Shift Arrow Left']\n    },\n    toggles: [false, false, false, false],\n    format: ['.', ''],\n    theme: null,\n    fontSize: 16,\n    MDSettings: [false, false],\n    SRSettings: [false, false, false],\n    developerMode: false\n};\n\nexport const saveGlobalSettings = (noSaving = false): string => {\n    const hotkeysClone = deepClone(globalSave.hotkeys);\n    const encoder = new TextEncoder();\n    for (const key in hotkeysClone) {\n        const array = hotkeysClone[key as hotkeysList];\n        for (let i = 0; i < array.length; i++) {\n            array[i] = String.fromCharCode(...encoder.encode(array[i]));\n        }\n    }\n    const clone = { ...globalSave };\n    clone.hotkeys = hotkeysClone;\n    const save = btoa(JSON.stringify(clone));\n    if (!noSaving) { localStorage.setItem(specialHTML.localStorage.settings, save); }\n    return save;\n};\n\nexport const toggleSpecial = (number: number, type: 'global' | 'mobile' | 'reader', change = false, reload = false) => {\n    let toggles;\n    if (type === 'mobile') {\n        toggles = globalSave.MDSettings;\n    } else if (type === 'reader') {\n        toggles = globalSave.SRSettings;\n    } else {\n        toggles = globalSave.toggles;\n    }\n\n    if (change) {\n        if (reload) {\n            return void (async() => {\n                if (!await Confirm('Changing this setting will reload game, confirm?\\n(Game will not autosave)')) { return; }\n                pauseGame();\n                toggles[number] = !toggles[number];\n                saveGlobalSettings();\n                window.location.reload();\n                void Alert('Awaiting game reload');\n            })();\n        } else {\n            toggles[number] = !toggles[number];\n            saveGlobalSettings();\n        }\n    }\n\n    let toggleHTML;\n    if (type === 'mobile') {\n        toggleHTML = getId(`MDToggle${number}`);\n    } else if (type === 'reader') {\n        toggleHTML = getId(`SRToggle${number}`);\n    } else {\n        toggleHTML = getId(`globalToggle${number}`);\n    }\n\n    if (!toggles[number]) {\n        toggleHTML.style.color = '';\n        toggleHTML.style.borderColor = '';\n        toggleHTML.textContent = 'OFF';\n    } else {\n        toggleHTML.style.color = 'var(--red-text)';\n        toggleHTML.style.borderColor = 'crimson';\n        toggleHTML.textContent = 'ON';\n    }\n};\n\nexport const specialHTML = { //Images here are from true vacuum for easier cache\n    /** [textContent] */\n    resetHTML: ['', 'Discharge', 'Vaporization', 'Rank', 'Collapse', 'Merge', ''],\n    longestBuilding: 7, //+1\n    /** [src] */\n    buildingHTML: [\n        [],\n        ['Preon.png', 'Quarks.png', 'Particle.png', 'Atom.png', 'Molecule.png'],\n        ['Drop.png', 'Puddle.png', 'Pond.png', 'Lake.png', 'Sea.png', 'Ocean.png'],\n        ['Cosmic%20dust.png', 'Planetesimal.png', 'Protoplanet.png', 'Natural%20satellite.png', 'Subsatellite.png'],\n        ['Brown%20dwarf.png', 'Orange%20dwarf.png', 'Red%20supergiant.png', 'Blue%20hypergiant.png', 'Quasi%20star.png'],\n        ['Nebula.png', 'Star%20cluster.png', 'Galaxy.png'],\n        ['Universe.png']\n    ],\n    longestUpgrade: 14,\n    /** [src] */\n    upgradeHTML: [\n        [], [\n            'UpgradeQ1.png',\n            'UpgradeQ2.png',\n            'UpgradeQ3.png',\n            'UpgradeQ4.png',\n            'UpgradeQ5.png',\n            'UpgradeQ6.png',\n            'UpgradeQ7.png',\n            'UpgradeQ8.png',\n            'UpgradeQ9.png',\n            'UpgradeQ10.png',\n            'UpgradeQ11.png'\n        ], [\n            'UpgradeW1.png',\n            'UpgradeW2.png',\n            'UpgradeW3.png',\n            'UpgradeW4.png',\n            'UpgradeW5.png',\n            'UpgradeW6.png',\n            'UpgradeW7.png',\n            'UpgradeW8.png',\n            'UpgradeW9.png'\n        ], [\n            'UpgradeA1.png',\n            'UpgradeA2.png',\n            'UpgradeA3.png',\n            'UpgradeA4.png',\n            'UpgradeA5.png',\n            'UpgradeA6.png',\n            'UpgradeA7.png',\n            'UpgradeA8.png',\n            'UpgradeA9.png',\n            'UpgradeA10.png',\n            'UpgradeA11.png',\n            'UpgradeA12.png',\n            'UpgradeA13.png',\n            'UpgradeA14.png'\n        ], [\n            'UpgradeS1.png',\n            'UpgradeS2.png',\n            'UpgradeS3.png',\n            'UpgradeS4.png',\n            'UpgradeS5.png'\n        ], [\n            'UpgradeG1.png',\n            'UpgradeG2.png',\n            'UpgradeG3.png',\n            'UpgradeG4.png',\n            'Missing.png'\n        ], []\n    ],\n    longestResearch: 9,\n    /** [src, className] */\n    researchHTML: [\n        [], [\n            ['ResearchQ1.png', 'stage1borderImage'],\n            ['ResearchQ2.png', 'stage1borderImage'],\n            ['ResearchQ3.png', 'stage1borderImage'],\n            ['ResearchQ4.png', 'stage4borderImage'],\n            ['ResearchQ5.png', 'stage4borderImage'],\n            ['ResearchQ6.png', 'stage4borderImage']\n        ], [\n            ['ResearchW1.png', 'stage2borderImage'],\n            ['ResearchW2.png', 'stage2borderImage'],\n            ['ResearchW3.png', 'stage2borderImage'],\n            ['ResearchW4.png', 'stage2borderImage'],\n            ['ResearchW5.png', 'stage2borderImage'],\n            ['ResearchW6.png', 'stage2borderImage']\n        ], [\n            ['ResearchA1.png', 'stage3borderImage'],\n            ['ResearchA2.png', 'stage2borderImage'],\n            ['ResearchA3.png', 'stage3borderImage'],\n            ['ResearchA4.png', 'stage3borderImage'],\n            ['ResearchA5.png', 'stage3borderImage'],\n            ['ResearchA6.png', 'stage3borderImage'],\n            ['ResearchA7.png', 'stage1borderImage'],\n            ['ResearchA8.png', 'redBorderImage'],\n            ['ResearchA9.png', 'stage1borderImage']\n        ], [\n            ['ResearchS1.png', 'stage5borderImage'],\n            ['ResearchS2.png', 'stage5borderImage'],\n            ['ResearchS3.png', 'redBorderImage'],\n            ['ResearchS4.png', 'stage5borderImage'],\n            ['ResearchS5.png', 'stage6borderImage'],\n            ['ResearchS6.png', 'stage4borderImage']\n        ], [\n            ['ResearchG1.png', 'stage1borderImage'],\n            ['ResearchG2.png', 'stage6borderImage'],\n            ['ResearchG3.png', 'stage6borderImage'],\n            ['ResearchG4.png', 'stage4borderImage']\n        ], []\n    ],\n    longestResearchExtra: 6,\n    /** [src, className] */\n    researchExtraDivHTML: [\n        [],\n        ['Energy%20Researches.png', 'stage4borderImage'],\n        ['Cloud%20Researches.png', 'stage2borderImage'],\n        ['Rank%20Researches.png', 'stage6borderImage'],\n        ['Collapse%20Researches.png', 'stage6borderImage'],\n        ['Galaxy%20Researches.png', 'stage3borderImage'],\n        ['Missing.png', 'redBorderImage']\n    ],\n    /** [src, className] */\n    researchExtraHTML: [\n        [], [\n            ['ResearchEnergy1.png', 'stage1borderImage'],\n            ['ResearchEnergy2.png', 'stage5borderImage'],\n            ['ResearchEnergy3.png', 'stage3borderImage'],\n            ['ResearchEnergy4.png', 'stage1borderImage'],\n            ['ResearchEnergy5.png', 'stage6borderImage'],\n            ['ResearchEnergy6.png', 'stage1borderImage']\n        ], [\n            ['ResearchClouds1.png', 'stage3borderImage'],\n            ['ResearchClouds2.png', 'stage2borderImage'],\n            ['ResearchClouds3.png', 'stage4borderImage'],\n            ['ResearchClouds4.png', 'stage2borderImage'],\n            ['ResearchClouds5.png', 'stage2borderImage']\n        ], [\n            ['ResearchRank1.png', 'stage3borderImage'],\n            ['ResearchRank2.png', 'stage3borderImage'],\n            ['ResearchRank3.png', 'stage3borderImage'],\n            ['ResearchRank4.png', 'stage2borderImage'],\n            ['ResearchRank5.png', 'stage2borderImage'],\n            ['ResearchRank6.png', 'stage6borderImage']\n        ], [\n            ['ResearchCollapse1.png', 'stage6borderImage'],\n            ['ResearchCollapse2.png', 'redBorderImage'],\n            ['ResearchCollapse3.png', 'stage1borderImage'],\n            ['ResearchCollapse4.png', 'stage6borderImage']\n        ], [\n            ['ResearchGalaxy1.png', 'stage3borderImage'],\n            ['Missing.png', 'stage3borderImage'],\n            ['Missing.png', 'greenBorderImage']\n        ], []\n    ],\n    longestFooterStats: 3,\n    /** [src, className, textcontent] */\n    footerStatsHTML: [\n        [], [\n            ['Energy%20mass.png', 'stage1borderImage cyanText', 'Mass'],\n            ['Energy.png', 'stage4borderImage orangeText', 'Energy']\n        ], [\n            ['Water.png', 'stage2borderImage blueText', 'Moles'],\n            ['Drop.png', 'stage2borderImage blueText', 'Drops'],\n            ['Clouds.png', 'stage3borderImage grayText', 'Clouds']\n        ], [\n            ['Mass.png', 'stage3borderImage grayText', 'Mass']\n        ], [\n            ['Main_sequence%20mass.png', 'stage1borderImage cyanText', 'Mass'],\n            ['Elements.png', 'stage4borderImage orangeText', 'Elements']\n        ], [\n            ['Main_sequence%20mass.png', 'stage1borderImage cyanText', 'Mass'],\n            ['Elements.png', 'stage4borderImage orangeText', 'Elements'],\n            ['Stars.png', 'redBorderImage redText', 'Stars']\n        ], [\n            ['Dark%20matter.png', 'stage3borderImage grayText', 'Matter'],\n            ['Cosmon.png', 'stage6borderImage darkvioletText', 'Cosmon']\n        ]\n    ],\n    mobileDevice: { //All browsers that I tested didn't properly detected more than 1 touch\n        /** [X, Y] */\n        start: [0, 0]\n    },\n    localStorage: {\n        /** Index for game's primary save slot */\n        main: 'save',\n        /** Index for global game settings */\n        settings: 'fundamentalSettings'\n    },\n    cache: {\n        imagesDiv: document.createElement('div'), //Saved just in case\n        innerHTML: new Map<string | HTMLElement, string>(), //Lazy way to get around automatic html replacings\n        idMap: new Map<string, HTMLElement>(),\n        classMap: new Map<string, HTMLCollectionOf<HTMLElement>>(),\n        queryMap: new Map<string, HTMLElement>()\n    },\n    /** [text, true ? incrementFunc : closeFunc] */\n    notifications: [] as Array<[string, (instantClose?: boolean) => void]>,\n    /** [priority, closeFunc] */\n    alert: [null, null] as [number | null, (() => void) | null],\n    bigWindow: null as string | null,\n    styleSheet: document.createElement('style') //Secondary\n};\n\nexport const preventImageUnload = () => {\n    const { footerStatsHTML: footer, buildingHTML: build, upgradeHTML: upgrade, researchHTML: research, researchExtraHTML: extra, researchExtraDivHTML: extraDiv } = specialHTML;\n\n    let images = '<img src=\"Used_art/Red%20giant.png\" loading=\"lazy\"><img src=\"Used_art/White%20dwarf.png\" loading=\"lazy\">';\n    for (let s = 1; s <= 6; s++) {\n        for (let i = 0; i < footer[s].length; i++) {\n            if (s === 2) {\n                if (i === 2) { continue; } //Drops\n            } else if (s === 5 && i < 2) { continue; } //Solar mass and Elements\n            images += `<img src=\"Used_art/${footer[s][i][0]}\" loading=\"lazy\">`;\n        }\n        for (let i = 0; i < build[s].length; i++) {\n            images += `<img src=\"Used_art/${build[s][i]}\" loading=\"lazy\">`;\n        }\n        for (let i = 0; i < upgrade[s].length; i++) {\n            images += `<img src=\"Used_art/${upgrade[s][i]}\" loading=\"lazy\">`;\n        }\n        for (let i = 0; i < research[s].length; i++) {\n            images += `<img src=\"Used_art/${research[s][i][0]}\" loading=\"lazy\">`;\n        }\n        for (let i = 0; i < extra[s].length; i++) {\n            images += `<img src=\"Used_art/${extra[s][i][0]}\" loading=\"lazy\">`;\n        }\n        images += `<img src=\"Used_art/${extraDiv[s][0]}\" loading=\"lazy\">`;\n        images += `<img src=\"Used_art/Stage${s}%20border.png\" loading=\"lazy\">`;\n    }\n    specialHTML.cache.imagesDiv.innerHTML = images;\n};\n\n/** Not providing value for 'theme' will make it use one from globalSave and remove all checks */\nexport const setTheme = (theme = 'current' as 'current' | number | null) => {\n    if (theme !== 'current') {\n        if (theme !== null) {\n            if (player.stage.true < theme) { theme = null; }\n            if (theme === 6 && player.stage.true < 7) { theme = null; }\n        }\n        getId(`switchTheme${globalSave.theme ?? 0}`).style.textDecoration = '';\n\n        globalSave.theme = theme;\n        saveGlobalSettings();\n        getId('currentTheme').textContent = theme === null ? 'Default' : global.stageInfo.word[theme];\n        getId(`switchTheme${theme ?? 0}`).style.textDecoration = 'underline';\n    } else { theme = globalSave.theme; }\n\n    const upgradeTypes = ['upgrade', 'element', 'inflation'];\n    const properties = {\n        '--background-color': '#030012',\n        '--window-color': '#12121c',\n        '--window-border': 'cornflowerblue',\n        '--footer-color': 'darkblue',\n        '--button-color': 'mediumblue',\n        '--button-border': 'darkcyan',\n        '--button-hover': '#2626ff',\n        '--building-afford': '#a90000',\n        '--tab-active': '#8b00c5',\n        '--tab-elements': '#9f6700',\n        '--tab-strangeness': '#00b100',\n        '--tab-inflation': '#6c1ad1',\n        '--hollow-hover': '#170089',\n        '--footerButton-hover': '#181818',\n        '--input-border': '#831aa5',\n        '--input-text': '#cf71ff',\n        '--button-text': '#e3e3e3',\n        '--main-text': 'var(--cyan-text)',\n        '--white-text': 'white',\n        //'--cyan-text': '#03d3d3',\n        '--blue-text': 'dodgerblue',\n        '--orange-text': 'darkorange',\n        '--gray-text': '#8f8f8f',\n        '--orchid-text': '#e14bdb',\n        '--darkorchid-text': '#bd24ef',\n        '--darkviolet-text': '#8b3cec',\n        '--red-text': '#eb0000',\n        '--green-text': '#00e900',\n        '--yellow-text': '#fafa00'\n        //'--brown-text': '#9b7346'\n    };\n\n    /* Many of these colors will need to be changed in other places (find them with quick search, there are too many of them) */\n    switch (theme ?? player.stage.active) {\n        case 1:\n            for (const text of upgradeTypes) {\n                getId(`${text}Text`).style.color = '';\n                getId(`${text}Effect`).style.color = '';\n                getId(`${text}Cost`).style.color = '';\n            }\n            properties['--tab-inflation'] = 'var(--tab-active)';\n            break;\n        case 2:\n            for (const text of upgradeTypes) {\n                getId(`${text}Text`).style.color = 'var(--white-text)';\n                getId(`${text}Effect`).style.color = 'var(--green-text)';\n                getId(`${text}Cost`).style.color = 'var(--cyan-text)';\n            }\n            properties['--background-color'] = '#070026';\n            properties['--window-color'] = '#000052';\n            properties['--window-border'] = 'blue';\n            properties['--footer-color'] = '#0000db';\n            properties['--button-color'] = '#0000eb';\n            properties['--button-border'] = '#386cc7';\n            properties['--button-hover'] = '#2929ff';\n            properties['--building-afford'] = '#b30000';\n            properties['--tab-active'] = '#990000';\n            properties['--hollow-hover'] = '#2400d7';\n            properties['--input-border'] = '#4747ff';\n            properties['--input-text'] = 'dodgerblue';\n            properties['--main-text'] = 'var(--blue-text)';\n            properties['--gray-text'] = '#9b9b9b';\n            properties['--darkorchid-text'] = '#c71bff';\n            properties['--darkviolet-text'] = '#8766ff';\n            properties['--green-text'] = '#82cb3b';\n            properties['--red-text'] = '#f70000';\n            break;\n        case 3:\n            for (const text of upgradeTypes) {\n                getId(`${text}Text`).style.color = 'var(--orange-text)';\n                getId(`${text}Effect`).style.color = '';\n                getId(`${text}Cost`).style.color = 'var(--green-text)';\n            }\n            properties['--background-color'] = '#000804';\n            properties['--window-color'] = '#2e1200';\n            properties['--window-border'] = '#31373e';\n            properties['--footer-color'] = '#221a00';\n            properties['--button-color'] = '#291344';\n            properties['--button-border'] = '#424242';\n            properties['--button-hover'] = '#382055';\n            properties['--building-afford'] = '#9e0000';\n            properties['--tab-active'] = '#8d4c00';\n            properties['--tab-elements'] = 'var(--tab-active)';\n            properties['--hollow-hover'] = '#5a2100';\n            properties['--footerButton-hover'] = '#1a1a1a';\n            properties['--input-border'] = '#8b4a00';\n            properties['--input-text'] = '#e77e00';\n            properties['--main-text'] = 'var(--gray-text)';\n            properties['--white-text'] = '#dfdfdf';\n            properties['--orange-text'] = '#f58600';\n            properties['--green-text'] = '#00db00';\n            break;\n        case 4:\n            for (const text of upgradeTypes) {\n                getId(`${text}Text`).style.color = 'var(--blue-text)';\n                getId(`${text}Effect`).style.color = 'var(--green-text)';\n                getId(`${text}Cost`).style.color = 'var(--cyan-text)';\n            }\n            properties['--background-color'] = '#140e04';\n            properties['--window-color'] = '#4e0000';\n            properties['--window-border'] = '#894800';\n            properties['--footer-color'] = '#4e0505';\n            properties['--button-color'] = '#6a3700';\n            properties['--button-border'] = '#a35700';\n            properties['--button-hover'] = '#8a4700';\n            properties['--building-afford'] = '#007f95';\n            properties['--tab-active'] = '#008297';\n            properties['--tab-elements'] = 'var(--tab-active)';\n            properties['--tab-strangeness'] = '#00a500';\n            properties['--hollow-hover'] = '#605100';\n            properties['--footerButton-hover'] = '#212121';\n            properties['--input-border'] = '#008399';\n            properties['--input-text'] = '#05c3c3';\n            properties['--button-text'] = '#d9d900';\n            properties['--main-text'] = 'var(--orange-text)';\n            properties['--white-text'] = '#e5e500';\n            properties['--blue-text'] = '#2e96ff';\n            properties['--gray-text'] = '#8b8b8b';\n            properties['--darkorchid-text'] = '#c71bff';\n            properties['--darkviolet-text'] = '#9457ff';\n            properties['--red-text'] = 'red';\n            properties['--green-text'] = '#00e600';\n            properties['--yellow-text'] = 'var(--green-text)';\n            break;\n        case 5:\n            for (const text of upgradeTypes) {\n                getId(`${text}Text`).style.color = 'var(--orange-text)';\n                getId(`${text}Effect`).style.color = 'var(--green-text)';\n                getId(`${text}Cost`).style.color = 'var(--red-text)';\n            }\n            properties['--background-color'] = '#060010';\n            properties['--window-color'] = '#001d42';\n            properties['--window-border'] = '#35466e';\n            properties['--footer-color'] = '#2f005c';\n            properties['--button-color'] = '#4a008f';\n            properties['--button-border'] = '#8f004c';\n            properties['--button-hover'] = '#6800d6';\n            properties['--building-afford'] = '#8603ff';\n            properties['--tab-active'] = '#8500ff';\n            properties['--tab-inflation'] = 'var(--tab-active)';\n            properties['--hollow-hover'] = '#3b0080';\n            properties['--footerButton-hover'] = '#1a1a1a';\n            properties['--input-border'] = '#3656a1';\n            properties['--input-text'] = '#6a88cd';\n            properties['--button-text'] = '#fc9cfc';\n            properties['--main-text'] = 'var(--darkorchid-text)';\n            properties['--white-text'] = '#ff79ff';\n            properties['--orchid-text'] = '#ff00f4';\n            properties['--darkorchid-text'] = '#c000ff';\n            properties['--darkviolet-text'] = '#8861ff';\n            properties['--yellow-text'] = 'var(--darkviolet-text)';\n            break;\n        case 6:\n            for (const text of upgradeTypes) {\n                getId(`${text}Text`).style.color = 'var(--orchid-text)';\n                getId(`${text}Effect`).style.color = 'var(--orange-text)';\n                getId(`${text}Cost`).style.color = 'var(--red-text)';\n            }\n            properties['--background-color'] = 'black';\n            properties['--window-color'] = '#01003c';\n            properties['--window-border'] = '#7100ff';\n            properties['--footer-color'] = '#00007a';\n            properties['--button-color'] = '#2b0095';\n            properties['--button-border'] = '#6c1ad1';\n            properties['--button-hover'] = '#3d00d6';\n            properties['--building-afford'] = '#b30000';\n            properties['--tab-active'] = '#8d0000';\n            properties['--tab-inflation'] = 'var(--tab-active)';\n            properties['--hollow-hover'] = '#490070';\n            properties['--input-border'] = '#a50000';\n            properties['--input-text'] = 'red';\n            properties['--button-text'] = '#bfbdff';\n            properties['--main-text'] = 'var(--darkviolet-text)';\n            properties['--white-text'] = '#aba8ff';\n            properties['--gray-text'] = '#9b9b9b';\n            properties['--darkviolet-text'] = '#8157ff';\n            properties['--red-text'] = 'red';\n            properties['--yellow-text'] = 'var(--green-text)';\n    }\n\n    const body = document.documentElement.style;\n    body.setProperty('--transition-all', '800ms');\n    body.setProperty('--transition-buttons', '600ms');\n    for (const property in properties) { body.setProperty(property, properties[property as '--main-text']); }\n\n    setTimeout(() => {\n        body.setProperty('--transition-all', '0ms');\n        body.setProperty('--transition-buttons', '100ms');\n    }, 800);\n};\n\nexport const Alert = async(text: string, priority = 0): Promise<void> => {\n    return await new Promise((resolve) => {\n        if (specialHTML.alert[0] !== null) {\n            if (specialHTML.alert[0] < priority) {\n                (specialHTML.alert[1] as () => undefined)();\n                Notify(`Alert has been replaced with higher priority one\\nOld text: ${getId('alertText').textContent}`);\n            } else {\n                resolve();\n                Notify(`Another Alert is already active\\nMissed text: ${text}`);\n                return;\n            }\n        }\n\n        getId('alertText').textContent = text;\n        const body = document.body;\n        const blocker = getId('alertMain');\n        const confirm = getId('alertConfirm');\n        blocker.style.display = '';\n        body.classList.remove('noTextSelection');\n        const oldFocus = document.activeElement as HTMLElement | null;\n        confirm.focus();\n\n        const key = async(event: KeyboardEvent) => {\n            if (event.metaKey || event.ctrlKey || event.altKey) { return; }\n            const code = event.code;\n            if (code === 'Escape' || code === 'Enter' || code === 'Space') {\n                if (event.shiftKey) { return; }\n                event.preventDefault();\n                close();\n            } else if (code === 'Tab') {\n                event.preventDefault();\n                confirm.focus();\n            }\n        };\n        const close = () => {\n            if (!globalSave.toggles[2]) { body.classList.add('noTextSelection'); }\n            blocker.style.display = 'none';\n            body.removeEventListener('keydown', key);\n            confirm.removeEventListener('click', close);\n            specialHTML.alert = [null, null];\n            oldFocus?.focus();\n            resolve();\n        };\n        specialHTML.alert = [priority, close];\n        body.addEventListener('keydown', key);\n        confirm.addEventListener('click', close);\n    });\n};\n\nexport const Confirm = async(text: string, priority = 0): Promise<boolean> => {\n    return await new Promise((resolve) => {\n        if (specialHTML.alert[0] !== null) {\n            if (specialHTML.alert[0] < priority) {\n                (specialHTML.alert[1] as () => undefined)();\n                Notify(`Alert has been replaced with higher priority one\\nOld text: ${getId('alertText').textContent}`);\n            } else {\n                resolve(false);\n                Notify(`Another Alert is already active\\nMissed text: ${text}`);\n                return;\n            }\n        }\n\n        getId('alertText').textContent = text;\n        const body = document.body;\n        const blocker = getId('alertMain');\n        const cancel = getId('alertCancel');\n        const confirm = getId('alertConfirm');\n        blocker.style.display = '';\n        cancel.style.display = '';\n        body.classList.remove('noTextSelection');\n        const oldFocus = document.activeElement as HTMLElement | null;\n        confirm.focus();\n\n        let result = false;\n        const yes = () => {\n            result = true;\n            close();\n        };\n        const key = (event: KeyboardEvent) => {\n            if (event.metaKey || event.ctrlKey || event.altKey) { return; }\n            const code = event.code;\n            if (code === 'Escape') {\n                if (event.shiftKey) { return; }\n                event.preventDefault();\n                close();\n            } else if (code === 'Enter' || code === 'Space') {\n                if (event.shiftKey || document.activeElement === cancel) { return; }\n                event.preventDefault();\n                yes();\n            } else if (code === 'Tab') {\n                event.preventDefault();\n                (document.activeElement === cancel ? confirm : cancel).focus();\n            }\n        };\n        const close = () => {\n            if (!globalSave.toggles[2]) { body.classList.add('noTextSelection'); }\n            blocker.style.display = 'none';\n            cancel.style.display = 'none';\n            body.removeEventListener('keydown', key);\n            confirm.removeEventListener('click', yes);\n            cancel.removeEventListener('click', close);\n            specialHTML.alert = [null, null];\n            oldFocus?.focus();\n            resolve(result);\n        };\n        specialHTML.alert = [priority, close];\n        body.addEventListener('keydown', key);\n        confirm.addEventListener('click', yes);\n        cancel.addEventListener('click', close);\n    });\n};\n\nexport const Prompt = async(text: string, placeholder = '', priority = 0): Promise<string | null> => {\n    return await new Promise((resolve) => {\n        if (specialHTML.alert[0] !== null) {\n            if (specialHTML.alert[0] < priority) {\n                (specialHTML.alert[1] as () => undefined)();\n                Notify(`Alert has been replaced with higher priority one\\nOld text: ${getId('alertText').textContent}`);\n            } else {\n                resolve(null);\n                Notify(`Another Alert is already active\\nMissed text: ${text}`);\n                return;\n            }\n        }\n\n        getId('alertText').textContent = text;\n        const body = document.body;\n        const blocker = getId('alertMain');\n        const input = getId('alertInput') as HTMLInputElement;\n        const cancel = getId('alertCancel');\n        const confirm = getId('alertConfirm');\n        blocker.style.display = '';\n        cancel.style.display = '';\n        input.style.display = '';\n        body.classList.remove('noTextSelection');\n        input.placeholder = placeholder;\n        input.value = '';\n        const oldFocus = document.activeElement as HTMLElement | null;\n        input.focus();\n\n        let result: null | string = null;\n        const yes = () => {\n            result = input.value === '' ? input.placeholder : input.value;\n            close();\n        };\n        const key = (event: KeyboardEvent) => {\n            if (event.metaKey || event.ctrlKey || event.altKey) { return; }\n            const code = event.code;\n            if (code === 'Escape') {\n                if (event.shiftKey) { return; }\n                event.preventDefault();\n                close();\n            } else if (code === 'Enter' || code === 'Space') {\n                const active = document.activeElement;\n                if (event.shiftKey || (code === 'Space' && active === input) || active === cancel) { return; }\n                event.preventDefault();\n                yes();\n            } else if (code === 'Tab') {\n                if (event.shiftKey && document.activeElement === input) {\n                    event.preventDefault();\n                    cancel.focus();\n                } else if (!event.shiftKey && document.activeElement === cancel) {\n                    event.preventDefault();\n                    input.focus();\n                }\n            }\n        };\n        const close = () => {\n            if (!globalSave.toggles[2]) { body.classList.add('noTextSelection'); }\n            blocker.style.display = 'none';\n            cancel.style.display = 'none';\n            input.style.display = 'none';\n            body.removeEventListener('keydown', key);\n            confirm.removeEventListener('click', yes);\n            cancel.removeEventListener('click', close);\n            specialHTML.alert = [null, null];\n            oldFocus?.focus();\n            resolve(result);\n        };\n        specialHTML.alert = [priority, close];\n        body.addEventListener('keydown', key);\n        confirm.addEventListener('click', yes);\n        cancel.addEventListener('click', close);\n    });\n};\n\n/** Repeats will make it behave as if X duplicates have been detected */\nexport const Notify = (text: string, repeats = 0) => {\n    const { notifications } = specialHTML;\n\n    let index;\n    for (let i = 0; i < notifications.length; i++) {\n        if (notifications[i][0] === text) {\n            index = i;\n            break;\n        }\n    }\n\n    if (index === undefined) {\n        let count = 1 + repeats;\n        let timeout: number;\n\n        const html = document.createElement('p');\n        html.textContent = `${text}${count > 1 ? ` | x${count}` : ''}`;\n        html.style.animation = 'hideX 800ms ease-in-out reverse';\n        html.style.pointerEvents = 'none';\n        if (globalSave.SRSettings[0]) { html.role = 'alert'; }\n        getId('notifications').append(html);\n\n        const pointer = notifications[notifications.push([text, (instantClose = false) => {\n            if (instantClose) {\n                if (html.style.animation === '') { remove(); }\n                return;\n            }\n            html.textContent = `${text} | x${++count}`;\n            if (timeout === undefined) { return; } //Required to make it work properly if call happened too early\n            clearTimeout(timeout);\n            timeout = setTimeout(remove, 7200);\n        }]) - 1];\n        const remove = () => {\n            notifications.splice(notifications.indexOf(pointer), 1);\n            html.removeEventListener('click', remove);\n            html.style.animation = 'hideX 800ms ease-in-out forwards';\n            html.style.pointerEvents = 'none';\n            setTimeout(() => html.remove(), 800);\n            clearTimeout(timeout);\n        };\n        setTimeout(() => {\n            html.style.animation = '';\n            html.style.pointerEvents = '';\n            timeout = setTimeout(remove, 7200);\n            html.addEventListener('click', remove);\n        }, 800);\n    } else { notifications[index][1](); }\n};\n\nexport const hideFooter = () => {\n    const toggleData = getId('hideToggle').dataset;\n    if (toggleData.disabled === 'true') { return; }\n    const footer = getId('footer');\n    const footerArea = getId('footerMain');\n    const arrow = getId('hideArrow');\n\n    const animationReset = () => {\n        footer.style.animation = '';\n        arrow.style.animation = '';\n        toggleData.disabled = '';\n    };\n\n    global.footer = !global.footer;\n    toggleData.disabled = 'true';\n    if (global.footer) {\n        footerArea.style.display = '';\n        arrow.style.transform = '';\n        footer.style.animation = 'hideY 800ms reverse';\n        arrow.style.animation = 'rotate 800ms reverse';\n        getQuery('#hideToggle > p').textContent = 'Hide';\n        getId('stageSelect').classList.add('active');\n        setTimeout(animationReset, 800);\n\n        visualUpdate();\n        numbersUpdate();\n    } else {\n        footer.style.animation = 'hideY 800ms backwards';\n        arrow.style.animation = 'rotate 800ms backwards';\n        getQuery('#hideToggle > p').textContent = 'Show';\n        getId('stageSelect').classList.remove('active');\n        setTimeout(() => {\n            footerArea.style.display = 'none';\n            arrow.style.transform = 'rotate(180deg)';\n            animationReset();\n        }, 800);\n    }\n};\n\nexport const changeFontSize = (initial = false) => {\n    const input = getId('customFontSize') as HTMLInputElement;\n    const size = Math.min(Math.max(initial ? globalSave.fontSize : (input.value === '' ? 16 : Math.floor(Number(input.value) * 100) / 100), 12), 24);\n    if (!initial) {\n        globalSave.fontSize = size;\n        saveGlobalSettings();\n\n        (getId('milestonesMultiline').parentElement as HTMLElement).style.minHeight = '';\n    }\n\n    document.documentElement.style.fontSize = size === 16 ? '' : `${size}px`;\n    input.value = `${size}`;\n    adjustCSSRules(initial);\n};\n/* Only decent work around media not allowing var() and rem units being bugged */\nconst adjustCSSRules = (initial: boolean) => {\n    const styleSheet = (getId('primaryRules') as HTMLStyleElement).sheet;\n    if (styleSheet == null) { //Safari doesn't wait for CSS to load even if script is defered\n        if (initial) {\n            return getId('primaryRules').addEventListener('load', () => {\n                adjustCSSRules(false);\n            }, { once: true });\n        }\n        return Notify(`Due to ${styleSheet} related Error some font size features will not work`);\n    }\n    const styleLength = styleSheet.cssRules.length - 1;\n    const fontRatio = globalSave.fontSize / 16;\n    const rule1 = styleSheet.cssRules[styleLength - 1] as CSSMediaRule; //Primary phone size\n    const rule2 = styleSheet.cssRules[styleLength] as CSSMediaRule; //Tiny phone size\n    styleSheet.deleteRule(styleLength);\n    styleSheet.deleteRule(styleLength - 1);\n    styleSheet.insertRule(rule1.cssText.replace(rule1.conditionText, `screen and (max-width: ${893 * fontRatio + 32}px)`), styleLength - 1);\n    styleSheet.insertRule(rule2.cssText.replace(rule2.conditionText, `screen and (max-width: ${362 * fontRatio + 32}px)`), styleLength);\n};\n\nexport const changeFormat = (point: boolean) => {\n    const htmlInput = (point ? getId('decimalPoint') : getId('thousandSeparator')) as HTMLInputElement;\n    let value = htmlInput.value.replace(' ', '\u00A0'); //No break space\n    const allowed = ['.', '\u00B7', ',', '\u00A0', '_', \"'\", '\"', '`', '|'].includes(value);\n    if (!allowed || globalSave.format[point ? 1 : 0] === value) {\n        if (point && globalSave.format[1] === '.') {\n            (getId('thousandSeparator') as HTMLInputElement).value = '';\n            globalSave.format[1] = '';\n        }\n        value = point ? '.' : '';\n        htmlInput.value = value;\n    }\n    globalSave.format[point ? 0 : 1] = value;\n    saveGlobalSettings();\n};\n\n/** Short is only for hotkeys that can change */\nexport const SRHotkeysInfo = (short = false) => {\n    const index = globalSave.toggles[0] ? 0 : 1;\n    const resetName = specialHTML.resetHTML[player.stage.active];\n    const resetHotkey = globalSave.hotkeys[resetName.toLowerCase() as hotkeysList];\n    const list = [resetHotkey !== undefined ? resetHotkey[index] : ''];\n    if (!short) {\n        list.push(\n            globalSave.hotkeys.tabLeft[index], globalSave.hotkeys.tabRight[index],\n            globalSave.hotkeys.subtabDown[index], globalSave.hotkeys.subtabUp[index],\n            globalSave.hotkeys.stageLeft[index], globalSave.hotkeys.stageRight[index],\n            globalSave.hotkeys.stage[index],\n            globalSave.hotkeys.makeAll[index],\n            globalSave.hotkeys.toggleAll[index]\n        );\n    }\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] == null || list[i] === '') { list[i] = 'None'; }\n    }\n    const reset1Id = getId('reset1Main');\n    reset1Id.ariaLabel = `${resetName} reset`;\n    reset1Id.ariaDescription = `Hotkey is ${list[0]}`;\n    if (short) { return; }\n    getQuery('#footerMain > nav').ariaDescription = `Hotkeys are ${list[1]} and ${list[2]}`;\n    getId('subtabs').ariaDescription = `Hotkeys are ${list[3]} and ${list[4]}`;\n    getId('stageSelect').ariaDescription = `Hotkeys are ${list[5]} and ${list[6]}`;\n    getId('resetStage').ariaDescription = `Hotkey is ${list[7]}`;\n    getId('makeAllStructures').ariaDescription = `Hotkey is ${list[8]}`;\n    getId('toggleBuilding0').ariaDescription = `Hotkey is ${list[9]}`;\n};\n\nexport const MDStrangenessPage = (stageIndex: number) => {\n    for (let s = 1; s <= 5; s++) { getId(`strangenessSection${s}`).style.display = 'none'; }\n    getId(`strangenessSection${stageIndex}`).style.display = '';\n};\n\nexport const replayEvent = async() => {\n    let last;\n    if (player.stage.true >= 6) {\n        last = player.event ? 8 : player.stage.resets >= 1 ? 7 : 6;\n    } else {\n        last = player.stage.true - (player.event ? 0 : 1);\n        if (last < 1) { return void Alert('There are no unlocked events'); }\n    }\n\n    let text = 'Which event do you want to see again?\\nEvent 1: Stage reset';\n    if (last >= 2) { text += '\\nEvent 2: Clouds softcap'; }\n    if (last >= 3) { text += '\\nEvent 3: New Rank'; }\n    if (last >= 4) { text += '\\nEvent 4: New Elements'; }\n    if (last >= 5) { text += '\\nEvent 5: Intergalactic'; }\n    if (last >= 6) { text += '\\nEvent 6: True Vacuum'; }\n    if (last >= 7) { text += '\\nEvent 7: Void unlocked'; }\n    if (last >= 8) { text += '\\nEvent 8: New Universe'; }\n\n    const event = Number(await Prompt(text, `${last}`));\n    if (event > last) { return; }\n    playEvent(event);\n};\n\n/** Sets player.event to true if replay is false */\nexport const playEvent = (event: number, replay = true) => {\n    if (specialHTML.alert[0] !== null) { return Notify(`Missed Event ${event}, you can replay it from options`); }\n    if (!replay) { player.event = true; }\n\n    let text = 'No such event';\n    if (event === 1) {\n        text = 'New reset tier has been unlocked. It will allow to reach higher tiers of Structures, but for the price of everything else';\n    } else if (event === 2) {\n        text = `Cloud density is too high... Any new Clouds past ${format(1e4)} will be weaker due to softcap`;\n    } else if (event === 3) {\n        if (!replay) {\n            assignResetInformation.maxRank();\n            global.debug.rankUpdated = null;\n        }\n        text = \"Can't gain any more Mass with current Rank. New one has been unlocked, but reaching it will softcap the Mass production\";\n    } else if (event === 4) {\n        text = 'Last explosion not only created first Neutron stars, but also unlocked new Elements through Supernova nucleosynthesis';\n    } else if (event === 5) {\n        if (!replay) { stageUpdate(false); }\n        text = \"There are no Structures in Intergalactic yet, but they can be created within previous Stages. Stage resets and exports will now award Strange quarks, '[26] Iron' Element will use new effect to improve reward.\\n(Stars in Intergalactic are just Stars from Interstellar)\";\n    } else if (event === 6) {\n        text = 'As Galaxies started to Merge, their combined Gravity pushed Vacuum out of its local minimum into more stable global minimum. New forces and Structures are expected within this new and true Vacuum state';\n    } else if (event === 7) {\n        text = \"With Vacuum decaying remaining matter had rearranged itself in such way that lead to the formation of the 'Void'. Check it out in 'Advanced' subtab\";\n    } else if (event === 8) {\n        if (!replay) { stageUpdate(false); }\n        text = \"Soon there will be enough matter to create first 'Universe' within 'Abyss' Stage. Doing it will require getting at least 40 Galaxies before Merging them. Creating it will do a Vacuum reset, while also resetting Vacuum state back to false\";\n    }\n    if (!replay) { text += \"\\n\\n(Can be viewed again with 'Events' button in Settings tab)\"; }\n    return void Alert(text);\n};\n\nconst buildBigWindow = () => {\n    if (getId('closeBigWindow', true) !== null) { return; }\n    getId('bigWindow').innerHTML = '<div role=\"dialog\" aria-modal=\"false\"><button type=\"button\" id=\"closeBigWindow\">Close</button></div>';\n    specialHTML.styleSheet.textContent += '#bigWindow > div { display: flex; flex-direction: column; align-items: center; width: clamp(20vw, 38em, 80vw); height: clamp(18vh, 36em, 90vh); background-color: var(--window-color); border: 3px solid var(--window-border); border-radius: 12px; padding: 1em 1em 0.8em; row-gap: 1em; }';\n    specialHTML.styleSheet.textContent += '#bigWindow > div > button { flex-shrink: 0; border-radius: 4px; width: 6em; font-size: 0.92em; margin-top: auto; } #bigWindow > div > div { width: 100%; overflow-y: auto; overscroll-behavior-y: none; }';\n};\n\nexport const getVersionInfoHTML = () => {\n    if (specialHTML.bigWindow !== null) { return; }\n    buildBigWindow();\n    if (getId('versionHTML', true) === null) {\n        const mainHTML = document.createElement('div');\n        mainHTML.innerHTML = `<label>v0.2.3</label><p>- Small amount of new content\\n- Supervoid rework\\n- Abyss small rebalance\\n<a href=\"https://docs.google.com/document/d/1oFlo82k9H11nQ9R7YvcTSZaz9c-Nj-N5b38gNmIvDO0/edit?usp=sharing\" target=\"_blank\" rel=\"noopener noreferrer\">Full changelog</a></p>\n        <label>v0.2.2</label><p>- New content (Supervoid)\\n- Better Offline calculation and more options related to it\\n- Entering Void now saves current game state to load on exit</p>\n        <label>v0.2.1</label><p>- New content (Abyss)\\n- Full game rebalance\\n- Custom hotkeys\\n- Updated supports\\n- Many small changes and additions</p>\n        <label>v0.2.0</label><p>- Reworked balance for all Stages past first reset cycle\\n- Many quality of life additions\\n- Most of settings are now saved separate from save file\\n- Some more work on Mobile device support</p>\n        <label>v0.1.9</label><p>- More true Vacuum balance\\n- Reworked time related formats\\n- Warp and Offline time usage reworked</p>\n        <label>v0.1.8</label><p>- True Vacuum small balance changes\\n- Upgrades and Researches merged\\n- Added copy to clipboard, load from string save file options</p>\n        <label>v0.1.7</label><p>- New content (Void)\\n- Further balance changes</p>\n        <label>v0.1.6</label><p>- Massive rebalance and reworks for all Stages</p>\n        <label>v0.1.5</label><p>- True Vacuum minor balance\\n- Images no longer unload\\n- Screen reader support reworked</p>\n        <label>v0.1.4</label><p>- Custom scrolls\\n- Notifications</p>\n        <label>v0.1.3</label><p>- True Vacuum balance changes\\n- Submerged Stage minor balance\\n- Replay event button\\n\\n- History for Stage resets</p>\n        <label>v0.1.2</label><p>- New content (Vacuum)\\n- Offline time reworked\\n- Added version window (removed change log on game load)\\n- Permanently removed text movement</p>\n        <label>v0.1.1</label><p>- More balance changes for late game</p>\n        <label>v0.1.0</label><p>- New content (Intergalactic)\\n- Balance changes for late game</p>\n        <label>v0.0.9</label><p>- New content (Milestones)\\n- More Interstellar and late game balance</p>\n        <label>v0.0.8</label><p>- Minor speed up to all Stages past Microworld</p>\n        <label>v0.0.7</label><p>- New content (Strangeness)\\n- Microworld Stage rework\\n\\n- Added stats for Save file name</p>\n        <label>v0.0.6</label><p>- Added hotkeys list\\n\\n- Option to remove text movement\\n- Ability to rename save file</p>\n        <label>v0.0.5</label><p>- New content (Interstellar)\\n- Basic loading screen\\n\\n- Added hotkeys</p>\n        <label>v0.0.4</label><p>- Speed up to all Stages\\n- Added events\\n\\n- Added numbers format</p>\n        <label>v0.0.3</label><p>- New content (Accretion)\\n- Submerged Stage extended\\n- Offline time calculated better</p>\n        <label>v0.0.2</label><p>- Stats subtab</p>\n        <label>v0.0.1</label><p>- Submerged Stage rework\\n- Added change log on game load\\n\\n- Mobile device support</p>\n        <label>v0.0.0</label><p>- First published version\\n\\n- Submerged Stage placeholder</p>`;\n        getQuery('#bigWindow > div').prepend(mainHTML);\n        mainHTML.id = 'versionHTML';\n        mainHTML.role = 'dialog';\n        mainHTML.ariaLabel = 'Versions menu';\n        specialHTML.styleSheet.textContent += '#versionHTML label { font-size: 1.18em; } #versionHTML p { line-height: 1.3em; white-space: pre-line; color: var(--white-text); margin-top: 0.2em; margin-bottom: 1.4em; } #versionHTML p:last-of-type { margin-bottom: 0; }';\n    }\n\n    specialHTML.bigWindow = 'version';\n    const body = document.body;\n    const closeButton = getId('closeBigWindow');\n    const mainHTML = getId('versionHTML');\n    const windowHMTL = getId('bigWindow');\n    const key = (event: KeyboardEvent) => {\n        if (specialHTML.alert[0] !== null || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey) { return; }\n        const code = event.code;\n        if (code === 'Escape' || code === 'Enter' || code === 'Space') {\n            event.preventDefault();\n            close();\n        }\n    };\n    const close = () => {\n        specialHTML.bigWindow = null;\n        windowHMTL.style.display = 'none';\n        mainHTML.style.display = 'none';\n        body.removeEventListener('keydown', key);\n        closeButton.removeEventListener('click', close);\n    };\n    body.addEventListener('keydown', key);\n    closeButton.addEventListener('click', close);\n    mainHTML.style.display = '';\n    windowHMTL.style.display = '';\n    closeButton.focus();\n};\n\nexport const getHotkeysHTML = () => {\n    if (specialHTML.bigWindow !== null) { return; }\n    buildBigWindow();\n    if (getId('hotkeysHTML', true) === null) {\n        const mainHTML = document.createElement('div');\n        mainHTML.innerHTML = `<p id=\"hotkeysMessage\" class=\"bigWord\" aria-live=\"assertive\">Some hotkeys can be changed by clicking on them</p>\n        ${globalSave.MDSettings[0] ? `<p>Swipe Left or Right \u2012 <span class=\"whiteText\">change current tab</span></p>\n        <p>Swipe Down or Up \u2012 <span class=\"whiteText\">change current subtab</span></p>` : ''}\n        <label id=\"tabRightHotkey\"><button class=\"selectBtn\" type=\"button\"></button> \u2012 <span class=\"whiteText\">change tab to the next one</span></label>\n        <label id=\"tabLeftHotkey\"><button class=\"selectBtn\" type=\"button\"></button> \u2012 <span class=\"whiteText\">change tab to the previous one</span></label>\n        <label id=\"subtabUpHotkey\"><button class=\"selectBtn\" type=\"button\"></button> \u2012 <span class=\"whiteText\">change subtab to the next one</span></label>\n        <label id=\"subtabDownHotkey\"><button class=\"selectBtn\" type=\"button\"></button> \u2012 <span class=\"whiteText\">change subtab to the previous one</span></label>\n        <label id=\"stageRightHotkey\"><button class=\"selectBtn\" type=\"button\"></button> \u2012 <span class=\"whiteText\">change active Stage to the next one</span></label>\n        <label id=\"stageLeftHotkey\"><button class=\"selectBtn\" type=\"button\"></button> \u2012 <span class=\"whiteText\">change active Stage to the previous one</span></label>\n        <p>Numbers \u2012 <span class=\"whiteText\">make a Structure</span></p>\n        <label id=\"makeAllHotkey\">0 <span class=\"whiteText\">or</span> <button class=\"selectBtn\" type=\"button\"></button> \u2012 <span class=\"whiteText\">make all Structures</span></label>\n        <p>Shift Numbers \u2012 <span class=\"whiteText\">toggle auto Structure</span></p>\n        <label id=\"toggleAllHotkey\">Shift 0 <span class=\"whiteText\">or</span> <button class=\"selectBtn\" type=\"button\"></button> \u2012 <span class=\"whiteText\">toggle all auto Structures</span></label>\n        <label id=\"exitChallengeHotkey\"><button class=\"selectBtn\" type=\"button\"></button> \u2012 <span class=\"whiteText\">Exit out of current Challenge</span></label>\n        <div>\n            <label id=\"stageHotkey\" class=\"stageText\"><button class=\"selectBtn\" type=\"button\"></button> \u2012 <span class=\"whiteText\">Stage reset</span></label>\n            <label id=\"dischargeHotkey\" class=\"orangeText stage1Include\"><button class=\"selectBtn\" type=\"button\"></button> \u2012 <span class=\"whiteText\">Discharge</span></label>\n            <label id=\"vaporizationHotkey\" class=\"blueText stage2Include\"><button class=\"selectBtn\" type=\"button\"></button> \u2012 <span class=\"whiteText\">Vaporization</span></label>\n            <label id=\"rankHotkey\" class=\"darkorchidText stage3Include\"><button class=\"selectBtn\" type=\"button\"></button> \u2012 <span class=\"whiteText\">Rank</span></label>\n            <label id=\"collapseHotkey\" class=\"orchidText stage4Include\"><button class=\"selectBtn\" type=\"button\"></button> \u2012 <span class=\"whiteText\">Collapse</span></label>\n            <label id=\"galaxyHotkey\" class=\"grayText stage5Include\"><button class=\"selectBtn\" type=\"button\"></button> \u2012 <span class=\"whiteText\">Galaxy</span></label>\n            <label id=\"mergeHotkey\" class=\"darkvioletText stage5Include\"><button class=\"selectBtn\" type=\"button\"></button> \u2012 <span class=\"whiteText\">Merge</span></label>\n            <label id=\"universeHotkey\" class=\"darkvioletText stage6Include\"><button class=\"selectBtn\" type=\"button\"></button> \u2012 <span class=\"whiteText\">Universe</span></label>\n            <label id=\"pauseHotkey\" class=\"grayText\"><button class=\"selectBtn\" type=\"button\"></button> \u2012 <span class=\"whiteText\">pause</span></label>\n        </div>\n        <p>Enter <span class=\"whiteText\">or</span> Space \u2012 <span class=\"whiteText\">click selected HTML Element or confirm Alert</span></p>\n        <p>Escape \u2012 <span class=\"whiteText\">cancel changing hotkey, close Alert or Notification</span></p>\n        <p>Tab <span class=\"whiteText\">and</span> Shift Tab \u2012 <span class=\"whiteText\">select another HTML Element</span></p>\n        <p>Holding Enter on last selected button will repeatedly press it, also works with Mouse and Touch events on some buttons</p>\n        <label id=\"hotkeysToggleLabel\" title=\"Turn ON, if using non QWERTY layout keyboard\">Language dependant hotkeys </label>\n        <button id=\"restoreHotkeys\" class=\"selectBtn\" type=\"button\">Restore default hotkeys values</button>`; //Spacebar at the end of label is required\n        getQuery('#bigWindow > div').prepend(mainHTML);\n        mainHTML.id = 'hotkeysHTML';\n        mainHTML.role = 'dialog';\n        mainHTML.ariaLabel = 'Hotkeys menu';\n        const toggle = getId('globalToggle0');\n        toggle.style.display = '';\n        getId('hotkeysToggleLabel').append(toggle);\n        specialHTML.styleSheet.textContent += '#hotkeysHTML { display: flex; flex-direction: column; align-items: center; row-gap: 0.2em; } #hotkeysHTML > div { display: grid; grid-template-columns: 1fr 1fr 1fr; width: 100%; gap: 0.3em; } #hotkeysHTML > div label { justify-self: center; width: max-content; }';\n\n        const changeHotkey = async(disableFirstUp = false): Promise<string[] | null> => {\n            return await new Promise((resolve) => {\n                getId('hotkeysMessage').textContent = 'Awaiting new value for the hotkey';\n                const body = document.body;\n                let result: null | string[] = null;\n                const prevent = (event: KeyboardEvent) => {\n                    const code = event.code;\n                    if (code === 'Tab') { return; }\n                    event.preventDefault();\n                    if (code === 'Escape' || ((code === 'Enter' || code === 'Space') && document.activeElement === getId('closeBigWindow'))) {\n                        finish();\n                    }\n                };\n                const detect = async(event: KeyboardEvent) => {\n                    if (disableFirstUp) { return void (disableFirstUp = false); }\n                    const { key, code } = event;\n                    if (code === 'Tab' || code === 'Escape') { return; }\n                    let prefix = event.metaKey ? 'Meta ' : '';\n                    if (event.ctrlKey) { prefix += 'Ctrl '; }\n                    if (event.shiftKey) { prefix += 'Shift '; }\n                    if (event.altKey) { prefix += 'Alt '; }\n                    if ((!isNaN(Number(code.replace('Digit', '').replace('Numpad', ''))) && code !== '') ||\n                        key === 'Meta' || key === 'Control' || key === 'Shift' || key === 'Alt' || code === 'Enter' || code === 'Space') {\n                        getId('hotkeysMessage').textContent = `Value '${prefix}${globalSave.toggles[0] ? key : code}' for hotkeys isn't allowed`;\n                        return;\n                    }\n                    result = [`${prefix}${key.length === 1 ? key.toUpperCase() : key.replace('Arrow', 'Arrow ')}`,\n                        `${prefix}${key.length === 1 ? code.replace('Key', '') : code.replace('Arrow', 'Arrow ')}`];\n                    finish();\n                };\n                const finish = () => {\n                    body.removeEventListener('keydown', prevent);\n                    body.removeEventListener('keyup', detect);\n                    body.removeEventListener('click', finish, { capture: true });\n                    global.hotkeys.disabled = false;\n                    resolve(result);\n                };\n                global.hotkeys.disabled = true;\n                body.addEventListener('keydown', prevent);\n                body.addEventListener('keyup', detect);\n                body.addEventListener('click', finish, { capture: true });\n            });\n        };\n        const index = globalSave.toggles[0] ? 0 : 1;\n        for (const key in globalSaveStart.hotkeys) {\n            const button = getQuery(`#${key}Hotkey > button`) as HTMLButtonElement;\n            const hotkeyTest = globalSave.hotkeys[key as hotkeysList][index];\n            button.textContent = hotkeyTest == null || hotkeyTest === '' ? 'None' : hotkeyTest;\n            button.type = 'button';\n            button.addEventListener('click', async(event) => {\n                const button = getQuery(`#${key}Hotkey > button`);\n                button.style.borderBottomStyle = 'dashed';\n                const newHotkey = await changeHotkey(event.clientX === 0); //Check if click was caused by pressing Enter\n                if (newHotkey !== null) {\n                    const index = globalSave.toggles[0] ? 0 : 1;\n                    const removed = removeHotkey(newHotkey[index]);\n                    if (removed !== null && removed !== key) { getQuery(`#${removed}Hotkey > button`).textContent = 'None'; }\n                    button.textContent = newHotkey[index];\n                    globalSave.hotkeys[key as hotkeysList] = newHotkey;\n                    assignHotkeys();\n                    saveGlobalSettings();\n                }\n                button.style.borderBottomStyle = '';\n                getId('hotkeysMessage').textContent = 'Some hotkeys can be changed by clicking on them';\n            });\n        }\n        getId('restoreHotkeys').addEventListener('click', () => {\n            globalSave.hotkeys = deepClone(globalSaveStart.hotkeys);\n            const index = globalSave.toggles[0] ? 0 : 1;\n            for (const key in globalSave.hotkeys) {\n                getQuery(`#${key}Hotkey > button`).textContent = globalSave.hotkeys[key as hotkeysList][index] as string;\n            }\n            assignHotkeys();\n            saveGlobalSettings();\n        });\n        stageUpdate(false);\n        visualTrueStageUnlocks();\n    }\n\n    specialHTML.bigWindow = 'hotkeys';\n    const body = document.body;\n    const closeButton = getId('closeBigWindow');\n    const mainHTML = getId('hotkeysHTML');\n    const windowHMTL = getId('bigWindow');\n    const key = (event: KeyboardEvent) => {\n        if (specialHTML.alert[0] !== null || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey) { return; }\n        const code = event.code;\n        if ((!global.hotkeys.disabled && code === 'Escape') || ((code === 'Enter' || code === 'Space') && document.activeElement === closeButton)) {\n            event.preventDefault();\n            close();\n        }\n    };\n    const close = () => {\n        specialHTML.bigWindow = null;\n        windowHMTL.style.display = 'none';\n        mainHTML.style.display = 'none';\n        body.removeEventListener('keydown', key);\n        closeButton.removeEventListener('click', close);\n    };\n    body.addEventListener('keydown', key);\n    closeButton.addEventListener('click', close);\n    mainHTML.style.display = '';\n    windowHMTL.style.display = '';\n    getQuery('#tabRightHotkey > button').focus();\n};\n", "import { globalSave } from './Special';\n\ntype allowedTypes = string | number | bigint | [number, number] | Overlimit;\n/* This is version has all settings (and other stuff) removed (for better speed) */\n/** To test number for being Overlimit can use: typeof number === 'object'; Array.isArray(number); number instanceof Overlimit\n * @param number allowed types are string, number, bigint, Overlimit and [number, number]; If Array is used, then must not contain any mistakes (example and proper way: [11, 0] > [1.1, 1]; [1, NaN] > [NaN, NaN]; [1, 1.4] > [1, 1])\n */\nexport default class Overlimit extends Array<number> {\n    constructor(number: allowedTypes) {\n        const post = technical.convert(number);\n        super(post[0], post[1]);\n    }\n    get mantissa() { return this[0]; }\n    get exponent() { return this[1]; }\n\n    /** Can be used inside native sorting function, equal to a - b. First variable must be Overlimit, doesn't require cloning, example: [1, '2', new Overlimit(3)].sort((a, b) => Overlimit.compareFunc(new Overlimit(b), a)) */\n    static compareFunc(left: Overlimit, right: allowedTypes): 1 | 0 | -1 {\n        return left.moreThan(right) ? 1 : left.notEqual(right) ? -1 : 0;\n    }\n\n    /** Creates new Overlimit */\n    clone(): Overlimit { return new Overlimit(this); }\n    setValue(newValue: allowedTypes) { return this.#privateSet(technical.convert(newValue)); }\n    #privateSet(newValue: [number, number] | Overlimit) {\n        this[0] = newValue[0];\n        this[1] = newValue[1];\n        return this;\n    }\n\n    /** Can take any amount of arquments */\n    plus(...numbers: allowedTypes[]) {\n        let result: [number, number] | Overlimit = this;\n        for (let i = 0; i < numbers.length; i++) {\n            result = technical.add(result, technical.convert(numbers[i]));\n        }\n\n        return this.#privateSet(result);\n    }\n    /** Can take any amount of arquments */\n    minus(...numbers: allowedTypes[]) {\n        let result: [number, number] | Overlimit = this;\n        for (let i = 0; i < numbers.length; i++) {\n            result = technical.sub(result, technical.convert(numbers[i]));\n        }\n\n        return this.#privateSet(result);\n    }\n    /** Can take any amount of arquments */\n    multiply(...numbers: allowedTypes[]) {\n        let result: [number, number] | Overlimit = this;\n        for (let i = 0; i < numbers.length; i++) {\n            result = technical.mult(result, technical.convert(numbers[i]));\n        }\n\n        return this.#privateSet(result);\n    }\n    /** Can take any amount of arquments */\n    divide(...numbers: allowedTypes[]) {\n        let result: [number, number] | Overlimit = this;\n        for (let i = 0; i < numbers.length; i++) {\n            result = technical.div(result, technical.convert(numbers[i]));\n        }\n\n        return this.#privateSet(result);\n    }\n    /** Power must be a number */\n    power(power: number) { return this.#privateSet(technical.pow(this, power)); }\n    /** Root must be a number, default value is 2 */\n    root(root = 2) { return this.#privateSet(technical.pow(this, 1 / root)); }\n    /** Base must be a number, default value is Math.E */\n    log(base = 2.718281828459045) { return this.#privateSet(technical.log(this, base)); }\n\n    abs() {\n        this[0] = Math.abs(this[0]);\n        return this;\n    }\n\n    trunc() { return this.#privateSet(technical.trunc(this)); }\n    floor() { return this.#privateSet(technical.floor(this)); }\n    ceil() { return this.#privateSet(technical.ceil(this)); }\n    round() { return this.#privateSet(technical.round(this)); }\n\n    /** Doesn't check exponent, since exponent being NaN while mantissa isn't would be a bug */\n    isNaN(): boolean { return isNaN(this[0])/* || isNaN(this[1])*/; }\n    /** Will set new value to provided, but only if current one is NaN */\n    replaceNaN(replaceWith: allowedTypes): Overlimit { return isNaN(this[0]) ? this.#privateSet(technical.convert(replaceWith)) : this; }\n    /** Doesn't check exponent, since exponent being Infinity while mantissa isn't would be a bug */\n    isFinite(): boolean { return isFinite(this[0])/* && isFinite(this[1])*/; }\n\n    lessThan(compare: allowedTypes): boolean { return technical.less(this, technical.convert(compare)); }\n    lessOrEqual(compare: allowedTypes): boolean { return technical.lessOrEqual(this, technical.convert(compare)); }\n    moreThan(compare: allowedTypes): boolean { return technical.more(this, technical.convert(compare)); }\n    moreOrEqual(compare: allowedTypes): boolean { return technical.moreOrEqual(this, technical.convert(compare)); }\n    notEqual(compare: allowedTypes): boolean { return technical.notEqual(this, technical.convert(compare)); }\n    /** Can take any amount of arquments; Returns true if no arquments provided */\n    equal(...compare: allowedTypes[]): boolean {\n        let previous: [number, number] | Overlimit = this;\n        for (let i = 0; i < compare.length; i++) {\n            const next = technical.convert(compare[i]);\n            if (technical.notEqual(previous, next)) { return false; }\n            previous = next;\n        }\n\n        return true;\n    }\n\n    /** Set original number to biggest of provided arguments */\n    max(...compare: allowedTypes[]) {\n        let result: [number, number] | Overlimit = this;\n        for (let i = 0; i < compare.length; i++) {\n            const after = technical.convert(compare[i]);\n            if (isNaN(after[0])) { return this.#privateSet([NaN, NaN]); }\n\n            if (technical.less(result, after)) { result = after; }\n        }\n\n        return this.#privateSet(result);\n    }\n    /** Set original number to smallest of provided arguments */\n    min(...compare: allowedTypes[]) {\n        let result: [number, number] | Overlimit = this;\n        for (let i = 0; i < compare.length; i++) {\n            const after = technical.convert(compare[i]);\n            if (isNaN(after[0])) { return this.#privateSet([NaN, NaN]); }\n\n            if (technical.more(result, after)) { result = after; }\n        }\n\n        return this.#privateSet(result);\n    }\n\n    /** Returns formatted string, takes object as arqument\n     * @param type \"number\" is default, \"input\" will make formatted number to be usable in Overlimit\n     * @param padding should zeros be added past point, if below max digits. 'exponent' value will behave as true, but only after number turns to power version or above\n     */\n    format(settings = {} as { type?: 'number' | 'input', padding?: boolean | 'exponent' }): string { return technical.format(this, settings); }\n    /** Returns value as Number, doesn't change original number */\n    toNumber(): number { return Number(technical.turnString(this)); }\n    /** Same as .toNumber, but also converts Infinity (and NaN; can use replaceNaN before calling this function) to Number.MAX_VALUE */\n    toSafeNumber(): number {\n        const result = Number(technical.turnString(this));\n        if (isFinite(result)) { return result; }\n        return Number.MAX_VALUE * (result < 0 ? -1 : 1);\n    }\n    /** Returns value as String, doesn't change original number */\n    toString(): string { return technical.turnString(this); }\n    /** Returns value as Array, doesn't change original number */\n    toArray(): [number, number] { return [this[0], this[1]]; }\n    /** Automatically called with JSON.stringify. It will call toString to preserve NaN and Infinity */\n    toJSON(): string { return technical.turnString(this); }\n}\n\n/** Private Overlimit functions */\nconst technical = {\n    convert: (number: allowedTypes): [number, number] | Overlimit => {\n        if (typeof number === 'object' && number !== null) { return number; } //Readonly Array\n        if (typeof number !== 'string') { number = `${number}`; } //Using log10 could cause floating point error\n        const index = number.indexOf('e'); //Array.split is 3 times slower\n        const result: [number, number] = index === -1 ? [Number(number), 0] : [Number(number.slice(0, index)), Number(number.slice(index + 1))];\n\n        if (!isFinite(result[0]) || !isFinite(result[1])) {\n            if (result[0] === 0 || result[1] === -Infinity) { return [0, 0]; }\n            if (isNaN(result[0]) || isNaN(result[1])) { return [NaN, NaN]; }\n            return [result[0] < 0 ? -Infinity : Infinity, Infinity];\n        }\n\n        const after = Math.abs(result[0]);\n        if (after === 0) {\n            return [0, 0];\n        } else if (after < 1 || after >= 10) {\n            const digits = Math.floor(Math.log10(after));\n            result[0] /= 10 ** digits;\n            result[1] += digits;\n\n            if (Math.abs(result[0]) < 1) { //Important\n                result[0] *= 10;\n                result[1]--;\n            }\n        }\n\n        //Float fix always done after exponent, because (11.1 / 10 !== 1.11)\n        result[0] = Math.round(result[0] * 1e14) / 1e14;\n        if (Math.abs(result[0]) === 10) {\n            result[0] /= 10;\n            result[1]++;\n        }\n\n        return result;\n    },\n    /* Number is readonly */\n    turnString: (number: [number, number] | Overlimit): string => number[1] === 0 || !isFinite(number[0]) ? `${number[0]}` : `${number[0]}e${number[1]}`,\n    /* Right is readonly */\n    add: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): [number, number] | Overlimit => {\n        if (right[0] === 0) { return left; }\n        if (left[0] === 0) { return [right[0], right[1]]; }\n        if (!isFinite(left[0]) || !isFinite(right[0])) {\n            const check = left[0] + right[0]; //Infinity + -Infinity === NaN\n            return isNaN(check) ? [NaN, NaN] : [check, Infinity];\n        }\n\n        const difference = left[1] - right[1];\n        if (Math.abs(difference) >= 16) { return difference > 0 ? left : [right[0], right[1]]; }\n\n        if (difference === 0) {\n            left[0] += right[0];\n        } else if (difference > 0) {\n            left[0] += right[0] / 10 ** difference;\n        } else {\n            left[0] = right[0] + (left[0] * 10 ** difference);\n            left[1] = right[1];\n        }\n\n        const after = Math.abs(left[0]);\n        if (after === 0) {\n            return [0, 0];\n        } else if (after >= 10) {\n            left[0] /= 10;\n            left[1]++;\n        } else if (after < 1) {\n            const digits = -Math.floor(Math.log10(after));\n            left[0] *= 10 ** digits;\n            left[1] -= digits;\n        }\n\n        left[0] = Math.round(left[0] * 1e14) / 1e14;\n        if (Math.abs(left[0]) === 10) {\n            left[0] /= 10;\n            left[1]++;\n        }\n\n        return left;\n    },\n    /* Right is readonly, its quite a lazy function... */\n    sub: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): [number, number] | Overlimit => technical.add(left, [-right[0], right[1]]),\n    /* Right is readonly */\n    mult: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): [number, number] | Overlimit => {\n        if (left[0] === 0 || right[0] === 0) { return [0, 0]; }\n\n        left[1] += right[1];\n        left[0] *= right[0];\n\n        if (!isFinite(left[1])) {\n            if (left[1] === -Infinity) { return [0, 0]; }\n            return isNaN(left[1]) ? [NaN, NaN] : [Infinity, Infinity];\n        }\n\n        if (Math.abs(left[0]) >= 10) {\n            left[0] /= 10;\n            left[1]++;\n        }\n\n        left[0] = Math.round(left[0] * 1e14) / 1e14;\n        if (Math.abs(left[0]) === 10) {\n            left[0] /= 10;\n            left[1]++;\n        }\n\n        return left;\n    },\n    /* Right is readonly */\n    div: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): [number, number] | Overlimit => {\n        if (right[0] === 0) { return [NaN, NaN]; }\n        if (left[0] === 0) { return [0, 0]; }\n\n        left[1] -= right[1];\n        left[0] /= right[0];\n\n        if (!isFinite(left[1])) {\n            if (left[1] === -Infinity) { return [0, 0]; }\n            return isNaN(left[1]) ? [NaN, NaN] : [Infinity, Infinity];\n        }\n\n        if (Math.abs(left[0]) < 1) {\n            left[0] *= 10;\n            left[1]--;\n        }\n\n        left[0] = Math.round(left[0] * 1e14) / 1e14;\n        if (Math.abs(left[0]) === 10) {\n            left[0] /= 10;\n            left[1]++;\n        }\n\n        return left;\n    },\n    pow: (left: [number, number] | Overlimit, power: number): [number, number] | Overlimit => {\n        if (power === 0) { return left[0] === 0 || isNaN(left[0]) ? [NaN, NaN] : [1, 0]; }\n        if (left[0] === 0) { return power < 0 ? [NaN, NaN] : [0, 0]; }\n        if (!isFinite(power)) {\n            if ((left[1] === 0 && left[0] === 1) || left[0] < 0) { return left[0] === 1 ? [1, 0] : [NaN, NaN]; }\n            if ((power === -Infinity && left[1] >= 0) || (power === Infinity && left[1] < 0)) { return [0, 0]; }\n            return isNaN(power) || isNaN(left[0]) ? [NaN, NaN] : [Infinity, Infinity];\n        }\n\n        const negative = left[0] < 0 ? Math.abs(power) % 2 : null;\n        if (negative !== null) { //Complex numbers are not supported\n            if (Math.floor(power) !== power) { return [NaN, NaN]; }\n            left[0] *= -1;\n        }\n\n        const base10 = power * (Math.log10(left[0]) + left[1]);\n        if (!isFinite(base10)) {\n            if (base10 === -Infinity) { return [0, 0]; }\n            if (isNaN(left[0])) { return [NaN, NaN]; }\n            return [negative === 1 ? -Infinity : Infinity, Infinity];\n        }\n\n        const target = Math.floor(base10);\n        left[0] = 10 ** (base10 - target);\n        left[1] = target;\n\n        left[0] = Math.round(left[0] * 1e14) / 1e14;\n        if (left[0] === 10) {\n            left[0] = 1;\n            left[1]++;\n        }\n\n        if (negative === 1) { left[0] *= -1; }\n        return left;\n    },\n    log: (left: [number, number] | Overlimit, base: number): [number, number] | Overlimit => {\n        if (Math.abs(base) === 1 || (left[0] === -1 && left[1] === 0)) { return [NaN, NaN]; }\n        if (left[0] === 1 && left[1] === 0) { return [0, 0]; }\n        if (base === 0) { return [NaN, NaN]; } //Order matters (0 ** 0 === 1)\n        if (left[0] === 0) { return isNaN(base) ? [NaN, NaN] : [Math.abs(base) > 1 ? -Infinity : Infinity, Infinity]; }\n        if (!isFinite(base)) { return [NaN, NaN]; } //Order matters (Infinity ** 0 === 1 || Infinity ** -Infinity === 0)\n        if (!isFinite(left[0])) {\n            if (isNaN(left[0]) || left[0] === -Infinity) { return [NaN, NaN]; }\n            return [Math.abs(base) < 1 ? -Infinity : Infinity, Infinity];\n        }\n\n        const negative = left[0] < 0;\n        if (negative) { //Complex numbers are not supported\n            if (base > 0) { return [NaN, NaN]; }\n            left[0] *= -1;\n        }\n\n        const tooSmall = left[1] < 0; //Minor issue with negative power\n        const base10 = Math.log10(Math.abs(Math.log10(left[0]) + left[1]));\n        const target = Math.floor(base10);\n        left[0] = 10 ** (base10 - target);\n        left[1] = target;\n\n        if (tooSmall) { left[0] *= -1; } //Already can be negative\n        if (base !== 10) {\n            left[0] /= Math.log10(Math.abs(base));\n\n            const after = Math.abs(left[0]);\n            if (after < 1 || after >= 10) {\n                const digits = Math.floor(Math.log10(after));\n                left[0] /= 10 ** digits;\n                left[1] += digits;\n            }\n        }\n\n        if (base < 0 || negative) { //Special test for negative numbers\n            if (left[1] < 0) { return [NaN, NaN]; }\n            //Due to floats (1.1 * 100 !== 110), test is done in this way (also we assume that big numbers are never uneven)\n            const test = left[1] < 16 ? Math.abs(Math.round(left[0] * 1e14) / 10 ** (14 - left[1])) % 2 : 0;\n            if (base < 0 && !negative) {\n                if (test !== 0) { return [NaN, NaN]; } //Result must be even\n            } else { //base < 0 && negative\n                if (test !== 1) { return [NaN, NaN]; } //Result must be uneven\n            }\n        }\n\n        left[0] = Math.round(left[0] * 1e14) / 1e14;\n        if (Math.abs(left[0]) === 10) {\n            left[0] /= 10;\n            left[1]++;\n        }\n\n        return left;\n    },\n    /* Left and right are readonly */\n    less: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): boolean => {\n        if (left[0] === 0 || right[0] === 0 || left[1] === right[1]) { return left[0] < right[0]; }\n        if (left[0] > 0 && right[0] > 0) { return left[1] < right[1]; }\n        if (left[0] < 0 && right[0] > 0) { return true; }\n        if (right[0] < 0 && left[0] > 0) { return false; }\n        return left[1] > right[1];\n    },\n    /* Left and right are readonly */\n    lessOrEqual: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): boolean => {\n        if (left[0] === 0 || right[0] === 0 || left[1] === right[1]) { return left[0] <= right[0]; }\n        if (left[0] > 0 && right[0] > 0) { return left[1] < right[1]; }\n        if (left[0] < 0 && right[0] > 0) { return true; }\n        if (right[0] < 0 && left[0] > 0) { return false; }\n        return left[1] > right[1];\n    },\n    /* Left and right are readonly */\n    more: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): boolean => {\n        if (left[0] === 0 || right[0] === 0 || left[1] === right[1]) { return left[0] > right[0]; }\n        if (left[0] > 0 && right[0] > 0) { return left[1] > right[1]; }\n        if (left[0] < 0 && right[0] > 0) { return false; }\n        if (right[0] < 0 && left[0] > 0) { return true; }\n        return left[1] < right[1];\n    },\n    /* Left and right are readonly */\n    moreOrEqual: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): boolean => {\n        if (left[0] === 0 || right[0] === 0 || left[1] === right[1]) { return left[0] >= right[0]; }\n        if (left[0] > 0 && right[0] > 0) { return left[1] > right[1]; }\n        if (left[0] < 0 && right[0] > 0) { return false; }\n        if (right[0] < 0 && left[0] > 0) { return true; }\n        return left[1] < right[1];\n    },\n    /* Left and right are readonly */\n    notEqual: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): boolean => {\n        return left[1] !== right[1] || left[0] !== right[0];\n    },\n    trunc: (left: [number, number] | Overlimit): [number, number] | Overlimit => {\n        if (left[1] < 0) {\n            return [0, 0];\n        } else if (left[1] === 0) {\n            left[0] = Math.trunc(left[0]);\n        } else if (left[1] <= 14) {\n            left[0] = Math.trunc(left[0] * 10 ** left[1]) / 10 ** left[1];\n        }\n\n        return left;\n    },\n    floor: (left: [number, number] | Overlimit): [number, number] | Overlimit => {\n        if (left[1] < 0) {\n            return [left[0] < 0 ? -1 : 0, 0];\n        } else if (left[1] === 0) {\n            left[0] = Math.floor(left[0]);\n        } else if (left[1] <= 14) {\n            left[0] = Math.floor(left[0] * 10 ** left[1]) / 10 ** left[1];\n        }\n\n        if (left[0] === -10) {\n            left[0] = -1;\n            left[1]++;\n        }\n        return left;\n    },\n    ceil: (left: [number, number] | Overlimit): [number, number] | Overlimit => {\n        if (left[1] < 0) {\n            return [left[0] < 0 ? 0 : 1, 0];\n        } else if (left[1] === 0) {\n            left[0] = Math.ceil(left[0]);\n        } else if (left[1] <= 14) {\n            left[0] = Math.ceil(left[0] * 10 ** left[1]) / 10 ** left[1];\n        }\n\n        if (left[0] === 10) {\n            left[0] = 1;\n            left[1]++;\n        }\n        return left;\n    },\n    round: (left: [number, number] | Overlimit): [number, number] | Overlimit => {\n        if (left[1] < 0) {\n            return [left[1] === -1 ? Math.round(left[0] / 10) : 0, 0];\n        } else if (left[1] === 0) {\n            left[0] = Math.round(left[0]);\n        } else if (left[1] <= 14) {\n            left[0] = Math.round(left[0] * 10 ** left[1]) / 10 ** left[1];\n        }\n\n        if (Math.abs(left[0]) === 10) {\n            left[0] /= 10;\n            left[1]++;\n        }\n        return left;\n    },\n    /* Left is readonly */\n    format: (left: [number, number] | Overlimit, settings: { type?: 'number' | 'input', padding?: boolean | 'exponent' }): string => {\n        const [base, power] = left;\n        if (!isFinite(base)) { return `${base}`; }\n        const type = settings.type ?? 'number';\n        let padding = settings.padding;\n\n        if (power >= 1e4 || power <= -1e4) { //e1.23e123 (-e-1.23e123)\n            if (padding === 'exponent') { padding = true; }\n            let exponent = power;\n            let inputBase = base;\n            if (Math.abs(Math.round(inputBase)) === 10) { //Probably not required, but just in case\n                inputBase /= 10;\n                exponent++;\n                if (exponent < 0 && exponent > -1e4) { return technical.format([inputBase, exponent], settings); }\n            }\n\n            exponent = Math.floor(Math.log10(Math.abs(exponent)));\n            let digits = 2 - Math.floor(Math.log10(exponent));\n            let mantissa = Math.round(power / 10 ** (exponent - digits)) / 10 ** digits;\n            if (Math.abs(mantissa) === 10) { //To remove rare bugs\n                mantissa /= 10;\n                exponent++;\n                if (padding) { digits = 2 - Math.floor(Math.log10(exponent)); }\n            }\n\n            if (type !== 'input') { mantissa = Math.abs(mantissa); }\n            const formated = padding ? mantissa.toFixed(digits) : `${mantissa}`;\n            return type === 'input' ? `${inputBase}e${formated}e${exponent}` :\n                `${base < 0 ? '-' : ''}${formated.replace('.', globalSave.format[0])}e${power < 0 ? '-' : ''}e${exponent}`; //1.23ee123 (-1.23e-e123)\n        }\n\n        if (power >= 6 || power < -4) { //1.23e123 (-1.23e-123)\n            if (padding === 'exponent') { padding = true; }\n\n            let digits = 3 - Math.floor(Math.log10(Math.abs(power)));\n            let mantissa = Math.round(base * 10 ** digits) / 10 ** digits;\n            let exponent = power;\n            if (Math.abs(mantissa) === 10) { //To remove rare bugs\n                mantissa /= 10;\n                exponent++;\n                if (exponent === -4 || exponent === 1e4) { return technical.format([mantissa, exponent], settings); }\n                if (padding) { digits = 3 - Math.floor(Math.log10(Math.abs(exponent))); }\n            }\n\n            const formated = padding ? mantissa.toFixed(digits) : `${mantissa}`;\n            return type === 'input' ? `${formated}e${exponent}` : `${formated.replace('.', globalSave.format[0])}e${exponent}`;\n        }\n\n        //12345 (-12345)\n        let digits = power < 1 ? 5 : (5 - power);\n        const mantissa = Math.round(base * 10 ** (digits + power)) / 10 ** digits;\n\n        const powerCheck = Math.floor(Math.log10(Math.abs(mantissa))); //To remove rare bugs\n        if (powerCheck === 6) { return technical.format([base < 0 ? -1 : 1, powerCheck], settings); }\n        if (padding === 'exponent') {\n            padding = false;\n        } else if (padding && powerCheck !== power) { digits = powerCheck < 1 ? 5 : (5 - powerCheck); }\n\n        let formated = padding ? mantissa.toFixed(digits) : `${mantissa}`;\n        if (type === 'input') { return formated; }\n        let ending = ''; //Being lazy\n        const index = formated.indexOf('.');\n        if (index !== -1) { //For some reason this replaces dot 2 times faster (?), also fixes spaces after dot (not required)\n            ending = `${globalSave.format[0]}${formated.slice(index + 1)}`;\n            formated = formated.slice(0, index);\n        }\n        return `${mantissa >= 1e3 ? formated.replace(/\\B(?=(\\d{3})+(?!\\d))/, globalSave.format[1]) : formated}${ending}`;\n    }\n};\n\nexport const { compareFunc } = Overlimit;\n", "import Overlimit from './Limit';\nimport { getId, updateCollapsePointsText } from './Main';\nimport { calculateMaxLevel, assignMilestoneInformation, toggleConfirm, toggleSwap, calculateEffects, autoUpgradesSet, autoResearchesSet, autoElementsSet, toggleSupervoid, assignBuildingsProduction, assignResetInformation } from './Stage';\nimport type { globalType, playerType } from './Types';\nimport { format, switchTab, visualTrueStageUnlocks, visualUpdateResearches, visualUpdateUpgrades } from './Update';\nimport { prepareVacuum } from './Vacuum';\n\nexport const player: playerType = {\n    version: 'v0.2.3',\n    fileName: 'Fundamental, [dateD.M.Y] [timeH-M-S], [stage]',\n    stage: {\n        true: 1,\n        current: 1,\n        active: 1,\n        resets: 0,\n        time: 0,\n        peak: 0,\n        input: [0, 0]\n    },\n    discharge: {\n        energy: 0,\n        energyMax: 0,\n        current: 0\n    },\n    vaporization: {\n        clouds: new Overlimit('0'),\n        cloudsMax: new Overlimit('0'),\n        input: [3, 0]\n    },\n    accretion: {\n        rank: 0\n    },\n    collapse: {\n        mass: 0.01235,\n        massMax: 0.01235,\n        stars: [0, 0, 0],\n        show: 0,\n        maxElement: 0,\n        input: [2, 1e6],\n        points: []\n    },\n    merge: {\n        reward: [0, 0, 0, 0],\n        resets: 0,\n        input: 0\n    },\n    inflation: {\n        tree: [],\n        spent: 0,\n        vacuum: false,\n        resets: 0,\n        time: 0,\n        age: 0\n    },\n    time: {\n        updated: Date.now(),\n        started: Date.now(),\n        export: [0, 0, 0, 0],\n        offline: 0,\n        online: 0,\n        stage: 0,\n        vacuum: 0,\n        universe: 0\n    },\n    buildings: [\n        [] as unknown as playerType['buildings'][0], [ //Stage 1\n            {\n                current: new Overlimit('3'),\n                total: new Overlimit('3'),\n                trueTotal: new Overlimit('3')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }\n        ], [ //Stage 2\n            {\n                current: new Overlimit('2.7753108348135e-3'),\n                total: new Overlimit('2.7753108348135e-3'),\n                trueTotal: new Overlimit('2.7753108348135e-3')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }\n        ], [ //Stage 3\n            {\n                current: new Overlimit('1e-19'),\n                total: new Overlimit('1e-19'),\n                trueTotal: new Overlimit('1e-19')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }\n        ], [ //Stage 4\n            {\n                current: new Overlimit('1'),\n                total: new Overlimit('1'),\n                trueTotal: new Overlimit('1')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }\n        ], [ //Stage 5\n            {\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }\n        ], [ //Stage 6\n            {\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }\n        ]\n    ],\n    strange: [\n        {\n            current: 0,\n            total: 0\n        }, {\n            current: 0,\n            total: 0\n        }\n    ],\n    cosmon: {\n        current: 0,\n        total: 0\n    },\n    /* Because I'm lazy to write 50+ 0's, all empty [] auto added */\n    upgrades: [],\n    researches: [],\n    researchesExtra: [],\n    researchesAuto: [],\n    ASR: [],\n    elements: [],\n    strangeness: [],\n    milestones: [],\n    challenges: {\n        active: null,\n        super: false,\n        void: [0, 0, 0, 0, 0, 0],\n        supervoid: [0, 0, 0, 0, 0, 0],\n        voidCheck: [0, 0, 0, 0, 0, 0]\n    },\n    toggles: {\n        normal: [], //class 'toggleNormal'\n        confirm: [], //Class 'toggleConfirm'\n        buildings: [], //Class 'toggleBuilding'\n        hover: [], //Class 'toggleHover'\n        max: [], //Class 'toggleMax'\n        auto: [], //Class 'toggleAuto'\n        shop: {\n            input: 0,\n            wait: [2]\n        }\n    },\n    history: {\n        stage: {\n            best: [3.1556952e16, 0, 0, 0],\n            list: [],\n            input: [20, 100]\n        },\n        vacuum: {\n            best: [3.1556952e16, false, 0],\n            list: [],\n            input: [20, 100]\n        }\n    },\n    event: false,\n    clone: {}\n};\n\nexport const global: globalType = {\n    tab: 'stage',\n    subtab: {\n        stageCurrent: 'Structures',\n        settingsCurrent: 'Settings',\n        upgradeCurrent: 'Upgrades',\n        strangenessCurrent: 'Matter',\n        inflationCurrent: 'Researches'\n    } as globalType['subtab'],\n    tabList: { //Order comes from footer\n        tabs: ['stage', 'upgrade', 'strangeness', 'inflation', 'settings'],\n        stageSubtabs: ['Structures', 'Advanced'],\n        settingsSubtabs: ['Settings', 'History', 'Stats'],\n        upgradeSubtabs: ['Upgrades', 'Elements'],\n        strangenessSubtabs: ['Matter', 'Milestones'],\n        inflationSubtabs: ['Researches', 'Milestones']\n    } as globalType['tabList'],\n    debug: {\n        errorID: true,\n        errorQuery: true,\n        errorGain: true,\n        timeLimit: false,\n        rankUpdated: null,\n        historyStage: null,\n        historyVacuum: null\n    },\n    offline: {\n        active: true,\n        speed: 0.2,\n        stageUpdate: null\n    },\n    paused: false,\n    trueActive: 1,\n    lastSave: 0,\n    footer: true,\n    hotkeys: {\n        disabled: true,\n        tab: false,\n        shift: false,\n        ctrl: false\n    },\n    lastUpgrade: [[null, 'upgrades'], [null, 'upgrades'], [null, 'upgrades'], [null, 'upgrades'], [null, 'upgrades'], [null, 'upgrades'], [null, 'upgrades']],\n    lastElement: null,\n    lastStrangeness: [null, 0],\n    lastInflation: null,\n    lastMilestone: [null, 0],\n    lastChallenge: [1, 1],\n    sessionToggles: [false, false],\n    automatization: {\n        autoU: [\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            []\n        ],\n        autoR: [\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            []\n        ],\n        autoE: [\n            [],\n            [],\n            [],\n            [],\n            [],\n            []\n        ],\n        elements: []\n    },\n    dischargeInfo: {\n        energyType: [[]],\n        energyStage: [0],\n        energyTrue: 0,\n        next: 1,\n        total: 0,\n        base: 1\n    },\n    vaporizationInfo: {\n        S2Research0: 0,\n        S2Research1: 0,\n        S2Extra1: 0,\n        get: new Overlimit('0')\n    },\n    accretionInfo: {\n        unlockA: [2, 4, 8, 11],\n        rankU: [1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5, 5, 7],\n        rankR: [1, 1, 2, 2, 3, 3, 3, 4, 5],\n        rankE: [2, 3, 4, 5, 3, 6],\n        rankCost: [5.9722e27, 1e-7, 1e10, 1e24, 5e29, 2.45576045e31, 1.98847e40],\n        rankColor: ['blue', 'cyan', 'gray', 'gray', 'gray', 'darkviolet', 'orange', 'gray'],\n        rankName: ['Ocean world', 'Cosmic dust', 'Meteoroid', 'Asteroid', 'Planet', 'Jovian planet', 'Protostar', 'Protogalaxy'],\n        rankImage: ['Ocean%20world.png', 'Dust.png', 'Meteoroids.png', 'Asteroid.png', 'Planet.png', 'Giant.png', 'Protostar.png', 'Protogalaxy.png'],\n        maxRank: 4,\n        effective: 1,\n        disableAuto: false,\n        dustSoft: 1\n    },\n    collapseInfo: {\n        unlockB: [0, 0.01235, 0.23, 10, 40, 1000],\n        unlockU: [0.01235, 0.076, 1.3, 10, 40],\n        unlockR: [0.18, 0.3, 0.8, 1.3, 40, 1000],\n        newMass: 0,\n        starCheck: [0, 0, 0],\n        trueStars: 0,\n        pointsLoop: 0, //Micro optimization\n        solarCap: 0.01235,\n        timeUntil: Infinity\n    },\n    mergeInfo: {\n        unlockU: [0, 0, 0, 0, 4],\n        unlockR: [0, 0, 2, 2],\n        unlockE: [0, 2, 3],\n        S5Extra2: 0,\n        checkReward: [0, 0, 0, 0],\n        galaxies: 0\n    },\n    inflationInfo: {\n        globalSpeed: 1,\n        totalSuper: 0,\n        instability: 1\n    },\n    intervalsId: {\n        main: undefined,\n        numbers: undefined,\n        visual: undefined,\n        autoSave: undefined,\n        mouseRepeat: undefined\n    },\n    stageInfo: {\n        word: ['', 'Microworld', 'Submerged', 'Accretion', 'Interstellar', 'Intergalactic', 'Abyss'],\n        textColor: ['', 'cyan', 'blue', 'gray', 'orange', 'darkorchid', 'darkviolet'],\n        buttonBorder: ['', 'darkcyan', '#386cc7', '#424242', '#a35700', '#8f004c', '#6c1ad1'],\n        imageBorderColor: ['', '#008b8b', '#1460a8', '#5b5b75', '#e87400', '#b324e2', '#5300c1'],\n        costName: ['', 'Energy', 'Drops', 'Mass', 'Elements', 'Elements', 'Dark matter'],\n        activeAll: [1]\n    },\n    buildingsInfo: {\n        maxActive: [0, 4, 6, 5, 5, 4, 2],\n        name: [\n            [],\n            ['Mass', 'Preons', 'Quarks', 'Particles', 'Atoms', 'Molecules'], //[0] Must be 'Mass'\n            ['Moles', 'Drops', 'Puddles', 'Ponds', 'Lakes', 'Seas', 'Oceans'],\n            ['Mass', 'Cosmic dust', 'Planetesimals', 'Protoplanets', 'Satellites', 'Subsatellites'],\n            ['Elements', 'Brown dwarfs', 'Main sequence', 'Red supergiants', 'Blue hypergiants', 'Quasi-stars'],\n            ['Stars', 'Nebulas', 'Star clusters', 'Galaxies'],\n            ['Dark matter', 'Universes']\n        ],\n        hoverText: [\n            [],\n            ['Mass', 'Preons', 'Quarks', 'Particles', 'Atoms'],\n            ['Tritium', 'Drops', 'Puddles', 'Puddles', 'Puddles', 'Puddles'],\n            ['Preons hardcap', 'Cosmic dust', 'Planetesimals', 'Protoplanets', 'Satellites'],\n            ['Elements', 'Elements', 'Elements', 'Elements', 'Elements'],\n            ['Interstellar Stars', 'Interstellar Stars', 'Nebulas and Star clusters'],\n            ['Dark matter']\n        ],\n        type: [\n            [],\n            ['producing', 'producing', 'producing', 'producing', 'producing'],\n            ['producing', 'producing', 'improving', 'improving', 'improving', 'improving'],\n            ['producing', 'producing', 'producing', 'improving', 'improving'],\n            ['producing', 'producing', 'producing', 'producing', 'producing'],\n            ['producing', 'improving', 'improving'],\n            ['producing']\n        ],\n        startCost: [\n            [],\n            [0, 0.005476, 6, 3, 24, 3],\n            [0, 2.7753108348135e-3, 100, 1e7, 1e18, 1e23, 2.676e25],\n            [0, 1e-19, 1e-9, 1e21, 1e17, 1e22],\n            [0, 1, 1e5, 1e15, 1e27, 1e50],\n            [0, 1e50, 1e54, 1e5],\n            [0, 1]\n        ],\n        increase: [\n            [],\n            [0, 1.4, 1.4, 1.4, 1.4, 1.4],\n            [0, 1.15, 1.2, 1.25, 1.35, 1.4, 4],\n            [0, 1.15, 1.25, 1.35, 10, 10],\n            [0, 1.4, 1.55, 1.70, 1.85, 2],\n            [0, 2, 2, 1.11],\n            [0, 2]\n        ],\n        producing: []\n    },\n    strangeInfo: {\n        name: ['Strange quarks', 'Strangelets'],\n        stageBoost: [1, 1, 1, 1, 1, 1],\n        strangeletsInfo: [0, 1],\n        quarksGain: 0\n    },\n    upgradesInfo: [\n        {} as globalType['upgradesInfo'][0], { //Stage 1\n            name: [\n                'Weak force',\n                'Strong force',\n                'Electrons',\n                'Protons',\n                'Neutrons',\n                'Superposition',\n                'Protium',\n                'Deuterium',\n                'Tritium',\n                'Nuclear fusion',\n                'Nuclear fission'\n            ],\n            effectText: [\n                () => 'Particles will produce 8 times more Quarks.',\n                () => 'Gluons will be able to bind Quarks into Particles, which will make Particles 16 times cheaper.',\n                () => `${player.inflation.vacuum ? 'Atoms' : 'Particles'} will be 8 times cheaper.`,\n                () => `Atoms will produce ${player.inflation.vacuum ? 6 : 4} times more Particles.${player.upgrades[1][5] !== 1 && player.buildings[1][player.inflation.vacuum ? 4 : 2].total.lessOrEqual('0') ? '\\n(Requires any amount of Atoms to create)' : ''}`,\n                () => `Molecules will produce 4 times more Atoms.${player.upgrades[1][5] !== 1 && player.buildings[1][player.inflation.vacuum ? 5 : 3].total.lessOrEqual('0') ? '\\n(Requires any amount of Molecules to create)' : ''}`,\n                () => `Ability to regain spent Energy and if had enough Energy will also boost production for all ${player.inflation.vacuum ? 'Microworld ' : ''}Structures by ${format(global.dischargeInfo.base, { padding: true })}.${player.inflation.vacuum ? `\\n(In true Vacuum it will also reset resources and all non self-made Structures from all Stages${player.stage.true >= 7 ? ' before Abyss' : ''}, and enough self-made Structures to fully regain spent Energy)` : ''}`,\n                () => `Decrease Structures cost scaling by -${format(calculateEffects.S1Upgrade6() / 100)}.`,\n                () => `Make self-made Structures boost themselves by ${format(calculateEffects.S1Upgrade7())}.${player.inflation.vacuum ? `\\n(Self-made Preons boost themselves by ${format(calculateEffects.S1Upgrade7(true), { padding: true })} instead, softcaps instantly and completely disabled after ${format(1001)} Preons)` : ''}`,\n                () => `Molecules will produce Molecules. At a reduced rate.\\n(${format(new Overlimit(effectsCache.tritium).multiply(global.inflationInfo.globalSpeed), { padding: true })} Molecules per second)`,\n                () => `Unspent Energy ${player.upgrades[1][10] === 1 ? '' : `^${format(0.5)}`} will boost 'Tritium' production of Molecules.\\n(Boost: ${format(calculateEffects.S1Upgrade9(), { padding: true })})`,\n                () => \"Unlock full strength of 'Nuclear fusion' and increase effective Energy by 2.\"\n            ],\n            startCost: [40, 60, 100, 120, 180, 360, 1200, 3600, 12000, 80000, 2.4e6],\n            maxActive: 10\n        }, { //Stage 2\n            name: [\n                'Molecules to Moles',\n                'Water spread',\n                'Vaporization',\n                'Surface tension',\n                'Surface stress',\n                'Stream',\n                'River',\n                'Tsunami',\n                'Tide'\n            ],\n            effectText: [\n                () => `Drops will ${player.inflation.vacuum ? 'improve Tritium' : 'produce Moles'} ${format(player.inflation.vacuum ? 1.02 : 1.04)} times ${player.inflation.vacuum ? 'more' : 'faster'} for every self-made Drop.${player.buildings[2][1].true < 1 && player.buildings[2][2].true < 1 ? '\\n(Requires any amount of self-made Drops to create)' : ''}`,\n                () => `Spread water faster with every Puddle, current formula is ${format(1.02)} ^ effective Puddles.\\nPuddles after 200 and non self-made ones are raised to the power of ${format(0.7)}.\\n(Total effect: ${format(calculateEffects.S2Upgrade1(), { padding: true })})`,\n                () => { //[2]\n                    const softcap = format(calculateEffects.cloudsGain());\n                    return `Gain ability to convert Drops into Clouds. Cloud gain formula: (Clouds ^ (1 / ${softcap}) + (Drops / ${format(calculateEffects.S2Upgrade2())})) ^ ${softcap} - Clouds.`;\n                },\n                () => `Puddles will get a boost based on Moles ^${format(calculateEffects.S2Upgrade3_power())}.\\n(Boost: ${format(calculateEffects.S2Upgrade3(), { padding: true })})`,\n                () => `Puddles will get a boost based on Drops ^${format(calculateEffects.S2Upgrade4_power())}.\\n(Boost: ${format(calculateEffects.S2Upgrade4(), { padding: true })})`,\n                () => `Ponds will increase current Puddle amount. (${1 + player.researches[2][4]} extra Puddles per Pond)`,\n                () => `Lakes will increase current Pond amount. (${1 + player.researches[2][5]} extra Ponds per Lake)`,\n                () => 'Spreads enough water to make Seas increase current Lake amount. (1 extra Lakes per Sea)',\n                () => 'Spreads water too fast. 1 extra Seas per Ocean.\\nAlso will improve Oceans effect scaling.'\n            ],\n            startCost: [10, 1e6, 1e10, 1e3, 1e4, 2e9, 5e20, 1e28, 2e48],\n            maxActive: 8\n        }, { //Stage 3\n            name: [\n                'Brownian motion',\n                'Gas',\n                'Micrometeoroid',\n                'Streaming instability',\n                'Gravitational field',\n                'Rubble pile',\n                'Magma ocean',\n                'Hydrostatic equilibrium',\n                'Satellite system',\n                'Atmosphere',\n                'Pebble accretion',\n                'Tidal force',\n                'Ring system',\n                'Self-gravity'\n            ],\n            effectText: [\n                () => `Through random collisions every self-made Cosmic dust will ${player.inflation.vacuum ? 'delay Preons hardcap even more' : 'produce even more Mass'}.\\n(By ${format(calculateEffects.S3Upgrade0())} per self-made Cosmic dust)`,\n                () => `New substance for Accretion, will provide boost to Cosmic dust based on its current quantity.\\n(Formula: ((self-made + 1) * current) ^${format(calculateEffects.S3Upgrade1_power())} | Boost: ${format(calculateEffects.S3Upgrade1(), { padding: true })})`,\n                () => 'Just a small meteoroid, but it will be a good base for what to come.\\n(Unlock a new Structure and get 2x boost to Cosmic dust)',\n                () => `Small bodies will spontaneously concentrate into clumps.\\n(Self-made Planetesimals will boost each other by ${format(calculateEffects.S3Upgrade3())})`,\n                () => 'Bodies will become massive enough to affect each other with gravity.\\n(Unlock a new Structure and get 3x boost to Planetesimals)',\n                () => `Shattered pieces will fall back together. ${player.inflation.vacuum ? 'Preons hardcap delay' : 'Mass production'} from Cosmic dust will be increased by 3.`,\n                () => `Melt the core to increase Accretion speed.\\n(Cosmic dust strength will be increased by ${format(2 * 1.5 ** player.researches[3][7])})`,\n                () => `After reaching equilibrium self-made Protoplanets will boost each other by ${format(1.02)}.`,\n                () => 'Unlock yet another Structure.',\n                () => `${player.inflation.vacuum ? 'Preons hardcap delay' : 'Mass production'} from Cosmic dust will be increased again (because of drag and escape velocity), by 2.`,\n                () => `${player.inflation.vacuum ? 'Preons hardcap delay' : 'Mass production'} from Cosmic dust will be greatly increased by ${8 * 2 ** player.researches[3][8]}.`,\n                () => `Satellites cost scaling will be 2 times smaller.${player.inflation.vacuum ? '\\nAlso unlock a new Structure.' : ''}`,\n                () => 'Satellites effect will scale better.',\n                () => `Allow Star clusters to be boosted by ('Gravity' / ${format(2e5)}) ^${format(0.5)} + 1.\\n(Boost is equal to ${format((calculateEffects.S3Research6() / 2e5) ** 0.5 + 1, { padding: true })})`\n            ],\n            startCost: [1e-16, 1e-13, 1e-13, 1, 1e14, 1e17, 1e10, 1e22, 1e22, 1e23, 1e9, 1e26, 1e29, 1e86],\n            maxActive: 13\n        }, { //Stage 4\n            name: [\n                'Gravitational Collapse',\n                'Proton-proton chain',\n                'Carbon-Nitrogen-Oxygen cycle',\n                'Helium fusion',\n                'Nucleosynthesis'\n            ],\n            effectText: [\n                () => `As fuel runs out, every Star will boost production in its own special way.\\nSolar mass ${player.inflation.vacuum ? `on Collapse is Accretion Mass / ${format(1.98847e33)} and ` : ''}will not decrease if to reset below current. (Hover over Remnants effects to see what they boosts)`,\n                () => \"Fuse with Protium instead of Deuterium. Unlock 5 first Elements. ('Elements' subtab)\",\n                () => 'Unlock CNO cycle which is a better source of Helium and Energy. Unlock 5 more Elements.',\n                () => 'Through Triple-alpha and then Alpha process unlock 2 more Elements.',\n                () => `Create new Atomic nuclei with Neutron capture (s-process and p-process).\\nUnlock 1 more Element and +1 for every self-made ${player.stage.true >= 7 || player.event ? 'Universe' : '(not unlocked)'}.`\n            ],\n            startCost: [100, 1000, 1e9, 1e48, 1e128],\n            maxActive: 4\n        }, { //Stage 5\n            name: [\n                'Molecular cloud',\n                'Super Star cluster',\n                'Quasar',\n                'Galactic Merger',\n                'Placeholder'\n            ],\n            effectText: [\n                () => `Nebula that is dense enough to block the light, it will boost Nebulas by ${format(calculateEffects.S5Upgrade0())}.`,\n                () => `A very massive Star cluster that will boost Star clusters by ${format(calculateEffects.S5Upgrade1())}.`,\n                () => `Boost per Galaxy will be increased by +${format(calculateEffects.S5Upgrade2(false, 1), { padding: true })}.\\n(Effect will be stronger with more Solar mass past ${format(1e5)})`,\n                () => `Unlock a new reset type that will bring Galaxies closer for potential Merging.${player.inflation.vacuum ? ' That reset behaves like a Galaxy reset, while also converting self-made Galaxies into non self-made through new and even bigger Structures. Can only be done once per Stage reset.' : ''}`,\n                () => 'Will added later.'\n            ],\n            startCost: [1e56, 1e60, 1e120, 1e160, Infinity],\n            maxActive: 4\n        }, { //Stage 6\n            name: [],\n            effectText: [],\n            startCost: [],\n            maxActive: 0\n        }\n    ],\n    researchesInfo: [\n        {} as globalType['researchesInfo'][0], { //Stage 1\n            name: [\n                'Stronger Protium',\n                'Better Deuterium',\n                'Improved Tritium',\n                'Requirement decrease',\n                'Discharge improvement',\n                'Radioactive Discharge'\n            ],\n            effectText: [\n                () => `Cost scaling will be -${format(0.03)} smaller with each level.`,\n                () => `Self-made Structures will boost each other by additional +${format(0.01)}.`,\n                () => `Molecules will produce themselves ${format(calculateEffects.S1Research2())} times quicker.`,\n                () => `Discharge goals requirement will scale slower. (-2)\\n(Creating this Research will make next Discharge goal to be ${format(calculateEffects.dischargeCost(calculateEffects.dischargeScaling(player.researches[1][3] + 1)))} Energy)`,\n                () => { //[4]\n                    const newBase = calculateEffects.dischargeBase(player.researches[1][4] + 1);\n                    return `Discharge production boost from reached goals will be increased by +${format(newBase - global.dischargeInfo.base)}.\\n(This is equal to ${format((newBase / global.dischargeInfo.base) ** global.dischargeInfo.total, { padding: true })}x boost improvement)`;\n                },\n                () => `Discharge goals will be able to boost 'Tritium'.\\n(Current effect: ${format(calculateEffects.S1Research5())} ^ level)`\n            ],\n            cost: [],\n            startCost: [1600, 4800, 16000, 32000, 16000, 24000],\n            scaling: [400, 1200, 8000, 40000, 16000, 16000],\n            max: [5, 4, 8, 2, 4, 3],\n            maxActive: 6\n        }, { //Stage 2\n            name: [\n                'Better Mole production',\n                'Better Drop production',\n                'Stronger surface tension',\n                'Stronger surface stress',\n                'More streams',\n                'Distributary channel'\n            ],\n            effectText: [\n                () => `Drops will ${player.inflation.vacuum ? 'improve Tritium' : 'produce Moles'} 3 times more.${player.upgrades[2][2] === 1 || player.inflation.vacuum ? `\\nEffective level ${global.vaporizationInfo.S2Research0 !== player.researches[2][0] ? `is ${format(global.vaporizationInfo.S2Research0, { padding: true })}, will be restored with more Drops` : 'will be set to 0 after any reset'}.` : ''}${player.buildings[2][1].true < 1 && player.buildings[2][2].true < 1 && player.researches[2][0] < 1 ? '\\n(Requires any amount of self-made Drops to create)' : ''}`,\n                () => `Puddles will produce 2 times more Drops.${player.upgrades[2][2] === 1 || player.inflation.vacuum ? `\\nEffective level ${global.vaporizationInfo.S2Research1 !== player.researches[2][1] ? `is ${format(global.vaporizationInfo.S2Research1, { padding: true })}, will be restored with more Drops` : 'will be set to 0 after any reset'}.` : ''}`,\n                () => { //[2]\n                    const power = calculateEffects.S2Upgrade3_power(player.researches[2][2] + 1) - calculateEffects.S2Upgrade3_power();\n                    return `'Surface tension' base will be +${format(power)} stronger.\\n(This is equal to ${format(calculateEffects.S2Upgrade3(power), { padding: true })}x boost improvement)`;\n                },\n                () => { //[3]\n                    const power = calculateEffects.S2Upgrade4_power(player.researches[2][3] + 1) - calculateEffects.S2Upgrade4_power();\n                    return `'Surface stress' base will be +${format(power)} stronger.\\n(This is equal to ${format(calculateEffects.S2Upgrade4(power), { padding: true })}x boost improvement)`;\n                },\n                () => 'With more streams, will be able to have even more extra Puddles. (+1 extra Puddles per Pond)',\n                () => 'Rivers will be able to split, which will allow even more Ponds per Lake. (+1 per)'\n            ],\n            cost: [],\n            startCost: [10, 400, 1e4, 1e5, 1e14, 1e22],\n            scaling: [1.366, 5, 1e3, 1e2, 1e3, 1e4],\n            max: [8, 8, 4, 4, 2, 1],\n            maxActive: 6\n        }, { //Stage 3\n            name: [\n                'More massive bodies',\n                'Adhesion',\n                'Space weathering',\n                'Inelastic collisions',\n                'Destructive collisions',\n                'Contact binary',\n                'Gravity',\n                'Planetary differentiation',\n                'Aerodynamic drag'\n            ],\n            effectText: [\n                () => 'Increase strength of Cosmic dust by 3.',\n                () => `Cosmic dust particles will cling to each other. (+${format(0.01)} to 'Brownian motion')`,\n                () => 'Planetesimals will produce more Cosmic dust. (3 times more)',\n                () => `Slow encounter velocities will result in a more efficient growth.\\n${player.inflation.vacuum ? 'Preons hardcap delay' : 'Mass production'} from Cosmic dust will be increased by 2.`,\n                () => `Planetesimals when shatter will replenish small grains quantity.\\n'Streaming instability' effect will be increased by +${format(0.005)}.`,\n                () => `Some Planetesimals instead of shattering will form a contact binary or even trinary.\\n${player.inflation.vacuum ? 'Preons hardcap delay' : 'Mass production'} from Cosmic dust will be increased by 3.`,\n                () => { //[6]\n                    const effect = calculateEffects.S3Research6();\n                    return `Planetesimals will attract other bodies and get a boost to own production based on unspent Mass ^${format(effect > 1 ? logAny(effect, player.buildings[3][0].current.toNumber()) : 0, { padding: true })}.\\n(Boost: ${format(effect, { padding: true })} \u27F6 ${format(calculateEffects.S3Research6(player.researches[3][6] + 1), { padding: true })}, weaker after ${format(1e21)} Mass)`;\n                },\n                () => `'Magma Ocean' will become stronger, by ${format(1.5)}.`,\n                () => `Improve 'Pebble accretion' Accretion speed even more.\\n${player.inflation.vacuum ? 'Preons hardcap delay' : 'Mass production'} from Cosmic dust will increased by 2.`\n            ],\n            cost: [],\n            startCost: [1e-16, 1e-15, 1e-5, 1e2, 1e10, 1e11, 1e15, 1e14, 1e12],\n            scaling: [11, 111, 22, 10, 100, 100, 10, 1e4, 1e3],\n            max: [9, 3, 8, 8, 2, 2, 6, 4, 4],\n            maxActive: 9\n        }, { //Stage 4\n            name: [\n                'Planetary system',\n                'Star system',\n                'Protoplanetary disk',\n                'Planetary nebula',\n                'Gamma-ray burst',\n                'Inner Black hole'\n            ],\n            effectText: [\n                () => `From Planetesimals to Planets, will get ${format(calculateEffects.S4Research0_base())}x boost to all Stars per level.\\n(Total boost: ${format(calculateEffects.S4Research0(), { padding: true })})`,\n                () => { //[1]\n                    const base = calculateEffects.S4Research1();\n                    return `All self-made Stars will boost each other by ${format(base)}.\\n(Total boost: ${format(new Overlimit(base).power(global.collapseInfo.trueStars), { padding: true })} \u27F6 ${format(new Overlimit(calculateEffects.S4Research1(player.researches[4][1] + 1)).power(global.collapseInfo.trueStars), { padding: true })})`;\n                },\n                () => `Improve effect scaling of 'Planetary system', as well increase its max level by +3.\\n(Total boost from 'Planetary system' will be increased by ${format(calculateEffects.S4Research0(calculateEffects.S4Research0_base(player.researches[4][2] + 1) / calculateEffects.S4Research0_base()), { padding: true })})`,\n                () => \"Matter will be expelled from Red giants, this will boost Main-sequence Stars by 2, as well increase 'Planetary system' max level by +3.\",\n                () => `An immensely energetic explosion that will boost all Stars by ${format(calculateEffects.S4Research4(), { padding: true })}${player.researches[4][4] < 2 ? ` \u27F6 ${format(calculateEffects.S4Research4(false, player.researches[4][4] + 1), { padding: true })}` : ''}.\\n(Effect will be stronger with more Black holes${player.elements[23] >= 1 ? ' and Solar mass' : ''})`,\n                () => 'Quasi-stars will Collapse into Intermediate-mass Black holes that are equivalent to +1 (Stellar) Black holes per level.'\n            ],\n            cost: [],\n            startCost: [1e3, 5e4, 1e8, 1e11, 1e28, 1e154],\n            scaling: [10, 200, 1e12, 1, 2e8, 1e216],\n            max: [3, 2, 1, 1, 2, 1],\n            maxActive: 5\n        }, { //Stage 5\n            name: [\n                'Higher density',\n                'Type frequency',\n                'Jeans instability',\n                'Gravitational binding Energy'\n            ],\n            effectText: [\n                () => `Higher density of Nebulas, will allow them to produce higher tier of Stars, but each tier is 4 times slower than previous one. Also will boost Nebulas by 2.\\nNext tier will be ${global.buildingsInfo.name[4][Math.min(player.researches[5][0] + 2, player.inflation.vacuum ? 5 : 4)]}.`,\n                () => `More of same Star type will be found within Star cluster. Star clusters and their minimum strength will be improved by 2 and will also boost lower tier of Stars, but 2 times less than previous one.\\nNext tier will be ${global.buildingsInfo.name[4][Math.max((player.inflation.vacuum ? 4 : 3) - player.researches[5][1], 1)]}.`,\n                () => `Weaken internal gas pressure within Nebulas to cause even more gravitational Collapses.\\nWhich will make every self-made Nebula will boost each other by ${format(calculateEffects.S5Research2())}. (+${format(0.0075)} per level)`,\n                () => `Increase required Energy for Star clusters to cease being in a gravitationally bound state.\\nWhich will make every self-made Star cluster boost each other by ${format(calculateEffects.S5Research3())}. (+${format(0.0075)} per level)`\n            ],\n            cost: [],\n            startCost: [1e54, 1e58, 1e200, 1e210],\n            scaling: [1e8, 1e8, 1e30, 1e30],\n            max: [4, 4, 2, 2],\n            maxActive: 2\n        }, { //Stage 6\n            name: [],\n            effectText: [],\n            cost: [],\n            startCost: [],\n            scaling: [],\n            max: [],\n            maxActive: 0\n        }\n    ],\n    researchesExtraInfo: [\n        {} as globalType['researchesExtraInfo'][0], { //Stage 1\n            name: [\n                'Extra strong force',\n                'Improved formula',\n                'Accretion',\n                'Later Preons',\n                'Impulse',\n                'Radioactive decay'\n            ],\n            effectText: [\n                () => \"Mesons will be able to bind Particles to form Atoms, which will make Atoms to be affected by 'Strong force'.\\n(Atoms will be 16 times cheaper)\",\n                () => { //[1]\n                    const now = calculateEffects.S1Extra1();\n                    const after = calculateEffects.S1Extra1(player.researchesExtra[1][1] + 1);\n                    return `Improve 'Tritium' formula, current formula is log${format(now)}${player.researchesExtra[1][1] < 4 ? ` \u27F6 log${format(after)}.\\n(Which is equal to ${format(logAny(now, after), { padding: true })}x improvement)` : '.'}`;\n                },\n                () => `First level is to begin the Accretion, second level is to Submerge it.\\nAll Structures produce Energy on creation and all resets affect all lower Stages, while also doing Discharge reset.\\nAccretion Mass is Microworld Mass * ${format(1.78266192e-33)} and Moles are Molecules / ${format(6.02214076e23)}.`,\n                () => { //[3]\n                    const power = calculateEffects.S1Extra3();\n                    const energy = calculateEffects.effectiveEnergy();\n                    return `Boost Preons and delay hardcap by current Energy ^${format(power)}.\\n(Effect: ${format(energy ** power, { padding: true })} \u27F6 ${format(energy ** calculateEffects.S1Extra3(player.researchesExtra[1][3] + 1), { padding: true })})`;\n                },\n                () => { //[4]\n                    const base = calculateEffects.S1Extra4();\n                    return `Discharge goals will be able to boost all Interstellar Stars, strength is based on Energy and Discharge base.\\nCurrent base is ${format(base, { padding: true })}, total boost is ${format(base ** global.dischargeInfo.total, { padding: true })}.`;\n                },\n                () => `Improve 'Impulse' base strength even more.\\n(This will increase total boost by ${format((calculateEffects.S1Extra4(player.researchesExtra[1][5] + 1) / calculateEffects.S1Extra4()) ** global.dischargeInfo.total, { padding: true })})`\n            ],\n            cost: [],\n            startCost: [2000, 40000, 12000, 16000, 160000, 1.6e6],\n            scaling: [0, 16000, 68000, 16000, 0, 1.6e6],\n            max: [1, 4, 2, 4, 1, 2],\n            maxActive: 0\n        }, { //Stage 2\n            name: [\n                'Natural Vaporization',\n                'Rain Clouds',\n                'Storm Clouds',\n                'Water Accretion',\n                'Jeans Mass'\n            ],\n            effectText: [\n                () => 'When formed Clouds will use Drops produced this reset instead of current ones.',\n                () => { //[1]\n                    const maxLevel = player.researchesExtra[2][1];\n                    const trueLevel = global.vaporizationInfo.S2Extra1;\n                    const penalty = player.buildings[2][2].true < 1;\n                    const effect = calculateEffects.S2Extra1;\n                    return `Some Clouds will start pouring Drops themselves. This will boost Puddles, even if there are none, based on current Clouds.${player.researchesExtra[2][2] < 1 ? `\\nEffective level ${trueLevel !== maxLevel ? `is ${format(trueLevel, { padding: true })}, will be restored with more Drops, this doesn't` : \"will be set to 0 after any reset, this won't\"} affect pre Puddles boost.` : ''}\\n(Effect: ${format(penalty ? (effect(maxLevel) - 1) * global.inflationInfo.globalSpeed : effect(trueLevel), { padding: true })} \u27F6 ${format(penalty ? (effect(maxLevel + 1) - 1) * global.inflationInfo.globalSpeed : effect(maxLevel + (trueLevel === maxLevel ? 1 : 0)), { padding: true })}, weaker after ${format(1e6)} Clouds)`;\n                },\n                () => `Make 'Rain Clouds' boost Seas at a reduced rate and also prevent its effective level from resetting.\\n(Effect: ${format(calculateEffects.S2Extra2(calculateEffects.S2Extra1(global.vaporizationInfo.S2Extra1), 1), { padding: true })})`,\n                () => { //[3]\n                    const level = player.researchesExtra[2][3];\n                    return `Submerge and boost Stars with 'Surface tension'. Also with 'Surface stress' ^${format(0.5)} at level 2, full power at level 3.\\n(Boost to Stars: ${level < 3 ? `${format(level < 1 ? 1 : effectsCache.S2Upgrade3 * (level > 1 ? effectsCache.S2Upgrade4 ** 0.5 : 1), { padding: true })} \u27F6 ` : ''}${format(effectsCache.S2Upgrade3 * (level < 1 ? 1 : effectsCache.S2Upgrade4 ** (level > 1 ? 1 : 0.5)), { padding: true })})`;\n                },\n                () => { //[4]\n                    const level = player.researchesExtra[2][4];\n                    return `High density of Drops will end up boosting Nebulas with 'Surface tension'. Also with 'Surface stress' ^${format(0.5)} at level 2, full power at level 3.\\n(Boost to Nebulas: ${level < 3 ? `${format(level < 1 ? 1 : effectsCache.S2Upgrade3 * (level > 1 ? effectsCache.S2Upgrade4 ** 0.5 : 1), { padding: true })} \u27F6 ` : ''}${format(effectsCache.S2Upgrade3 * (level < 1 ? 1 : effectsCache.S2Upgrade4 ** (level > 1 ? 1 : 0.5)), { padding: true })})`;\n                }\n            ],\n            cost: [],\n            startCost: [1e18, 1e12, 1e26, 1e14, 1e60],\n            scaling: [1, 1e3, 1, 1e8, 1e8],\n            max: [1, 3, 1, 3, 3],\n            maxActive: 3\n        }, { //Stage 3\n            name: [\n                'Rank boost',\n                'Efficient growth',\n                'Weight',\n                'Viscosity',\n                'Efficient submersion',\n                'Ablative armor'\n            ],\n            effectText: [\n                () => `Increase strength of Cosmic dust by another ${format(1.11)} per level. Max level is based on current Rank.\\n(Total increase: ${format(1.11 ** player.researchesExtra[3][0], { padding: true })})`,\n                () => { //[1]\n                    const base = calculateEffects.S3Extra1();\n                    return `${player.inflation.vacuum ? 'Preons hardcap delay' : 'Mass production'} from Cosmic dust will be even bigger, current formula is ${format(base)} ^ current Rank.\\n(Total boost: ${format(base ** global.accretionInfo.effective, { padding: true })} \u27F6 ${format(calculateEffects.S3Extra1(player.researchesExtra[3][1] + 1) ** global.accretionInfo.effective, { padding: true })})`;\n                },\n                () => \"'Gravitational field' will be able to boost Protoplanets, but at reduced strength. (2x boost)\",\n                () => `'Gas' will be ${format(calculateEffects.S3Upgrade1(calculateEffects.S3Upgrade1_power(player.researchesExtra[3][3] + 1)) / calculateEffects.S3Upgrade1(), { padding: true })} times stronger per level.`,\n                () => `Submerge quicker by boosting Puddles, improved by current Rank.\\n(Current boost: ${format(calculateEffects.S3Extra4())} \u27F6 ${format(calculateEffects.S3Extra4(player.researchesExtra[3][4] + 1))})`,\n                () => `Protect your Mass from being removed by removing Cosmic dust hardcap instead.\\nSecond level will redirect delay to hardcap as a boost to Cosmic dust that ignores softcap.\\n(Current hardcap delay is ${format(calculateEffects.dustDelay(), { padding: true })})`\n            ],\n            cost: [],\n            startCost: [1e-18, 1e-7, 1e26, 1e9, 1e-10, 1.98847e40],\n            scaling: [10, 100, 1, 1e5, 1e12, 5.024e59],\n            max: [14, 6, 1, 5, 1, 2],\n            maxActive: 4\n        }, { //Stage 4\n            name: [\n                'Nova',\n                'Mass transfer',\n                'White dwarfs',\n                'Quark-nova'\n            ],\n            effectText: [\n                () => `This violent stellar explosion is main source of Elements, but also starts new Star formation.\\nUnlock a new Star and even more, after Collapse of that Star.\\n(Will require at least ${format(global.collapseInfo.unlockB[Math.min(player.researchesExtra[4][0] + 2, 4)])} Solar mass to create that new Star)`,\n                () => `Star material will transfer from one Star to another, improving Solar mass gain${player.inflation.vacuum ? ' (also delaying Preons hardcap)' : ''} by ${format(calculateEffects.S4Extra1())}.\\nImproved by 'Star system' levels and also improves its scaling (effect increase for 'Star system' is ${format(new Overlimit(calculateEffects.S4Research1(undefined, 1) / calculateEffects.S4Research1(undefined, 0)).power(global.collapseInfo.trueStars), { padding: true })}).`,\n                () => `After matter were dispeled from Red giant, White dwarf was all that remained.\\nImproves effect of '[6] Carbon' by +${format(0.5)} and increases max level of 'Star system' by +1.`,\n                () => \"As Neutron stars spins down, some of them may be converted into Quark stars.\\nThis will add new effect to Neutron stars \u2012 all Stars are cheaper, also will increase max level of 'Star system' by +1.\"\n            ],\n            cost: [],\n            startCost: [4e4, 2e9, 1e50, 1e136],\n            scaling: [1e10, 1, 1, 1],\n            max: [3, 1, 1, 1],\n            maxActive: 3\n        }, { //Stage 5\n            name: [\n                'Hypercompact stellar system',\n                'Interacting Galaxies',\n                'Central dominant Galaxy'\n            ],\n            effectText: [\n                () => `Super dense core which will allow creation of a new Structure. That Structure will increase Stage reset reward${player.inflation.vacuum ? ', starting Energy after any Reset' : ''}, boost Nebulas and Star clusters, but creating it fully resets ${player.inflation.vacuum ? 'all' : 'Interstellar and Intergalactic'} Stages.\\nThis Research ${player.strangeness[5][3] < 1 ? \"can't be created because 'Gravitational bound' is missing\" : 'also removes Solar mass and other Remnants requirement from everything in Interstellar'}.`,\n                () => `Allow use of excess Galaxies from previous Merge resets when forming new Galaxy groups.${global.researchesExtraInfo[5].max[1] > 1 ? '\\nAdditional levels will instead reduce amount of Galaxies required by -4 per level.' : ''}`,\n                () => { //[2]\n                    const maxLevel = player.researchesExtra[5][2];\n                    const trueLevel = global.mergeInfo.S5Extra2;\n                    return `An even bigger Galaxy to improve Stage reset reward and Galaxy Groups effect with every Galaxy Group.\\nEffective level ${trueLevel !== maxLevel ? `is ${format(trueLevel, { padding: true })}, will be restored with more Elements, this doesn't` : \"will be set to 0 after any reset, this won't\"} affect Stage reset reward.\\n(Total boost: ${format(calculateEffects.S5Extra2(trueLevel), { padding: true })} \u27F6 ${format(calculateEffects.S5Extra2(maxLevel + (maxLevel === trueLevel ? 1 : 0)), { padding: true })})`;\n                }\n            ],\n            cost: [],\n            startCost: [1e80, 1e250, '1e310'] as unknown as Overlimit,\n            scaling: [1, 1e150, 1e30],\n            max: [1, 1, 4],\n            maxActive: 1\n        }, { //Stage 6\n            name: [],\n            effectText: [],\n            cost: [],\n            startCost: [],\n            scaling: [],\n            max: [],\n            maxActive: 0\n        }\n    ],\n    researchesAutoInfo: {\n        name: [\n            'Upgrade automatization',\n            'Element automatization',\n            'Reset automatization'\n        ],\n        effectText: [\n            () => `Automatically create all ${['Upgrades', 'Stage Researches', 'Special Researches'][Math.min(player.researchesAuto[0], 2)]} from any Stage.`,\n            () => 'Elements will no longer require Collapse for activation.\\nSecond level will unlock auto creation of Elements.',\n            () => { //[2]\n                const index = player.researchesAuto[2] >= 4 ? 4 : Math.min(player.inflation.vacuum ? player.researchesAuto[2] : player.stage.current - 1, 3);\n                return `Unlock auto ${['Discharge', 'Vaporization', 'Rank', 'Collapse', 'Merge'][player.inflation.vacuum ? (index === 1 ? 2 : index === 2 ? 1 : index) : index]} level 1.${player.inflation.vacuum ? '\\nCost will decrease by -1 level per related level 1 Strangeness.' : ''}`;\n            }\n        ],\n        costRange: [\n            [1e13, 2e34, 1e30],\n            [136000, 272000],\n            [1200, 2400, 7200, 28800, 144000]\n        ],\n        autoStage: [\n            [2, 3, 4],\n            [1, 1],\n            [6, 6, 6, 6, 6]\n        ],\n        max: [3, 2, 1]\n    },\n    ASRInfo: {\n        name: 'Auto Structures',\n        effectText: () => {\n            const stageIndex = player.stage.active;\n            const index = Math.min(player.ASR[stageIndex] + 1, Math.max(global.ASRInfo.max[stageIndex], 1));\n            let unlocked = true;\n            if (player.stage.true < 6) {\n                if (stageIndex === 3 && player.stage.resets < 5) {\n                    if (index === 2) {\n                        unlocked = player.upgrades[3][2] === 1 || player.buildings[3][2].trueTotal.moreThan('0');\n                    } else if (index === 3) {\n                        unlocked = player.upgrades[3][4] === 1 || player.buildings[3][3].trueTotal.moreThan('0');\n                    }\n                } else if (stageIndex === 5) {\n                    if (index === 1) {\n                        unlocked = player.milestones[2][0] >= 7;\n                    } else if (index === 2) {\n                        unlocked = player.milestones[3][0] >= 7;\n                    } else if (index === 3) {\n                        unlocked = player.milestones[4][1] >= 8;\n                    }\n                }\n            } else if (player.stage.true < 7) {\n                if (player.stage.resets < 2 && index === 5) {\n                    if (stageIndex === 3) {\n                        unlocked = player.upgrades[3][11] === 1 || player.buildings[3][5].trueTotal.moreThan('0');\n                    } else if (stageIndex === 4) {\n                        unlocked = player.elements[26] >= 1;\n                    }\n                }\n            }\n            return `Automatically make ${unlocked ? global.buildingsInfo.name[stageIndex][index] : '(not unlocked)'} (counts as self-made).\\n(Auto ${(stageIndex === 5 && index === 3) || stageIndex >= 6 ? \"for this Structure doesn't wait and ignores related settings\" : `will wait until ${format(player.toggles.shop.wait[stageIndex])} times of the Structure cost`})`;\n        },\n        costRange: [\n            [],\n            [2000, 8000, 16000, 32000, 56000],\n            [1e10, 1e14, 1e18, 1e23, 1e28, 1e30],\n            [1e-7, 1e10, 5e29, 2e30, 2e36],\n            [1e6, 1e17, 1e28, 1e39, 1e52],\n            [1e56, 1e60, 1e100],\n            [Infinity]\n        ],\n        max: [0, 3, 5, 4, 4, 3, 0]\n    },\n    elementsInfo: {\n        name: [\n            '[0] Neutronium',\n            '[1] Hydrogen',\n            '[2] Helium',\n            '[3] Lithium',\n            '[4] Beryllium',\n            '[5] Boron',\n            '[6] Carbon',\n            '[7] Nitrogen',\n            '[8] Oxygen',\n            '[9] Fluorine',\n            '[10] Neon',\n            '[11] Sodium',\n            '[12] Magnesium',\n            '[13] Aluminium',\n            '[14] Silicon',\n            '[15] Phosphorus',\n            '[16] Sulfur',\n            '[17] Chlorine',\n            '[18] Argon',\n            '[19] Potassium',\n            '[20] Calcium',\n            '[21] Scandium',\n            '[22] Titanium',\n            '[23] Vanadium',\n            '[24] Chromium',\n            '[25] Manganese',\n            '[26] Iron',\n            '[27] Cobalt',\n            '[28] Nickel',\n            '[29] Copper',\n            '[30] Zinc',\n            '[31] Gallium',\n            '[32] Germanium',\n            '[33] Arsenic'\n        ],\n        effectText: [\n            () => `Element with no protons, true head of this table.\\nThis one is ${Math.random() < 0.1 ? (Math.random() < 0.1 ? 'an illusive Tetraneutron, or maybe even Pentaneutron, wait where did it go? Was it even there?' : 'a rare Dineutron, but it is already gone...') : 'a simple Mononeutron, it will stay with you for as long as it can.'}`,\n            () => `Most basic Element, increases Brown dwarf${player.inflation.vacuum ? ' and Puddles' : ''} production by 2.`,\n            () => `Fusion reaction byproduct, makes Interstellar Stars cost scale -${format(0.1)} less.`,\n            () => `First metal, Solar mass gain${player.inflation.vacuum ? ' and hardcap delay for Cosmic dust' : ''} per Brown dwarf will be lightly increased.`,\n            () => `Brittle earth metal and so is brittle increase to production.\\n(${format(1.4)}x boost to all Stars${player.inflation.vacuum ? ' and Cosmic dust' : ''})`,\n            () => `A new color, and a new boost to Solar mass gain${player.inflation.vacuum ? ' and delay to Cosmic dust hardcap' : ''} that is based on current Dwarf Stars.`,\n            () => `Base for organics, boost from Red giants will be increased by ^${format(calculateEffects.element6())}.`,\n            () => \"Most abundant Element in atmosphere of some Planets that will allow to have 2 extra levels of 'Star system'.\",\n            () => `An oxidizing agent that will make Interstellar Stars cost scale even slower. (-${format(0.05)} less)`,\n            () => \"Highly toxic and reactive, +12 to max level of 'Planetary system'.\",\n            () => `A noble 2x boost to Solar mass gain${player.inflation.vacuum ? ' and delay to Preons hardcap' : ''}.`,\n            () => \"Through leaching will get 1 extra level of 'Protoplanetary disk'.\",\n            () => 'Stars are inside you, as well Neutron stars strength will be increased by log4.',\n            () => 'Has a great affinity towards Oxygen and to decrease cost for all Stars by 100.',\n            () => `Just another tetravalent metalloid, and so is another ${format(1.4)}x boost to all Stars${player.inflation.vacuum ? ' and Cosmic dust' : ''}.`,\n            () => `One of the Fundamentals for Life and to make all Stars boost Solar mass gain${player.inflation.vacuum ? ' and also delay Cosmic dust hardcap' : ''}.`,\n            () => \"A burning rock that will increase max level of 'Star system' by 1.\",\n            () => \"Extremely reactive to extend max level of 'Planetary system' by another 24 levels.\",\n            () => 'Less noble, but Black holes effect will be a little stronger.',\n            () => \"Don't forget about it and will get 1 free level of 'Planetary system'.\\n(Also will make Solar mass effect apply twice to Brown dwarfs)\",\n            () => \"Get stronger with 1 extra level of 'Star system'.\",\n            () => `A new color and a rare bonus of ^${format(1.1)} to Solar mass effect.`,\n            () => 'Part of a new alloy that will allow for Red giants to be added into effective amount of Neutron stars.',\n            () => `Catalyst for production of Elements. 'Gamma-ray burst' effect will be increased by Solar mass ^${format(0.1)}.\\n(Effect increase: ${format(player.collapse.mass ** 0.1, { padding: true })})`,\n            () => `No corrosion, only boost to all Stars that is based on unspent Elements ^${format(calculateEffects.element24_power())}.\\n(Boost to Stars: ${format(calculateEffects.element24(), { padding: true })})`,\n            () => \"Brittle Element, but not the bonus \u2012 1 more level in 'Star system'.\",\n            () => `Any further fusion will be an endothermic process. ${player.inflation.vacuum ? `Unlock a new Star type${player.strangeness[5][3] >= 1 ? ' and Intergalactic Stage' : ''}` : 'Enter Intergalactic space'}.\\n(${player.stage.true >= 6 || player.strange[0].total >= 1 ? `Current base for Stage reset reward is ${format(effectsCache.element26, { padding: true })}, improve it further by producing more Elements this Stage` : 'Can change active Stage from footer, new effect will be added after another Stage reset'})`,\n            () => `Combined and ready to make all self-made Red supergiants count as Red giants and improve '[24] Chromium' Element by +^${format(0.01)}.`,\n            () => \"Slow to react, but will increase max level of 'Star system' by +1.\",\n            () => `Does not need to be prepared to increase Stage reset reward base by Arithmetic progression with step of ${format(0.01)}.`,\n            () => `First of new Elements to come, increases max allowed Merge resets by +1 for every new Element past '[29] Copper'.\\n(Currently highest created Element in current Stage reset is '${global.elementsInfo.name[player.collapse.maxElement]}', equals to +${Math.max(player.collapse.maxElement - 29, 0)} allowed Merges)`,\n            () => `Will melt in palm of your hand to make all Galaxies scale slower. (${format(-0.01)})`,\n            () => \"Too late to appear, but will increase max level of 'Inner Black hole' by +1 anyway.\",\n            () => 'No effect for now.'\n        ],\n        startCost: [ //New Element cost must be higher than previous one\n            0, 1000, 4000, 2e4, 1e5, 1e8, 1e10, 4e11, 8e12, 6e13,\n            1e15, 1e20, 1e22, 1e24, 1.4e26, 1e28, 1e30, 1e32, 2e36, 1e38,\n            1e39, 1e41, 2e42, 3e43, 4e44, 5e45, 1e48, 1e54, 1e58, 1e140,\n            1e200, 1e220, '1e340', '1e460'\n        ] as unknown as Overlimit[]\n    },\n    strangenessInfo: [\n        {} as globalType['strangenessInfo'][0], { //Stage 1\n            name: [\n                'Fundamental boost',\n                'Better improvement',\n                'Cheaper Discharge',\n                'Free Discharge',\n                'Automatic Discharge',\n                'Auto Structures',\n                'Strange boost',\n                'Energy increase',\n                'Conservation of Mass',\n                'Conservation of Energy'\n            ],\n            effectText: [\n                () => `Boost all Microworld Structures by ${format(player.inflation.vacuum ? 2 : 1.8)}.`,\n                () => `Base for 'Improved Tritium' Research will be bigger by +${format(player.inflation.vacuum ? 1.5 : 1)}.\\n(Boost from it at current Research level is ${format((calculateEffects.S1Research2(player.strangeness[1][1] + 1) / calculateEffects.S1Research2()) ** player.researches[1][2], { padding: true })})`,\n                () => `Discharge goals requirement will scale slower. (-${format(0.5)})\\n(Creating this Strangeness will make next Discharge goal to be ${format(calculateEffects.dischargeCost(calculateEffects.dischargeScaling(undefined, player.strangeness[1][2] + 1)))} Energy)`,\n                () => `Obtain +${format(0.5)} bonus Discharge goals.`,\n                () => `Automatically Discharge upon reaching next goal or spending Energy. (Need to be enabled in Settings)${global.strangenessInfo[1].max[4] > 1 ? '\\nSecond level will allow to gain Discharge goals based on current Energy instead of needing to reset.' : ''}`,\n                () => 'Make auto for all Microworld Structures permanent.',\n                () => `Unspent Strange quarks will boost Microworld by improving its Structures.\\n(Formula: (x + 1) ^${format(player.inflation.vacuum ? 0.26 : 0.22)} | Effect: ${format(global.strangeInfo.stageBoost[1], { padding: true })})`,\n                () => 'Increase Energy gain from creating Preons by +2.',\n                () => { //[8]\n                    const improved = player.challenges.supervoid[1] >= 2;\n                    return `No Mass will be lost when creating Preons${improved ? '' : ', only works when Accretion Stage is unlocked'}.\\nSecond level will disable auto Accretion Structures if Cosmic dust is hardcapped until will have enough Mass for the highest Solar mass conversion${improved ? \" or to increase current Rank, if its below 'Protostar' and 'Automatic Rank' level is below 2\" : ', only works if Interstellar Stage is unlocked'}.`;\n                },\n                () => 'No Energy will be lost when creating Upgrades or Researches, only works when Interstellar Stage is unlocked.'\n            ],\n            cost: [],\n            startCost: [1, 1, 1, 2, 12, 2, 24, 2, 12, 15600],\n            scaling: [2.46, 2, 6, 6, 400, 1, 1, 6, 10, 1],\n            max: [6, 4, 4, 2, 1, 1, 1, 2, 2, 1],\n            maxActive: 7\n        }, { //Stage 2\n            name: [\n                'More Moles',\n                'Bigger Puddles',\n                'More spread',\n                'Cloud density',\n                'Automatic Vaporization',\n                'Auto Structures',\n                'Strange boost',\n                'Improved flow',\n                'Mechanical spread',\n                'Ocean world'\n            ],\n            effectText: [\n                () => `Drops will ${player.inflation.vacuum ? 'improve Tritium' : 'produce'} 2 times more${player.inflation.vacuum ? '' : ' Moles'}.`,\n                () => `Puddles will produce ${format(player.inflation.vacuum ? 1.8 : 1.6)} times more Drops.`,\n                () => { //[2]\n                    let extraText = 'none';\n                    if (player.strangeness[2][2] >= 1) { extraText = \"max level increased for 'More streams' (+1)\"; }\n                    if (player.strangeness[2][2] >= 2) { extraText += \" and 'Distributary channel' (+1)\"; }\n                    if (player.strangeness[2][2] >= 3) { extraText += \", a new Upgrade \u2012 'Tsunami'\"; }\n                    return `Increase max level for one of Researches. Final level will instead unlock a new Upgrade.\\n(Current effect: ${extraText})`;\n                },\n                () => `Decrease amount of Drops required to get a Cloud by ${format(player.inflation.vacuum ? 2.5 : 2)}.`,\n                () => `Automatically Vaporize when reached enough boost from new Clouds. (Need to be enabled in Settings)${global.strangenessInfo[2].max[4] > 1 ? `\\nSecond level will allow to automatically gain ${format(2.5)}% of Clouds per second.${player.stage.true >= 7 ? ' (Not affected by global speed)' : ''}` : ''}`,\n                () => 'Make auto for all Submerged Structures permanent.',\n                () => `Unspent Strange quarks will boost Submerged by improving Puddles.\\n(Formula: (x + 1) ^${format(player.inflation.vacuum ? 0.22 : 0.18)} | Effect: ${format(global.strangeInfo.stageBoost[2], { padding: true })})`,\n                () => `Submerged Structures that improve other Submerged Structures will do it ${format(1.24)} times stonger.\\n(Affected Structures are Ponds, Lakes, Seas and Oceans)`,\n                () => { //[8]\n                    let extraText = 'none';\n                    if (player.strangeness[2][8] >= 1) { extraText = \"max level increased for 'Stronger surface tension' (+3)\"; }\n                    if (player.strangeness[2][8] >= 2) { extraText += \" and 'Stronger surface stress' (+1)\"; }\n                    if (player.strangeness[2][8] >= 3) { extraText += \", a new Upgrade \u2012 'Tide'\"; }\n                    return `Increase max level for one of Researches. Final level will instead unlock an even better new Upgrade.\\n(Current effect: ${extraText})`;\n                },\n                () => `Increase Stage reset reward based on current Cloud amount.\\n(Formula: log10(Clouds + 1) / 80 + 1 | Effect: ${format(calculateEffects.S2Strange9(), { padding: true })})`\n            ],\n            cost: [],\n            startCost: [1, 1, 2, 2, 12, 4, 24, 36, 1200, 9600],\n            scaling: [2.46, 2, 3, 3.4, 800, 1, 1, 3.4, 3, 1],\n            max: [4, 8, 3, 2, 1, 1, 1, 6, 3, 1],\n            maxActive: 7\n        }, { //Stage 3\n            name: [\n                'Faster Accretion',\n                'Intense weathering',\n                'More levels',\n                'Improved Satellites',\n                'Automatic Rank',\n                'Auto Structures',\n                'Upgrade automatization',\n                'Strange boost',\n                'Mass delay',\n                'Rank raise'\n            ],\n            effectText: [\n                () => `Increase strength of Cosmic dust by ${format(1.8)}.`,\n                () => `Accretion Structures that produce other Accretion Structures will do it ${format(player.inflation.vacuum ? 1.48 : 1.6)} times faster.\\n(Affected Structures are Planetesimals and Protoplanets)`,\n                () => { //[2]\n                    let extraText = 'none';\n                    if (player.strangeness[3][2] >= 1) { extraText = \"max level increased for 'Rank boost' (+6)\"; }\n                    if (player.strangeness[3][2] >= 2) { extraText += \" and 'Efficient growth' (+2)\"; }\n                    if (player.strangeness[3][2] >= 3) { extraText += \", a new Upgrade \u2012 'Hydrostatic equilibrium'\"; }\n                    return `Increase max level for one of the Rank Researches. Final level will instead unlock a new Upgrade.\\n(Current effect: ${extraText})`;\n                },\n                () => { //[3]\n                    if (!global.stageInfo.activeAll.includes(3)) { assignBuildingsProduction.stage3Cache(); }\n                    return `Satellites will be able to improve remaining ${player.inflation.vacuum ? 'Accretion ' : ''} Structures, but at reduced strength (^${format(player.inflation.vacuum ? 0.1 : 0.2)}).\\n(Affected Structures are Cosmic dust and Planetesimals, boost is equal to ${format(effectsCache.S3Strange3, { padding: true })})`;\n                },\n                () => `Automatically increase Rank when possible. (Need to be enabled in Settings)${global.strangenessInfo[3].max[4] > 1 ? '\\nSecond level will make Rank increase use Mass produced this reset instead of current.' : ''}`,\n                () => 'Make auto for all Accretion Structures permanent.',\n                () => `Always automatically create all ${['Upgrades', 'Stage Researches', 'Special Researches'][Math.min(player.strangeness[3][6], 2)]} from any Stage${!player.inflation.vacuum && player.strangeness[5][3] < 1 && player.buildings[6][1].current.lessThan('3') ? ' before Intergalactic' : ''}. (Need to be enabled in Settings)`,\n                () => `Unspent Strange quarks will boost Accretion by making its Structures cheaper.\\n(Formula: (x + 1) ^${format(player.inflation.vacuum ? 0.68 : 0.76)} | Effect: ${format(global.strangeInfo.stageBoost[3], { padding: true })})`,\n                () => `Delay Cosmic dust hardcap by ${format(1.4)} per level.`,\n                () => `Unlock a new Accretion Rank to achieve.${player.stage.true >= 7 ? \"\\n(Also increase max level of 'Reset automatization')\" : ''}`\n            ],\n            cost: [],\n            startCost: [1, 2, 2, 24, 12, 4, 4, 24, 9600, 1.8e6],\n            scaling: [2, 3.4, 3, 1, 100, 1, 1.74, 1, 2.46, 1],\n            max: [8, 4, 3, 1, 1, 1, 3, 1, 6, 1],\n            maxActive: 8\n        }, { //Stage 4\n            name: [\n                'Hotter Stars',\n                'Cheaper Stars',\n                'New Upgrade',\n                'Main giants',\n                'Automatic Collapse',\n                'Auto Structures',\n                'Element automatization',\n                'Strange boost',\n                'Neutronium',\n                'Newer Upgrade'\n            ],\n            effectText: [\n                () => `All Stars will produce ${format(1.6)} times more Elements.`,\n                () => 'Stars will be 2 times cheaper.',\n                () => { //[2]\n                    let extraText = 'none';\n                    if (player.strangeness[4][2] >= 1) { extraText = \"'Planetary nebula' (Stage Research)\"; }\n                    if (player.strangeness[4][2] >= 2) { extraText += \", 'White dwarfs' (Collapse Research)\"; }\n                    if (player.strangeness[4][2] >= 3) { extraText += \", 'Helium fusion' (Upgrade)\"; }\n                    return `Unlock a new Upgrade, its pretty good.\\n(Current unlocks: ${extraText})`;\n                },\n                () => '10% of Brown dwarfs will be able to turn into Red giants after Collapse.',\n                () => `Automatically Collapse once reached enough boost or Solar mass. (Need to be enabled in Settings)${global.strangenessInfo[4].max[4] > 1 ? '\\nSecond level will allow to automatically gain Star remnants without needing to reset.' : ''}`,\n                () => 'Make auto for all Interstellar Structures permanent.',\n                () => `Elements will no longer require Collapse for activation${player.inflation.vacuum ? ' and related automatization Research will cost as if its level is -1' : ''}.\\nSecond level will unlock auto creation of Elements. (${global.strangenessInfo[4].max[6] > 1 ? 'Need to be enabled in settings' : 'Not yet unlocked for Interstellar space'})`,\n                () => `Unspent Strange quarks will boost Interstellar by improving all Stars.\\n(Formula: (x + 1) ^(${format(0.16)} or ${format(0.32)}, if '[26] Iron' is created) | Effect: ${format(global.strangeInfo.stageBoost[4], { padding: true })})`,\n                () => `Increase effective amount of Neutron stars (doesn't include ones from '[22] Titanium') by 1 + level and improve Neutron stars strength by +^${format(0.125)}.`,\n                () => { //[9]\n                    let extraText = 'none';\n                    if (player.strangeness[4][9] >= 1) { extraText = \"'Nucleosynthesis' (Upgrade)\"; }\n                    if (player.strangeness[4][9] >= 2) { extraText += \", 'Quark-nova' (Collapse Research)\"; }\n                    if (player.strangeness[4][9] >= 3) { extraText += \", 'Inner Black hole' (Stage Research)\"; }\n                    return `Unlock yet another an even better new Upgrade.\\n(Current unlocks: ${extraText})`;\n                }\n            ],\n            cost: [],\n            startCost: [1, 2, 4, 2, 12, 6, 6, 24, 6400, 2e5],\n            scaling: [2, 3.4, 3, 6, 1900, 1, 1.74, 1, 2, 3],\n            max: [8, 4, 3, 2, 1, 1, 1, 1, 8, 3],\n            maxActive: 8\n        }, { //Stage 5\n            name: [\n                'Bigger Structures',\n                'Higher density',\n                'Strange gain',\n                'Gravitational bound',\n                'Automatic Galaxy',\n                'Auto Structures',\n                'Automatic Stage',\n                'Strange boost',\n                'Strange growth',\n                'Automatic Merge',\n                'Galactic tide'\n            ],\n            effectText: [\n                () => `More matter for Accretion (flavor text), first two Intergalactic Structures will be ${format(player.inflation.vacuum ? 1.4 : 1.6)} times stronger.`,\n                () => `With higher density first two Intergalactic upgrades will be even stronger. Effects will be increased by ${format(player.inflation.vacuum ? 1.6 : 1.8)}.`,\n                () => `Gain ${format(1.4)} times more Strange quarks from any Stage reset.`,\n                () => player.inflation.vacuum ? 'Unlock Intergalactic Stage and increase Strange quarks from Stage resets by +1.' : `Will make Intergalactic Stage immune to Collapse reset${player.buildings[6][1].current.lessThan('3') ? \" and allow 'Upgrade automatization' to work within Intergalactic Stage\" : ''}.`,\n                () => 'Automatically Collapse if will be able to afford new Galaxy and auto Galaxy is enabled.\\n(Also unlocks permanent auto Galaxies for free and removes Mass limit for Collapse points)',\n                () => `Make auto for ${player.strangeness[5][4] >= 1 ? 'all' : 'the first two'} Intergalactic Structures permanent${player.strangeness[5][4] < 1 ? ' and prevent rest from resetting' : ''}.`,\n                () => `Automatically trigger Stage reset${!player.inflation.vacuum ? \", doesn't work for Interstellar Stage until second level\" : ''}. (Need to be enabled in Settings)`,\n                () => `Unspent Strange quarks will boost Intergalactic by increasing Solar mass gain.\\n(Formula: (x + 1) ^${format(0.06)} | Effect: ${format(global.strangeInfo.stageBoost[5], { padding: true })})`,\n                () => 'Unlock another Strange Structure.\\n(Click on that Structure to see its effects)',\n                () => 'Automatically Merge Galaxies if possible. (Need to be enabled in Settings)',\n                () => { //[10]\n                    let passive = 'none';\n                    let upgrades = 'none';\n                    if (player.strangeness[5][10] >= 1) {\n                        passive = `increase Energy gain from Galaxies by 5, decrease Discharge goal requirement by ${format(calculateEffects.S5Strange9_stage1(), { padding: 'exponent' })}`;\n                        upgrades = \"'Nuclear fission' (Microworld Upgrade), 'Radioactive decay' (Energy Research)\";\n                    }\n                    if (player.strangeness[5][10] >= 2) {\n                        passive += `, boost Puddles and pre Puddles Rain effect${player.strangeness[5][10] >= 3 ? ', and Cosmic dust strength' : ''} by ${format(calculateEffects.S5Strange9_stage2(), { padding: 'exponent' })}`;\n                        upgrades += \", 'Jeans Mass' (Clouds Research)\";\n                    }\n                    if (player.strangeness[5][10] >= 3) {\n                        passive += `, delay Cosmic dust hardcap by ${format(calculateEffects.S5Strange9_stage3(), { padding: true })}`;\n                        upgrades += \", 'Self-gravity' (Accretion Upgrade), 'Ablative armor' (Rank Research)\";\n                    }\n                    return `Boost lower Stages based on current Galaxies and unlock new Upgrades for them.\\n(Passive effects: ${passive})\\n(New Upgrades: ${upgrades})`;\n                }\n            ],\n            cost: [],\n            startCost: [24, 36, 6, 24, 15600, 24, 240, 120, 6000, 4e6, 8e6],\n            scaling: [2, 2, 3.4, 1, 1, 1, 1, 1, 1, 1, 3],\n            max: [8, 8, 2, 1, 1, 1, 1, 1, 1, 1, 3],\n            maxActive: 8\n        }\n    ],\n    inflationTreeInfo: {\n        name: [\n            'Overboost',\n            'Global boost',\n            'Strange gain',\n            'Instability',\n            'Void Milestones',\n            'Discharge improvement'\n        ],\n        effectText: [\n            () => `Boost global speed by 2, but reduce time limit on everything that has it by 4 if level is below 2.\\nIf there is no time limit then 2nd level will instead boost global speed by ${format(calculateEffects.inflation0(), { padding: true })} (strength depletes over ${format(1200, { type: 'time', padding: false })} of real Stage time).`,\n            () => { //[1]\n                const power = calculateEffects.inflation1_power();\n                return `Boost global speed by (unspent Dark matter + 1) ^${format(power, { padding: true })}.\\n(Boost per level: ${format(calculateEffects.inflation1(calculateEffects.inflation1_power(player.inflation.tree[1] + 1) - power), { padding: true })})`;\n            },\n            () => `Gain ${format(1.4)} times more Strange quarks from any Stage reset per level.${player.inflation.tree[3] >= 1 ? `\\nFirst ${player.inflation.tree[3] * 2} levels will also boost global speed by ${format(1.2)} while inside Void.` : ''}`,\n            () => `Boost global speed and Stage reset reward by ${format(calculateEffects.inflation3())}. This Inflation strength is based on Supervoid progress.\\nEvery level will also improve 2 levels of 'Strange gain' Inflation to boost global speed while inside the Void.`,\n            () => 'For false Vacuum it will remove time limit from Milestones.\\nFor true Vacuum it will unlock Void Milestones, but reduce time limit and multiply global speed by 3 while inside normal Void.\\nEffects are active anywhere in true Vacuum as long as this Inflation is active.',\n            () => `True Vacuum only, improve Discharge base by +${format(0.5)}, gain +1 free Goals and decrease requirement scaling by -1 per level.\\n(Activating this Inflation will make next Discharge goal to be ${format(calculateEffects.dischargeCost(calculateEffects.dischargeScaling(undefined, undefined, player.inflation.tree[5] + 1)))} Energy)`\n        ],\n        cost: [],\n        startCost: [0, 1, 1, 2, 4, 0],\n        scaling: [2, 0.75, 0.5, 2, 0, 1e100],\n        max: [2, 6, 8, 4, 1, 1],\n        refundable: [true, true, true, true, true, false]\n    },\n    milestonesInfo: [\n        {} as globalType['milestonesInfo'][0], { //Stage 1\n            name: [\n                'Fundamental Matter',\n                'Energized'\n            ],\n            needText: [\n                () => `Produce at least ${format(global.milestonesInfo[1].need[0])} ${player.inflation.vacuum ? 'Preons' : 'Quarks'} this reset.`,\n                () => `Have current Energy reach ${format(global.milestonesInfo[1].need[1])}.`\n            ],\n            rewardText: [\n                () => player.inflation.vacuum ? `All Microworld Structures strength increased by ${format(global.milestonesInfo[1].reward[0], { padding: true })}.` : 'Increase base for Strange quarks from any Stage reset by +1.',\n                () => player.inflation.vacuum ? `Effective Energy increased by ${format(global.milestonesInfo[1].reward[1], { padding: true })}.` : 'Permanent Microworld Stage.'\n            ],\n            need: [],\n            time: [14400, 14400],\n            reward: [1, 1],\n            scaling: [\n                [1e152, 1e158, 1e164, 1e170, 1e178, 1e190],\n                [23800, 24600, 25800, 27000, 28200, 29600]\n            ],\n            max: [6, 6]\n        }, { //Stage 2\n            name: [\n                'A Nebula of Drops',\n                'Just a bigger Puddle'\n            ],\n            needText: [\n                () => `${player.inflation.vacuum ? 'Vaporize to' : 'Produce'} at least ${format(global.milestonesInfo[2].need[0])} ${player.inflation.vacuum ? 'Clouds' : 'Drops this reset'}.`,\n                () => `${player.inflation.vacuum ? 'Produce' : 'Have'} at least ${format(global.milestonesInfo[2].need[1])} ${player.inflation.vacuum ? 'Drops this reset' : 'Puddles at same time'}.`\n            ],\n            rewardText: [\n                () => player.inflation.vacuum ? `Decrease Drops requirement to get a Cloud by ${format(global.milestonesInfo[2].reward[0], { padding: true })}.` : 'First Intergalactic Structure. (Nebula)',\n                () => player.inflation.vacuum ? `Puddles strength increased by ${format(global.milestonesInfo[2].reward[1], { padding: true })}.` : 'Permanent Submerged Stage.'\n            ],\n            need: [],\n            time: [28800, 28800],\n            reward: [1, 1],\n            scaling: [\n                [1e30, 1e32, 1e34, 1e36, 1e38, 1e40, 1e44],\n                [1500, 2300, 3100, 3900, 4700, 5500, 6400]\n            ],\n            max: [7, 7]\n        }, { //Stage 3\n            name: [\n                'Cluster of Mass',\n                'Satellites of Satellites'\n            ],\n            needText: [\n                () => `Produce at least ${format(global.milestonesInfo[3].need[0])} Mass this reset.`,\n                () => `Have more or equal to ${format(global.milestonesInfo[3].need[1])} Satellites${player.inflation.vacuum ? ' and Subsatellites' : ''}.`\n            ],\n            rewardText: [\n                () => player.inflation.vacuum ? `Cosmic dust strength increased by ${format(global.milestonesInfo[3].reward[0], { padding: true })}.` : 'Second Intergalactic Structure. (Star cluster)',\n                () => player.inflation.vacuum ? `Increase effective Rank by +${format(global.milestonesInfo[3].reward[1])}.` : 'Permanent Accretion Stage.'\n            ],\n            need: [],\n            time: [43200, 43200],\n            reward: [1, 0],\n            scaling: [\n                [1e32, 1e34, 1e36, 1e38, 1e40, 1e42, 1e45],\n                [24, 28, 32, 36, 40, 44, 50]\n            ],\n            max: [7, 7]\n        }, { //Stage 4\n            name: [\n                'Remnants of past',\n                'Supermassive'\n            ],\n            needText: [\n                () => `Produce at least ${format(global.milestonesInfo[4].need[0])} Elements this reset.`,\n                () => `Have ${player.inflation.vacuum ? 'current Black holes' : 'Solar mass after Collapse'} reach ${format(global.milestonesInfo[4].need[1])} or more.`\n            ],\n            rewardText: [\n                () => player.inflation.vacuum ? `All Stars strength increased by ${format(global.milestonesInfo[4].reward[0], { padding: true })}.` : \"New Intergalactic themed Strangeness, Milestone and second level of 'Element automatization'.\",\n                () => player.inflation.vacuum ? `Black holes effect increased by ${format(global.milestonesInfo[4].reward[1], { padding: true })}.` : 'Research to make third Intergalactic Structure and the final Milestone. (Galaxy)'\n            ],\n            need: [],\n            time: [57600, 57600],\n            reward: [1, 1],\n            scaling: [\n                [1e48, 1e49, 1e50, 1e52, 1e54, 1e56, 1e58, 1e60],\n                [9000, 12000, 16000, 22000, 30000, 42000, 60000, 84000]\n            ],\n            max: [8, 8]\n        }, { //Stage 5\n            name: [\n                'Light in the dark',\n                'End of Greatness'\n            ],\n            needText: [\n                () => `Have ${player.inflation.vacuum ? 'total produced' : 'self-made'} Stars ${player.inflation.vacuum ? 'this reset' : 'count'} reach at least ${format(global.milestonesInfo[5].need[0])}.`,\n                () => `Have ${format(global.milestonesInfo[5].need[1])} ${player.inflation.vacuum ? 'self-made ' : ''}Galaxies or more.`\n            ],\n            rewardText: [\n                () => player.inflation.vacuum ? `First two Intergalactic Structures strength increased by ${format(global.milestonesInfo[5].reward[0], { padding: true })}.` : \"Unlock a new Intergalactic Strangeness 'Strange gain' and second level of 'Automatic Stage'.\",\n                () => player.inflation.vacuum ? `Boost per Galaxy is increased by +${format(global.milestonesInfo[5].reward[1])}.` : \"Unlock a new Intergalactic Upgrade 'Galactic Merger'.\"\n            ],\n            need: [],\n            time: [3600, 1200],\n            reward: [1, 0],\n            scaling: [\n                [1460, 1540, 1620, 1700, 1780, 1860, 1940, 2020],\n                [1, 2, 4, 6, 10, 14, 18, 22]\n            ],\n            max: [8, 8]\n        }\n    ],\n    challengesInfo: [{\n        name: 'Void',\n        description: () => `Result of Vacuum Instability, investigate at your own will\\n(${player.inflation.vacuum || player.challenges.super ? `Entering will force a ${player.challenges.super ? 'Vacuum' : 'Stage'} reset, will be reverted after exiting` : 'No reason to enter from false Vacuum'}${player.inflation.vacuum ? '' : '. All rewards are disabled'})`,\n        effectText: () => {\n            const progress = player.challenges.voidCheck;\n            let text = `<p class=\"orangeText\">\u2012 Microworld Structures are 4 times weaker${progress[1] >= 1 ? `\\n\u2012 Discharge base is raised to the root of 2 (^${format(0.5)})` : ''}${progress[1] >= 2 ? '\\n\u2012 Energy gain from Submerged and Accretion Stages is divided by 2' : ''}\\n${progress[3] >= 5 ? '\u2012 Energy gain from Interstellar and Intergalactic Stages is divided by 4' : 'More nerfs will be shown with more rewards'}</p>`;\n            if (progress[1] >= 3) { text += `<p class=\"blueText\">\u2012 Effective Drops amount is hardcapped at 1\\n\u2012 Puddles are ${format(8000)} times weaker\\n${progress[2] >= 1 ? `\u2012 Clouds gain is decreased by ^${format(0.8)}` : 'More nerfs will be shown with more rewards'}</p>`; }\n            if (progress[1] >= 2) { text += `<p class=\"grayText\">\u2012 Cosmic dust is softcapped (^${format(0.9)})${progress[3] >= 4 ? `\\n\u2012 Softcap is stronger after reaching 'Jovian planet' Rank (^${format(0.8)})` : 'More nerfs will be shown with more rewards'}</p>`; }\n            if (progress[3] >= 5) { text += `<p class=\"orchidText\">\u2012 Stars are ${format(8000)} times weaker${progress[4] >= 1 ? '\\n\u2012 Solar mass gain is 2 times smaller' : ''}${progress[4] >= 2 ? `\\n\u2012 Solar mass effect is softcapped ^${format(0.2)} after 1` : ''}\\n${progress[4] >= 5 ? \"\u2012 Can't create or gain Quasi-stars\" : 'More nerfs will be shown with more rewards'}</p>`; }\n            if (progress[2] >= 1) { text += `<p class=\"cyanText\">${player.challenges.super ? '\u2012 Global speed is divided by 5\\n' : ''}\u2012 All resets affect all ${player.stage.true >= 7 ? 'pre Abyss ' : ''}Stages${progress[5] >= 1 ? `\\n\u2012 Galaxies cost scaling increased by +${format(0.05)}` : progress[4] >= 5 ? '\\nMore nerfs will be shown with more rewards' : ''}</p>`; }\n            return text;\n        },\n        needText: [\n            [], [\n                () => 'Perform Discharge',\n                () => \"Get first level of 'Accretion'\",\n                () => \"Get second level of 'Accretion'\"\n            ], [\n                () => 'Have more than 0 Clouds',\n                () => `Have more than ${format(1e4)} Clouds`,\n                () => player.stage.true >= 7 ? `Reach ${format(1e12)} Clouds without increasing Rank` : 'Requirements are unknown'\n            ], [\n                () => \"Reach 'Meteoroid' Rank\",\n                () => \"Reach 'Asteroid' Rank\",\n                () => \"Reach 'Planet' Rank\",\n                () => \"Reach 'Jovian planet' Rank\",\n                () => \"Reach 'Protostar' Rank\",\n                () => player.stage.true >= 7 ? \"Reach 'Protogalaxy' Rank\" : 'Requirements are unknown'\n            ], [\n                () => 'Cause the Collapse',\n                () => 'Get first Red giant',\n                () => 'Get first Neutron star',\n                () => 'Get first Black hole',\n                () => 'Unlock Intergalactic'\n            ], [\n                () => 'Create a Galaxy',\n                () => player.stage.true >= 7 ? 'Force a Galaxic Merge (WIP)' : 'Requirements are unknown',\n                () => player.stage.true >= 7 ? 'Create a Galaxy group (WIP)' : 'Requirements are unknown'\n            ]\n        ],\n        rewardText: [[\n            [],\n            [\"'Energy increase' (Microworld)\", \"'Conservation of Mass' (Microworld)\", \"'Improved flow' (Submerged)\"],\n            [\"'Mechanical spread' (Submerged)\", \"'Ocean world' (Submerged)\", \"'Galactic tide' (Intergalactic)\"],\n            ['Multiple max level increases', 'Multiple max level increases', 'Multiple max level increases', 'Multiple max level increases', \"'Strange growth' (Intergalactic)\", \"'Automatic Merge' (Intergalactic)\"],\n            ['Max level increased for Auto resets', \"'Conservation of Energy' (Microworld)\", \"'Neutronium' (Interstellar)\", \"'Mass delay' (Accretion)\", \"'Newer Upgrade' (Interstellar)\"],\n            [\"'Rank raise' (Accretion)\", 'Missing', 'Missing']\n        ], [\n            [],\n            [\"'Discharge improvement' (Non refundable)\", \"'Improved conservation' (Milestone)\", 'Missing'],\n            ['Missing', 'Missing', 'Missing'],\n            [\"'Indestructible matter' (Milestone)\", 'Missing', 'Missing', 'Missing', 'Missing', 'Missing'],\n            ['Missing', 'Missing', 'Missing', 'Missing', 'Missing'],\n            ['Missing', 'Missing', 'Missing']\n        ]],\n        resetType: 'stage',\n        time: 3600,\n        color: 'darkviolet'\n    }, {\n        name: 'Vacuum information',\n        resetType: 'vacuum',\n        time: 1200,\n        color: 'darkorchid'\n    }],\n    historyStorage: {\n        stage: [],\n        vacuum: []\n    }\n};\n\n/** Only for effects that are calculated multiple times per tick */\nexport const effectsCache = { //Cannot be in Stage.ts due to esbuild file ordering\n    microworld: 0,\n    S1Upgrade6: 0,\n    S1Upgrade7: 0,\n    /** Alternative names are S1Upgrade8 and S1Build6 */\n    tritium: new Overlimit('0'),\n    S2Upgrade3: 0,\n    S2Upgrade4: 0,\n    interstellar: 0,\n    mass: 0,\n    star1: 0,\n    galaxyBase: 0,\n    S5Upgrade2: 0,\n    element26: 0,\n    S1SolarDelay: 0,\n    S3SolarDelay: 0,\n    S3Strange1: 0,\n    S2Strange9: 0,\n    S3Strange3: 0\n};\n\n//Math.log extension for any base\nexport const logAny = (number: number, base: number) => Math.log(number) / Math.log(base);\n\n/** Not for deep copy, works on Overlimit, but not prefered */\nexport const cloneArray = <ArrayClone extends Array<number | string | boolean | null | undefined>>(array: ArrayClone) => array.slice(0) as ArrayClone;\n//Actual type is any[], it's because TS is dumb; [...array] will be better after ~>10000 keys\n\n/** For non deep clone use { ...object } or cloneArray when possible */\nexport const deepClone = <CloneType>(toClone: CloneType): CloneType => {\n    if (typeof toClone !== 'object' || toClone === null) { return toClone; }\n\n    let value: any;\n    if (Array.isArray(toClone)) {\n        if (toClone instanceof Overlimit) { return new Overlimit(toClone) as CloneType; }\n\n        value = []; //Faster this way\n        for (let i = 0; i < toClone.length; i++) { value.push(deepClone(toClone[i])); }\n    } else {\n        value = {};\n        for (const check in toClone) { value[check] = deepClone(toClone[check]); }\n    }\n    return value;\n};\n\n/** Does not clone given value */\nexport const createArray = <startValue extends number | string | boolean | null | undefined>(length: number, value: startValue) => {\n    const array = [];\n    for (let i = 0; i < length; i++) {\n        array.push(value);\n    }\n    return array as startValue[];\n};\n\nfor (let s = 0; s < global.buildingsInfo.startCost.length; s++) {\n    global.buildingsInfo.producing[s] = [];\n    for (let i = 0; i < global.buildingsInfo.startCost[s].length; i++) {\n        global.buildingsInfo.producing[s].push(new Overlimit('0'));\n    }\n}\nfor (let s = 2; s < global.upgradesInfo.length; s++) {\n    const startCost = global.upgradesInfo[s].startCost;\n    for (let i = 0; i < startCost.length; i++) { startCost[i] = new Overlimit(startCost[i]); }\n}\nfor (const upgradeType of ['researches', 'researchesExtra'] as const) {\n    const pointer = global[`${upgradeType}Info`];\n    pointer[1].cost = cloneArray(pointer[1].startCost as number[]);\n    for (let s = 2; s < pointer.length; s++) {\n        for (let i = 0; i < pointer[s].startCost.length; i++) {\n            pointer[s].startCost[i] = new Overlimit(pointer[s].startCost[i]);\n            pointer[s].cost[i] = new Overlimit(pointer[s].startCost[i]);\n        }\n    }\n}\n{\n    const startCost = global.elementsInfo.startCost;\n    for (let i = 1; i < startCost.length; i++) { startCost[i] = new Overlimit(startCost[i]); }\n}\nfor (let s = 1; s < global.strangenessInfo.length; s++) {\n    global.strangenessInfo[s].cost = cloneArray(global.strangenessInfo[s].startCost);\n}\nfor (let s = 1; s < global.milestonesInfo.length; s++) {\n    for (let i = 0; i < global.milestonesInfo[s].needText.length; i++) {\n        global.milestonesInfo[s].need.push(new Overlimit('Infinity'));\n    }\n}\nglobal.inflationTreeInfo.cost = cloneArray(global.inflationTreeInfo.startCost);\n\nObject.assign(player, {\n    upgrades: [\n        [],\n        createArray(global.upgradesInfo[1].startCost.length, 0),\n        createArray(global.upgradesInfo[2].startCost.length, 0),\n        createArray(global.upgradesInfo[3].startCost.length, 0),\n        createArray(global.upgradesInfo[4].startCost.length, 0),\n        createArray(global.upgradesInfo[5].startCost.length, 0),\n        createArray(global.upgradesInfo[6].startCost.length, 0)\n    ],\n    researches: [\n        [],\n        createArray(global.researchesInfo[1].startCost.length, 0),\n        createArray(global.researchesInfo[2].startCost.length, 0),\n        createArray(global.researchesInfo[3].startCost.length, 0),\n        createArray(global.researchesInfo[4].startCost.length, 0),\n        createArray(global.researchesInfo[5].startCost.length, 0),\n        createArray(global.researchesInfo[6].startCost.length, 0)\n    ],\n    researchesExtra: [\n        [],\n        createArray(global.researchesExtraInfo[1].startCost.length, 0),\n        createArray(global.researchesExtraInfo[2].startCost.length, 0),\n        createArray(global.researchesExtraInfo[3].startCost.length, 0),\n        createArray(global.researchesExtraInfo[4].startCost.length, 0),\n        createArray(global.researchesExtraInfo[5].startCost.length, 0),\n        createArray(global.researchesExtraInfo[6].startCost.length, 0)\n    ],\n    researchesAuto: createArray(global.researchesAutoInfo.costRange.length, 0),\n    ASR: createArray(global.ASRInfo.costRange.length, 0),\n    maxASR: createArray(global.ASRInfo.costRange.length, 0),\n    elements: createArray(global.elementsInfo.startCost.length, 0),\n    strangeness: [\n        [],\n        createArray(global.strangenessInfo[1].startCost.length, 0),\n        createArray(global.strangenessInfo[2].startCost.length, 0),\n        createArray(global.strangenessInfo[3].startCost.length, 0),\n        createArray(global.strangenessInfo[4].startCost.length, 0),\n        createArray(global.strangenessInfo[5].startCost.length, 0)\n    ],\n    milestones: [\n        [],\n        createArray(global.milestonesInfo[1].need.length, 0),\n        createArray(global.milestonesInfo[2].need.length, 0),\n        createArray(global.milestonesInfo[3].need.length, 0),\n        createArray(global.milestonesInfo[4].need.length, 0),\n        createArray(global.milestonesInfo[5].need.length, 0)\n    ]\n});\nObject.assign(player.toggles, {\n    normal: createArray(document.getElementsByClassName('toggleNormal').length, false),\n    confirm: createArray(document.getElementsByClassName('toggleConfirm').length, 'Safe'),\n    buildings: [\n        [],\n        createArray(player.buildings[1].length, false),\n        createArray(player.buildings[2].length, false),\n        createArray(player.buildings[3].length, false),\n        createArray(player.buildings[4].length, false),\n        createArray(player.buildings[5].length, false),\n        createArray(player.buildings[6].length, false)\n    ],\n    hover: createArray(document.getElementsByClassName('toggleHover').length, false),\n    max: createArray(document.getElementsByClassName('toggleMax').length, false),\n    auto: createArray(document.getElementsByClassName('toggleAuto').length, false)\n});\nplayer.inflation.tree = createArray(global.inflationTreeInfo.startCost.length, 0);\nplayer.toggles.normal[1] = true;\n\n//player.example = playerStart.example; Is not allowed (if example is an array or object), instead iterate or create clone\nexport const playerStart = deepClone(player);\n\nexport const updatePlayer = (load: playerType): string => {\n    if (load.inflation === undefined) { throw new ReferenceError('This save file is not from this game or too old'); }\n    prepareVacuum(load.inflation.vacuum); //Only to set starting buildings values\n\n    const oldVersion = load.version;\n    if (oldVersion !== playerStart.version) {\n        if (load.version === 'v0.1.2') {\n            load.version = 'v0.1.3';\n            load.stage.time = 0;\n            load.inflation.age = 0;\n            load.discharge.energyMax = load.discharge.energy;\n            load.vaporization.cloudsMax = new Overlimit(load.vaporization.clouds);\n        }\n        if (load.version === 'v0.1.3' || load.version === 'v0.1.4' || load.version === 'v0.1.5') {\n            load.version = 'v0.1.6';\n            load.challenges = deepClone(playerStart.challenges);\n            delete load.time['disabled' as keyof unknown];\n            delete load.discharge['unlock' as keyof unknown];\n            delete load.collapse['disabled' as keyof unknown];\n            delete load.collapse['inputM' as keyof unknown];\n            delete load.collapse['inputS' as keyof unknown];\n        }\n        if (load.version === 'v0.1.6' || load.version === 'v0.1.7') {\n            load.version = 'v0.1.8';\n            load.time.online = load.inflation.age;\n            load.time.universe = load.inflation.age;\n            load.time.stage = load.stage.time;\n            if (load.buildings[5].length > 4) { load.buildings[5].length = 4; }\n            delete load['saveUpdate016' as keyof unknown];\n            delete load.accretion['input' as keyof unknown];\n            delete load.collapse['elementsMax' as keyof unknown];\n        }\n        if (load.version === 'v0.1.8') {\n            load.version = 'v0.1.9';\n            load.researchesAuto = cloneArray(playerStart.researchesAuto);\n            delete load.discharge['bonus' as keyof unknown];\n        }\n        if (load.version === 'v0.1.9') {\n            load.version = 'v0.2.0';\n            load.stage.peak = 0;\n            load.milestones = deepClone(playerStart.milestones);\n            load.vaporization.input = cloneArray(playerStart.vaporization.input);\n            load.time.export = cloneArray(playerStart.time.export);\n            load.history = deepClone(playerStart.history);\n            load.fileName = playerStart.fileName;\n            delete load['separator' as keyof unknown];\n            delete load['intervals' as keyof unknown];\n            delete load.stage['best' as keyof unknown];\n            delete load.stage['export' as keyof unknown];\n        }\n        if (load.version === 'v0.2.0') {\n            load.version = 'v0.2.1';\n            load.time.offline = 0;\n            load.toggles = deepClone(playerStart.toggles);\n            load.stage.input = cloneArray(playerStart.stage.input);\n            load.merge = deepClone(playerStart.merge);\n            load.cosmon = deepClone(playerStart.cosmon);\n            load.inflation.resets = load.inflation.vacuum ? 1 : 0;\n            load.buildings[6] = deepClone(playerStart.buildings[6]);\n            load.upgrades[6] = cloneArray(playerStart.upgrades[6]);\n            load.researches[6] = cloneArray(playerStart.researches[6]);\n            load.researchesExtra[6] = cloneArray(playerStart.researchesExtra[6]);\n            load.collapse.input = cloneArray(playerStart.collapse.input);\n            load.challenges.voidCheck = cloneArray(load.challenges.void);\n            load.history.vacuum = deepClone(playerStart.history.vacuum);\n            for (let s = 1; s <= 5; s++) {\n                for (let i = 0; i < load.buildings[s].length; i++) {\n                    delete load.buildings[s][i]['highest' as keyof unknown];\n                }\n            }\n\n            /* Can be removed eventually */\n            load.strangeness[5].splice(6, 0, load.strangeness[5].splice(2, 1)[0]);\n            load.strangeness[5].splice(3, 0, load.strangeness[5].splice(1, 1)[0]);\n            load.strangeness[5].splice(0, 1);\n            load.strangeness[5].splice(4, 0, 0);\n        }\n        if (load.version === 'v0.2.1') {\n            load.version = 'v0.2.2';\n            load.event = load.stage.true >= 7;\n            load.challenges.active = null;\n            load.collapse.show = load.elements.findLastIndex((e) => e > 0);\n            load.collapse.maxElement = load.collapse.show;\n            load.collapse.points = [];\n            load.cosmon.current = load.cosmon.total;\n            load.inflation.tree = cloneArray(playerStart.inflation.tree);\n            load.merge.reward = cloneArray(playerStart.merge.reward);\n            load.merge.input = 0;\n            load.clone = {};\n            delete load['events' as keyof unknown];\n\n            /* Can be removed eventually */\n            const vacuumHistory = load.history.vacuum;\n            const vacuumList = vacuumHistory.list;\n            for (let i = 0; i < vacuumList.length; i++) {\n                const test = vacuumList[i + 1];\n                if (vacuumList[i][1] && test !== undefined && !test[1]) { vacuumList[i][0] -= test[0]; }\n                if (vacuumList[i][2] / vacuumList[i][0] > vacuumHistory.best[2] / vacuumHistory.best[0]) { vacuumHistory.best = cloneArray(vacuumList[i]); }\n            }\n            const minus = vacuumList.length > 0 && !vacuumList[0][1] ? vacuumList[0][0] : 0;\n            load.inflation.time = load.inflation.age - minus; //Shorten\n            load.time.vacuum = load.time.universe - minus; //Shorten\n        }\n        if (load.version === 'v0.2.2') {\n            load.version = 'v0.2.3';\n            load.challenges.super = false;\n            load.challenges.supervoid = cloneArray(playerStart.challenges.supervoid);\n            load.inflation.spent = load.cosmon.total - load.cosmon.current;\n\n            /* Can be removed eventually */\n            if (load.challenges.active === 0) {\n                load.buildings[4][5].true = 0;\n                load.time.stage = 3600;\n            }\n            const pointer = load.clone.depth === 'vacuum' ? load.clone : load;\n            if (pointer.inflation.vacuum === true) { pointer.milestones = deepClone(playerStart.milestones); }\n            if (load.challenges.voidCheck[5] >= 1) {\n                load.challenges.voidCheck[4] = 5;\n                load.challenges.voidCheck[5]--;\n            }\n            if (pointer.challenges.void[5] >= 1) {\n                pointer.challenges.void[4] = 5;\n                pointer.challenges.void[5]--;\n            }\n        }\n\n        if (load.version !== playerStart.version) {\n            throw new ReferenceError(`Couldn't update save file ${load.version} to current game version`);\n        }\n    }\n\n    for (let s = 1; s <= 6; s++) {\n        for (let i = Math.min(load.buildings[s].length, global.buildingsInfo.maxActive[s]); i < playerStart.buildings[s].length; i++) {\n            load.buildings[s][i] = deepClone(playerStart.buildings[s][i]);\n        }\n        for (let i = load.toggles.buildings[s].length; i < playerStart.toggles.buildings[s].length; i++) {\n            load.toggles.buildings[s][i] = false;\n        }\n        if (load.stage.true < 3 || !(load.toggles.shop.wait[s] >= 1)) { load.toggles.shop.wait[s] = 2; }\n\n        for (let i = load.upgrades[s].length; i < playerStart.upgrades[s].length; i++) {\n            load.upgrades[s][i] = 0;\n        }\n        for (let i = load.researches[s].length; i < playerStart.researches[s].length; i++) {\n            load.researches[s][i] = 0;\n        }\n        for (let i = load.researchesExtra[s].length; i < playerStart.researchesExtra[s].length; i++) {\n            load.researchesExtra[s][i] = 0;\n        }\n        if (load.ASR[s] === undefined) { load.ASR[s] = 0; }\n\n        if (s >= 6) { continue; }\n        for (let i = Math.min(load.strangeness[s].length, global.strangenessInfo[s].maxActive); i < playerStart.strangeness[s].length; i++) {\n            load.strangeness[s][i] = 0;\n        }\n        for (let i = load.milestones[s].length; i < playerStart.milestones[s].length; i++) {\n            load.milestones[s][i] = 0;\n        }\n    }\n    for (let i = load.strange.length; i < playerStart.strange.length; i++) {\n        load.strange[i] = deepClone(playerStart.strange[i]);\n    }\n\n    for (let i = load.researchesAuto.length; i < playerStart.researchesAuto.length; i++) {\n        load.researchesAuto[i] = 0;\n    }\n    for (let i = load.elements.length; i < playerStart.elements.length; i++) {\n        load.elements[i] = 0;\n    }\n    for (let i = load.inflation.tree.length; i < playerStart.inflation.tree.length; i++) {\n        load.inflation.tree[i] = 0;\n    }\n    if (load.clone.depth !== undefined) {\n        const { clone } = load;\n        for (let s = 1; s <= 6; s++) {\n            for (let i = clone.upgrades[s].length; i < playerStart.upgrades[s].length; i++) {\n                clone.upgrades[s][i] = 0;\n            }\n            for (let i = clone.researches[s].length; i < playerStart.researches[s].length; i++) {\n                clone.researches[s][i] = 0;\n            }\n            for (let i = clone.researchesExtra[s].length; i < playerStart.researchesExtra[s].length; i++) {\n                clone.researchesExtra[s][i] = 0;\n            }\n\n            if (clone.depth === 'stage' || s >= 6) { continue; }\n            for (let i = clone.strangeness[s].length; i < playerStart.strangeness[s].length; i++) {\n                clone.strangeness[s][i] = 0;\n            }\n            for (let i = clone.milestones[s].length; i < playerStart.milestones[s].length; i++) {\n                clone.milestones[s][i] = 0;\n            }\n        }\n        for (let i = clone.researchesAuto.length; i < playerStart.researchesAuto.length; i++) {\n            clone.researchesAuto[i] = 0;\n        }\n        for (let i = clone.elements.length; i < playerStart.elements.length; i++) {\n            clone.elements[i] = 0;\n        }\n    }\n\n    for (let i = load.toggles.normal.length; i < playerStart.toggles.normal.length; i++) {\n        load.toggles.normal[i] = playerStart.toggles.normal[i];\n    }\n    for (let i = load.toggles.confirm.length; i < playerStart.toggles.confirm.length; i++) {\n        load.toggles.confirm[i] = 'Safe';\n    }\n    for (let i = load.toggles.hover.length; i < playerStart.toggles.hover.length; i++) {\n        load.toggles.hover[i] = false;\n    }\n    for (let i = load.toggles.max.length; i < playerStart.toggles.max.length; i++) {\n        load.toggles.max[i] = false;\n    }\n    for (let i = load.toggles.auto.length; i < playerStart.toggles.auto.length; i++) {\n        load.toggles.auto[i] = false;\n    }\n\n    /* Restore data post JSON parse */\n    load.fileName = new TextDecoder().decode(Uint8Array.from(load.fileName, (c) => c.codePointAt(0) as number));\n    load.vaporization.clouds = new Overlimit(load.vaporization.clouds);\n    load.vaporization.cloudsMax = new Overlimit(load.vaporization.cloudsMax);\n    for (let s = 1; s < load.buildings.length; s++) {\n        for (let i = 0; i < load.buildings[s].length; i++) {\n            const building = load.buildings[s][i];\n            building.current = new Overlimit(building.current);\n            building.total = new Overlimit(building.total);\n            building.trueTotal = new Overlimit(building.trueTotal);\n        }\n    }\n    Object.assign(player, load);\n\n    /* Final preparations and fixes */\n    global.trueActive = player.stage.active;\n    global.debug.errorID = true;\n    global.debug.errorQuery = true;\n    global.debug.errorGain = true;\n    global.debug.historyStage = null;\n    global.debug.historyVacuum = null;\n    global.debug.timeLimit = false;\n    const { buildings } = player;\n\n    const progress = player.challenges.supervoid;\n    global.inflationInfo.totalSuper = progress[1] + progress[2] + progress[3] + progress[4] + progress[5];\n    global.collapseInfo.trueStars = buildings[4][1].true + buildings[4][2].true + buildings[4][3].true + buildings[4][4].true + buildings[4][5].true;\n    global.collapseInfo.pointsLoop = 0;\n    global.historyStorage.stage = player.history.stage.list;\n    global.historyStorage.vacuum = player.history.vacuum.list;\n    if (player.elements[26] >= 1 && player.stage.current < 5) { player.elements[26] = 0; }\n    if (!player.inflation.vacuum) {\n        if (buildings[2][1].current.lessOrEqual('0')) { buildings[2][0].current.max('2.7753108348135e-3'); }\n        if (player.accretion.rank === 0) { buildings[3][0].current.setValue('5.9722e27'); }\n        global.buildingsInfo.producing[4][5].setValue('0');\n    }\n    if (player.stage.true < 2) { player.toggles.hover[0] = false; }\n    if (player.stage.true < 4) { player.toggles.max[0] = false; }\n\n    for (let s = 1; s <= 5; s++) {\n        for (let i = 0; i < playerStart.milestones[s].length; i++) {\n            assignMilestoneInformation(i, s);\n        }\n    }\n    for (let s = 1; s <= 6; s++) {\n        if (s < 6) {\n            const strangeness = player.strangeness[s];\n            const strangenessMax = global.strangenessInfo[s].max;\n            for (let i = 0; i < global.strangenessInfo[s].maxActive; i++) {\n                calculateMaxLevel(i, s, 'strangeness');\n                if (strangeness[i] > strangenessMax[i]) {\n                    strangeness[i] = strangenessMax[i];\n                    visualUpdateResearches(i, s, 'strangeness');\n                }\n            }\n        }\n        const extra = player.researchesExtra[s];\n        const extraMax = global.researchesExtraInfo[s].max;\n        for (let i = 0; i < global.researchesExtraInfo[s].maxActive; i++) {\n            calculateMaxLevel(i, s, 'researchesExtra');\n            if (extra[i] > extraMax[i]) {\n                extra[i] = extraMax[i];\n            }\n        }\n        const researches = player.researches[s];\n        const researchesMax = global.researchesInfo[s].max;\n        for (let i = 0; i < global.researchesInfo[s].maxActive; i++) {\n            calculateMaxLevel(i, s, 'researches');\n            if (researches[i] > researchesMax[i]) {\n                researches[i] = researchesMax[i];\n            }\n        }\n        calculateMaxLevel(0, s, 'ASR');\n        autoUpgradesSet(s);\n        autoResearchesSet('researches', s);\n        autoResearchesSet('researchesExtra', s);\n\n        getId(`stageSwitch${s}`).style.textDecoration = global.trueActive === s ? 'underline' : '';\n        global.lastUpgrade[s][0] = null;\n    }\n    for (let i = 0; i < playerStart.researchesAuto.length; i++) { calculateMaxLevel(i, 0, 'researchesAuto'); }\n    for (let i = 0; i < playerStart.inflation.tree.length; i++) { calculateMaxLevel(i, 0, 'inflations'); }\n    autoElementsSet();\n\n    toggleSupervoid();\n    global.lastElement = null;\n    global.lastStrangeness = [null, 0];\n    global.lastMilestone = [null, 0];\n    global.lastChallenge[0] = player.challenges.active === null ? 1 : player.challenges.active;\n    global.lastInflation = null;\n\n    assignBuildingsProduction.strange1();\n    assignBuildingsProduction.strange0();\n    assignBuildingsProduction.S2Levels(true);\n    assignBuildingsProduction.S4Levels(true);\n    assignResetInformation.maxRank();\n    assignResetInformation.trueEnergy();\n\n    switchTab(global.tab); //Update subtab list\n    visualTrueStageUnlocks();\n    for (let i = 0; i < playerStart.elements.length; i++) { visualUpdateUpgrades(i, 4, 'elements'); }\n    (getId('saveFileNameInput') as HTMLInputElement).value = player.fileName;\n    (getId('stageInput') as HTMLInputElement).value = format(player.stage.input[0], { type: 'input' });\n    (getId('stageInputTime') as HTMLInputElement).value = format(player.stage.input[1], { type: 'input' });\n    (getId('vaporizationInput') as HTMLInputElement).value = format(player.vaporization.input[0], { type: 'input' });\n    (getId('vaporizationInputMax') as HTMLInputElement).value = format(player.vaporization.input[1], { type: 'input' });\n    (getId('collapseInput') as HTMLInputElement).value = format(player.collapse.input[0], { type: 'input' });\n    (getId('collapseInputWait') as HTMLInputElement).value = format(player.collapse.input[1], { type: 'input' });\n    (getId('mergeInput') as HTMLInputElement).value = format(player.merge.input, { type: 'input' });\n    (getId('stageHistorySave') as HTMLInputElement).value = `${player.history.stage.input[0]}`;\n    (getId('stageHistoryShow') as HTMLInputElement).value = `${player.history.stage.input[1]}`;\n    (getId('vacuumHistorySave') as HTMLInputElement).value = `${player.history.vacuum.input[0]}`;\n    (getId('vacuumHistoryShow') as HTMLInputElement).value = `${player.history.vacuum.input[1]}`;\n    for (let i = 0; i < playerStart.toggles.normal.length; i++) { toggleSwap(i, 'normal'); }\n    for (let i = 0; i < playerStart.toggles.confirm.length; i++) { toggleConfirm(i); }\n    for (let i = 0; i < playerStart.toggles.hover.length; i++) { toggleSwap(i, 'hover'); }\n    for (let i = 0; i < playerStart.toggles.max.length; i++) { toggleSwap(i, 'max'); }\n    for (let i = 0; i < playerStart.toggles.auto.length; i++) { toggleSwap(i, 'auto'); }\n    (getId('buyAnyInput') as HTMLInputElement).value = format(player.toggles.shop.input, { type: 'input' });\n    updateCollapsePointsText();\n\n    return oldVersion;\n};\n", "import { player, global, playerStart, updatePlayer, deepClone, cloneArray } from './Player';\nimport { getUpgradeDescription, switchTab, numbersUpdate, visualUpdate, format, getChallengeDescription, getChallengeReward, stageUpdate, getStrangenessDescription, visualUpdateResearches, visualUpdateUpgrades } from './Update';\nimport { assignBuildingsProduction, autoElementsSet, autoResearchesSet, autoUpgradesSet, buyBuilding, buyStrangeness, buyUpgrades, collapseResetUser, dischargeResetUser, enterExitChallengeUser, inflationRefund, mergeResetUser, rankResetUser, stageResetUser, switchStage, timeUpdate, toggleConfirm, toggleSupervoid, toggleSwap, vaporizationResetUser } from './Stage';\nimport { Alert, hideFooter, Prompt, setTheme, changeFontSize, changeFormat, specialHTML, replayEvent, Confirm, preventImageUnload, Notify, MDStrangenessPage, globalSave, toggleSpecial, saveGlobalSettings, getHotkeysHTML, getVersionInfoHTML } from './Special';\nimport { assignHotkeys, detectHotkey, handleTouchHotkeys } from './Hotkeys';\nimport { prepareVacuum } from './Vacuum';\nimport { checkUpgrade } from './Check';\nimport type { hotkeysList } from './Types';\n\n/** Only for static HTML, by default (false) throws error if id is null */\nexport const getId = (id: string, noError = false): HTMLElement => {\n    const test = specialHTML.cache.idMap.get(id);\n    if (test !== undefined) { return test; }\n\n    const store = document.getElementById(id);\n    if (store !== null) {\n        specialHTML.cache.idMap.set(id, store);\n        return store;\n    }\n\n    if (noError) { return null as unknown as HTMLElement; }\n    if (global.debug.errorID) {\n        global.debug.errorID = false;\n        Notify(`Error encountered, ID \u2012 '${id}' doesn't exist`);\n        setTimeout(() => { global.debug.errorID = true; }, 6e4);\n    }\n    throw new ReferenceError(`ID \u2012 '${id}' doesn't exist`);\n};\n\n/** Id collection will be auto updated by browser */\nexport const getClass = (idCollection: string): HTMLCollectionOf<HTMLElement> => {\n    const test = specialHTML.cache.classMap.get(idCollection);\n    if (test !== undefined) { return test; }\n    const store = document.getElementsByClassName(idCollection) as HTMLCollectionOf<HTMLElement>;\n    specialHTML.cache.classMap.set(idCollection, store);\n    return store;\n};\n\n/** Only for static HTML */\nexport const getQuery = (query: string): HTMLElement => {\n    const test = specialHTML.cache.queryMap.get(query);\n    if (test !== undefined) { return test; }\n\n    const store = document.querySelector(query) as HTMLElement; //Can't add null type due to eslint being buggy\n    if (store !== null) {\n        specialHTML.cache.queryMap.set(query, store);\n        return store;\n    }\n\n    if (global.debug.errorQuery) {\n        global.debug.errorQuery = false;\n        Notify(`Error encountered, Query \u2012 '${query}' failed to find anything`);\n        setTimeout(() => { global.debug.errorQuery = true; }, 6e4);\n    }\n    throw new ReferenceError(`Query \u2012 '${query}' failed`);\n};\n\nconst handleOfflineTime = (): number => {\n    const timeNow = Date.now();\n    const offlineTime = (timeNow - player.time.updated) / 1000;\n    player.time.updated = timeNow;\n    player.time.export[0] += offlineTime;\n    return offlineTime;\n};\nexport const simulateOffline = async(offline: number) => {\n    if (!global.offline.active) { pauseGame(); }\n    if (player.time.offline < 0) {\n        offline += player.time.offline;\n        player.time.offline = 0;\n    }\n    let decline = false;\n    if (offline > 0 && !player.toggles.normal[4]) {\n        decline = !await Confirm(`Claim ${format(Math.min(offline, 43200), { type: 'time', padding: false })} worth of Offline time?\\n(Includes time spent to click any of the buttons)`, 2) &&\n            (globalSave.developerMode || !await Confirm(\"Press 'Cancel' again to confirm losing Offline time, 'Confirm' to keep it\"));\n        const extra = handleOfflineTime();\n        global.lastSave += extra;\n        offline += extra;\n    }\n    if (decline || offline <= 0) {\n        if (offline <= 0) { player.time.offline += offline; }\n        timeUpdate(1, 0.04); //Just in case\n        return offlineEnd(true);\n    } else if (offline > 43200) { offline = 43200; }\n    global.offline.stageUpdate = null;\n    global.offline.speed = globalSave.intervals.offline / 1000;\n\n    const accelerate = getId('offlineAccelerate');\n    accelerate.addEventListener('click', offlineAccelerate);\n    getId('offlineCancel').addEventListener('click', offlineCancel);\n    document.body.addEventListener('keydown', offlineKey);\n    getId('offlineMain').style.display = '';\n    accelerate.focus();\n    calculateOffline(offline);\n};\nconst calculateOffline = (warpTime: number, start = warpTime) => {\n    const rate = global.offline.speed;\n    const time = rate <= 0 ? warpTime : Math.min(600 * rate, warpTime);\n    warpTime -= time;\n    try {\n        timeUpdate(Math.max(time / 600, rate), time);\n    } catch (error) {\n        offlineEnd();\n        const stack = (error as { stack: string }).stack;\n        void Alert(`Offline calculation failed due to error:\\n${typeof stack === 'string' ? stack.replaceAll(`${window.location.origin}/`, '') : error}`, 1);\n        throw error;\n    }\n    if (warpTime > 0) {\n        setTimeout(calculateOffline, 0, warpTime, start);\n        getId('offlineTick').textContent = format(rate);\n        getId('offlineRemains').textContent = format(warpTime, { type: 'time' });\n        getId('offlinePercentage').textContent = format(100 - warpTime / start * 100, { padding: true });\n        if (globalSave.SRSettings[0]) { getQuery('#offlineMain > div').ariaValueText = `${format(100 - warpTime / start * 100)}% done`; }\n    } else { offlineEnd(); }\n};\nconst offlineEnd = (early = false) => {\n    if (global.offline.stageUpdate !== null) {\n        stageUpdate(global.offline.stageUpdate);\n    } else {\n        visualUpdate();\n        numbersUpdate();\n    }\n    pauseGame(false);\n    if (early) { return; } //Just in case?\n    getId('offlineMain').style.display = 'none';\n\n    getId('offlineAccelerate').removeEventListener('click', offlineAccelerate);\n    getId('offlineCancel').removeEventListener('click', offlineCancel);\n    document.body.removeEventListener('keydown', offlineKey);\n};\nconst offlineKey = (event: KeyboardEvent) => {\n    if (event.metaKey || event.ctrlKey || event.altKey) { return; }\n    const code = event.code;\n    if (code === 'Escape') {\n        if (event.shiftKey) { return; }\n        event.preventDefault();\n        offlineCancel();\n    } else if (code === 'Enter' || code === 'Space') {\n        if (event.shiftKey || document.activeElement === getId('offlineCancel')) { return; }\n        event.preventDefault();\n        offlineAccelerate();\n    } else if (code === 'Tab') {\n        event.preventDefault();\n        const cancel = getId('offlineCancel');\n        (document.activeElement === cancel ? getId('offlineAccelerate') : cancel).focus();\n    }\n};\nconst offlineCancel = () => (global.offline.speed = 0);\nconst offlineAccelerate = () => (global.offline.speed *= 2);\n\nconst changeIntervals = () => {\n    const intervalsId = global.intervalsId;\n    const intervals = globalSave.intervals;\n    const paused = global.offline.active || global.paused;\n\n    clearInterval(intervalsId.main);\n    clearInterval(intervalsId.numbers);\n    clearInterval(intervalsId.visual);\n    clearInterval(intervalsId.autoSave);\n    intervalsId.main = paused ? undefined : setInterval(timeUpdate, intervals.main, intervals.offline / 1000);\n    intervalsId.numbers = paused ? undefined : setInterval(numbersUpdate, intervals.numbers);\n    intervalsId.visual = paused ? undefined : setInterval(visualUpdate, intervals.visual);\n    intervalsId.autoSave = paused ? undefined : setInterval(saveGame, intervals.autoSave);\n};\n/** Pauses and unpauses game based on 'pause' value */\nexport const pauseGame = (pause = true) => {\n    if (!pause && global.paused) {\n        const button = getId('pauseButton');\n        button.style.borderColor = '';\n        button.style.color = '';\n        getId('gamePaused').style.display = 'none';\n        global.paused = false;\n    }\n    global.hotkeys.disabled = pause;\n    global.offline.active = pause;\n    changeIntervals();\n};\nexport const pauseGameUser = () => {\n    if (global.offline.active) { return; }\n    if (!global.paused) {\n        const button = getId('pauseButton');\n        button.style.borderColor = 'forestgreen';\n        button.style.color = 'var(--green-text)';\n        getId('gamePaused').style.display = '';\n        global.paused = true;\n        changeIntervals();\n        return;\n    }\n    const offline = handleOfflineTime();\n    global.lastSave += offline;\n    void simulateOffline(offline);\n};\n\nconst saveGame = (noSaving = false): string | null => {\n    if (global.offline.active) { return null; }\n    try {\n        player.history.stage.list = global.historyStorage.stage.slice(0, player.history.stage.input[0]);\n        player.history.vacuum.list = global.historyStorage.vacuum.slice(0, player.history.vacuum.input[0]);\n\n        const clone = { ...player };\n        clone.fileName = String.fromCharCode(...new TextEncoder().encode(clone.fileName));\n        const save = btoa(JSON.stringify(clone));\n        if (!noSaving) {\n            localStorage.setItem(specialHTML.localStorage.main, save);\n            clearInterval(global.intervalsId.autoSave);\n            if (!global.paused) { global.intervalsId.autoSave = setInterval(saveGame, globalSave.intervals.autoSave); }\n            getId('isSaved').textContent = 'Saved';\n            global.lastSave = 0;\n        }\n        return save;\n    } catch (error) {\n        const stack = (error as { stack: string }).stack;\n        void Alert(`Failed to save game\\n${typeof stack === 'string' ? stack.replaceAll(`${window.location.origin}/`, '') : error}`, 1);\n        throw error;\n    }\n};\nconst loadGame = (save: string) => {\n    if (global.offline.active) { return; }\n    pauseGame();\n    try {\n        const versionCheck = updatePlayer(JSON.parse(atob(save)));\n\n        global.lastSave = handleOfflineTime();\n        Notify(`This save is ${format(global.lastSave, { type: 'time', padding: false })} old${versionCheck !== player.version ? `\\nSave file version is ${versionCheck}` : ''}`);\n        stageUpdate();\n\n        void simulateOffline(global.lastSave);\n    } catch (error) {\n        prepareVacuum(Boolean(player.inflation.vacuum)); //Fix vacuum state\n        pauseGame(false);\n\n        void Alert(`Incorrect save file format\\n${error}`);\n        throw error;\n    }\n};\nconst exportFileGame = () => {\n    if ((player.stage.true >= 7 || player.strange[0].total > 0) && (player.challenges.active === null || global.challengesInfo[player.challenges.active].resetType === 'stage')) {\n        awardExport();\n        numbersUpdate();\n    }\n\n    const save = saveGame(globalSave.developerMode);\n    if (save === null) { return; }\n    const a = document.createElement('a');\n    a.href = `data:text/plain,${save}`;\n    a.download = replaceSaveFileSpecials();\n    a.click();\n};\nconst awardExport = () => {\n    const exportReward = player.time.export;\n    if (exportReward[0] <= 0) { return; }\n    const { strange } = player;\n    const conversion = Math.min(exportReward[0] / 86400, 1);\n    const quarks = (exportReward[1] / 2.5 + 1) * conversion;\n\n    strange[0].current += quarks;\n    strange[0].total += quarks;\n    exportReward[1] = Math.max(exportReward[1] - quarks, 0);\n    if (player.strangeness[5][8] >= 1) {\n        const strangelets = exportReward[2] / 2.5 * conversion;\n        strange[1].current += strangelets;\n        strange[1].total += strangelets;\n        exportReward[2] -= strangelets;\n        assignBuildingsProduction.strange1();\n    }\n    assignBuildingsProduction.strange0();\n    exportReward[0] = 0;\n};\n\nconst saveConsole = async() => {\n    let value = await Prompt(\"Available options:\\n'Copy' \u2012 copy save file to clipboard\\n'Delete' \u2012 delete your save file\\n'Clear' \u2012 clear all domain data\\n'Global' \u2012 open options for global settings\\n(Adding '_' will skip options menu)\\nOr insert save file string here to load it\");\n    if (value === null || value === '') { return; }\n    let lower = value.toLowerCase();\n    if (lower === 'global') {\n        value = await Prompt(\"Available options:\\n'Reset' \u2012 reset global settings\\n'Copy' \u2012 copy global settings to clipboard\\nOr insert global settings string here to load it\\n(this will overwrite current ones and require page reload)\");\n        if (value === null || value === '') { return; }\n        lower = `global_${value.toLowerCase()}`;\n    }\n\n    if (lower === 'copy' || lower === 'global_copy') {\n        const save = lower === 'global_copy' ? saveGlobalSettings(true) : saveGame(true);\n        if (save !== null) {\n            try {\n                await navigator.clipboard.writeText(save);\n            } catch (error) {\n                console.warn(`Full error for being unable to write to clipboard:\\n${error}`);\n                if (await Confirm(\"Could not copy text into clipboard, press 'Confrim' to save it as file instead\")) {\n                    const a = document.createElement('a');\n                    a.href = `data:text/plain,${save}`;\n                    a.download = `${lower === 'global_copy' ? 'Settings' : 'Save'} clipboard`;\n                    a.click();\n                }\n            }\n        }\n    } else if (lower === 'delete' || lower === 'clear' || lower === 'global_reset') {\n        pauseGame();\n        if (lower === 'delete') {\n            localStorage.removeItem(specialHTML.localStorage.main);\n        } else if (lower === 'global_reset') {\n            localStorage.removeItem(specialHTML.localStorage.settings);\n        } else { localStorage.clear(); }\n        window.location.reload();\n        void Alert('Awaiting game reload');\n    } else if (value === 'devMode') {\n        globalSave.developerMode = !globalSave.developerMode;\n        Notify(`Developer mode is ${globalSave.developerMode ? 'now' : 'no longer'} active`);\n        saveGlobalSettings();\n    } else if (lower === 'achievement') {\n        Notify('Unlocked a new Achievement! (If there were any)');\n    } else if (lower === 'slow' || lower === 'free' || lower === 'boost') {\n        Notify('Game speed was increased by 1x');\n    } else if (lower === 'secret' || lower === 'global_secret' || lower === 'secret_secret') {\n        Notify(`Found a ${lower === 'secret_secret' ? \"ultra rare secret, but it doesn't proof anything\" : `${lower === 'global_secret' ? 'global' : 'rare'} secret, don't share it with anybody`}`);\n    } else if (lower === 'secret_proof') {\n        Notify('Found a proof that you were looking for!');\n    } else {\n        if (value.length < 20) { return void Alert(`Input '${value}' doesn't match anything`); }\n        if (lower.includes('global_')) {\n            if (!await Confirm(\"Press 'Confirm' to load input as a new global settings, this will reload page\\n(Input is too long to be displayed)\")) { return; }\n            localStorage.setItem(specialHTML.localStorage.settings, value[6] === '_' ? value.substring(7) : value);\n            window.location.reload();\n            void Alert('Awaiting game reload');\n        } else {\n            if (!await Confirm(\"Press 'Confirm' to load input as a save file\\n(Input is too long to be displayed)\")) { return; }\n            loadGame(value);\n        }\n    }\n};\n\nconst replaceSaveFileSpecials = (): string => {\n    let realName = player.fileName;\n\n    const date = new Date();\n    const dateIndex = realName.indexOf('[date');\n    if (dateIndex >= 0) {\n        const endIndex = realName.indexOf(']', dateIndex + 5);\n        if (endIndex >= 0) {\n            let replaced = realName.substring(dateIndex + 5, endIndex);\n            const special = [\n                'Y',\n                'M',\n                'D'\n            ];\n            const replaceWith = [\n                `${date.getFullYear()}`,\n                `${date.getMonth() + 1}`.padStart(2, '0'),\n                `${date.getDate()}`.padStart(2, '0')\n            ];\n            for (let i = 0; i < special.length; i++) {\n                replaced = replaced.replace(special[i], replaceWith[i]);\n            }\n            realName = realName.replace(realName.substring(dateIndex, endIndex + 1), replaced);\n        }\n    }\n    const timeIndex = realName.indexOf('[time');\n    if (timeIndex >= 0) {\n        const endIndex = realName.indexOf(']', timeIndex + 5);\n        if (endIndex >= 0) {\n            let replaced = realName.substring(timeIndex + 5, endIndex);\n            const special = [\n                'H',\n                'M',\n                'S'\n            ];\n            const replaceWith = [\n                `${date.getHours()}`.padStart(2, '0'),\n                `${date.getMinutes()}`.padStart(2, '0'),\n                `${date.getSeconds()}`.padStart(2, '0')\n            ];\n            for (let i = 0; i < special.length; i++) {\n                replaced = replaced.replace(special[i], replaceWith[i]);\n            }\n            realName = realName.replace(realName.substring(timeIndex, endIndex + 1), replaced);\n        }\n    }\n\n    const special = [\n        '[version]',\n        '[stage]',\n        '[strange]',\n        '[cosmon]',\n        '[vacuum]',\n        '[galaxy]',\n        '[universe]'\n    ];\n    const replaceWith = [\n        player.version,\n        global.stageInfo.word[player.stage.current],\n        `${player.strange[0].total}`,\n        `${player.cosmon.total}`,\n        `${player.inflation.vacuum}`,\n        `${player.buildings[5][3].current}`,\n        `${player.buildings[6][1].current}`\n    ];\n    for (let i = 0; i < special.length; i++) {\n        realName = realName.replace(special[i], replaceWith[i]);\n    }\n    return `${realName}.txt`;\n};\n\n/* Arguments are not done as '(...data: any) => any, ...data: any' because TS won't do type safety */\n/** If onceInstanly is true, then it will instanly call function once and then try to repeat it after delay */\nconst repeatFunction = (repeat: () => any, onceInstanly = false) => {\n    if (onceInstanly) { repeat(); }\n    if (global.intervalsId.mouseRepeat !== undefined) { return; }\n    global.intervalsId.mouseRepeat = setTimeout(() => {\n        global.intervalsId.mouseRepeat = setInterval(repeat, 50);\n    }, 200);\n};\nconst cancelRepeat = () => {\n    clearInterval(global.intervalsId.mouseRepeat);\n    global.intervalsId.mouseRepeat = undefined;\n};\n\nconst hoverUpgrades = (index: number, type: 'upgrades' | 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'elements' | 'inflation') => {\n    if (type === 'inflation') {\n        global.lastInflation = index;\n    } else {\n        if (player.toggles.hover[0]) { buyUpgrades(index, player.stage.active, type); }\n        if (type === 'elements') {\n            global.lastElement = index;\n        } else { global.lastUpgrade[player.stage.active] = [index, type]; }\n    }\n    getUpgradeDescription(index, type);\n};\nconst hoverStrangeness = (index: number, stageIndex: number, type: 'strangeness' | 'milestones') => {\n    if (type === 'strangeness') {\n        global.lastStrangeness = [index, stageIndex];\n    } else { global.lastMilestone = [index, stageIndex]; }\n    getStrangenessDescription(index, stageIndex, type);\n};\nconst hoverChallenge = (index: number) => {\n    global.lastChallenge[0] = index;\n    getChallengeDescription(index);\n    if (index === 0) { getChallengeReward(global.lastChallenge[1]); }\n    visualUpdate();\n};\nexport const changeRewardType = (state = !global.sessionToggles[0]) => {\n    global.sessionToggles[0] = state;\n    getId('rewardsType').textContent = `${state ? 'Supervoid' : 'Void'} rewards:`;\n};\n/** Handles requirement to switch Stage, returns true if can safely return early */\nconst handleAutoSwitch = (index: number, type = 'researchesAuto'): boolean => {\n    const stageIndex = player.stage.active;\n    if (type === 'researchesAuto' && !checkUpgrade(index, stageIndex, type)) {\n        const autoStage = global.researchesAutoInfo.autoStage[index][player.researchesAuto[index]];\n        if (autoStage !== undefined && !(autoStage === stageIndex || (autoStage === 4 && stageIndex === 5))) { switchStage(autoStage, stageIndex); }\n        return true;\n    }\n    return false;\n};\n\nexport const buyAll = () => {\n    const active = player.stage.active;\n    for (let i = 1; i < specialHTML.longestBuilding; i++) {\n        buyBuilding(i, active, 0);\n    }\n};\n\nexport const updateCollapsePointsText = () => {\n    const array = [];\n    const points = player.collapse.points;\n    for (let i = 0; i < points.length; i++) {\n        array.push(format(points[i], { type: 'input' }));\n    }\n    getId('collapsePoints').textContent = array.length > 0 ? `${array.join(', ')} or ` : '';\n};\n\nexport const globalSaveStart = deepClone(globalSave);\ntry { //Start everything\n    preventImageUnload();\n    const body = document.body;\n\n    const globalSettings = localStorage.getItem(specialHTML.localStorage.settings);\n    if (globalSettings !== null) {\n        try {\n            Object.assign(globalSave, JSON.parse(atob(globalSettings)));\n            const decoder = new TextDecoder();\n            for (const key in globalSave.hotkeys) { //Restore decoded data\n                const array = globalSave.hotkeys[key as hotkeysList] as string[];\n                for (let i = 0; i < array.length; i++) {\n                    array[i] = decoder.decode(Uint8Array.from(array[i], (c) => c.codePointAt(0) as number));\n                }\n            }\n            if (!(globalSave.intervals.main >= 20)) { globalSave.intervals.main = 20; }\n            if (!(globalSave.intervals.offline >= globalSave.intervals.main * 2)) {\n                globalSave.intervals.offline = globalSave.intervals.main * 2;\n            }\n            for (let i = globalSave.toggles.length; i < globalSaveStart.toggles.length; i++) {\n                globalSave.toggles[i] = false;\n            }\n            for (let i = globalSave.MDSettings.length; i < globalSaveStart.MDSettings.length; i++) {\n                globalSave.MDSettings[i] = false;\n            }\n            for (let i = globalSave.SRSettings.length; i < globalSaveStart.SRSettings.length; i++) {\n                globalSave.SRSettings[i] = false;\n            }\n            for (const key in globalSaveStart.hotkeys) {\n                if (globalSave.hotkeys[key as hotkeysList] === undefined) {\n                    globalSave.hotkeys[key as hotkeysList] = cloneArray(globalSaveStart.hotkeys[key as hotkeysList]);\n                }\n            }\n        } catch (error) {\n            Notify('Global settings failed to parse, default ones will be used instead');\n            console.log(`(Full parse error) ${error}`);\n        }\n        (getId('decimalPoint') as HTMLInputElement).value = globalSave.format[0];\n        (getId('thousandSeparator') as HTMLInputElement).value = globalSave.format[1];\n        (getId('mainInterval') as HTMLInputElement).value = `${globalSave.intervals.main}`;\n        (getId('offlineInterval') as HTMLInputElement).value = `${globalSave.intervals.offline}`;\n        (getId('numbersInterval') as HTMLInputElement).value = `${globalSave.intervals.numbers}`;\n        (getId('visualInterval') as HTMLInputElement).value = `${globalSave.intervals.visual}`;\n        (getId('autoSaveInterval') as HTMLInputElement).value = `${globalSave.intervals.autoSave / 1000}`;\n        for (let i = 0; i < globalSaveStart.toggles.length; i++) { toggleSpecial(i, 'global'); }\n        if (globalSave.fontSize !== 16) { changeFontSize(true); } //Also sets breakpoints for screen size\n        if (globalSave.toggles[3]) {\n            getId('hideToggle').style.display = 'none';\n            getId('currentSwitch').style.display = 'none';\n            getQuery('#footer > div:first-child').style.display = 'none';\n            getId('body').prepend(getId('footer'));\n            getId('fakeFooter').after(getId('phoneHotkeys'));\n            getId('footerMain').append(getId('subtabs'), getId('stageSelect'));\n            specialHTML.styleSheet.textContent += `.insideTab { margin-top: 0.6rem; } #footer { position: unset; } #footerMain { padding: 0.6em; row-gap: 0.6em; }\n            #footerMain button, #phoneHotkeys button { width: min-content; min-width: 4em; height: 2em; border-radius: 10px; font-size: 0.92em; } #footerMain > * { margin: 0 auto; gap: 0.4em; } #footerStats { gap: 0.6em; }\n            #stageSelect { position: unset; justify-content: unset; pointer-events: unset; } #stageSelect > div { position: unset; justify-content: unset; flex-wrap: unset; gap: 0.4em; margin: 0 auto; max-width: unset; } #subtabs { flex-direction: row; }\n            #phoneHotkeys { flex-direction: row-reverse; gap: 0.4em; justify-content: center; position: fixed; width: 100%; bottom: 0.6em; margin: 0; } #fakeFooter { height: 3.04em; }`;\n        }\n        if (globalSave.toggles[2]) { body.classList.remove('noTextSelection'); }\n        if (globalSave.toggles[1]) {\n            const elementsArea = getId('upgradeSubtabElements');\n            elementsArea.id = 'ElementsTab';\n            getId('upgradeTab').after(elementsArea);\n            specialHTML.cache.idMap.delete('upgradeSubtabElements');\n\n            const elementsButton = getId('upgradeSubtabBtnElements');\n            elementsButton.id = 'ElementsTabBtn';\n            elementsButton.classList.add('stage4Include');\n            getId('upgradeTabBtn').after(elementsButton);\n            specialHTML.cache.idMap.delete('upgradeSubtabBtnElements');\n\n            const tabList = global.tabList;\n            tabList.ElementsSubtabs = [];\n            tabList.upgradeSubtabs.splice(tabList.upgradeSubtabs.indexOf('Elements'), 1);\n            tabList.tabs.splice(tabList.tabs.indexOf('upgrade') + 1, 0, 'Elements');\n        }\n\n        if (globalSave.MDSettings[0]) {\n            (document.getElementById('MDMessage1') as HTMLElement).remove();\n            specialHTML.styleSheet.textContent += 'body.noTextSelection, img, input[type = \"image\"], button, #load, a, #notifications > p, #hideToggle { -webkit-user-select: none; -webkit-touch-callout: none; }'; //Safari junk to disable image hold menu and text selection\n            specialHTML.styleSheet.textContent += '#themeArea > div > div { position: unset; display: flex; width: 15em; } #themeArea > div > button { display: none; }'; //More Safari junk to make windows work without focus\n            (getId('file') as HTMLInputElement).accept = ''; //Accept for unknown reason not properly supported on phones\n\n            const arrowStage = document.createElement('button');\n            arrowStage.append(document.createElement('div'));\n            arrowStage.type = 'button';\n            const arrowReset1 = document.createElement('button');\n            arrowReset1.append(document.createElement('div'));\n            arrowReset1.type = 'button';\n            getId('resetStage').append(arrowStage);\n            arrowStage.addEventListener('click', () => getId('resetStage').classList.toggle('open'));\n            arrowStage.addEventListener('blur', () => getId('resetStage').classList.remove('open'));\n            getId('reset1Main').append(arrowReset1);\n            arrowReset1.addEventListener('click', () => getId('reset1Main').classList.toggle('open'));\n            arrowReset1.addEventListener('blur', () => getId('reset1Main').classList.remove('open'));\n            specialHTML.styleSheet.textContent += '#resets { row-gap: 1em; } #resets > section { position: relative; flex-direction: row; justify-content: center; width: unset; padding: unset; row-gap: unset; background-color: unset; border: unset; } #resets > section:not(.open) > p { display: none !important; }';\n            specialHTML.styleSheet.textContent += '#resets > section > button:last-of-type { width: 2.2em !important; margin-left: -2px; } #resets button > div { clip-path: polygon(0 0, 50% 100%, 100% 0, 50% 25%); width: 1.24em; height: 1.24em; background-color: var(--main-text); pointer-events: none; margin: auto; } #resets p { position: absolute; width: 17.4em; padding: 0.5em 0.6em 0.6em; background-color: var(--window-color); border: 2px solid var(--window-border); top: calc(100% - 2px); z-index: 1; box-sizing: content-box; }';\n\n            const structuresButton = document.createElement('button');\n            structuresButton.textContent = 'Structures';\n            structuresButton.id = 'structuresFooter';\n            structuresButton.type = 'button';\n            const stageButton = document.createElement('button');\n            stageButton.textContent = 'Stage';\n            stageButton.id = 'stageFooter';\n            stageButton.type = 'button';\n            const reset1Button = document.createElement('button');\n            reset1Button.id = 'reset1Footer';\n            reset1Button.type = 'button';\n            const resetCollapse = document.createElement('button');\n            resetCollapse.textContent = 'Collapse';\n            resetCollapse.id = 'resetCollapseFooter';\n            resetCollapse.type = 'button';\n            resetCollapse.className = 'stage5Only';\n            const resetGalaxy = document.createElement('button');\n            resetGalaxy.textContent = 'Galaxy';\n            resetGalaxy.id = 'resetGalaxyFooter';\n            resetGalaxy.type = 'button';\n            resetGalaxy.className = 'stage4Only';\n            getId('phoneHotkeys').prepend(resetGalaxy, reset1Button, resetCollapse, stageButton, structuresButton);\n\n            const createUpgButton = document.createElement('button');\n            createUpgButton.className = 'hollowButton';\n            createUpgButton.textContent = 'Create';\n            createUpgButton.id = 'upgradeCreate';\n            createUpgButton.type = 'button';\n            getId('toggleHover0').after(createUpgButton);\n\n            const createInfButton = document.createElement('button');\n            createInfButton.className = 'hollowButton';\n            createInfButton.textContent = 'Activate';\n            createInfButton.id = 'inflationActivate';\n            createInfButton.type = 'button';\n            getId('inflationRefund').before(createInfButton);\n\n            const pages = document.createElement('div');\n            pages.id = 'strangenessPages';\n            pages.innerHTML = '<button type=\"button\" id=\"strangenessPage1\" class=\"stage1borderImage hollowButton\">1</button><button type=\"button\" id=\"strangenessPage2\" class=\"stage2borderImage hollowButton\">2</button><button type=\"button\" id=\"strangenessPage3\" class=\"stage3borderImage hollowButton\">3</button><button type=\"button\" id=\"strangenessPage4\" class=\"stage4borderImage hollowButton\">4</button><button type=\"button\" id=\"strangenessPage5\" class=\"stage5borderImage hollowButton\">5</button><button type=\"button\" id=\"strangenessCreate\" class=\"hollowButton\">Create</button>';\n            specialHTML.styleSheet.textContent += '#strangenessPages { display: flex; justify-content: center; column-gap: 0.3em; } #strangenessPages button { width: 2.08em; height: calc(2.08em - 2px); border-top: none; border-radius: 0 0 4px 4px; } #strangenessCreate { width: unset !important; padding: 0 0.4em; }';\n            getId('strangenessResearch').append(pages);\n\n            const mainLi = getId('MDLi');\n            const MDToggle1 = document.createElement('li');\n            MDToggle1.innerHTML = '<label>Keep mouse events<button type=\"button\" id=\"MDToggle1\" class=\"specialToggle\">OFF</button></label>';\n            mainLi.after(MDToggle1);\n            const refreshButton = document.createElement('button');\n            refreshButton.className = 'hollowButton';\n            refreshButton.textContent = 'Reload';\n            refreshButton.type = 'button';\n            mainLi.append(refreshButton);\n            refreshButton.addEventListener('click', async() => {\n                if (await Confirm('Reload page?\\n(Game will not autosave)')) { window.location.reload(); }\n            });\n\n            getId('MDToggle1').addEventListener('click', () => toggleSpecial(1, 'mobile', true, true));\n            for (let i = 0; i < globalSaveStart.MDSettings.length; i++) { toggleSpecial(i, 'mobile'); }\n            MDStrangenessPage(1);\n        }\n        if (globalSave.SRSettings[0]) {\n            const message = getId('SRMessage1');\n            message.textContent = 'Screen reader support is enabled, disable it if its not required';\n            message.className = 'greenText';\n            message.ariaHidden = 'true';\n            for (let i = 0; i <= 3; i++) {\n                const effectID = getQuery(`#${i === 0 ? 'solarMass' : `star${i}`}Effect > span.info`);\n                effectID.textContent = ` (${effectID.textContent})`;\n                effectID.classList.remove('greenText');\n            }\n            for (let i = 1; i <= 1; i++) {\n                const effectID = getQuery(`#merge${i}Effect > span.info`);\n                effectID.textContent = ` (${effectID.textContent})`;\n                effectID.classList.remove('greenText');\n            }\n            specialHTML.styleSheet.textContent += '#starEffects > p > span, #mergeEffects > p > span { display: unset !important; }';\n\n            const SRMainDiv = document.createElement('article');\n            SRMainDiv.innerHTML = '<h5>Information for Screen reader</h5><p id=\"SRTab\" aria-live=\"polite\"></p><p id=\"SRStage\" aria-live=\"polite\"></p><p id=\"SRMain\" aria-live=\"assertive\"></p>';\n            SRMainDiv.className = 'reader';\n            getId('fakeFooter').before(SRMainDiv);\n\n            const SRToggle1 = document.createElement('li');\n            SRToggle1.innerHTML = '<label>Keep tab index on created Upgrades<button type=\"button\" id=\"SRToggle1\" class=\"specialToggle\">OFF</button></label>';\n            const SRToggle2 = document.createElement('li');\n            SRToggle2.innerHTML = '<label>Keep tab index on primary buttons<button type=\"button\" id=\"SRToggle2\" class=\"specialToggle\">OFF</button></label>';\n            getId('SRLi').after(SRToggle1, SRToggle2);\n\n            getId('SRToggle1').addEventListener('click', () => {\n                toggleSpecial(1, 'reader', true);\n                const active = player.stage.active;\n                for (let i = 0; i < global.upgradesInfo[active].maxActive; i++) { visualUpdateUpgrades(i, active, 'upgrades'); }\n                for (let i = 0; i < global.researchesInfo[active].maxActive; i++) { visualUpdateResearches(i, active, 'researches'); }\n                for (let i = 0; i < global.researchesExtraInfo[active].maxActive; i++) { visualUpdateResearches(i, active, 'researchesExtra'); }\n                for (let i = 0; i < playerStart.researchesAuto.length; i++) { visualUpdateResearches(i, 0, 'researchesAuto'); }\n                visualUpdateResearches(0, active, 'ASR');\n                for (let i = 0; i < playerStart.elements.length; i++) { visualUpdateUpgrades(i, 4, 'elements'); }\n                for (let s = 1; s < playerStart.strangeness.length; s++) {\n                    for (let i = 0; i < global.strangenessInfo[s].maxActive; i++) {\n                        visualUpdateResearches(i, s, 'strangeness');\n                    }\n                }\n                for (let i = 0; i < playerStart.inflation.tree.length; i++) {\n                    visualUpdateResearches(i, 0, 'inflations');\n                }\n            });\n\n            const primaryIndex = (reload = false) => {\n                if (!reload) { toggleSpecial(2, 'reader', true); }\n                const newTab = globalSave.SRSettings[2] ? 0 : -1;\n                getId('stageReset').tabIndex = newTab;\n                getId('reset1Button').tabIndex = newTab;\n                for (let i = 1; i < specialHTML.longestBuilding; i++) {\n                    getId(`building${i}Btn`).tabIndex = newTab;\n                    getId(`toggleBuilding${i}`).tabIndex = newTab;\n                }\n                getId('toggleBuilding0').tabIndex = newTab;\n                for (const tabText of global.tabList.tabs) {\n                    getId(`${tabText}TabBtn`).tabIndex = newTab;\n                    for (const subtabText of global.tabList[`${tabText}Subtabs`]) {\n                        getId(`${tabText}SubtabBtn${subtabText}`).tabIndex = newTab;\n                    }\n                }\n                for (let i = 1; i < global.stageInfo.word.length; i++) {\n                    getId(`stageSwitch${i}`).tabIndex = newTab;\n                }\n            };\n            getId('SRToggle2').addEventListener('click', () => { primaryIndex(); });\n\n            if (globalSave.SRSettings[2]) { primaryIndex(true); }\n            for (let i = 0; i < globalSaveStart.SRSettings.length; i++) { toggleSpecial(i, 'reader'); }\n        } else {\n            const index = globalSave.toggles[0] ? 0 : 1;\n            const list = [globalSave.hotkeys.tabLeft[index], globalSave.hotkeys.tabRight[index], globalSave.hotkeys.subtabDown[index], globalSave.hotkeys.subtabUp[index]];\n            for (let i = 0; i < list.length; i++) {\n                if (list[i] == null || list[i] === '') { list[i] = 'None'; }\n            }\n            getQuery('#SRMessage1 span').textContent = `${list[0]} and ${list[1]}`;\n            getQuery('#SRMessage1 span:last-of-type').textContent = `${list[2]} and ${list[3]}`;\n        }\n    }\n\n    let oldVersion = player.version;\n    const save = localStorage.getItem(specialHTML.localStorage.main);\n    if (save !== null) {\n        oldVersion = updatePlayer(JSON.parse(atob(save)));\n    } else {\n        prepareVacuum(false); //Set buildings values\n        updatePlayer(deepClone(playerStart));\n    }\n\n    /* Global */\n    assignHotkeys();\n    const MD = globalSave.MDSettings[0];\n    const SR = globalSave.SRSettings[0];\n    const PC = !MD || globalSave.MDSettings[1];\n    const releaseHotkey = (event: KeyboardEvent | MouseEvent) => {\n        if (global.hotkeys.shift && !event.shiftKey) { global.hotkeys.shift = false; }\n        if (global.hotkeys.ctrl && !event.ctrlKey) { global.hotkeys.ctrl = false; }\n        global.hotkeys.tab = false;\n    };\n    body.addEventListener('contextmenu', (event) => {\n        const activeType = (document.activeElement as HTMLInputElement)?.type;\n        if (activeType !== 'text' && activeType !== 'number' && !globalSave.developerMode) { event.preventDefault(); }\n    });\n    body.addEventListener('keydown', (key) => detectHotkey(key));\n    body.addEventListener('keyup', releaseHotkey);\n    if (PC) {\n        body.addEventListener('mouseup', (event) => {\n            cancelRepeat();\n            releaseHotkey(event);\n        });\n        body.addEventListener('mouseleave', cancelRepeat);\n    }\n    if (MD) {\n        body.addEventListener('touchstart', (event) => {\n            specialHTML.mobileDevice.start = [event.touches[0].clientX, event.touches[0].clientY];\n        }, { passive: true }); //Passive just in case to prevent issues with scrolling\n        body.addEventListener('touchend', (event) => {\n            cancelRepeat();\n            handleTouchHotkeys(event);\n        });\n        body.addEventListener('touchcancel', cancelRepeat);\n    }\n\n    /* Toggles */\n    for (let i = 0; i < globalSaveStart.toggles.length; i++) {\n        getId(`globalToggle${i}`).addEventListener('click', () => {\n            toggleSpecial(i, 'global', true, i === 1 || i === 3);\n            if (i === 0) {\n                assignHotkeys();\n                const index = globalSave.toggles[0] ? 0 : 1;\n                for (const key in globalSaveStart.hotkeys) {\n                    const hotkeyTest = globalSave.hotkeys[key as hotkeysList][index];\n                    getQuery(`#${key}Hotkey > button`).textContent = hotkeyTest == null || hotkeyTest === '' ? 'None' : hotkeyTest;\n                }\n            } else if (i === 2) {\n                body.classList[globalSave.toggles[2] ? 'remove' : 'add']('noTextSelection');\n            }\n        });\n    }\n    for (let i = 0; i < playerStart.toggles.normal.length; i++) {\n        getId(`toggleNormal${i}`).addEventListener('click', () => toggleSwap(i, 'normal', true));\n    }\n    for (let i = 0; i < playerStart.toggles.confirm.length; i++) {\n        getId(`toggleConfirm${i}`).addEventListener('click', () => toggleConfirm(i, true));\n    }\n    for (let i = 0; i < specialHTML.longestBuilding; i++) {\n        getId(`toggleBuilding${i}`).addEventListener('click', () => toggleSwap(i, 'buildings', true));\n    }\n    for (let i = 0; i < playerStart.toggles.hover.length; i++) {\n        getId(`toggleHover${i}`).addEventListener('click', () => toggleSwap(i, 'hover', true));\n    }\n    for (let i = 0; i < playerStart.toggles.max.length; i++) {\n        getId(`toggleMax${i}`).addEventListener('click', () => toggleSwap(i, 'max', true));\n    }\n    for (let i = 0; i < playerStart.toggles.auto.length; i++) {\n        getId(`toggleAuto${i}`).addEventListener('click', () => {\n            toggleSwap(i, 'auto', true);\n            if (i === 5) {\n                for (let s = 1; s <= 6; s++) { autoUpgradesSet(s); }\n            } else if (i === 6) {\n                for (let s = 1; s <= 6; s++) { autoResearchesSet('researches', s); }\n            } else if (i === 7) {\n                for (let s = 1; s <= 6; s++) { autoResearchesSet('researchesExtra', s); }\n            } else if (i === 8) {\n                autoElementsSet();\n            }\n        });\n    }\n\n    /* Stage tab */\n    {\n        const clickHoldFunc = () => {\n            if (player.inflation.vacuum || player.stage.active >= 4) { return; }\n            void stageResetUser();\n        };\n        const stageButton = getId('stageReset');\n        stageButton.addEventListener('click', stageResetUser);\n        if (PC) { stageButton.addEventListener('mousedown', () => repeatFunction(clickHoldFunc)); }\n        if (MD) {\n            stageButton.addEventListener('touchstart', () => repeatFunction(clickHoldFunc));\n            const footerButton = getId('stageFooter');\n            footerButton.addEventListener('click', stageResetUser);\n            footerButton.addEventListener('touchstart', () => repeatFunction(clickHoldFunc));\n            if (PC) { footerButton.addEventListener('mousedown', () => repeatFunction(clickHoldFunc)); }\n        }\n    }\n    {\n        const clickFunc = () => {\n            const active = player.stage.active;\n            if (active === 1) {\n                void dischargeResetUser();\n            } else if (active === 2) {\n                void vaporizationResetUser();\n            } else if (active === 3) {\n                void rankResetUser();\n            } else if (active === 4) {\n                void collapseResetUser();\n            } else if (active === 5) {\n                void mergeResetUser();\n            }\n        };\n        const clickHoldFunc = () => {\n            if (player.stage.active !== 1 && player.stage.active !== 3) { return; }\n            clickFunc();\n        };\n        const resetButton = getId('reset1Button');\n        resetButton.addEventListener('click', clickFunc);\n        if (PC) { resetButton.addEventListener('mousedown', () => repeatFunction(clickHoldFunc)); }\n        if (MD) {\n            resetButton.addEventListener('touchstart', () => repeatFunction(clickHoldFunc));\n            const footerButton = getId('reset1Footer');\n            footerButton.addEventListener('click', clickFunc);\n            footerButton.addEventListener('touchstart', () => repeatFunction(clickHoldFunc));\n            if (PC) { footerButton.addEventListener('mousedown', () => repeatFunction(clickHoldFunc)); }\n            getId('resetCollapseFooter').addEventListener('click', collapseResetUser);\n\n            const clickGalaxy = () => buyBuilding(3, 5);\n            const galaxyButton = getId('resetGalaxyFooter');\n            galaxyButton.addEventListener('click', clickGalaxy);\n            galaxyButton.addEventListener('touchstart', () => repeatFunction(clickGalaxy));\n            if (PC) { galaxyButton.addEventListener('mousedown', () => repeatFunction(clickGalaxy)); }\n        }\n    }\n    const getMakeCount = () => global.hotkeys.shift ? (global.hotkeys.ctrl ? 100 : 1) : global.hotkeys.ctrl ? 10 : undefined;\n    for (let i = 1; i < specialHTML.longestBuilding; i++) {\n        const button = getId(`building${i}Btn`);\n        const clickFunc = () => buyBuilding(i, player.stage.active, getMakeCount());\n        button.addEventListener('click', clickFunc);\n        if (PC) { button.addEventListener('mousedown', () => repeatFunction(clickFunc)); }\n        if (MD) { button.addEventListener('touchstart', () => repeatFunction(clickFunc)); }\n    }\n    {\n        const button = getId('makeAllStructures');\n        button.addEventListener('click', buyAll);\n        if (PC) { button.addEventListener('mousedown', () => repeatFunction(buyAll)); }\n        if (MD) {\n            button.addEventListener('touchstart', () => repeatFunction(buyAll));\n            const footer = getId('structuresFooter');\n            footer.addEventListener('click', buyAll);\n            footer.addEventListener('touchstart', () => repeatFunction(buyAll));\n            if (PC) { footer.addEventListener('mousedown', () => repeatFunction(buyAll)); }\n        }\n    }\n    getId('buyAnyInput').addEventListener('change', () => {\n        const input = getId('buyAnyInput') as HTMLInputElement;\n        player.toggles.shop.input = Math.max(Math.trunc(Number(input.value)), 0);\n        input.value = format(player.toggles.shop.input, { type: 'input' });\n        numbersUpdate();\n    });\n    getId('autoWaitInput').addEventListener('change', () => {\n        if (global.offline.active) { return; }\n        const input = getId('autoWaitInput') as HTMLInputElement;\n        let value = Math.max(Number(input.value), 1);\n        if (isNaN(value)) { value = 2; }\n        player.toggles.shop.wait[player.stage.active] = value;\n        input.value = format(value, { type: 'input' });\n    });\n\n    for (let i = 0; i < global.challengesInfo.length; i++) {\n        const image = getId(`challenge${i + 1}`);\n        if (!MD) { image.addEventListener('mouseover', () => hoverChallenge(i)); }\n        image.addEventListener('click', () => { global.lastChallenge[0] === i ? enterExitChallengeUser(i) : hoverChallenge(i); });\n    }\n    getId('challengeName').addEventListener('click', () => { toggleSupervoid(true); });\n    getId('rewardsType').addEventListener('click', () => {\n        changeRewardType();\n        getChallengeReward(global.lastChallenge[1]);\n    });\n    for (let s = 1; s <= 5; s++) {\n        const image = getId(`voidReward${s}`);\n        const clickFunc = () => {\n            global.lastChallenge[1] = s;\n            getChallengeReward(s);\n        };\n        image.addEventListener('mouseover', clickFunc);\n        if (PC || SR) {\n            image.addEventListener('focus', () => {\n                if (!global.hotkeys.tab) { return; }\n                clickFunc();\n            });\n        }\n    }\n\n    /* Upgrade tab */\n    for (let i = 0; i < specialHTML.longestUpgrade; i++) {\n        const image = getId(`upgrade${i + 1}`);\n        const hoverFunc = () => hoverUpgrades(i, 'upgrades');\n        if (PC) { image.addEventListener('mouseover', hoverFunc); }\n        if (MD) {\n            image.addEventListener('touchstart', () => repeatFunction(hoverFunc, true));\n        } else {\n            const clickFunc = () => buyUpgrades(i, player.stage.active, 'upgrades');\n            image.addEventListener('click', clickFunc);\n            image.addEventListener('mousedown', () => repeatFunction(clickFunc));\n        }\n        if (PC || SR) {\n            image.addEventListener('focus', () => {\n                if (!global.hotkeys.tab) { return; }\n                hoverFunc();\n            });\n        }\n    }\n    for (let i = 0; i < specialHTML.longestResearch; i++) {\n        const image = getId(`research${i + 1}Image`);\n        const hoverFunc = () => hoverUpgrades(i, 'researches');\n        if (PC) { image.addEventListener('mouseover', hoverFunc); }\n        if (MD) {\n            image.addEventListener('touchstart', () => repeatFunction(hoverFunc, true));\n        } else {\n            const clickFunc = () => buyUpgrades(i, player.stage.active, 'researches');\n            image.addEventListener('click', clickFunc);\n            image.addEventListener('mousedown', () => repeatFunction(clickFunc));\n        }\n        if (PC || SR) {\n            image.addEventListener('focus', () => {\n                if (!global.hotkeys.tab) { return; }\n                hoverFunc();\n            });\n        }\n    }\n    for (let i = 0; i < specialHTML.longestResearchExtra; i++) {\n        const image = getId(`researchExtra${i + 1}Image`);\n        const hoverFunc = () => hoverUpgrades(i, 'researchesExtra');\n        if (PC) { image.addEventListener('mouseover', hoverFunc); }\n        if (MD) {\n            image.addEventListener('touchstart', () => repeatFunction(hoverFunc, true));\n        } else {\n            const clickFunc = () => buyUpgrades(i, player.stage.active, 'researchesExtra');\n            image.addEventListener('click', clickFunc);\n            image.addEventListener('mousedown', () => repeatFunction(clickFunc));\n        }\n        if (PC || SR) {\n            image.addEventListener('focus', () => {\n                if (!global.hotkeys.tab) { return; }\n                hoverFunc();\n            });\n        }\n    }\n    for (let i = 0; i < playerStart.researchesAuto.length; i++) {\n        const image = getId(`researchAuto${i + 1}Image`);\n        const hoverFunc = () => hoverUpgrades(i, 'researchesAuto');\n        if (PC) { image.addEventListener('mouseover', hoverFunc); }\n        if (MD) {\n            image.addEventListener('touchstart', () => repeatFunction(hoverFunc, true));\n        } else {\n            const clickFunc = () => buyUpgrades(i, player.stage.active, 'researchesAuto');\n            image.addEventListener('click', () => {\n                if (handleAutoSwitch(i)) { return; }\n                clickFunc();\n            });\n            image.addEventListener('mousedown', () => repeatFunction(clickFunc));\n        }\n        if (PC || SR) {\n            image.addEventListener('focus', () => {\n                if (!global.hotkeys.tab) { return; }\n                hoverFunc();\n            });\n        }\n    }\n    {\n        const image = getId('ASRImage');\n        const hoverFunc = () => hoverUpgrades(0, 'ASR');\n        if (PC) { image.addEventListener('mouseover', hoverFunc); }\n        if (MD) {\n            image.addEventListener('touchstart', () => repeatFunction(hoverFunc, true));\n        } else {\n            const clickFunc = () => buyUpgrades(0, player.stage.active, 'ASR');\n            image.addEventListener('click', clickFunc);\n            image.addEventListener('mousedown', () => repeatFunction(clickFunc));\n        }\n        if (PC || SR) {\n            image.addEventListener('focus', () => {\n                if (!global.hotkeys.tab) { return; }\n                hoverFunc();\n            });\n        }\n    }\n    if (MD) {\n        const button = getId('upgradeCreate');\n        const clickFunc = () => {\n            const active = player.stage.active;\n            const last = global.lastUpgrade[active];\n            if (last[0] !== null) {\n                if (handleAutoSwitch(last[0], last[1])) { return; }\n                buyUpgrades(last[0], active, last[1]);\n            }\n        };\n        button.addEventListener('click', clickFunc);\n        button.addEventListener('touchstart', () => repeatFunction(clickFunc));\n        if (PC) { button.addEventListener('mousedown', () => repeatFunction(clickFunc)); }\n    }\n\n    {\n        const button = getId('element0');\n        const dblclickFunc = () => {\n            global.lastElement = 0;\n            getUpgradeDescription(0, 'elements');\n        };\n        if (SR) {\n            getId('element1').addEventListener('keydown', (event) => {\n                if (event.code !== 'Tab' || !event.shiftKey || event.metaKey || event.ctrlKey || event.altKey) { return; }\n                const element = getId('element0');\n                element.tabIndex = 0;\n                element.ariaHidden = 'false';\n            });\n            button.addEventListener('keydown', (event) => {\n                if (event.code === 'Enter' && !event.metaKey && !event.ctrlKey && !event.shiftKey && !event.altKey) { dblclickFunc(); }\n            });\n            button.addEventListener('blur', () => {\n                const element = getId('element0');\n                element.tabIndex = -1;\n                element.ariaHidden = 'true';\n            });\n        }\n        if (PC) { button.addEventListener('dblclick', dblclickFunc); }\n        if (MD) {\n            button.addEventListener('touchstart', () => {\n                if (global.intervalsId.mouseRepeat !== undefined) { return; }\n                global.intervalsId.mouseRepeat = setTimeout(dblclickFunc, 3000);\n            });\n        }\n    }\n    for (let i = 1; i < playerStart.elements.length; i++) {\n        const image = getId(`element${i}`);\n        const clickFunc = () => buyUpgrades(i, 4, 'elements');\n        const hoverFunc = () => hoverUpgrades(i, 'elements');\n        if (PC) {\n            image.addEventListener('mouseover', hoverFunc);\n            image.addEventListener('mousedown', () => repeatFunction(clickFunc));\n        }\n        if (MD) {\n            image.addEventListener('touchstart', () => {\n                hoverFunc();\n                repeatFunction(clickFunc);\n            });\n        }\n        if (PC || SR) {\n            image.addEventListener('focus', () => {\n                if (!global.hotkeys.tab) { return; }\n                hoverFunc();\n            });\n        }\n        if (!MD || SR) { image.addEventListener('click', clickFunc); }\n    }\n\n    /* Strangeness tab */\n    for (let i = 0; i < 2; i++) {\n        const strange = getId(`strange${i}`);\n        const openFunction = () => {\n            if (i === 0 && player.stage.true < 6 && player.milestones[4][0] < 8) { return; }\n            getId(`strange${i}EffectsMain`).style.display = '';\n            numbersUpdate();\n        };\n        const closeFunc = () => (getId(`strange${i}EffectsMain`).style.display = 'none');\n        strange.addEventListener('click', openFunction, { capture: true }); //Clicking on window does unnessary call, before closing\n        if (PC || SR) {\n            strange.addEventListener('focus', () => {\n                if (!global.hotkeys.tab) { return; }\n                openFunction();\n            });\n        }\n        strange.addEventListener('blur', closeFunc);\n        getId(`strange${i}EffectsMain`).addEventListener('click', closeFunc);\n    }\n    for (let s = 1; s < playerStart.strangeness.length; s++) {\n        if (MD) { getId(`strangenessPage${s}`).addEventListener('click', () => MDStrangenessPage(s)); }\n        for (let i = 0; i < playerStart.strangeness[s].length; i++) {\n            const image = getId(`strange${i + 1}Stage${s}Image`);\n            const hoverFunc = () => hoverStrangeness(i, s, 'strangeness');\n            if (PC) { image.addEventListener('mouseover', hoverFunc); }\n            if (MD) {\n                image.addEventListener('touchstart', () => { /*repeatFunction(*/hoverFunc(); /*, true);*/ });\n            } else {\n                const clickFunc = () => buyStrangeness(i, s, 'strangeness');\n                image.addEventListener('click', clickFunc);\n                image.addEventListener('mousedown', () => repeatFunction(clickFunc));\n            }\n            if (PC || SR) {\n                image.addEventListener('focus', () => {\n                    if (!global.hotkeys.tab) { return; }\n                    hoverFunc();\n                });\n            }\n        }\n    }\n    if (MD) {\n        const button = getId('strangenessCreate');\n        const clickFunc = () => {\n            const last = global.lastStrangeness;\n            if (last[0] !== null) { buyStrangeness(last[0], last[1], 'strangeness'); }\n        };\n        button.addEventListener('click', clickFunc);\n        button.addEventListener('touchstart', () => repeatFunction(clickFunc));\n        if (PC) { button.addEventListener('mousedown', () => repeatFunction(clickFunc)); }\n    }\n    getId('strangenessVisibility').addEventListener('click', () => {\n        global.sessionToggles[1] = !global.sessionToggles[1];\n        getId('strangenessVisibility').textContent = `Permanent ones are ${global.sessionToggles[1] ? 'shown' : 'hidden'}`;\n        visualUpdate();\n    });\n\n    for (let s = 1; s < playerStart.milestones.length; s++) {\n        for (let i = 0; i < playerStart.milestones[s].length; i++) {\n            const image = getQuery(`#milestone${i + 1}Stage${s}Div > img`);\n            const hoverFunc = () => hoverStrangeness(i, s, 'milestones');\n            if (PC) { image.addEventListener('mouseover', hoverFunc); }\n            if (MD) { image.addEventListener('touchstart', hoverFunc); }\n            if (PC || SR) {\n                image.addEventListener('focus', () => {\n                    if (!global.hotkeys.tab) { return; }\n                    hoverFunc();\n                });\n            }\n        }\n    }\n\n    /* Inflation tab */\n    for (let i = 0; i < playerStart.inflation.tree.length; i++) {\n        const image = getId(`inflation${i + 1}Image`);\n        const hoverFunc = () => hoverUpgrades(i, 'inflation');\n        if (PC) { image.addEventListener('mouseover', hoverFunc); }\n        if (MD) {\n            image.addEventListener('touchstart', () => { /*repeatFunction(*/hoverFunc(); /*, true);*/ });\n        } else {\n            const clickFunc = () => buyStrangeness(i, 0, 'inflations');\n            image.addEventListener('click', clickFunc);\n            image.addEventListener('mousedown', () => repeatFunction(clickFunc));\n        }\n        if (PC || SR) {\n            image.addEventListener('focus', () => {\n                if (!global.hotkeys.tab) { return; }\n                hoverFunc();\n            });\n        }\n    }\n    getId('inflationRefund').addEventListener('click', inflationRefund);\n    if (MD) {\n        const button = getId('inflationActivate');\n        const clickFunc = () => {\n            if (global.lastInflation !== null) { buyStrangeness(global.lastInflation, 0, 'inflations'); }\n        };\n        button.addEventListener('click', clickFunc);\n        button.addEventListener('touchstart', () => repeatFunction(clickFunc));\n        if (PC) { button.addEventListener('mousedown', () => repeatFunction(clickFunc)); }\n    }\n\n    /* Settings tab */\n    getId('vaporizationInput').addEventListener('change', () => {\n        if (global.offline.active) { return; }\n        const input = getId('vaporizationInput') as HTMLInputElement;\n        player.vaporization.input[0] = Math.max(Number(input.value), 0);\n        input.value = format(player.vaporization.input[0], { type: 'input' });\n    });\n    getId('vaporizationInputMax').addEventListener('change', () => {\n        if (global.offline.active) { return; }\n        const input = getId('vaporizationInputMax') as HTMLInputElement;\n        player.vaporization.input[1] = Math.max(Number(input.value), 0);\n        input.value = format(player.vaporization.input[1], { type: 'input' });\n    });\n    getId('collapseInput').addEventListener('change', () => {\n        if (global.offline.active) { return; }\n        const input = getId('collapseInput') as HTMLInputElement;\n        player.collapse.input[0] = Math.max(Number(input.value), 1);\n        input.value = format(player.collapse.input[0], { type: 'input' });\n    });\n    getId('collapseInputWait').addEventListener('change', () => {\n        if (global.offline.active) { return; }\n        const input = getId('collapseInputWait') as HTMLInputElement;\n        player.collapse.input[1] = Number(input.value);\n        input.value = format(player.collapse.input[1], { type: 'input' });\n    });\n    getId('collapseAddNewPoint').addEventListener('change', () => {\n        if (global.offline.active) { return; }\n        const input = getId('collapseAddNewPoint') as HTMLInputElement;\n        const value = Number(input.value);\n        const points = player.collapse.points;\n        if (isFinite(value)) {\n            if (value === 0) {\n                points.length = 0;\n            } else if (value > 0) {\n                if (!points.includes(value)) {\n                    points.push(value);\n                    points.sort((a, b) => a - b);\n                }\n            } else {\n                const index = points.indexOf(Math.abs(value));\n                if (index >= 0) {\n                    points.splice(index, 1);\n                    points.sort((a, b) => a - b);\n                }\n            }\n        }\n        input.value = '';\n        global.collapseInfo.pointsLoop = 0;\n        updateCollapsePointsText();\n    });\n    getId('mergeInput').addEventListener('change', () => {\n        if (global.offline.active) { return; }\n        const input = getId('mergeInput') as HTMLInputElement;\n        player.merge.input = Math.max(Number(input.value), 0);\n        input.value = format(player.merge.input, { type: 'input' });\n    });\n    getId('stageInput').addEventListener('change', () => {\n        if (global.offline.active) { return; }\n        const input = getId('stageInput') as HTMLInputElement;\n        player.stage.input[0] = Math.max(Number(input.value), 0);\n        input.value = format(player.stage.input[0], { type: 'input' });\n    });\n    getId('stageInputTime').addEventListener('change', () => {\n        if (global.offline.active) { return; }\n        const input = getId('stageInputTime') as HTMLInputElement;\n        player.stage.input[1] = Math.max(Number(input.value), 0);\n        input.value = format(player.stage.input[1], { type: 'input' });\n    });\n    getId('versionButton').addEventListener('click', getVersionInfoHTML);\n    getId('hotkeysButton').addEventListener('click', getHotkeysHTML);\n    getId('save').addEventListener('click', () => { saveGame(); });\n    getId('file').addEventListener('change', async() => {\n        const id = getId('file') as HTMLInputElement;\n        try {\n            loadGame(await (id.files as FileList)[0].text());\n        } finally { id.value = ''; }\n    });\n    getId('export').addEventListener('click', exportFileGame);\n    getId('saveConsole').addEventListener('click', saveConsole);\n    getId('switchTheme0').addEventListener('click', () => setTheme(null));\n    for (let i = 1; i < global.stageInfo.word.length; i++) {\n        getId(`switchTheme${i}`).addEventListener('click', () => setTheme(i));\n    }\n    getId('saveFileNameInput').addEventListener('change', () => {\n        const input = getId('saveFileNameInput') as HTMLInputElement;\n        const testValue = input.value;\n        if (testValue.length < 1) { return void (input.value = playerStart.fileName); }\n\n        try {\n            btoa(String.fromCharCode(...new TextEncoder().encode(testValue))); //Test for any illegal characters\n            player.fileName = testValue;\n        } catch (error) {\n            void Alert(`Save file name is not allowed\\n${error}`);\n        }\n    });\n    {\n        const button = getId('saveFileHoverButton');\n        const hoverFunc = () => (getId('saveFileNamePreview').textContent = replaceSaveFileSpecials());\n        button.addEventListener('mouseover', hoverFunc);\n        if (PC || SR) {\n            button.addEventListener('focus', () => {\n                if (!global.hotkeys.tab) { return; }\n                hoverFunc();\n            });\n        }\n    }\n    getId('mainInterval').addEventListener('change', () => {\n        const input = getId('mainInterval') as HTMLInputElement;\n        globalSave.intervals.main = Math.min(Math.max(Math.trunc(Number(input.value)), 20), 200);\n        if (globalSave.intervals.offline < globalSave.intervals.main * 2) {\n            globalSave.intervals.offline = globalSave.intervals.main * 2;\n            (getId('offlineInterval') as HTMLInputElement).value = `${globalSave.intervals.offline}`;\n        }\n        input.value = `${globalSave.intervals.main}`;\n        saveGlobalSettings();\n        changeIntervals();\n    });\n    getId('offlineInterval').addEventListener('change', () => {\n        const input = getId('offlineInterval') as HTMLInputElement;\n        globalSave.intervals.offline = Math.min(Math.max(Math.trunc(Number(input.value)), globalSave.intervals.main * 2), 6000);\n        input.value = `${globalSave.intervals.offline}`;\n        saveGlobalSettings();\n        changeIntervals();\n    });\n    getId('numbersInterval').addEventListener('change', () => {\n        const input = getId('numbersInterval') as HTMLInputElement;\n        globalSave.intervals.numbers = Math.min(Math.max(Math.trunc(Number(input.value)), 40), 200);\n        input.value = `${globalSave.intervals.numbers}`;\n        saveGlobalSettings();\n        changeIntervals();\n    });\n    getId('visualInterval').addEventListener('change', () => {\n        const input = getId('visualInterval') as HTMLInputElement;\n        globalSave.intervals.visual = Math.min(Math.max(Math.trunc(Number(input.value)), 200), 2000);\n        input.value = `${globalSave.intervals.visual}`;\n        saveGlobalSettings();\n        changeIntervals();\n    });\n    getId('autoSaveInterval').addEventListener('change', () => {\n        const input = getId('autoSaveInterval') as HTMLInputElement;\n        globalSave.intervals.autoSave = Math.min(Math.max(Math.trunc(Number(input.value)), 4), 1800) * 1000;\n        input.value = `${globalSave.intervals.autoSave / 1000}`;\n        saveGlobalSettings();\n        changeIntervals();\n    });\n    getId('thousandSeparator').addEventListener('change', () => changeFormat(false));\n    getId('decimalPoint').addEventListener('change', () => changeFormat(true));\n    getId('MDToggle0').addEventListener('click', () => toggleSpecial(0, 'mobile', true, true));\n    getId('SRToggle0').addEventListener('click', () => toggleSpecial(0, 'reader', true, true));\n    getId('pauseButton').addEventListener('click', pauseGameUser);\n    getId('reviewEvents').addEventListener('click', replayEvent);\n    getId('customFontSize').addEventListener('change', () => changeFontSize());\n\n    getId('stageHistorySave').addEventListener('change', () => {\n        const inputID = getId('stageHistorySave') as HTMLInputElement;\n        player.history.stage.input[0] = Math.min(Math.max(Math.trunc(Number(inputID.value)), 0), 100);\n        inputID.value = `${player.history.stage.input[0]}`;\n    });\n    getId('stageHistoryShow').addEventListener('change', () => {\n        const input = getId('stageHistoryShow') as HTMLInputElement;\n        player.history.stage.input[1] = Math.min(Math.max(Math.trunc(Number(input.value)), 10), 100);\n        input.value = `${player.history.stage.input[1]}`;\n        global.debug.historyStage = null;\n        visualUpdate();\n    });\n    getId('vacuumHistorySave').addEventListener('change', () => {\n        const inputID = getId('vacuumHistorySave') as HTMLInputElement;\n        player.history.vacuum.input[0] = Math.min(Math.max(Math.trunc(Number(inputID.value)), 0), 100);\n        inputID.value = `${player.history.vacuum.input[0]}`;\n    });\n    getId('vacuumHistoryShow').addEventListener('change', () => {\n        const input = getId('vacuumHistoryShow') as HTMLInputElement;\n        player.history.vacuum.input[1] = Math.min(Math.max(Math.trunc(Number(input.value)), 10), 100);\n        input.value = `${player.history.vacuum.input[1]}`;\n        global.debug.historyVacuum = null;\n        visualUpdate();\n    });\n\n    /* Footer */\n    if (!globalSave.toggles[3]) {\n        const toggle = getId('hideToggle');\n        if (MD) {\n            const timeoutFunc = () => {\n                if (!global.footer) { return hideFooter(); }\n                if (global.intervalsId.mouseRepeat !== undefined) { return; }\n                global.intervalsId.mouseRepeat = setTimeout(hideFooter, 400);\n            };\n            toggle.addEventListener('touchstart', timeoutFunc);\n            if (PC) { toggle.addEventListener('mousedown', timeoutFunc); }\n        } else { toggle.addEventListener('click', hideFooter); }\n    }\n    for (const tabText of global.tabList.tabs) {\n        getId(`${tabText}TabBtn`).addEventListener('click', () => switchTab(tabText));\n        for (const subtabText of global.tabList[`${tabText}Subtabs`]) {\n            getId(`${tabText}SubtabBtn${subtabText}`).addEventListener('click', () => switchTab(tabText, subtabText));\n        }\n    }\n    for (let i = 1; i < global.stageInfo.word.length; i++) {\n        getId(`stageSwitch${i}`).addEventListener('click', () => switchStage(i));\n    }\n\n    /* Post */\n    document.head.append(specialHTML.styleSheet);\n    stageUpdate();\n    if (globalSave.theme !== null) {\n        getId('currentTheme').textContent = global.stageInfo.word[globalSave.theme];\n        getId(`switchTheme${globalSave.theme}`).style.textDecoration = 'underline';\n        getId('switchTheme0').style.textDecoration = '';\n        setTheme();\n    }\n    if (save !== null) {\n        global.lastSave = handleOfflineTime();\n        Notify(`Welcome back, you were away for ${format(global.lastSave, { type: 'time', padding: false })}${oldVersion !== player.version ? `\\nGame has been updated from ${oldVersion} to ${player.version}` : ''}${globalSave.developerMode ?\n            `\\nGame loaded after ${format((Date.now() - playerStart.time.started) / 1000, { type: 'time', padding: false })}` : ''}\n        `);\n        void simulateOffline(global.lastSave);\n    } else {\n        pauseGame(false);\n    }\n    getId('body').style.display = '';\n    getId('loading').style.display = 'none';\n    document.title = `Fundamental ${playerStart.version}`;\n} catch (error) {\n    const stack = (error as { stack: string }).stack;\n    void Alert(`Game failed to load\\n${typeof stack === 'string' ? stack.replaceAll(`${window.location.origin}/`, '') : error}`, 2);\n    const buttonDiv = document.createElement('div');\n    buttonDiv.innerHTML = '<button type=\"button\" id=\"exportError\" style=\"width: 7em;\">Export save</button><button type=\"button\" id=\"deleteError\" style=\"width: 7em;\">Delete save</button>';\n    buttonDiv.style.cssText = 'display: flex; column-gap: 0.6em; margin-top: 0.4em;';\n    getId('loading').append(buttonDiv);\n    let exported = false;\n    getId('exportError').addEventListener('click', () => {\n        exported = true;\n        const save = localStorage.getItem(specialHTML.localStorage.main);\n        if (save === null) { return void Alert('No save file detected'); }\n        const a = document.createElement('a');\n        a.href = `data:text/plain,${save}`;\n        a.download = 'Fundamental post error export';\n        a.click();\n    });\n    getId('deleteError').addEventListener('click', async() => {\n        if (!exported && !await Confirm(\"Recommended to export save file first\\nPress 'Confirm' to confirm and delete your save file\")) { return; }\n        localStorage.removeItem(specialHTML.localStorage.main);\n        window.location.reload();\n        void Alert('Awaiting game reload');\n    });\n    throw error;\n}\n"],
  "mappings": "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",
  "names": ["checkTab", "tab", "subtab", "player", "global", "checkBuilding", "index", "stageIndex", "checkUpgrade", "upgrade", "type", "galaxy", "autoStage", "allowedToBeReset", "check", "milestoneGetValue", "stars", "Overlimit", "milestoneCheck", "pointer", "reset", "type", "stageIndex", "dischargeInfo", "global", "energyStage", "energyType", "buildings", "discharge", "player", "elements", "i", "playerStart", "allowedToBeReset", "visualUpdateUpgrades", "autoElementsSet", "energyRefund", "s", "building", "selfmade", "energy", "assignBuildingsProduction", "upgrades", "autoUpgradesSet", "researches", "visualUpdateResearches", "calculateResearchCost", "autoResearchesSet", "researchesExtra", "setRemnants", "deficit", "max", "assignResetInformation", "resetStage", "update", "full", "strangeness", "buildingResetValue", "cloneArray", "calculateMaxLevel", "switchTab", "checkTab", "stageUpdate", "active", "resetVacuum", "inflations", "assignMilestoneInformation", "start", "cloneBeforeReset", "depth", "clone", "loadFromClone", "buildingsClone", "trueStars", "prepareVacuum", "state", "buildings", "playerStart", "buildingsInfo", "upgradesInfo", "researchesInfo", "researchesExtraInfo", "strangenessInfo", "global", "star3ExpId", "getQuery", "milestone1S1", "milestone1S2", "milestone2S2", "milestone1S4", "upgrades1Cost", "researches1Cost", "researches1Scaling", "strangeness1Cost", "strangeness1Scaling", "strangeness2Cost", "strangeness2Scaling", "strangeness3Cost", "strangeness3Scaling", "strangeness4Cost", "strangeness4Scaling", "strangeness5Cost", "strangeness5Scaling", "specialHTML", "getId", "s", "i", "globalSave", "newValue", "switchVacuum", "player", "income", "visualTrueStageUnlocks", "playEvent", "history", "storage", "realTime", "setActiveStage", "resetVacuum", "timeUpdate", "tick", "timeWarp", "time", "player", "auto", "autoBuy", "maxActive", "global", "activeAll", "passedSeconds", "extraTime", "currentTime", "simulateOffline", "trueSeconds", "calculateEffects", "assignBuildingsProduction", "exitChallengeAuto", "stageResetCheck", "vacuum", "gainBuildings", "autoElementsBuy", "autoUpgradesBuy", "autoResearchesBuy", "i", "buyBuilding", "research", "awardMilestone", "collapseResetCheck", "mergeResetCheck", "assignResetInformation", "rankResetCheck", "vaporizationResetCheck", "dischargeResetCheck", "energy", "goals", "strangeness", "inflation", "scale", "scaling", "next", "base", "preons", "selfBoost", "effect", "level", "discharges", "laterPreons", "effectsCache", "post", "Overlimit", "puddles", "maxTrue", "power", "rain", "drops", "rank", "mass", "delay", "stars", "logAny", "blackHoles", "elements", "massGain", "multiplier", "disc", "levels", "transfer", "effective", "max", "groups", "interstellar", "type", "tree", "challenge", "speed", "noHardcap", "visual", "structure", "preonsExcess", "preonCap", "index", "b5", "reset", "info", "totalDrops", "buildings", "upgrades", "water5", "water4", "water3", "water2", "multiplierList", "excess", "producings", "structures", "flow", "producing6", "producing5", "producing4", "producing3", "researchesS3", "upgradesS3", "dustCap", "production", "globalMult", "multiplier2", "multiplier1", "stageBoost", "strangeQuarks", "information", "strangelets", "energyType", "s", "energyTrue", "add", "softcap", "effectS1", "firstCall", "starCheck", "building", "requirement", "stageIndex", "howMany", "checkBuilding", "currency", "free", "multi", "special", "budget", "total", "calculateBuildingsCost", "afford", "addEnergy", "numbersUpdate", "globalSave", "getId", "format", "calculateMaxLevel", "awardVoidReward", "visualTrueStageUnlocks", "setActiveStage", "realTime", "income", "prepareVacuum", "resetVacuum", "history", "storage", "increase", "stage", "discharge", "dischargeInfo", "firstCost", "get", "stageGet", "Notify", "gainStrange", "strange", "buyUpgrades", "upgrade", "checkUpgrade", "pointer", "cost", "switchTab", "newLevels", "simplify", "autoResearchesAddOne", "update", "stageUpdate", "setRemnants", "playerStart", "old", "visualUpdateUpgrades", "calculateResearchCost", "visualUpdateResearches", "buyStrangeness", "maxLevel", "newLevel", "assignChallengeInformation", "assignMilestoneInformation", "inflationRefund", "Confirm", "challengeReset", "stageFullReset", "refundable", "addAuto", "autoUpgradesSet", "which", "array", "startCost", "a", "b", "compareFunc", "autoResearchesSet", "bought", "autoElementsSet", "toggleSwap", "number", "change", "toggles", "maxLength", "anyOn", "extraText", "toggleHTML", "toggleConfirm", "quarks", "allowedChallenge", "peakCheck", "stageResetReward", "unlimitedTime", "stageResetUser", "active", "universeCost", "maxResets", "galaxyCost", "message", "fullReset", "resetThese", "playEvent", "check", "exportReward", "resetStage", "current", "switchStage", "visualUpdate", "dischargeReset", "dischargeResetUser", "noReset", "clouds", "vaporizationReset", "vaporization", "rainNow", "rainAfter", "storm", "vaporizationResetUser", "autoClouds", "rankReset", "rankResetUser", "remnants", "collapse", "collapseReset", "point", "massBoost", "calculateStar", "starProd", "restProd", "collapseResetUser", "unlockedG", "cantAffordG", "newStars", "newMass", "count", "collapseInfo", "galaxies", "mergeReset", "mergeResetUser", "checkReward", "switchVacuum", "percentage", "milestoneCheck", "toggleSupervoid", "changeRewardType", "progress", "totalProgress", "pointer2", "enterExitChallengeUser", "resetType", "cloneBeforeReset", "loadFromClone", "switchTab", "tab", "subtab", "oldTab", "global", "getId", "inside", "subtabAmount", "checkTab", "globalSave", "oldSubtab", "active", "player", "setActiveStage", "stageUpdate", "visualUpdate", "numbersUpdate", "buildings", "vacuum", "challenge", "noTime", "s", "info", "maxTime", "i", "Notify", "format", "stars", "Overlimit", "buildingsInfo", "producing", "howMany", "speed", "assignBuildingsProduction", "trueCountID", "lockText", "costName", "currency", "free", "multi", "e", "extra", "buy", "cost", "calculateBuildingsCost", "scaling", "dischargeInfo", "calculateEffects", "getQuery", "effectsCache", "preonCap", "rainNow", "rainAfter", "storm", "dustCap", "collapseInfo", "calculateStar", "starEffect", "starProd", "total", "restProd", "groupsCost", "assignResetInformation", "mergeEffects", "remaining", "stageResetCheck", "last", "getChallengeDescription", "getChallengeReward", "trueSubtab", "getUpgradeDescription", "interstellar", "quarksGain", "information", "stageBoost", "strangeness", "getStrangenessDescription", "time", "timeLimited", "milestoneGetValue", "exportReward", "conversion", "energyType", "clouds", "rain", "auto2", "mass", "star0", "star1", "star2", "gamma", "quasar", "base", "reward1", "highest", "playEvent", "showReset1", "ASR", "upgrades", "updateRankInfo", "nova", "progress", "superposition", "rank", "planetesimal", "galaxy", "protogalaxy", "nebula", "cluster", "neutron", "columns", "universes", "show1", "show2", "show3", "bound", "voidProgress", "milestones", "strange5", "firstTwo", "milestonesS4", "supervoid", "researchesAuto", "showAuto2", "showAuto4", "showAuto5", "hotkeyTest", "updateStageHistory", "updateVacuumHistory", "anyUnlocked", "unlocked", "visualTrueStageUnlocks", "index", "type", "pointer", "level", "stageIndex", "newLevels", "simplify", "autoStage", "stageText", "text", "isActive", "multilineID", "specialHTML", "container", "nameID", "gain", "reward", "current", "best", "failText", "visualUpdateUpgrades", "color", "image", "visualUpdateResearches", "max", "upgradeHTML", "rankInfo", "name", "setRemnants", "whiteDwarf", "quarkStar", "text2", "list", "length", "input", "settings", "padding", "inputAbs", "minutes", "seconds", "hours", "days", "years", "digits", "precision", "result", "formated", "resultAbs", "changed", "offline", "stageInfo", "activeAll", "element", "getClass", "stageWord", "currentID", "showAll", "extraText", "SRHotkeysInfo", "upgradesInfo", "researchesInfo", "researchesExtraInfo", "footerStatsHTML", "showU", "showR", "showRE", "showF", "buildingHTML", "buildingName", "buildingType", "buildingHoverText", "toggleSwap", "researchHTML", "main", "researchExtraHTML", "extraImgId", "body", "setTheme", "hotkeys", "hotkeyFunction", "buyAll", "event", "player", "stageResetUser", "dischargeResetUser", "vaporizationResetUser", "rankResetUser", "collapseResetUser", "buyBuilding", "pauseGameUser", "toggleSwap", "mergeResetUser", "enterExitChallengeUser", "changeTab", "changeSubtab", "changeStage", "assignHotkeys", "key", "index", "globalSave", "hotkey", "SRHotkeysInfo", "removeHotkey", "remove", "test", "detectHotkey", "check", "shiftKey", "code", "global", "activeType", "specialHTML", "notification", "numberKey", "name", "functionTest", "direction", "tabs", "checkTab", "switchTab", "tab", "subtabs", "activeAll", "switchStage", "handleTouchHotkeys", "touches", "mainHTML", "horizontal", "vertical", "globalSave", "saveGlobalSettings", "noSaving", "hotkeysClone", "deepClone", "encoder", "key", "array", "i", "clone", "save", "specialHTML", "toggleSpecial", "number", "type", "change", "reload", "toggles", "Confirm", "pauseGame", "Alert", "toggleHTML", "getId", "preventImageUnload", "footer", "build", "upgrade", "research", "extra", "extraDiv", "images", "s", "setTheme", "theme", "player", "global", "upgradeTypes", "properties", "text", "body", "property", "priority", "resolve", "Notify", "blocker", "confirm", "oldFocus", "event", "code", "close", "cancel", "result", "yes", "Prompt", "placeholder", "input", "active", "repeats", "notifications", "index", "count", "timeout", "html", "pointer", "instantClose", "remove", "hideFooter", "toggleData", "footerArea", "arrow", "animationReset", "getQuery", "visualUpdate", "numbersUpdate", "changeFontSize", "initial", "size", "adjustCSSRules", "styleSheet", "styleLength", "fontRatio", "rule1", "rule2", "changeFormat", "point", "htmlInput", "value", "SRHotkeysInfo", "short", "resetName", "resetHotkey", "list", "reset1Id", "MDStrangenessPage", "stageIndex", "replayEvent", "last", "playEvent", "replay", "format", "assignResetInformation", "stageUpdate", "buildBigWindow", "getVersionInfoHTML", "mainHTML", "closeButton", "windowHMTL", "getHotkeysHTML", "toggle", "changeHotkey", "disableFirstUp", "prevent", "finish", "detect", "prefix", "globalSaveStart", "button", "hotkeyTest", "newHotkey", "removed", "removeHotkey", "assignHotkeys", "visualTrueStageUnlocks", "Overlimit", "_Overlimit", "number", "post", "technical", "left", "right", "newValue", "#privateSet", "numbers", "result", "i", "power", "root", "base", "replaceWith", "compare", "previous", "next", "after", "settings", "index", "digits", "check", "difference", "negative", "base10", "target", "tooSmall", "test", "type", "padding", "exponent", "inputBase", "mantissa", "formated", "globalSave", "powerCheck", "ending", "compareFunc", "player", "Overlimit", "global", "format", "calculateEffects", "effectsCache", "softcap", "newBase", "power", "effect", "logAny", "base", "now", "after", "energy", "maxLevel", "trueLevel", "penalty", "level", "index", "stageIndex", "unlocked", "improved", "extraText", "assignBuildingsProduction", "passive", "upgrades", "progress", "text", "number", "cloneArray", "array", "deepClone", "toClone", "value", "i", "check", "createArray", "length", "s", "startCost", "upgradeType", "pointer", "playerStart", "updatePlayer", "load", "prepareVacuum", "oldVersion", "e", "vacuumHistory", "vacuumList", "test", "minus", "clone", "c", "building", "buildings", "assignMilestoneInformation", "strangeness", "strangenessMax", "calculateMaxLevel", "visualUpdateResearches", "extra", "extraMax", "researches", "researchesMax", "autoUpgradesSet", "autoResearchesSet", "getId", "autoElementsSet", "toggleSupervoid", "assignResetInformation", "switchTab", "visualTrueStageUnlocks", "visualUpdateUpgrades", "toggleSwap", "toggleConfirm", "updateCollapsePointsText", "getId", "id", "noError", "test", "specialHTML", "store", "global", "Notify", "getClass", "idCollection", "getQuery", "query", "handleOfflineTime", "timeNow", "offlineTime", "player", "simulateOffline", "offline", "pauseGame", "decline", "Confirm", "format", "globalSave", "extra", "timeUpdate", "offlineEnd", "accelerate", "offlineAccelerate", "offlineCancel", "offlineKey", "calculateOffline", "warpTime", "start", "rate", "time", "error", "stack", "Alert", "early", "stageUpdate", "visualUpdate", "numbersUpdate", "event", "code", "cancel", "changeIntervals", "intervalsId", "intervals", "paused", "saveGame", "pause", "button", "pauseGameUser", "noSaving", "clone", "save", "loadGame", "versionCheck", "updatePlayer", "prepareVacuum", "exportFileGame", "awardExport", "a", "replaceSaveFileSpecials", "exportReward", "strange", "conversion", "quarks", "strangelets", "assignBuildingsProduction", "saveConsole", "value", "Prompt", "lower", "saveGlobalSettings", "realName", "date", "dateIndex", "endIndex", "replaced", "special", "replaceWith", "i", "timeIndex", "repeatFunction", "repeat", "onceInstanly", "cancelRepeat", "hoverUpgrades", "index", "type", "buyUpgrades", "getUpgradeDescription", "hoverStrangeness", "stageIndex", "getStrangenessDescription", "hoverChallenge", "getChallengeDescription", "getChallengeReward", "changeRewardType", "state", "handleAutoSwitch", "checkUpgrade", "autoStage", "switchStage", "buyAll", "active", "buyBuilding", "updateCollapsePointsText", "array", "points", "globalSaveStart", "deepClone", "preventImageUnload", "body", "globalSettings", "decoder", "key", "c", "cloneArray", "toggleSpecial", "changeFontSize", "elementsArea", "elementsButton", "tabList", "arrowStage", "arrowReset1", "structuresButton", "stageButton", "reset1Button", "resetCollapse", "resetGalaxy", "createUpgButton", "createInfButton", "pages", "mainLi", "MDToggle1", "refreshButton", "MDStrangenessPage", "message", "effectID", "SRMainDiv", "SRToggle1", "SRToggle2", "visualUpdateUpgrades", "visualUpdateResearches", "playerStart", "s", "primaryIndex", "reload", "newTab", "tabText", "subtabText", "list", "oldVersion", "assignHotkeys", "MD", "SR", "PC", "releaseHotkey", "activeType", "detectHotkey", "handleTouchHotkeys", "hotkeyTest", "toggleSwap", "toggleConfirm", "autoUpgradesSet", "autoResearchesSet", "autoElementsSet", "clickHoldFunc", "stageResetUser", "footerButton", "clickFunc", "dischargeResetUser", "vaporizationResetUser", "rankResetUser", "collapseResetUser", "mergeResetUser", "resetButton", "clickGalaxy", "galaxyButton", "getMakeCount", "footer", "input", "image", "enterExitChallengeUser", "toggleSupervoid", "hoverFunc", "last", "dblclickFunc", "element", "openFunction", "closeFunc", "buyStrangeness", "inflationRefund", "b", "getVersionInfoHTML", "getHotkeysHTML", "setTheme", "testValue", "changeFormat", "replayEvent", "inputID", "toggle", "timeoutFunc", "hideFooter", "switchTab", "buttonDiv", "exported"]
}
