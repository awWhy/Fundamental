{
  "version": 3,
  "sources": ["Source_TS/Limit.ts", "Source_TS/Check.ts", "Source_TS/Reset.ts", "Source_TS/Stage.ts", "Source_TS/Special.ts", "Source_TS/Vacuum.ts", "Source_TS/Update.ts", "Source_TS/Player.ts", "Source_TS/Hotkeys.ts", "Source_TS/Main.ts"],
  "sourcesContent": ["import { player } from './Player';\n/* Some JS rules are altered:\n    '-+1 ** Infinity', '1 ** NaN' now returns 1 instead of NaN\n    '0 ** 0', 'Infinity ** 0', 'NaN ** 0' now retuns NaN instead of 1\n    '0 * Infinity', '0 * NaN' now returns 0 instead of NaN\n    'Infinity / 0' now returns NaN instead of Infinity\n    '0 / NaN' now returns 0 instead of NaN\n    'NaN ** (-Infinity)' now returns 0 instead of NaN (I allow X ** (-Infinity) to be 0 because floating points)\n*/\n\n/* This is version has all settings (and other stuff) removed (for better speed) */\nexport const overlimit = {\n    Limit: (number: string | number | [number, number]) => {\n        const { technical } = overlimit;\n        let result = technical.convert(number);\n\n        return {\n            plus: function(...numbers: Array<string | number | [number, number]>) {\n                const array = technical.convertAll(numbers);\n\n                for (let i = 0; i < array.length; i++) {\n                    result = technical.add(result, array[i]);\n                }\n\n                return this;\n            },\n            minus: function(...numbers: Array<string | number | [number, number]>) {\n                const array = technical.convertAll(numbers);\n\n                for (let i = 0; i < array.length; i++) {\n                    result = technical.sub(result, array[i]);\n                }\n\n                return this;\n            },\n            multiply: function(...numbers: Array<string | number | [number, number]>) {\n                const array = technical.convertAll(numbers);\n\n                for (let i = 0; i < array.length; i++) {\n                    result = technical.mult(result, array[i]);\n                }\n\n                return this;\n            },\n            divide: function(...numbers: Array<string | number | [number, number]>) {\n                const array = technical.convertAll(numbers);\n\n                for (let i = 0; i < array.length; i++) {\n                    result = technical.div(result, array[i]);\n                }\n\n                return this;\n            },\n            power: function(power: number) {\n                result = technical.pow(result, power);\n                return this;\n            },\n            log: function(base = 2.718281828459045) {\n                result = technical.log(result, base);\n                return this;\n            },\n            abs: function() {\n                result[0] = Math.abs(result[0]);\n                return this;\n            },\n            trunc: function() {\n                result = technical.trunc(result);\n                return this;\n            },\n            floor: function() {\n                result = technical.floor(result);\n                return this;\n            },\n            ceil: function() {\n                result = technical.ceil(result);\n                return this;\n            },\n            round: function() {\n                result = technical.round(result);\n                return this;\n            },\n            isNaN: (): boolean => isNaN(result[0]) || isNaN(result[1]),\n            isFinite: (): boolean => isFinite(result[0]) && isFinite(result[1]),\n            lessThan: (compare: string | number | [number, number]): boolean => technical.less(result, technical.convert(compare)),\n            lessOrEqual: (compare: string | number | [number, number]): boolean => technical.lessOrEqual(result, technical.convert(compare)),\n            moreThan: (compare: string | number | [number, number]): boolean => technical.more(result, technical.convert(compare)),\n            moreOrEqual: (compare: string | number | [number, number]): boolean => technical.moreOrEqual(result, technical.convert(compare)),\n            notEqual: (compare: string | number | [number, number]): boolean => technical.notEqual(result, technical.convert(compare)),\n            equal: (...compare: Array<string | number | [number, number]>): boolean => {\n                const array = technical.convertAll(compare);\n\n                let allEqual = technical.equal(result, array[0]);\n                for (let i = 1; i < array.length; i++) {\n                    //&&= will not call equal function if itself is false\n                    allEqual &&= technical.equal(array[i - 1], array[i]);\n                }\n\n                return allEqual;\n            },\n            max: function(...compare: Array<string | number | [number, number]>) {\n                const array = technical.convertAll(compare);\n\n                for (let i = 0; i < array.length; i++) {\n                    if (isNaN(array[i][0])) {\n                        result = [NaN, NaN];\n                        break;\n                    }\n\n                    if (technical.less(result, array[i])) { result = array[i]; }\n                }\n\n                return this;\n            },\n            min: function(...compare: Array<string | number | [number, number]>) {\n                const array = technical.convertAll(compare);\n\n                for (let i = 0; i < array.length; i++) {\n                    if (isNaN(array[i][0])) {\n                        result = [NaN, NaN];\n                        break;\n                    }\n\n                    if (technical.more(result, array[i])) { result = array[i]; }\n                }\n\n                return this;\n            },\n            format: (settings = {} as { digits?: number, type?: 'number' | 'input', padding?: boolean }): string => technical.format(result, settings),\n            toNumber: (): number => Number(technical.convertBack(result)),\n            toString: (): string => technical.convertBack(result),\n            toArray: (): [number, number] => technical.prepare(result)\n        };\n    },\n    LimitAlt: {\n        //Faster methods (?), because no need to convert in both directions\n        abs: (number: string): string => number[0] === '-' ? number.substring(1) : number,\n        isNaN: (number: string): boolean => number.includes('NaN'),\n        isFinite: (number: string): boolean => !number.includes('Infinity') && !number.includes('NaN'),\n        clone: (number: [number, number]): [number, number] => [number[0], number[1]]\n    },\n    technical: {\n        add: (left: [number, number], right: [number, number]): [number, number] => {\n            if (right[0] === 0) { return left; }\n            if (left[0] === 0) { return right; }\n            if (!isFinite(left[0]) || !isFinite(right[0])) {\n                const check = left[0] + right[0]; //Infinity + -Infinity === NaN\n                return isNaN(left[0]) || isNaN(right[0]) || isNaN(check) ? [NaN, NaN] : [check, Infinity];\n            }\n\n            const difference = left[1] - right[1];\n            if (Math.abs(difference) >= 14) { return difference > 0 ? left : right; }\n\n            if (difference === 0) {\n                left[0] += right[0];\n            } else if (difference > 0) {\n                left[0] += right[0] / 10 ** difference;\n            } else {\n                right[0] += left[0] / 10 ** (-difference);\n                left = right;\n            }\n\n            const after = Math.abs(left[0]);\n            if (after === 0) {\n                left[1] = 0;\n            } else if (after >= 10) {\n                left[0] /= 10;\n                left[1]++;\n            } else if (after < 1) {\n                const digits = -Math.floor(Math.log10(after));\n                left[0] *= 10 ** digits;\n                left[1] -= digits;\n            }\n\n            return left;\n        },\n        sub: (left: [number, number], right: [number, number]): [number, number] => {\n            right[0] *= -1; //Easier this way\n            return overlimit.technical.add(left, right);\n        },\n        mult: (left: [number, number], right: [number, number]): [number, number] => {\n            if (left[0] === 0 || right[0] === 0) { return [0, 0]; }\n\n            left[1] += right[1];\n            left[0] *= right[0];\n\n            if (Math.abs(left[0]) >= 10) {\n                left[0] /= 10;\n                left[1]++;\n            }\n\n            return left;\n        },\n        div: (left: [number, number], right: [number, number]): [number, number] => {\n            if (right[0] === 0) { return [NaN, NaN]; }\n            if (left[0] === 0) { return [0, 0]; }\n\n            left[1] -= right[1];\n            left[0] /= right[0];\n\n            if (Math.abs(left[0]) < 1) {\n                left[0] *= 10;\n                left[1]--;\n            }\n\n            return left;\n        },\n        pow: (left: [number, number], power: number): [number, number] => {\n            if (power === 0) { return left[0] === 0 || !isFinite(left[0]) ? [NaN, NaN] : [1, 0]; }\n            if (left[0] === 0) { return power < 0 ? [NaN, NaN] : [0, 0]; }\n            if (!isFinite(power)) {\n                if (left[1] === 0 && (left[0] === 1 || (left[0] === -1 && !isNaN(power)))) { return [1, 0]; }\n                if ((power === -Infinity && left[1] >= 0) || (power === Infinity && left[1] < 0)) { return [0, 0]; }\n                return isNaN(power) || isNaN(left[0]) ? [NaN, NaN] : [Infinity, Infinity];\n            }\n\n            const negative = left[0] < 0 ? Math.abs(power) % 2 : null;\n            if (negative !== null) { //Complex numbers are not supported\n                if (Math.floor(power) !== power) { return [NaN, NaN]; }\n                left[0] *= -1;\n            }\n\n            const base10 = power * (Math.log10(left[0]) + left[1]);\n            if (!isFinite(base10)) {\n                if (isNaN(left[0])) { return [NaN, NaN]; }\n                if (base10 === -Infinity) { return [0, 0]; }\n                return [negative === 1 ? -Infinity : Infinity, Infinity];\n            }\n\n            const target = Math.floor(base10);\n            left[0] = 10 ** (base10 - target);\n            left[1] = target;\n\n            if (negative === 1) { left[0] *= -1; }\n            return left;\n        },\n        log: (left: [number, number], base: number): [number, number] => {\n            if (Math.abs(base) === 1 || (left[0] === -1 && left[1] === 0)) { return [NaN, NaN]; }\n            if (left[0] === 1 && left[1] === 0) { return [0, 0]; }\n            if (base === 0) { return [NaN, NaN]; } //Order matters (0 ** 0 === 1)\n            if (left[0] === 0) { return isNaN(base) ? [NaN, NaN] : [Math.abs(base) > 1 ? -Infinity : Infinity, Infinity]; }\n            if (!isFinite(base)) { return [NaN, NaN]; } //Order matters (Infinity ** 0 === 1 || Infinity ** -Infinity === 0)\n            if (!isFinite(left[0])) {\n                if (isNaN(left[0]) || left[0] === -Infinity) { return [NaN, NaN]; }\n                return [Math.abs(base) < 1 ? -Infinity : Infinity, Infinity];\n            }\n\n            const negative = left[0] < 0;\n            if (negative) { //Complex numbers are not supported\n                if (base > 0) { return [NaN, NaN]; }\n                left[0] *= -1;\n            }\n\n            const tooSmall = left[1] < 0; //Minor issue with negative power\n            const base10 = Math.log10(Math.abs(Math.log10(left[0]) + left[1]));\n            const target = Math.floor(base10);\n            left[0] = (10 ** (base10 - target));\n            left[1] = target;\n\n            if (tooSmall) { left[0] *= -1; } //Already can be negative\n            if (base !== 10) {\n                left[0] /= Math.log10(Math.abs(base));\n\n                const after = Math.abs(left[0]);\n                if (after < 1 || after >= 10) {\n                    const digits = Math.floor(Math.log10(after));\n                    left[0] /= 10 ** digits;\n                    left[1] += digits;\n                }\n            }\n\n            if (base < 0 || negative) { //Special test for negative numbers\n                if (left[1] < 0) { return [NaN, NaN]; }\n                const test = left[1] < 16 ?\n                    Math.abs(Math.round(left[0] * 1e14) / 10 ** (14 - left[1])) % 2 : //Fix floats and find if even\n                    0; //Assuming that big numbers never uneven\n                if (base < 0 && !negative) {\n                    if (test !== 0) { return [NaN, NaN]; } //Result must be even\n                } else { //base < 0 && negative\n                    if (test !== 1) { return [NaN, NaN]; } //Result must be uneven\n                }\n            }\n            return left;\n        },\n        less: (left: [number, number], right: [number, number]): boolean => {\n            left[0] = Math.round(left[0] * 1e14) / 1e14; //Fix floats\n            right[0] = Math.round(right[0] * 1e14) / 1e14;\n            if (Math.abs(left[0]) === 10) {\n                left[0] = 1;\n                left[1]++;\n            }\n            if (Math.abs(right[0]) === 10) {\n                right[0] = 1;\n                right[1]++;\n            }\n\n            if (left[0] === 0 || right[0] === 0 || left[1] === right[1]) { return left[0] < right[0]; }\n            if (left[0] > 0 && right[0] > 0) { return left[1] < right[1]; }\n            if (left[0] < 0 && right[0] > 0) { return true; }\n            if (right[0] < 0 && left[0] > 0) { return false; }\n            return left[1] > right[1];\n        },\n        lessOrEqual: (left: [number, number], right: [number, number]): boolean => {\n            left[0] = Math.round(left[0] * 1e14) / 1e14; //Fix floats\n            right[0] = Math.round(right[0] * 1e14) / 1e14;\n            if (Math.abs(left[0]) === 10) {\n                left[0] = 1;\n                left[1]++;\n            }\n            if (Math.abs(right[0]) === 10) {\n                right[0] = 1;\n                right[1]++;\n            }\n\n            if (left[0] === 0 || right[0] === 0 || left[1] === right[1]) { return left[0] <= right[0]; }\n            if (left[0] > 0 && right[0] > 0) { return left[1] < right[1]; }\n            if (left[0] < 0 && right[0] > 0) { return true; }\n            if (right[0] < 0 && left[0] > 0) { return false; }\n            return left[1] > right[1];\n        },\n        more: (left: [number, number], right: [number, number]): boolean => {\n            left[0] = Math.round(left[0] * 1e14) / 1e14; //Fix floats\n            right[0] = Math.round(right[0] * 1e14) / 1e14;\n            if (Math.abs(left[0]) === 10) {\n                left[0] = 1;\n                left[1]++;\n            }\n            if (Math.abs(right[0]) === 10) {\n                right[0] = 1;\n                right[1]++;\n            }\n\n            if (left[0] === 0 || right[0] === 0 || left[1] === right[1]) { return left[0] > right[0]; }\n            if (left[0] > 0 && right[0] > 0) { return left[1] > right[1]; }\n            if (left[0] < 0 && right[0] > 0) { return false; }\n            if (right[0] < 0 && left[0] > 0) { return true; }\n            return left[1] < right[1];\n        },\n        moreOrEqual: (left: [number, number], right: [number, number]): boolean => {\n            left[0] = Math.round(left[0] * 1e14) / 1e14; //Fix floats\n            right[0] = Math.round(right[0] * 1e14) / 1e14;\n            if (Math.abs(left[0]) === 10) {\n                left[0] = 1;\n                left[1]++;\n            }\n            if (Math.abs(right[0]) === 10) {\n                right[0] = 1;\n                right[1]++;\n            }\n\n            if (left[0] === 0 || right[0] === 0 || left[1] === right[1]) { return left[0] >= right[0]; }\n            if (left[0] > 0 && right[0] > 0) { return left[1] > right[1]; }\n            if (left[0] < 0 && right[0] > 0) { return false; }\n            if (right[0] < 0 && left[0] > 0) { return true; }\n            return left[1] < right[1];\n        },\n        equal: (left: [number, number], right: [number, number]): boolean => {\n            left[0] = Math.round(left[0] * 1e14) / 1e14; //Fix floats\n            right[0] = Math.round(right[0] * 1e14) / 1e14;\n            if (Math.abs(left[0]) === 10) {\n                left[0] = 1;\n                left[1]++;\n            }\n            if (Math.abs(right[0]) === 10) {\n                right[0] = 1;\n                right[1]++;\n            }\n\n            return left[1] === right[1] ? left[0] === right[0] : false;\n        },\n        notEqual: (left: [number, number], right: [number, number]): boolean => {\n            left[0] = Math.round(left[0] * 1e14) / 1e14; //Fix floats\n            right[0] = Math.round(right[0] * 1e14) / 1e14;\n            if (Math.abs(left[0]) === 10) {\n                left[0] = 1;\n                left[1]++;\n            }\n            if (Math.abs(right[0]) === 10) {\n                right[0] = 1;\n                right[1]++;\n            }\n\n            return left[1] !== right[1] ? true : left[0] !== right[0];\n        },\n        trunc: (left: [number, number]): [number, number] => {\n            left[0] = Math.round(left[0] * 1e14) / 1e14; //Fix floats\n            if (Math.abs(left[0]) === 10) {\n                left[0] = 1;\n                left[1]++;\n            }\n\n            if (left[1] < 0) {\n                return [0, 0];\n            } else if (left[1] === 0) {\n                left[0] = Math.trunc(left[0]);\n            } else if (left[1] <= 14) {\n                left[0] = Math.trunc(left[0] * 10 ** left[1]) / 10 ** left[1];\n            }\n\n            return left;\n        },\n        floor: (left: [number, number]): [number, number] => {\n            left[0] = Math.round(left[0] * 1e14) / 1e14; //Fix floats\n            if (Math.abs(left[0]) === 10) {\n                left[0] = 1;\n                left[1]++;\n            }\n\n            if (left[1] < 0) {\n                return [left[0] < 0 ? -1 : 0, 0];\n            } else if (left[1] === 0) {\n                left[0] = Math.floor(left[0]);\n            } else if (left[1] <= 14) {\n                left[0] = Math.floor(left[0] * 10 ** left[1]) / 10 ** left[1];\n            }\n\n            return left;\n        },\n        ceil: (left: [number, number]): [number, number] => {\n            left[0] = Math.round(left[0] * 1e14) / 1e14; //Fix floats\n            if (Math.abs(left[0]) === 10) {\n                left[0] = 1;\n                left[1]++;\n            }\n\n            if (left[1] < 0) {\n                return [left[0] < 0 ? 0 : 1, 0];\n            } else if (left[1] === 0) {\n                left[0] = Math.ceil(left[0]);\n            } else if (left[1] <= 14) {\n                left[0] = Math.ceil(left[0] * 10 ** left[1]) / 10 ** left[1];\n            }\n\n            return left;\n        },\n        round: (left: [number, number]): [number, number] => {\n            left[0] = Math.round(left[0] * 1e14) / 1e14; //Fix floats\n            if (Math.abs(left[0]) === 10) {\n                left[0] = 1;\n                left[1]++;\n            }\n\n            if (left[1] < 0) {\n                return [left[1] === -1 ? Math.round(left[0] / 10) : 0, 0];\n            } else if (left[1] === 0) {\n                left[0] = Math.round(left[0]);\n            } else if (left[1] <= 14) {\n                left[0] = Math.round(left[0] * 10 ** left[1]) / 10 ** left[1];\n            }\n\n            return left;\n        },\n        format: (left: [number, number], settings: { digits?: number, type?: 'number' | 'input', padding?: boolean }): string => {\n            const [base, power] = left;\n            if (!isFinite(base) || !isFinite(power)) { return overlimit.technical.convertBack(left); }\n            //Minimal optimization possible (changing ?? to === undefined), but very minor\n\n            //Self added part\n            if (!player.inflation.vacuum && power >= 300) { return 'Infinity'; }\n\n            //1.23ee123 (-1.23e-e123)\n            if ((power >= 1e3 || power <= -1e3) && settings.type !== 'input') {\n                const digits = settings.digits ?? 2;\n                let exponent = Math.floor(Math.log10(Math.abs(power)));\n                let result = Math.abs(Math.round(power / 10 ** (exponent - digits)) / 10 ** digits);\n                if (result === 10) {\n                    result = 1;\n                    exponent++;\n                }\n                if (base < 0) { result *= -1; }\n\n                const formated = settings.padding === true ?\n                    result.toFixed(digits).replace('.', player.separator[1]) :\n                    `${result}`.replace('.', player.separator[1]);\n                return `${formated}e${power < 0 ? '-' : ''}e${exponent}`;\n            }\n\n            //1.23e123\n            if (power >= 6 || power < -3) {\n                const digits = settings.digits ?? 2;\n                let exponent = power;\n                let result: number | string = Math.round(base * 10 ** digits) / 10 ** digits;\n                if (Math.abs(result) === 10) {\n                    result = 1;\n                    exponent++;\n                }\n\n                if (settings.padding === true) { result = result.toFixed(digits); }\n                return settings.type !== 'input' ? `${`${result}`.replace('.', player.separator[1])}e${exponent}` : `${result}e${exponent}`;\n            }\n\n            //12345\n            const digits = power >= 3 ? 0 : settings.digits ?? (power < 0 ? 4 : 2);\n            let formated: number | string = Math.round(base * 10 ** (digits + power)) / 10 ** digits;\n            formated = digits > 0 && settings.padding === true ? formated.toFixed(digits) : `${formated}`;\n            if (settings.type !== 'input') {\n                formated = power >= 3 ?\n                    formated.replace(/\\B(?=(\\d{3})+(?!\\d))/, player.separator[0]) :\n                    formated.replace('.', player.separator[1]);\n            }\n\n            return formated;\n        },\n        convert: (number: string | number | [number, number]): [number, number] => {\n            let result: [number, number];\n            if (typeof number !== 'object' || number === null) { //Not an Array\n                if (typeof number !== 'string') { number = `${number}`; } //Using log10 could cause floating point error\n                const index = number.indexOf('e'); //About 5+ times quicker than regex\n                result = index === -1 ? [Number(number), 0] : [Number(number.slice(0, index)), Number(number.slice(index + 1))];\n            } else {\n                result = [number[0], number[1]]; //Not instant return, because might need a fix\n            }\n\n            if (!isFinite(result[0])) { return isNaN(result[0]) ? [NaN, NaN] : [result[0], Infinity]; }\n\n            if (Math.floor(result[1]) !== result[1]) { //Fix non trunc exponent ([2, 10.1] > [2.5, 10])\n                result[0] *= 10 ** (result[1] - Math.floor(result[1]));\n                result[1] = Math.floor(result[1]);\n            }\n\n            const after = Math.abs(result[0]);\n            if (after === 0) {\n                return [0, 0];\n            } else if (after < 1 || after >= 10) {\n                const digits = Math.floor(Math.log10(after));\n                result[0] /= 10 ** digits;\n                result[1] += digits;\n\n                //Safety for functions like 'trunc', 'less'\n                if (Math.abs(result[0]) < 1) { //Happens more often than you would think\n                    result[0] *= 10;\n                    result[1]--;\n                }\n            }\n\n            return result;\n        },\n        convertAll: (numbers: Array<string | number | [number, number]>): Array<[number, number]> => {\n            const result = [];\n            const { convert } = overlimit.technical;\n            for (let i = 0; i < numbers.length; i++) {\n                result[i] = convert(numbers[i]);\n            }\n            return result;\n        },\n        prepare: (number: [number, number]): [number, number] => {\n            if (!isFinite(number[0]) || !isFinite(number[1])) {\n                if (number[0] === 0 || number[1] === -Infinity) { return [0, 0]; }\n                if (isNaN(number[0]) || isNaN(number[1])) { return [NaN, NaN]; }\n                return [number[0] < 0 ? -Infinity : Infinity, Infinity]; //Base can be non Infinity\n            }\n\n            if (number[1] >= 1e3 || number[1] <= -1e3) {\n                number[0] = Math.round(number[0]);\n            } else {\n                number[0] = Math.round(number[0] * 1e14) / 1e14;\n\n                if (Math.abs(number[0]) === 10) { //Just in case\n                    number[0] = 1;\n                    number[1]++;\n                }\n            }\n\n            return number;\n        },\n        convertBack: (number: [number, number]): string => {\n            number = overlimit.technical.prepare(number);\n            if (!isFinite(number[0])) { return `${number[0]}`; }\n\n            if (Math.abs(number[1]) < 1e16) { return number[1] === 0 ? `${number[0]}` : `${number[0]}e${number[1]}`; }\n\n            const exponent = Math.floor(Math.log10(number[1]));\n            const result = Math.round(number[1] / 10 ** (exponent - 14)) / 1e14;\n\n            return `${number[0]}e${result}e${exponent}`;\n        }\n    }\n};\n\nexport const { Limit, LimitAlt } = overlimit;\nexport default Limit;\n", "import Limit from './Limit';\nimport { global, player } from './Player';\nimport { getUpgradeDescription } from './Update';\n\nexport const checkTab = (tab: string, subtab = null as null | string): boolean => {\n    switch (tab) {\n        case 'stage':\n            if (subtab === 'Structures') {\n                return true;\n            } else if (subtab === 'Advanced') {\n                return player.inflation.vacuum || player.milestones[1][0] >= 5 || player.milestones[2][1] >= 4 || player.milestones[3][1] >= 5 || player.milestones[4][1] >= 5 || player.milestones[5][1] >= 8;\n            }\n            return subtab === null;\n        case 'research':\n            if (player.strange[0].total <= 0 && player.discharge.current < 4) { return false; }\n            if (subtab === 'Researches') {\n                return true;\n            } else if (subtab === 'Elements') {\n                return (player.stage.active === 4 || player.stage.active === 5) && player.upgrades[4][1] === 1;\n            }\n            return subtab === null;\n        case 'strangeness':\n            if (player.strange[0].total <= 0) { return false; }\n            if (subtab === 'Matter') {\n                return true;\n            } else if (subtab === 'Milestones') {\n                return !player.inflation.vacuum;\n            }\n            return subtab === null;\n        case 'settings':\n            return true;\n        case 'special':\n            return global.screenReader;\n    }\n\n    return false;\n};\n\nexport const checkBuilding = (index: number, stageIndex: number): boolean => {\n    if (global.buildingsInfo.maxActive[stageIndex] < index + 1) { return false; }\n\n    if (stageIndex === 1) {\n        return true;\n    } else if (stageIndex === 2) {\n        if (index === 6) { return false; }\n        return true;\n    } else if (stageIndex === 3) {\n        if (player.accretion.rank === 0) { return false; }\n        if (index === 1) { return true; }\n        if (index === 2) { return player.upgrades[3][2] === 1; }\n        if (index === 3) { return player.upgrades[3][4] === 1; }\n        if (index === 4) { return player.upgrades[3][6] === 1; }\n        if (index === 5) { return false; }\n    } else if (stageIndex === 4) {\n        if (player.collapse.mass < global.collapseInfo.unlockB[index]) { return false; }\n        if (index === 1 || index === 4) { return true; }\n        if (index === 2) { return player.upgrades[4][1] === 1; }\n        if (index === 3) { return player.upgrades[4][2] === 1; }\n        if (index === 5) { return false; }\n    } else if (stageIndex === 5) {\n        if (player.collapse.mass < global.collapseInfo.unlockG[index]) { return false; }\n        if (index === 1) { return player.inflation.vacuum || player.milestones[2][0] >= 3; }\n        if (index === 2) { return player.inflation.vacuum || player.milestones[3][0] >= 3; }\n        if (index === 3) { return player.strangeness[5][6] >= 1; }\n        if (index === 4) { return false; }\n    }\n\n    return false;\n};\n\nexport const checkUpgrade = (upgrade: number, stageIndex: number, type: 'upgrades' | 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'elements' | 'strangeness'): boolean => {\n    if (stageIndex === 3 && player.accretion.rank === 0 && type !== 'strangeness') { return false; }\n\n    switch (type) { //Some cases are handled by max level being 0\n        case 'upgrades':\n            if (global.upgradesInfo[stageIndex].maxActive < upgrade + 1) { return false; }\n            if (stageIndex === 1) {\n                if (!player.inflation.vacuum && (upgrade === 0 || upgrade === 1)) { return false; }\n                if (upgrade > 5) { return player.discharge.current >= 3; }\n                return true;\n            } else if (stageIndex === 2) {\n                if (upgrade === 6 && player.strangeness[2][2] < 3) { return false; }\n                return true;\n            } else if (stageIndex === 3) {\n                if (upgrade === 8 && player.strangeness[3][2] < 3) { return false; }\n                return player.accretion.rank >= global.accretionInfo.rankU[upgrade];\n            } else if (stageIndex === 4) {\n                if (upgrade === 3 && player.strangeness[4][2] < 1) { return false; }\n                if (upgrade >= 2 && player.upgrades[4][upgrade - 1] !== 1) { return false; } //Just in case\n                return player.collapse.mass >= global.collapseInfo.unlockU[upgrade];\n            } else if (stageIndex === 5) {\n                if (upgrade === 2) { return Limit(player.buildings[5][3].current).moreOrEqual([1, 0]); }\n                return true;\n            }\n            break;\n        case 'researches':\n            if (global.researchesInfo[stageIndex].maxActive < upgrade + 1) { return false; }\n            if (stageIndex === 1) {\n                return player.upgrades[1][5] === 1;\n            } else if (stageIndex === 2) {\n                return true;\n            } else if (stageIndex === 3) {\n                return player.accretion.rank >= global.accretionInfo.rankR[upgrade];\n            } else if (stageIndex === 4) {\n                if (upgrade === 3 && player.strangeness[4][2] < 2) { return false; }\n                return player.collapse.mass >= global.collapseInfo.unlockR[upgrade];\n            } else if (stageIndex === 5) {\n                return true;\n            }\n            break;\n        case 'researchesExtra':\n            if (global.researchesExtraInfo[stageIndex].maxActive < upgrade + 1) { return false; }\n            if (stageIndex === 1) {\n                if (upgrade === 1 && player.stage.current < 3) { return false; }\n                return player.discharge.current >= 5;\n            } else if (stageIndex === 2) {\n                return Limit(player.vaporization.clouds).moreThan([1, 0]);\n            } else if (stageIndex === 3) {\n                return player.accretion.rank >= global.accretionInfo.rankE[upgrade];\n            } else if (stageIndex === 4) {\n                if (upgrade === 1 && player.strangeness[4][2] < 3) { return false; }\n                return true;\n            }\n            break;\n        case 'researchesAuto':\n            if (stageIndex === 1 && player.upgrades[1][5] < 1) { return false; }\n            return stageIndex === global.researchesAutoInfo.autoStage[upgrade];\n        case 'ASR':\n            if (stageIndex === 1 && player.upgrades[1][5] < 1) { return false; }\n            return true;\n        case 'elements':\n            if (upgrade === 0) { return false; }\n            if (upgrade >= 27) { return player.upgrades[4][3] === 1; }\n            if (upgrade >= 11) { return player.collapse.mass >= 10; }\n            if (upgrade >= 6) { return player.upgrades[4][2] === 1; }\n            return player.upgrades[4][1] === 1;\n        case 'strangeness':\n            if (global.strangenessInfo[stageIndex].maxActive < upgrade + 1) { return false; }\n            if (player.inflation.vacuum) { return true; }\n            if ((stageIndex === 1 || stageIndex === 4) && upgrade < 8) { return true; }\n            if ((stageIndex === 2 || stageIndex === 3) && upgrade < 7) { return true; }\n            return player.milestones[4][0] >= 3;\n    }\n\n    return false;\n};\n\nexport const allowedToBeReset = (check: number, stageIndex: number, type: 'structures' | 'upgrades' | 'researches' | 'researchesExtra'): boolean => {\n    switch (type) {\n        case 'structures':\n            if (stageIndex === 5 && check === 3) { return false; }\n            break;\n        case 'upgrades':\n            if (stageIndex === 1) {\n                if (check === 5) { return false; }\n            } else if (stageIndex === 2) {\n                if (check === 1) { return false; }\n            } else if (stageIndex === 4) {\n                return false;\n            } else if (stageIndex === 5) {\n                if (check === 2) { return false; }\n            }\n            break;\n        case 'researches':\n            if (stageIndex === 1) {\n                if (check === 3) { return false; }\n            } else if (stageIndex === 2) {\n                if (check === 1) { return false; }\n            }\n            break;\n        case 'researchesExtra':\n            if (stageIndex === 1) {\n                if (check === 2) { return false; }\n            } else if (stageIndex === 2) {\n                if (check === 0 || check === 3) { return false; }\n            } else if (stageIndex === 4) {\n                if (check === 0) { return false; }\n            }\n    }\n\n    return true;\n};\n\nexport const milestoneCheck = (index: number, stageIndex: number) => {\n    if (player.inflation.vacuum || player.strange[0].total < 1) { return; }\n    const need = global.milestonesInfo[stageIndex].need[index][player.milestones[stageIndex][index]];\n    if (need === undefined) { return; }\n    if (stageIndex === 5 && player.strangeness[5][8] < 1) { return; }\n    let award = false;\n\n    if (stageIndex === 1) {\n        if (index === 0) {\n            award = Limit(player.buildings[1][0].current).moreOrEqual(need);\n        } else if (index === 1) {\n            award = player.discharge.energy >= need;\n        }\n    } else if (stageIndex === 2) {\n        if (index === 0) {\n            award = Limit(player.buildings[2][1].current).moreOrEqual(need);\n        } else if (index === 1) {\n            award = Limit(player.buildings[2][2].current).moreOrEqual(need);\n        }\n    } else if (stageIndex === 3) {\n        if (index === 0) {\n            award = Limit(player.buildings[3][0].current).moreOrEqual(need);\n        } else if (index === 1) {\n            award = Limit(player.buildings[3][4].current).moreThan(need);\n        }\n    } else if (stageIndex === 4) {\n        if (index === 0) {\n            award = player.collapse.mass >= need;\n        } else if (index === 1) {\n            award = player.collapse.stars[2] >= need;\n        }\n    } else if (stageIndex === 5) {\n        if (index === 0) {\n            award = global.collapseInfo.trueStars >= need;\n        } else if (index === 1) {\n            award = Limit(player.buildings[5][3].current).moreOrEqual(need);\n        }\n    }\n\n    if (award) {\n        const reward = global.milestonesInfo[stageIndex].quarks[index][player.milestones[stageIndex][index]];\n        player.strange[0].current += reward;\n        player.strange[0].total += reward;\n        player.milestones[stageIndex][index]++;\n        getUpgradeDescription(index, stageIndex, 'milestones');\n    }\n};\n", "import { allowedToBeReset } from './Check';\nimport { cloneArray, global, player, playerStart } from './Player';\nimport { autoResearchesSet, autoUpgradesSet, calculateMaxLevel, calculateResearchCost, assignBuildingInformation, autoElementsSet, assignEnergy } from './Stage';\nimport { numbersUpdate, updateRankInfo, visualUpdate, visualUpdateUpgrades } from './Update';\n\nexport const reset = (type: 'discharge' | 'vaporization' | 'rank' | 'collapse' | 'galaxy' | 'stage' | 'vacuum', stageIndex: number[]) => {\n    if (type === 'discharge' || type === 'vaporization' || type === 'rank' || type === 'collapse' || type === 'galaxy') {\n        if (type === 'discharge' || player.inflation.vacuum) { player.discharge.energy = 0; }\n        if (stageIndex.includes(4)) { global.collapseInfo.trueStars = 0; }\n        if (type === 'galaxy') {\n            if (!player.inflation.vacuum) { player.collapse.disabled = true; }\n            player.collapse.mass = 0.01235;\n            player.collapse.stars = [0, 0, 0];\n        }\n\n        if ((type === 'collapse' && !player.inflation.vacuum && player.strangeness[4][4] < 1) || type === 'galaxy') {\n            const { elements } = player;\n\n            for (let i = 1; i < elements.length; i++) {\n                elements[i] = 0;\n                visualUpdateUpgrades(i, 4, 'elements');\n            }\n            autoElementsSet();\n        }\n\n        for (const s of stageIndex) {\n            const buildings = player.buildings[s];\n\n            buildings[0].current = cloneArray(playerStart.buildings[s][0].current);\n            buildings[0].total = cloneArray(playerStart.buildings[s][0].total);\n            for (let i = 1; i < global.buildingsInfo.maxActive[s]; i++) {\n                if (!allowedToBeReset(i, s, 'structures')) { continue; }\n\n                buildings[i as 1].true = 0;\n                buildings[i].current = [0, 0];\n                buildings[i].total = [0, 0];\n            }\n\n            if (type === 'discharge') { continue; }\n            const upgrades = player.upgrades[s];\n\n            for (let i = 0; i < global.upgradesInfo[s].maxActive; i++) {\n                if (!allowedToBeReset(i, s, 'upgrades')) { continue; }\n\n                upgrades[i] = 0;\n                visualUpdateUpgrades(i, s, 'upgrades');\n            }\n            autoUpgradesSet(s); //As of now upgrades/researches cost is always same\n\n            if (type === 'vaporization') { continue; }\n            const researches = player.researches[s];\n\n            for (let i = 0; i < global.researchesInfo[s].maxActive; i++) {\n                if (!allowedToBeReset(i, s, 'researches')) { continue; }\n\n                researches[i] = 0;\n                visualUpdateUpgrades(i, s, 'researches');\n                calculateResearchCost(i, s, 'researches');\n            }\n            autoResearchesSet('researches', s);\n\n            if (type === 'rank') { continue; }\n            const researchesExtra = player.researchesExtra[s];\n\n            for (let i = 0; i < global.researchesExtraInfo[s].maxActive; i++) {\n                if (!allowedToBeReset(i, s, 'researchesExtra')) { continue; }\n\n                researchesExtra[i] = 0;\n                visualUpdateUpgrades(i, s, 'researchesExtra');\n                calculateResearchCost(i, s, 'researchesExtra');\n            }\n            autoResearchesSet('researchesExtra', s);\n        }\n\n        visualUpdate();\n    } else if (type === 'stage') {\n        for (const s of stageIndex) {\n            const buildings = player.buildings[s];\n            const buildingsStart = playerStart.buildings[s];\n\n            for (let i = 1; i < global.buildingsInfo.maxActive[s]; i++) {\n                buildings[i as 1].true = 0;\n                buildings[i].current = [0, 0];\n                buildings[i].total = [0, 0];\n                buildings[i].trueTotal = [0, 0];\n            }\n            buildings[0].current = cloneArray(buildingsStart[0].current);\n            buildings[0].total = cloneArray(buildingsStart[0].total);\n            buildings[0].trueTotal = cloneArray(buildingsStart[0].trueTotal);\n\n            player.upgrades[s] = cloneArray(playerStart.upgrades[s]);\n            player.researches[s] = cloneArray(playerStart.researches[s]);\n            player.researchesExtra[s] = cloneArray(playerStart.researchesExtra[s]);\n\n            if (s === 1) {\n                player.discharge.unlock = false;\n                player.discharge.energy = 0;\n                player.discharge.current = 0;\n            } else if (s === 2) {\n                player.vaporization.clouds = [1, 0];\n            } else if (s === 3) {\n                if (!player.inflation.vacuum) {\n                    player.accretion.rank = 0;\n                    buildings[0].current = [5.97, 27];\n                } else {\n                    player.accretion.rank = 1;\n                }\n                updateRankInfo();\n            } else if (s === 4) {\n                const { collapse } = player;\n\n                global.collapseInfo.trueStars = 0;\n                collapse.elementsMax = [1, 0];\n                collapse.mass = 0.01235;\n                collapse.stars = [0, 0, 0];\n                collapse.show = [];\n                if (!player.inflation.vacuum) { collapse.disabled = false; }\n                player.elements = cloneArray(playerStart.elements);\n                autoElementsSet();\n                if (player.stage.active === 4) {\n                    for (let i = 1; i < playerStart.elements.length; i++) { visualUpdateUpgrades(i, 4, 'elements'); }\n                }\n            }\n\n            player.ASR[s] = player.strangeness[s][[6, 5, 5, 6, 7][s - 1]];\n            if (s === 5 && player.strangeness[5][6] >= 2) { player.ASR[5]++; }\n            calculateMaxLevel(0, s, 'ASR');\n\n            if (player.stage.active === s) {\n                for (let i = 0; i < global.upgradesInfo[s].maxActive; i++) { visualUpdateUpgrades(i, s, 'upgrades'); }\n            }\n            for (let i = 0; i < global.researchesInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researches'); }\n            for (let i = 0; i < global.researchesExtraInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researchesExtra'); }\n\n            autoUpgradesSet(s);\n            autoResearchesSet('researches', s);\n            autoResearchesSet('researchesExtra', s);\n        }\n    } else if (type === 'vacuum') {\n        const { collapse } = player;\n\n        //Stage 1\n        player.discharge.unlock = false;\n        player.discharge.energy = 0;\n        player.discharge.energyMax = 0;\n        player.discharge.current = 0;\n\n        //Stage 2\n        player.vaporization.clouds = [1, 0];\n        player.vaporization.cloudsMax = [1, 0];\n\n        //Stage 3\n        player.accretion.rank = 1;\n\n        //Stage 4\n        global.collapseInfo.trueStars = 0;\n        collapse.elementsMax = [0, 0];\n        collapse.mass = 0.01235;\n        collapse.massMax = 0.01235;\n        collapse.stars = [0, 0, 0];\n        collapse.show = [];\n        collapse.disabled = false;\n        player.elements = cloneArray(playerStart.elements);\n\n        //Stage 5 and rest\n        player.researchesAuto = cloneArray(playerStart.researchesAuto);\n        player.strange[0].current = 0;\n        player.strange[0].total = 0;\n        player.time.offline = Math.min(player.time.offline, 28800);\n        player.stage.resets = 0;\n\n        for (const s of [1, 2, 3, 4, 5]) {\n            const buildings = player.buildings[s];\n\n            for (let i = 0; i < playerStart.buildings[s].length; i++) {\n                if (i >= 1) { buildings[i as 1].true = 0; }\n                buildings[i].current = [0, 0];\n                buildings[i].total = [0, 0];\n                buildings[i].trueTotal = [0, 0];\n                buildings[i].highest = [0, 0];\n            }\n\n            player.upgrades[s] = cloneArray(playerStart.upgrades[s]);\n            player.researches[s] = cloneArray(playerStart.researches[s]);\n            player.researchesExtra[s] = cloneArray(playerStart.researchesExtra[s]);\n            player.strangeness[s] = cloneArray(playerStart.strangeness[s]);\n            player.milestones[s] = cloneArray(playerStart.milestones[s]);\n            player.ASR[s] = 0;\n\n            if (s !== 1) { //stageCheck('reload') will only do it for stage 1\n                calculateMaxLevel(0, s, 'ASR');\n                for (let i = 0; i < global.researchesInfo[s].startCost.length; i++) { calculateMaxLevel(i, s, 'researches'); }\n                for (let i = 0; i < global.researchesExtraInfo[s].startCost.length; i++) { calculateMaxLevel(i, s, 'researchesExtra'); }\n            }\n        }\n\n        //Post\n        const building = player.buildings[1][0];\n\n        building.current = [5.476, -3];\n        building.total = [5.476, -3];\n        building.trueTotal = [5.476, -3];\n        building.highest = [5.476, -3];\n    }\n\n    if (player.strangeness[1][9] >= 1) { assignEnergy(); }\n    assignBuildingInformation();\n    if (stageIndex.includes(player.stage.active)) { numbersUpdate(); }\n};\n", "import { checkBuilding, checkUpgrade, milestoneCheck } from './Check';\nimport Limit from './Limit';\nimport { getId } from './Main';\nimport { cloneArray, global, player } from './Player';\nimport { reset } from './Reset';\nimport { Alert, Confirm, playEvent } from './Special';\nimport { overlimit } from './Types';\nimport { format, getUpgradeDescription, numbersUpdate, stageCheck, updateRankInfo, visualUpdateUpgrades } from './Update';\n\nexport const assignBuildingInformation = () => { //Sets buildingInfo.producing for all active buildings, also related upgrade effects\n    const { strangeInfo, upgradesInfo, researchesInfo, researchesExtraInfo, inflationInfo } = global;\n    const { buildings, upgrades, researches, researchesExtra, strangeness } = player;\n    const { producing } = global.buildingsInfo;\n    const strangeQuarks = player.strange[0].current;\n    const activeAll = global.stageInfo.activeAll;\n    const vacuum = player.inflation.vacuum;\n\n    //Doing through loop is slower (unless loop already created, then it's same speed)\n    if (activeAll.includes(1)) {\n        const { discharge } = player;\n        const v = vacuum ? 0 : 2;\n\n        global.dischargeInfo.bonus = strangeness[1][2];\n        upgradesInfo[1].effect[5] = (4 + strangeness[1][0]) * 2 ** researches[1][4];\n        upgradesInfo[1].effect[7] = Math.round((1.02 + 0.01 * researches[1][1]) * 100) / 100;\n        researchesExtraInfo[1].effect[4] = 1 + upgradesInfo[1].effect[5] / 100;\n        const totalMultiplier = upgradesInfo[1].effect[5] ** (discharge.current + global.dischargeInfo.bonus);\n\n        const listForMult5 = [totalMultiplier] as Array<number | overlimit>;\n        let prod5Number = vacuum ? 0.2 : 0.3;\n        if (vacuum && upgrades[1][4] === 1) { prod5Number *= 5; }\n        if (upgrades[1][7] === 1) { listForMult5.push(Limit(upgradesInfo[1].effect[7]).power(buildings[1][(5 - v) as 3 | 5].true).toArray()); }\n        listForMult5.push(prod5Number);\n        producing[1][5 - v] = Limit(buildings[1][5 - v].current).multiply(...listForMult5).toArray();\n\n        researchesInfo[1].effect[2] = 12 + strangeness[1][5] * 3 / 10;\n        researchesExtraInfo[1].effect[1] = researchesExtra[1][1] >= 1 ? (21 - researchesExtra[1][1]) / 10 : Math.E;\n        strangeInfo.stageBoost[1] = strangeness[1][8] >= 1 ? (strangeQuarks + 1) ** 0.26 : null;\n        if (Limit(producing[1][5 - v]).moreThan([1, 0])) {\n            const listForRadiation = [Limit(researchesInfo[1].effect[2]).power(researches[1][2]).toArray()] as Array<number | overlimit>;\n            let radiationProd = 1;\n            if (upgrades[1][9] === 1 && discharge.energy > 1) { radiationProd *= discharge.energy; }\n            if (researches[1][5] >= 1) { radiationProd *= (discharge.current + global.dischargeInfo.bonus + 1) * researches[1][5]; }\n            if (strangeInfo.stageBoost[1] !== null) { listForRadiation.push(strangeInfo.stageBoost[1]); }\n            listForRadiation.push(radiationProd);\n            upgradesInfo[1].effect[8] = Limit(producing[1][5 - v]).log(researchesExtraInfo[1].effect[1]).multiply(...listForRadiation).toArray();\n        } else { upgradesInfo[1].effect[8] = [0, 0]; }\n\n        const listForMult4 = [totalMultiplier] as Array<number | overlimit>;\n        let prod4Number = vacuum ? 0.2 : 0.4;\n        if (vacuum) {\n            if (upgrades[1][3] === 1) { prod4Number *= 10; }\n        } else if (upgrades[1][4] === 1) { prod4Number *= 5; }\n        if (upgrades[1][7] === 1) { listForMult4.push(Limit(upgradesInfo[1].effect[7]).power(buildings[1][(4 - v) as 2 | 4].true).toArray()); }\n        listForMult4.push(prod4Number);\n        producing[1][4 - v] = Limit(buildings[1][4 - v].current).multiply(...listForMult4).toArray();\n\n        const listForMult3 = [totalMultiplier] as Array<number | overlimit>;\n        let prod3Number = vacuum ? 0.2 : 0.5;\n        if (upgrades[1][0] === 1) { prod3Number *= 5; }\n        if (!vacuum && upgrades[1][3] === 1) { prod3Number *= 10; }\n        if (upgrades[1][7] === 1) { listForMult3.push(Limit(upgradesInfo[1].effect[7]).power(buildings[1][(3 - v) as 1 | 3].true).toArray()); }\n        listForMult3.push(prod3Number);\n        producing[1][3 - v] = Limit(buildings[1][3 - v].current).multiply(...listForMult3).toArray();\n\n        if (vacuum) {\n            const listForMult2 = [buildings[1][2].current, totalMultiplier];\n            if (upgrades[1][7] === 1) { listForMult2.push(Limit(upgradesInfo[1].effect[7]).power(buildings[1][2].true).toArray()); }\n            producing[1][2] = Limit([2, -1]).multiply(...listForMult2).toArray();\n\n            const listForMult1 = [buildings[1][1].current, totalMultiplier];\n            if (upgrades[1][7] === 1) { listForMult1.push(Limit(upgradesInfo[1].effect[7]).power(buildings[1][1].true).toArray()); }\n            producing[1][1] = Limit([1, -3]).multiply(...listForMult1).toArray();\n\n            producing[1][1] = Limit(producing[1][1]).power(Limit(producing[1][1]).lessThan([1, 0]) ? 1.1 : 0.1).toArray();\n            researchesExtraInfo[1].effect[3] = researchesExtra[1][3] >= 1 ? (20 + 5 * researchesExtra[1][3]) / 100 : 0;\n            inflationInfo.preonCap = Limit(2e13 * Math.max(discharge.energy, 1) ** researchesExtraInfo[1].effect[3]).toArray();\n            if (player.collapse.stars[2] >= 1) { inflationInfo.preonCap = Limit(inflationInfo.preonCap).multiply(global.collapseInfo.starEffect[2]()).toArray(); }\n            if (Limit(producing[1][1]).moreOrEqual(inflationInfo.preonCap)) { producing[1][1] = inflationInfo.preonCap; }\n        }\n    }\n    const dischargeBoost = researchesExtra[1][4] >= 1 ? (researchesExtraInfo[1].effect[4] as number) ** (player.discharge.current + global.dischargeInfo.bonus) : 1;\n\n    if (activeAll.includes(2)) {\n        if (vacuum) {\n            buildings[2][0].current = Limit(buildings[1][5].current).divide([6.02214076, 23]).toArray();\n            buildings[2][0].total = Limit(buildings[1][5].current).divide([6.02214076, 23]).toArray();\n        }\n        const current5 = buildings[2][5].true;\n        let current4 = buildings[2][4].true;\n        let current3 = buildings[2][3].true;\n        let current2 = buildings[2][2].true;\n        if (upgrades[2][6] === 1) { current4 += current5; }\n        upgradesInfo[2].effect[5] = 1 + researches[2][5];\n        if (upgrades[2][5] === 1) { current3 += current4 * upgradesInfo[2].effect[5]; }\n        upgradesInfo[2].effect[4] = 1 + researches[2][4];\n        if (upgrades[2][4] === 1) { current2 += current3 * upgradesInfo[2].effect[4]; }\n        buildings[2][5].current = Limit(current5).toArray();\n        buildings[2][4].current = Limit(current4).toArray();\n        buildings[2][3].current = Limit(current3).toArray();\n        buildings[2][2].current = Limit(current2).toArray();\n\n        const listForMult5 = [dischargeBoost] as Array<number | overlimit>;\n        researchesExtraInfo[2].effect[2] = Limit(player.vaporization.clouds).power(0.1).toArray();\n        if (researchesExtra[2][2] >= 1) { listForMult5.push(researchesExtraInfo[2].effect[2]); }\n        producing[2][5] = Limit(2 * current5).multiply(...listForMult5).toArray();\n\n        const listForMult4 = [dischargeBoost] as Array<number | overlimit>;\n        if (Limit(producing[2][5]).moreThan([1, 0])) { listForMult4.push(producing[2][5]); }\n        producing[2][4] = Limit(2 * current4).multiply(...listForMult4).toArray();\n\n        const listForMult3 = [dischargeBoost] as Array<number | overlimit>;\n        if (Limit(producing[2][4]).moreThan([1, 0])) { listForMult3.push(producing[2][4]); }\n        producing[2][3] = Limit(2 * current3).multiply(...listForMult3).toArray();\n\n        const listForMult2 = [player.vaporization.clouds, dischargeBoost] as Array<number | overlimit>;\n        upgradesInfo[2].effect[2] = 0.02 + researches[2][2] * 0.02;\n        upgradesInfo[2].effect[3] = 0.02 + researches[2][3] * 0.03;\n        researchesExtraInfo[2].effect[1] = vacuum ? 2 ** researchesExtra[2][1] : 10 ** (researchesExtra[2][1] - 1); //Clouds production of Drops (pre Vacuum)\n        strangeInfo.stageBoost[2] = strangeness[2][8] >= 1 ? (strangeQuarks + 1) ** 0.32 : null;\n        let prod2Number = 3 * current2;\n        if (upgrades[2][2] === 1) { listForMult2.push(Limit(buildings[2][0][researches[2][1] >= 2 ? 'total' : 'current']).power(upgradesInfo[2].effect[2]).toArray()); }\n        if (upgrades[2][3] === 1) { listForMult2.push(Limit(buildings[2][1][researches[2][1] >= 1 ? 'total' : 'current']).max([1, 0]).power(upgradesInfo[2].effect[3]).toArray()); }\n        if (vacuum && researchesExtra[2][1] >= 1) { prod2Number *= researchesExtraInfo[2].effect[1]; }\n        if (Limit(producing[2][3]).moreThan([1, 0])) { listForMult2.push(producing[2][3]); }\n        if (strangeness[2][1] >= 1) { prod2Number *= 2 ** strangeness[2][1]; }\n        if (strangeInfo.stageBoost[2] !== null) { listForMult2.push(strangeInfo.stageBoost[2]); }\n        producing[2][2] = Limit(prod2Number).multiply(...listForMult2).toArray();\n\n        const effective = Limit(buildings[2][1].current).minus(buildings[2][1].true).toArray();\n        const listForMult1 = [dischargeBoost, (!vacuum || Limit(effective).lessThan([1, 0]) ? buildings[2][1].current : Limit(effective).power(0.5).plus(buildings[2][1].true).toArray())] as Array<number | overlimit>;\n        if (researches[2][0] >= 1) { listForMult1.push(3 ** researches[2][0]); }\n        if (upgrades[2][0] === 1) { listForMult1.push(Limit([vacuum ? 1.05 : 1.1, 0]).power(buildings[2][1].true).toArray()); }\n        if (strangeness[2][0] >= 1) { listForMult1.push(2 ** strangeness[2][0]); }\n        producing[2][1] = Limit(vacuum ? [1, 0] : [6, -4]).multiply(...listForMult1).toArray();\n        if (vacuum) {\n            producing[2][1] = Limit(producing[2][1]).plus([1, 0]).toArray();\n            upgradesInfo[1].effect[8] = Limit(upgradesInfo[1].effect[8] as overlimit).multiply(producing[2][1]).toArray();\n        }\n\n        if (current2 < 1) { //Hardlock prevention\n            if (!vacuum && Limit(buildings[2][1].current).equal([0, 0]) && Limit(buildings[2][0].current).lessThan([2.8, -3])) { buildings[2][0].current = [2.8, -3]; }\n            if (Limit(buildings[2][1].current).lessThan(buildings[2][1].true)) {\n                const old = buildings[2][1].true;\n                buildings[2][1].true = Math.floor(Limit(buildings[2][1].current).toNumber());\n                if (vacuum) { player.discharge.energy -= (old - buildings[2][1].true) * global.dischargeInfo.energyType[2][1]; }\n            }\n        }\n    }\n    if (activeAll.includes(3)) {\n        if (vacuum) { buildings[3][0].current = Limit(buildings[1][0].current).multiply([1.78266192, -33]).toArray(); }\n\n        producing[3][4] = Limit((upgrades[3][12] === 1 ? [1.14, 0] : [1.1, 0])).power(buildings[3][4].true).multiply(dischargeBoost).toArray();\n\n        const listForMult3 = [producing[3][4], dischargeBoost] as Array<number | overlimit>;\n        let prod3Number = 0.1;\n        if (upgrades[3][4] === 1 && researchesExtra[3][2] > 0) { prod3Number *= 2; }\n        if (upgrades[3][8] === 1) { listForMult3.push(Limit([1.005, 0]).power(buildings[3][3].true).toArray()); }\n        if (strangeness[3][1] >= 1) { prod3Number *= 2 ** strangeness[3][1]; }\n        listForMult3.push(prod3Number);\n        producing[3][3] = Limit(buildings[3][3].current).multiply(...listForMult3).toArray();\n\n        const listForMult2 = [dischargeBoost] as Array<number | overlimit>;\n        researchesInfo[3].effect[5] = Limit(buildings[3][0].current).power(0.025 * researches[3][5]).toNumber();\n        if (vacuum && researchesInfo[3].effect[5] > 4000) { researchesInfo[3].effect[5] = 4000; }\n        let prod2Number = 0.1;\n        if (upgrades[3][3] === 1) { listForMult2.push(Limit([1.02, 0]).power(buildings[3][2].true).toArray()); }\n        if (upgrades[3][4] === 1) { prod2Number *= 4; }\n        if (researches[3][2] >= 1) { prod2Number *= 3 ** researches[3][2]; }\n        if (researches[3][4] >= 1) { prod2Number *= 5 ** researches[3][4]; }\n        if (researches[3][5] >= 1) { prod2Number *= researchesInfo[3].effect[5]; }\n        if (strangeness[3][1] >= 1) { prod2Number *= 2 ** strangeness[3][1]; }\n        if (strangeness[3][3] >= 1) { listForMult2.push(producing[3][4]); }\n        listForMult2.push(prod2Number);\n        producing[3][2] = Limit(buildings[3][2].current).multiply(...listForMult2).toArray();\n\n        const listForMult1 = [dischargeBoost] as Array<number | overlimit>;\n        upgradesInfo[3].effect[0] = 1.01 + 0.01 * researches[3][1];\n        upgradesInfo[3].effect[1] = Limit(buildings[3][1].current).power(0.05 + 0.01 * researchesExtra[3][3]).toArray();\n        upgradesInfo[3].effect[7] = 2 * 1.5 ** researches[3][6];\n        upgradesInfo[3].effect[10] = vacuum ? (3 * 2 ** researches[3][7]) : (10 * 3 ** researches[3][7]);\n        researchesExtraInfo[3].effect[0] = 1.1 ** researchesExtra[3][0];\n        researchesExtraInfo[3].effect[1] = (1 + 0.1 * researchesExtra[3][1]) ** player.accretion.rank;\n        let prod1Number = vacuum ? 1 : 1e-19;\n        if (upgrades[3][0] === 1) { listForMult1.push(Limit(upgradesInfo[3].effect[0]).power(buildings[3][1].true).toArray()); }\n        if (upgrades[3][1] === 1) { listForMult1.push(upgradesInfo[3].effect[1]); }\n        if (upgrades[3][2] === 1) { prod1Number *= 2; }\n        if (upgrades[3][5] === 1) { prod1Number *= 3; }\n        if (upgrades[3][7] === 1) { prod1Number *= upgradesInfo[3].effect[7]; }\n        if (upgrades[3][9] === 1) { prod1Number *= 2; }\n        if (upgrades[3][10] === 1) { prod1Number *= upgradesInfo[3].effect[10]; }\n        if (researches[3][0] >= 1) { prod1Number *= 3 ** researches[3][0]; }\n        if (researches[3][3] >= 1) { prod1Number *= 2 ** researches[3][3]; }\n        if (researchesExtra[3][0] >= 1) { prod1Number *= researchesExtraInfo[3].effect[0]; }\n        if (researchesExtra[3][1] >= 1) { prod1Number *= researchesExtraInfo[3].effect[1]; }\n        if (strangeness[3][0] >= 1) { prod1Number *= 2 ** strangeness[3][0]; }\n        if (strangeness[3][3] >= 1) { listForMult1.push(producing[3][4]); }\n        listForMult1.push(prod1Number);\n        producing[3][1] = Limit(buildings[3][1].current).multiply(...listForMult1).toArray();\n        if (vacuum) {\n            const { elements } = player;\n            let capGain = 1;\n            if (elements[3] === 1) { capGain += 0.25; }\n            if (elements[5] === 1) { capGain += 0.0375 * buildings[4][1].true; }\n            if (elements[10] === 1) { capGain *= 2; }\n            if (elements[14] === 1) { capGain *= 1.4; }\n            inflationInfo.dustCap = Limit([5, 45]).multiply((1 + buildings[4][1].true + (elements[15] === 1 ? buildings[4][2].true + buildings[4][3].true + buildings[4][4].true : 0)) * capGain).toArray();\n\n            producing[3][1] = Limit(producing[3][1]).plus([1, 0]).toArray();\n            if (Limit(producing[3][1]).moreOrEqual(inflationInfo.dustCap)) { producing[3][1] = inflationInfo.dustCap; }\n            producing[1][1] = Limit(producing[1][1]).multiply(producing[3][1]).toArray();\n\n            researchesExtraInfo[3].effect[4] = researchesExtraInfo[3].effect[1] * researchesExtra[3][4];\n            if (researchesExtra[3][4] >= 1) { producing[2][2] = Limit(producing[2][2]).multiply(researchesExtraInfo[3].effect[4]).toArray(); }\n        } else if (player.accretion.rank >= 5) {\n            producing[3][1] = Limit(producing[3][1]).power(Limit(producing[3][1]).lessThan([1, 0]) ? 1.1 : 0.8).toArray();\n        }\n    }\n    if (activeAll.includes(4)) {\n        const { elements } = player;\n        const { stars } = player.collapse;\n        const { starEffect } = global.collapseInfo;\n\n        researchesInfo[4].effect[1] = Limit(1 + (0.01 * Math.min(researches[4][1], 5)) + (researches[4][1] > 5 ? 0.005 * (researches[4][1] - 5) : 0)).power(buildings[4][1].true + buildings[4][2].true + buildings[4][3].true + buildings[4][4].true).toArray();\n        if (Limit(researchesInfo[4].effect[1]).moreThan([1, 10])) { researchesInfo[4].effect[1] = Limit(researchesInfo[4].effect[1]).minus([1, 10]).power(0.7).plus([1, 10]).toArray(); }\n\n        const listForTotal = [researchesInfo[4].effect[1]] as Array<number | overlimit>;\n        strangeInfo.stageBoost[4] = strangeness[4][9] >= 1 ? (strangeQuarks + 1) ** 0.36 : null;\n        researchesInfo[4].effect[0] = (1.1 + 0.2 * researches[4][2]) ** researches[4][0];\n        let totalNumber = researchesInfo[4].effect[0] * dischargeBoost * starEffect[1]();\n        if (elements[4] === 1) { totalNumber *= 1.1; }\n        if (elements[19] === 1) { totalNumber *= 3; }\n        if (elements[23] === 1 && stars[2] > 10) { totalNumber *= Math.log10(stars[2]); }\n        if (elements[24] === 1) { listForTotal.push(Limit(buildings[4][0].current).max([1, 0]).power(0.01).toArray()); }\n        if (elements[26] === 1) { totalNumber *= 2; }\n        if (strangeness[4][0] >= 1) { totalNumber *= 1.5 ** strangeness[4][0]; }\n        if (vacuum || player.milestones[1][1] >= 3) { totalNumber *= 4; }\n        if (strangeInfo.stageBoost[4] !== null) { listForTotal.push(strangeInfo.stageBoost[4]); }\n        listForTotal.push(totalNumber);\n        const totalMultiplier = Limit(player.collapse.mass ** (elements[21] === 1 ? 1.1 : 1)).multiply(...listForTotal).toArray();\n\n        producing[4][4] = Limit([2, 9]).multiply(buildings[4][4].current, totalMultiplier).toArray();\n\n        producing[4][3] = Limit([2.5, 7]).multiply(buildings[4][3].current, totalMultiplier).toArray();\n\n        const listForMult2 = [totalMultiplier] as Array<number | overlimit>;\n        let prod2Number = 300 * starEffect[0]();\n        if (researches[4][3] >= 1) { prod2Number *= 10; }\n        listForMult2.push(prod2Number);\n        producing[4][2] = Limit(buildings[4][2].current).multiply(...listForMult2).toArray();\n\n        const listForMult1 = [totalMultiplier] as Array<number | overlimit>;\n        let prod1Number = 22;\n        if (elements[1] === 1) { prod1Number *= 2; }\n        listForMult1.push(prod1Number);\n        producing[4][1] = Limit(buildings[4][1].current).multiply(...listForMult1).toArray();\n    }\n    if (activeAll.includes(5)) {\n        producing[5][3] = Limit([1, 1]).power(buildings[5][3].true).toArray();\n\n        const listForMult2 = [producing[5][3]] as Array<number | overlimit>;\n        let prod2Number = 1.5;\n        upgradesInfo[5].effect[1] = 6 * (4 ** strangeness[5][4]);\n        if (upgrades[5][1] === 1) { prod2Number *= upgradesInfo[5].effect[1]; }\n        if (researches[5][1] >= 1) { prod2Number *= 3 ** researches[5][1]; }\n        listForMult2.push(prod2Number);\n        producing[5][2] = Limit(buildings[5][2].current).multiply(...listForMult2).toArray();\n\n        const listForMult1 = [producing[5][3]] as Array<number | overlimit>;\n        let prod1Number = 1;\n        upgradesInfo[5].effect[0] = 4 * (3 ** strangeness[5][3]);\n        if (upgrades[5][0] === 1) { prod1Number *= upgradesInfo[5].effect[0]; }\n        if (researches[5][0] >= 1) { prod1Number *= 4 ** researches[5][0]; }\n        listForMult1.push(prod1Number);\n        producing[5][1] = Limit(buildings[5][1].current).multiply(...listForMult1).toArray();\n\n        const clusterBoost = producing[5][2];\n        if (Limit(clusterBoost).moreThan([1, 0])) {\n            producing[4][4] = Limit(producing[4][4]).multiply(clusterBoost).toArray();\n            if (researches[5][1] >= 2) { producing[4][3] = Limit(producing[4][3]).multiply(clusterBoost).divide([3, 0]).toArray(); }\n            if (researches[5][1] >= 3) { producing[4][2] = Limit(producing[4][2]).multiply(clusterBoost).divide([9, 0]).toArray(); }\n            if (researches[5][1] >= 4) { producing[4][1] = Limit(producing[4][1]).multiply(clusterBoost).divide([2.7, 1]).toArray(); }\n        }\n    }\n};\n\nexport const buyBuilding = (index: number, stageIndex = player.stage.active, auto = false) => {\n    if (!checkBuilding(index, stageIndex)) { return; }\n\n    const { buildingsInfo } = global;\n    const building = player.buildings[stageIndex][index as 1];\n\n    const galaxy = stageIndex === 5 && index === 3;\n    const convert = ((stageIndex === 2 && index === 1) || stageIndex === 3) && player.inflation.vacuum;\n\n    let extra = index - 1; //What you are paying\n    let stageExtra = stageIndex;\n    if (stageIndex === 2) {\n        if (index !== 1) { extra = 1; } //Drops\n    } else if (stageIndex >= 3) {\n        extra = 0; //Mass || Elements\n        if (stageIndex === 5) { stageExtra = 4; }\n    }\n\n    let keep = 1;\n    let currency: number | overlimit;\n    if (galaxy) {\n        currency = player.collapse.mass;\n    } else if (convert) {\n        currency = stageIndex === 2 ?\n            Limit(player.buildings[1][5].current).divide([6.02214076, 23]).toArray() :\n            Limit(player.buildings[1][0].current).multiply([1.78266192, -33]).toArray();\n    } else {\n        currency = cloneArray(player.buildings[stageExtra][extra].current);\n    }\n    if (auto && building.true > 0 && !galaxy) { keep = 2; }\n\n    const cost = calculateBuildingsCost(index, stageIndex);\n    if (Limit(cost).multiply(keep).moreThan(currency)) {\n        if (global.screenReader && !auto) { getId('SRMain').textContent = `Coudn't make '${buildingsInfo.name[stageIndex][index]}', because didn't had enough of '${galaxy ? 'Mass' : convert && stageIndex === 2 ? 'Moles' : buildingsInfo.name[stageExtra][extra]}'`; }\n        return;\n    }\n    const howMany = player.researchesAuto[0] === 0 ? 1 : auto ? -1 : player.toggles.shop.howMany;\n\n    let canAfford: number;\n    let total: overlimit;\n    if (howMany !== 1) {\n        const increase = buildingsInfo.increase[stageIndex][index]; //Must be >1; for <1, formulas are '1 - increase', '1 - increase ** levels'\n        const firstCost = buildingsInfo.firstCost[stageIndex][index];\n        const alreadyBought = building.true;\n        const totalBefore = Limit(increase).power(alreadyBought).minus([1, 0]).divide(increase - 1).multiply(firstCost).toArray();\n        const maxAfford = Math.floor(Limit(currency).divide(keep).plus(totalBefore).multiply(increase - 1).divide(firstCost).plus([1, 0]).log(10).divide(Math.log10(increase)).toNumber()) - alreadyBought;\n\n        if (maxAfford < howMany && howMany !== -1 && player.toggles.shop.strict) { return; }\n        canAfford = howMany !== -1 ? Math.min(maxAfford, howMany) : maxAfford;\n        total = Limit(increase).power(canAfford + alreadyBought).minus([1, 0]).divide(increase - 1).multiply(firstCost).minus(totalBefore).toArray();\n        if (Limit(total).moreThan(currency)) { return console.warn('Prevented NaN from Structure creation'); } //Floats are a pain\n    } else {\n        canAfford = 1;\n        total = cost;\n    }\n\n    currency = Limit(currency).minus(total).toArray();\n    building.true += canAfford;\n    building.current = Limit(building.current).plus(canAfford).toArray();\n    building.total = Limit(building.total).plus(canAfford).toArray();\n    building.trueTotal = Limit(building.trueTotal).plus(canAfford).toArray();\n    if (Limit(building.highest).lessThan(building.current)) { building.highest = cloneArray(building.current); }\n\n    if (galaxy) {\n        //player.collapse.mass = Math.max(Limit(currency).toNumber(), 0.01235);\n        reset('galaxy', player.inflation.vacuum ? [1, 2, 3, 4, 5] : [4, 5]);\n    } else {\n        if (convert) {\n            stageIndex === 2 ?\n                player.buildings[1][5].current = Limit(currency).multiply([6.02214076, 23]).toArray() :\n                player.buildings[1][0].current = Limit(currency).divide([1.78266192, -33]).toArray();\n        } else { player.buildings[stageExtra][extra].current = currency; }\n\n        assignBuildingInformation();\n        if (stageIndex === player.stage.active) { numbersUpdate(); }\n    }\n\n    //Milestones that are based on bought amount\n    if (player.inflation.vacuum || stageIndex === 1) {\n        if (player.strangeness[1][9] < 1) {\n            global.dischargeInfo.updateEnergy();\n            player.discharge.energy += global.dischargeInfo.energyType[stageIndex][index] * canAfford;\n        }\n        assignEnergy();\n        milestoneCheck(1, 1);\n    }\n    if (stageIndex === 2) {\n        if (index !== 1) { milestoneCheck(1, 2); }\n    } else if (stageIndex === 3) {\n        if (index === 4) { milestoneCheck(1, 3); }\n    } else if (stageIndex === 4) {\n        global.collapseInfo.trueStars += canAfford;\n        milestoneCheck(0, 5);\n    } else if (stageIndex === 5) {\n        if (index === 3) {\n            milestoneCheck(1, 5);\n            if (!player.events[2]) { playEvent(5, 2); }\n        }\n    }\n    if (!auto && global.screenReader) { getId('SRMain').textContent = `Maded ${format(canAfford)} '${buildingsInfo.name[stageIndex][index]}'`; }\n};\n\nexport const assignEnergy = () => {\n    const { discharge } = player;\n\n    if (player.strangeness[1][9] >= 1) {\n        const { dischargeInfo } = global;\n        dischargeInfo.updateEnergy();\n\n        let total = 0;\n        for (let s = 1; s < dischargeInfo.energyType.length; s++) {\n            const energyType = dischargeInfo.energyType[s];\n            const buildings = player.buildings[s];\n\n            for (let i = 1; i < energyType.length; i++) {\n                total += energyType[i] * buildings[i as 1].true;\n            }\n        }\n        discharge.energy = total;\n    }\n    if (!discharge.unlock) { discharge.unlock = discharge.energy >= (player.inflation.vacuum ? 32 : 9); }\n    if (discharge.energyMax < discharge.energy) { discharge.energyMax = discharge.energy; }\n};\n\nexport const calculateBuildingsCost = (index: number, stageIndex: number): overlimit => {\n    const { buildingsInfo } = global;\n\n    if (stageIndex === 1) {\n        global.upgradesInfo[1].effect[6] = (20 + player.researches[1][0]) / 100; //(0.2 + 1 / 100) / 100\n        buildingsInfo.increase[1][index] = Math.round((1.4 - (player.upgrades[1][6] === 1 ? global.upgradesInfo[1].effect[6] : 0)) * 100) / 100;\n        if (index === 1) {\n            buildingsInfo.firstCost[1][1] = buildingsInfo.startCost[1][1] / (!player.inflation.vacuum && player.upgrades[1][2] === 1 ? 10 : 1);\n        } else if (index === 3) {\n            buildingsInfo.firstCost[1][3] = buildingsInfo.startCost[1][3] / (player.upgrades[1][1] === 1 ? 10 : 1);\n        } else if (index === 4) {\n            buildingsInfo.firstCost[1][4] = buildingsInfo.startCost[1][4];\n            if (player.inflation.vacuum) {\n                if (player.upgrades[1][2] === 1) { buildingsInfo.firstCost[1][4] /= 10; }\n                if (player.researchesExtra[1][0] >= 1 && player.upgrades[1][1] === 1) { buildingsInfo.firstCost[1][4] /= 10; }\n            }\n        }\n    } else if (stageIndex === 3) {\n        global.strangeInfo.stageBoost[3] = player.strangeness[3][7] < 1 ? null : player.strange[0].current < 800 ? (player.strange[0].current + 1) ** 1.66 : (player.strange[0].current + 1) ** 0.66 * 800;\n        buildingsInfo.firstCost[3][index] = buildingsInfo.startCost[3][index] / (global.strangeInfo.stageBoost[3] ?? 1);\n        if (index === 4) {\n            buildingsInfo.increase[3][4] = player.upgrades[3][11] === 1 ? 5 : 10;\n        }\n    } else if (stageIndex === 4) {\n        buildingsInfo.increase[4][index] = Math.round(((1.4 + 0.15 * (index - 1)) - (player.elements[2] === 1 ? 0.1 : 0) - (player.elements[8] === 1 ? 0.05 : 0)) * 100) / 100;\n        buildingsInfo.firstCost[4][index] = buildingsInfo.startCost[4][index] / (player.elements[13] === 1 ? 1e3 : 1) / (2 ** player.strangeness[4][1]);\n    }\n\n    return Limit(buildingsInfo.increase[stageIndex][index]).power(player.buildings[stageIndex][index as 1].true).multiply(buildingsInfo.firstCost[stageIndex][index]).toArray();\n};\n\nexport const calculateGainedBuildings = (get: number, stageIndex: number, time: number) => {\n    let add: overlimit;\n    if (stageIndex === 1 && get === (player.inflation.vacuum ? 5 : 3)) {\n        add = Limit(global.upgradesInfo[1].effect[8] as overlimit).multiply(time).toArray();\n    } else if (stageIndex === 5) {\n        add = Limit(global.buildingsInfo.producing[5][1]).multiply(time).toArray();\n    } else {\n        add = Limit(global.buildingsInfo.producing[stageIndex][get + 1]).multiply(time).toArray();\n\n        if (stageIndex === 2 && get === 1 && !player.inflation.vacuum && player.researchesExtra[2][1] >= 1) {\n            add = Limit(add).plus(time * (global.researchesExtraInfo[2].effect[1] as number)).toArray();\n        }\n    }\n    if (Limit(add).equal([0, 0])) { return; }\n\n    let stageGet = stageIndex;\n    if (stageIndex === 4) {\n        get = 0;\n    } else if (stageIndex === 5) {\n        if (get > 0) { add = Limit(add).divide(4 ** get).toArray(); }\n        stageGet = 4;\n        get++;\n    }\n    const building = player.buildings[stageGet][get];\n\n    building.current = Limit(building.current).plus(add).toArray();\n    building.total = Limit(building.total).plus(add).toArray();\n    building.trueTotal = Limit(building.trueTotal).plus(add).toArray();\n    if (Limit(building.highest).lessThan(building.current)) { building.highest = cloneArray(building.current); }\n\n    if (!player.inflation.vacuum) {\n        if (Limit(building.current).moreThan([1, 300])) { building.current = [1, 300]; }\n        if (Limit(building.total).moreThan([1, 300])) { building.total = [1, 300]; }\n        if (Limit(building.trueTotal).moreThan([1, 300])) { building.trueTotal = [1, 300]; }\n        if (Limit(building.highest).moreThan([1, 300])) { building.highest = [1, 300]; }\n    }\n\n    //Milestones that are based on gained amount\n    if (stageIndex === 3) {\n        if (get === 0) { //It's never 0 after vacuum\n            if (player.accretion.rank < 5 && Limit(building.current).moreThan([1, 30])) { building.current = [1, 30]; }\n            milestoneCheck(0, 3);\n        }\n    } else if (stageIndex === 4) {\n        if (Limit(player.collapse.elementsMax).lessThan(building.current)) { player.collapse.elementsMax = cloneArray(building.current); }\n    }\n};\n\nexport const buyUpgrades = (upgrade: number, stageIndex: 'auto' | number, type: 'upgrades' | 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'elements' | 'strangeness', auto = false): boolean => {\n    if (stageIndex === 'auto') { stageIndex = player.stage.active; }\n    if (type === 'ASR') { upgrade = stageIndex; }\n    if (!auto && !checkUpgrade(upgrade, stageIndex, type)) { return false; } //Auto already checked if allowed\n\n    let currency: number | overlimit;\n    if (type === 'strangeness') {\n        currency = player.strange[0].current;\n    } else if (stageIndex === 1) {\n        currency = player.discharge.energy;\n    } else if (stageIndex === 2) {\n        currency = cloneArray(player.buildings[2][1].current);\n    } else if (stageIndex === 3) {\n        currency = player.inflation.vacuum ?\n            Limit(player.buildings[1][0].current).multiply([1.78266192, -33]).toArray() :\n            cloneArray(player.buildings[3][0].current);\n    } else /* if (stageIndex === 4 || stageIndex === 5) */ {\n        currency = cloneArray(player.buildings[4][0].current);\n    }\n\n    if (type === 'upgrades') {\n        if (player.upgrades[stageIndex][upgrade] >= 1) { return false; }\n\n        const pointer = global.upgradesInfo[stageIndex];\n        if (Limit(currency).lessThan(pointer.startCost[upgrade])) { return false; }\n\n        player.upgrades[stageIndex][upgrade]++;\n        currency = Limit(currency).minus(pointer.startCost[upgrade]).toArray();\n\n        if (global.screenReader && !auto) { getId('SRMain').textContent = `You have created upgrade '${pointer.description[upgrade]}'`; }\n    } else if (type === 'researches' || type === 'researchesExtra') {\n        const pointer = global[type + 'Info' as 'researchesInfo'][stageIndex];\n\n        if (player[type][stageIndex][upgrade] >= pointer.max[upgrade]) { return false; }\n        if (Limit(currency).lessThan(pointer.cost[upgrade])) { return false; }\n\n        player[type][stageIndex][upgrade]++;\n        currency = Limit(currency).minus(pointer.cost[upgrade]).toArray();\n\n        /* Special cases */\n        if (type === 'researches') {\n            if (stageIndex === 4 && upgrade === 2) {\n                calculateMaxLevel(0, 4, 'researches');\n            }\n        } else if (type === 'researchesExtra') {\n            if (stageIndex === 1 && upgrade === 2) {\n                player.stage.current++;\n                stageCheck('soft');\n            }\n        }\n        if (global.screenReader && !auto) { getId('SRMain').textContent = `You have researched '${pointer.description[upgrade]}', level is now ${player[type][upgrade]} ${player[type][stageIndex][upgrade] >= pointer.max[upgrade] ? 'maxed' : ''}`; }\n        calculateResearchCost(upgrade, stageIndex, type);\n    } else if (type === 'researchesAuto' || type === 'ASR') {\n        const pointer = global[type + 'Info' as 'researchesAutoInfo'];\n\n        if (player[type][upgrade] >= pointer.max[upgrade]) { return false; }\n        if (Limit(currency).lessThan(pointer.cost[upgrade])) { return false; }\n\n        player[type][upgrade]++;\n        currency = Limit(currency).minus(pointer.cost[upgrade]).toArray();\n\n        /* Special cases */\n        if (global.screenReader && !auto) { getId('SRMain').textContent = `You have researched '${type === 'ASR' ? 'Automatization for making Structures.' : pointer.description[upgrade]}', level is now ${player[type][upgrade]} ${player[type][upgrade] >= pointer.max[upgrade] ? 'maxed' : ''}`; }\n        calculateResearchCost(upgrade, stageIndex, type);\n    } else if (type === 'elements') {\n        if (player.elements[upgrade] >= 1) { return false; }\n\n        const { elementsInfo } = global;\n        if (Limit(currency).lessThan(elementsInfo.startCost[upgrade])) { return false; }\n\n        player.elements[upgrade] = 1;\n        currency = Limit(currency).minus(elementsInfo.startCost[upgrade]).toArray();\n        if (!player.collapse.show.includes(upgrade)) { player.collapse.show.push(upgrade); }\n\n        /* Special cases */\n        if (upgrade === 7 || upgrade === 16 || upgrade === 20 || upgrade === 25) {\n            calculateMaxLevel(1, 4, 'researches');\n        } else if (upgrade === 9 || upgrade === 17) {\n            calculateMaxLevel(0, 4, 'researches');\n        } else if (upgrade === 11) {\n            calculateMaxLevel(2, 4, 'researches');\n        } else if (upgrade === 26 && player.stage.current === 4) {\n            stageNoReset();\n        }\n        if (global.screenReader && !auto) { getId('SRMain').textContent = `You have obtained Element '${elementsInfo.description[upgrade]}'`; }\n    } else if (type === 'strangeness') {\n        const pointer = global.strangenessInfo[stageIndex];\n\n        if (player.strangeness[stageIndex][upgrade] >= pointer.max[upgrade]) { return false; }\n        if (currency < global.strangenessInfo[stageIndex].cost[upgrade]) { return false; }\n\n        player.strangeness[stageIndex][upgrade]++;\n        (currency as number) -= pointer.cost[upgrade];\n\n        /* Special cases */\n        if ( //Auto only to save space\n            ((stageIndex === 1 || stageIndex === 4) && upgrade === 6) ||\n            ((stageIndex === 2 || stageIndex === 3) && upgrade === 5) ||\n            (stageIndex === 5 && (upgrade === 7 || (upgrade === 6 && player.strangeness[5][6] === 2)))\n        ) {\n            player.ASR[stageIndex] = Math.max(player.strangeness[stageIndex][upgrade], player.ASR[stageIndex]);\n            if (stageIndex === 5 && player.strangeness[5][6] >= 2) { player.ASR[5]++; }\n            calculateMaxLevel(0, stageIndex, 'ASR');\n        } else if (stageIndex === 1) {\n            if (upgrade === 7) {\n                player.researchesAuto[0] = Math.max(1, player.researchesAuto[0]);\n                calculateMaxLevel(0, 1, 'researchesAuto');\n            } else if (upgrade === 9) {\n                //calculateMaxLevel(3, 1, 'strangeness');\n                //calculateMaxLevel(4, 2, 'strangeness');\n                //calculateMaxLevel(5, 4, 'strangeness');\n            }\n        } else if (stageIndex === 2) {\n            if (upgrade === 2) {\n                if (player.strangeness[2][2] < 3) { calculateMaxLevel(4, 2, 'researches'); }\n                if (player.strangeness[2][2] === 2) { calculateMaxLevel(5, 2, 'researches'); }\n            } else if (upgrade === 6) {\n                player.researchesAuto[1] = Math.max(1, player.researchesAuto[1]);\n                calculateMaxLevel(1, 2, 'researchesAuto');\n            }\n        } else if (stageIndex === 3) {\n            if (upgrade === 2) {\n                calculateMaxLevel(0, 3, 'researchesExtra');\n                calculateMaxLevel(1, 3, 'researchesExtra');\n            } else if (upgrade === 6) {\n                calculateMaxLevel(2, 3, 'researchesAuto');\n            }\n        } else if (stageIndex === 5) {\n            if (upgrade === 0) {\n                if (!player.inflation.vacuum && !global.stageInfo.activeAll.includes(player.strangeness[5][0])) {\n                    reset('stage', [player.strangeness[5][0]]);\n                    stageCheck('soft');\n                }\n            }\n        }\n        if (global.screenReader) { getId('SRMain').textContent = `You have increased strangeness of ${pointer.description[upgrade]} for ${global.stageInfo.word[stageIndex]} stage, level is now ${player.strangeness[stageIndex][upgrade]}${player.strangeness[stageIndex][upgrade] >= pointer.max[upgrade] ? 'maxed' : ''}`; }\n        calculateResearchCost(upgrade, stageIndex, type);\n    }\n\n    if (type === 'strangeness') {\n        player.strange[0].current = currency as number;\n    } else if (stageIndex === 1) {\n        if (player.strangeness[1][9] < 1) {\n            player.discharge.energy = Limit(currency).toNumber();\n            if (player.toggles.auto[1]) { dischargeResetCheck('upgrade'); }\n        }\n    } else if (stageIndex === 2) {\n        player.buildings[stageIndex][1].current = currency as overlimit;\n    } else if (stageIndex === 3) {\n        player.inflation.vacuum ?\n            player.buildings[1][0].current = Limit(currency).divide([1.78266192, -33]).toArray() :\n            player.buildings[3][0].current = currency as overlimit;\n    } else /*if (stageIndex === 4 || stageIndex === 5)*/ {\n        player.buildings[4][0].current = currency as overlimit;\n    }\n\n    visualUpdateUpgrades(upgrade, stageIndex, type);\n    if (!auto) { getUpgradeDescription(upgrade, stageIndex, type); }\n    if (!auto || stageIndex === player.stage.active || (type === 'elements' && player.stage.active === 5) || type === 'strangeness') { numbersUpdate(); }\n    return true;\n};\n\n//Currently can't allow price to be more than 2**1024. Because missing sorting function for numbers that big\nexport const calculateResearchCost = (research: number, stageIndex: number, type: 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'strangeness') => {\n    if (type === 'researches' || type === 'researchesExtra' || type === 'researchesAuto') {\n        const pointer = type === 'researchesAuto' ? global.researchesAutoInfo : global[type + 'Info' as 'researchesInfo'][stageIndex];\n\n        pointer.cost[research] = stageIndex === 1 ?\n            pointer.startCost[research] + pointer.scaling[research] * (type === 'researchesAuto' ? player.researchesAuto[research] : player[type][stageIndex][research]) :\n            pointer.startCost[research] * pointer.scaling[research] ** (type === 'researchesAuto' ? player.researchesAuto[research] : player[type][stageIndex][research]);\n\n        if (pointer.cost[research] < 1) { //Remove all but 2 digits\n            const digits = 10 ** (-Math.floor(Math.log10(pointer.cost[research])) + 2);\n            pointer.cost[research] = Math.round(pointer.cost[research] * digits) / digits;\n        } else {\n            pointer.cost[research] = Math.round(pointer.cost[research] * 100) / 100;\n        }\n    } else if (type === 'ASR') { //Cost will be undefined if above max\n        global.ASRInfo.cost[stageIndex] = global.ASRInfo.costRange[stageIndex][player.ASR[stageIndex]];\n    } else if (type === 'strangeness') {\n        global.strangenessInfo[stageIndex].cost[research] = player.inflation.vacuum ?\n            Math.floor(Math.round((global.strangenessInfo[stageIndex].startCost[research] * global.strangenessInfo[stageIndex].scaling[research] ** player.strangeness[stageIndex][research]) * 100) / 100) :\n            Math.floor(Math.round((global.strangenessInfo[stageIndex].startCost[research] + global.strangenessInfo[stageIndex].scaling[research] * player.strangeness[stageIndex][research]) * 100) / 100);\n    }\n};\n\nexport const calculateMaxLevel = (research: number, stageIndex: number, type: 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'strangeness') => {\n    if (type === 'researchesAuto') {\n        if (research === 0) {\n            global.researchesAutoInfo.max[0] = player.strangeness[1][7] + 1;\n            if (player.inflation.vacuum) { global.researchesAutoInfo.max[0]++; }\n        } else if (research === 1) {\n            global.researchesAutoInfo.max[1] = player.strangeness[2][6] + 1;\n        } else if (research === 2) {\n            global.researchesAutoInfo.max[2] = player.strangeness[3][6];\n        }\n    } else if (type === 'ASR') {\n        if (stageIndex === 1) {\n            global.ASRInfo.max[1] = player.inflation.vacuum ? 5 : 3;\n        } else if (stageIndex === 5) {\n            global.ASRInfo.max[5] = player.strangeness[5][7];\n            if (player.strangeness[5][6] >= 2) { global.ASRInfo.max[5]++; }\n        }\n    } else if (type === 'researches') {\n        if (stageIndex === 2) {\n            if (research === 4) {\n                global.researchesInfo[2].max[4] = 2 + Math.min(player.strangeness[2][2], 2);\n            } else if (research === 5) {\n                global.researchesInfo[2].max[5] = 2;\n                if (player.strangeness[2][2] >= 2) { global.researchesInfo[2].max[5] += 1; }\n            }\n        } else if (stageIndex === 4) {\n            if (research === 0) {\n                global.researchesInfo[4].max[0] = 3 + (3 * player.researches[4][2]);\n                if (player.elements[9] === 1) { global.researchesInfo[4].max[0] += 12; }\n                if (player.elements[17] === 1) { global.researchesInfo[4].max[0] += 27; }\n            } else if (research === 1) {\n                global.researchesInfo[4].max[1] = 2;\n                if (player.elements[7] === 1) { global.researchesInfo[4].max[1] += 2; }\n                for (const i of [16, 20, 25]) {\n                    if (player.elements[i] === 1) { global.researchesInfo[4].max[1] += 1; }\n                }\n            } else if (research === 2) {\n                global.researchesInfo[4].max[2] = player.elements[11] === 1 ? 2 : 1;\n            }\n        }\n    } else if (type === 'researchesExtra') {\n        if (stageIndex === 3) {\n            if (research === 0) {\n                global.researchesExtraInfo[3].max[0] = 12;\n                if (player.accretion.rank >= 3) { global.researchesExtraInfo[3].max[0] += 17; }\n                if (player.strangeness[3][2] >= 1) { global.researchesExtraInfo[3].max[0] += 10 * Math.min(player.strangeness[3][2], 2); }\n            } else if (research === 1) {\n                global.researchesExtraInfo[3].max[1] = 5;\n                if (player.strangeness[3][2] >= 1) { global.researchesExtraInfo[3].max[1] += 1 * Math.min(player.strangeness[3][2], 2); }\n            } else if (research === 3) {\n                global.researchesExtraInfo[3].max[3] = player.inflation.vacuum ? 2 : 20;\n            } else if (research === 4) {\n                global.researchesExtraInfo[3].max[4] = 1;\n                if (player.accretion.rank >= 4) { global.researchesExtraInfo[3].max[4] += Math.min(player.accretion.rank - 3, 2); }\n            }\n        }\n    } else if (type === 'strangeness') {\n        if (stageIndex === 1) {\n            if (research === 6) {\n                global.strangenessInfo[1].max[6] = player.inflation.vacuum ? 5 : 3;\n            } else if (research === 7) {\n                global.strangenessInfo[1].max[7] = player.inflation.vacuum ? 1 : 2;\n            }\n        } else if (stageIndex === 2) {\n            if (research === 6) {\n                global.strangenessInfo[2].max[6] = player.inflation.vacuum ? 7 : 4;\n            }\n        } else if (stageIndex === 4) {\n            if (research === 8) {\n                global.strangenessInfo[4].max[8] = player.inflation.vacuum ? 0 : 1;\n            }\n        } else if (stageIndex === 5) {\n            if (research === 0) {\n                global.strangenessInfo[5].max[0] = player.inflation.vacuum ? 0 : 3;\n            } else if (research === 6) {\n                global.strangenessInfo[5].max[6] = player.inflation.vacuum ? 0 : 2;\n            } else if (research === 8) {\n                global.strangenessInfo[5].max[8] = player.inflation.vacuum ? 0 : 1;\n            }\n        }\n    }\n\n    calculateResearchCost(research, stageIndex, type);\n    visualUpdateUpgrades(research, stageIndex, type);\n    if (type === 'researches' || type === 'researchesExtra') { autoResearchesSet(type, [stageIndex, research]); }\n};\n\nexport const autoUpgradesSet = (which: 'all' | number) => {\n    if (!player.toggles.auto[5]) { return; }\n    const { autoU: auto } = global.automatization;\n\n    if (which === 'all') {\n        for (const s of global.stageInfo.activeAll) {\n            auto[s] = [];\n            for (let i = 0; i < global.upgradesInfo[s].maxActive; i++) {\n                if (player.upgrades[s][i] < 1) {\n                    auto[s].push(i);\n                }\n            }\n\n            const { startCost } = global.upgradesInfo[s];\n            auto[s].sort((a, b) => startCost[a] - startCost[b]);\n        }\n    } else if (typeof which === 'number') {\n        auto[which] = [];\n        for (let i = 0; i < global.upgradesInfo[which].maxActive; i++) {\n            if (player.upgrades[which][i] < 1) {\n                auto[which].push(i);\n            }\n        }\n\n        const { startCost } = global.upgradesInfo[which];\n        auto[which].sort((a, b) => startCost[a] - startCost[b]);\n    }\n};\n\nexport const autoUpgradesBuy = (stageIndex: number) => {\n    if (player.researchesAuto[2] < 1 || !player.toggles.auto[5]) { return; }\n    const auto = global.automatization.autoU[stageIndex];\n\n    for (let i = 0; i < auto.length; i++) {\n        const index = auto[i];\n\n        if (!checkUpgrade(index, stageIndex, 'upgrades')) { continue; }\n        buyUpgrades(index, stageIndex, 'upgrades', true);\n\n        if (player.upgrades[stageIndex][index] >= 1) {\n            auto.splice(i, 1);\n            i--;\n        } else { break; }\n    }\n};\n\n//All = reset all of current active stages; As number means reset that stage only; As array means add [1] into stage [0] if it's not already inside\nexport const autoResearchesSet = (type: 'researches' | 'researchesExtra', which: 'all' | number | number[]) => {\n    if (type === 'researches') {\n        if (!player.toggles.auto[6]) { return; }\n    } else if (type === 'researchesExtra') {\n        if (!player.toggles.auto[7]) { return; }\n    }\n\n    const { [type === 'researches' ? 'autoR' : 'autoE']: auto } = global.automatization;\n\n    if (which === 'all') {\n        for (const s of global.stageInfo.activeAll) {\n            const pointer = global[type + 'Info' as 'researchesInfo'][s];\n\n            auto[s] = [];\n            for (let i = 0; i < pointer.maxActive; i++) {\n                if (player[type][s][i] < pointer.max[i]) {\n                    auto[s].push(i);\n                }\n            }\n            auto[s].sort((a, b) => pointer.cost[a] - pointer.cost[b]);\n        }\n    } else if (typeof which === 'number') {\n        const pointer = global[type + 'Info' as 'researchesInfo'][which];\n\n        auto[which] = [];\n        for (let i = 0; i < pointer.maxActive; i++) {\n            if (player[type][which][i] < pointer.max[i]) {\n                auto[which].push(i);\n            }\n        }\n        auto[which].sort((a, b) => pointer.cost[a] - pointer.cost[b]);\n    } else { //Will get sorted automatically\n        if (!auto[which[0]].some((a) => a === which[1])) { auto[which[0]].unshift(which[1]); }\n    }\n};\n\nexport const autoResearchesBuy = (type: 'researches' | 'researchesExtra', stageIndex: number) => {\n    if (type === 'researches') {\n        if (player.researchesAuto[2] < 2 || !player.toggles.auto[6]) { return; }\n    } else if (type === 'researchesExtra') {\n        if (player.researchesAuto[2] < 3 || !player.toggles.auto[7]) { return; }\n    }\n\n    const auto = global.automatization[type === 'researches' ? 'autoR' : 'autoE'][stageIndex];\n    const pointer = global[type + 'Info' as 'researchesInfo'][stageIndex];\n\n    let sort = false;\n    for (let i = 0; i < auto.length; i++) {\n        if (!checkUpgrade(auto[i], stageIndex, type)) { continue; }\n        const bought = buyUpgrades(auto[i], stageIndex, type, true);\n\n        if (player[type][stageIndex][auto[i]] >= pointer.max[auto[i]]) {\n            auto.splice(i, 1);\n            i--;\n        } else {\n            if (!bought) {\n                if (pointer.cost[auto[i]] > pointer.cost[auto[i + 1]]) {\n                    sort = true;\n                    continue;\n                }\n                break;\n            } else { i--; }\n        }\n    }\n    if (sort) { auto.sort((a, b) => pointer.cost[a] - pointer.cost[b]); }\n};\n\nexport const autoElementsSet = () => {\n    if (player.inflation.vacuum ? !player.toggles.auto[8] : !player.collapse.disabled) { return; }\n    const { elements: auto } = global.automatization;\n    const { elements } = player;\n\n    if (player.inflation.vacuum) {\n        for (let i = 1; i < global.elementsInfo.startCost.length; i++) {\n            if (elements[i] === 0) { auto.push(i); }\n        }\n    } else {\n        for (const add of player.collapse.show) {\n            if (elements[add] === 0) { auto.push(add); }\n        }\n    }\n\n    const { startCost } = global.elementsInfo;\n    auto.sort((a, b) => startCost[a] - startCost[b]);\n};\n\nexport const autoElementsBuy = () => {\n    if (player.strangeness[4][4] < 1 || (player.inflation.vacuum ? !player.toggles.auto[8] : !player.collapse.disabled)) { return; }\n    const { elements: auto } = global.automatization;\n    const { elements } = player;\n\n    for (let i = 0; i < auto.length; i++) {\n        const index = auto[i];\n\n        if (!checkUpgrade(index, 4, 'elements')) { break; }\n        buyUpgrades(index, 4, 'elements', true);\n\n        if (elements[index] === 1) {\n            auto.splice(i, 1);\n            i--;\n        } else { break; }\n    }\n\n    if (!player.inflation.vacuum) { player.collapse.disabled = auto.length > 0; }\n};\n\nexport const toggleSwap = (number: number, type: 'normal' | 'buildings' | 'auto', change = false) => {\n    const { toggles } = player;\n\n    let toggle: HTMLButtonElement;\n    if (type === 'normal') {\n        toggle = getId(`toggle${number}`) as HTMLButtonElement;\n    } else if (type === 'buildings') {\n        toggle = getId(`toggleBuilding${number}`) as HTMLButtonElement;\n    } else {\n        toggle = getId(`toggleAuto${number}`) as HTMLButtonElement;\n    }\n\n    if (change) {\n        if (type === 'buildings') {\n            const active = player.stage.active;\n            toggles.buildings[active][number] = !toggles.buildings[active][number];\n            if (number === 0) {\n                for (let i = 1; i < toggles.buildings[active].length; i++) {\n                    toggles.buildings[active][i] = toggles.buildings[active][0];\n                    toggleSwap(i, 'buildings');\n                }\n            } else {\n                toggles.buildings[active][0] = toggles.buildings[active].includes(true, 1);\n                toggleSwap(0, 'buildings');\n            }\n        } else {\n            toggles[type][number] = !toggles[type][number];\n        }\n    }\n    const status = type === 'buildings' ? toggles.buildings[player.stage.active][number] : toggles[type][number];\n\n    let extraText = '';\n    if (type === 'buildings' && number === 0) {\n        extraText = 'All ';\n    } else if (type !== 'normal') {\n        extraText = 'Auto ';\n    }\n\n    if (!status) {\n        toggle.style.color = 'var(--red-text-color)';\n        toggle.style.borderColor = 'crimson';\n        toggle.textContent = extraText + 'OFF';\n        if (global.screenReader) { toggle.ariaLabel = toggle.ariaLabel?.replace(' ON', ' OFF') ?? ''; }\n    } else {\n        toggle.style.color = '';\n        toggle.style.borderColor = '';\n        toggle.textContent = extraText + 'ON';\n        if (global.screenReader) { toggle.ariaLabel = toggle.ariaLabel?.replace(' OFF', ' ON') ?? ''; }\n    }\n};\n\nexport const toggleBuy = (type = null as string | null) => {\n    const { shop } = player.toggles;\n    const input = getId('buyAnyInput') as HTMLInputElement;\n\n    switch (type) {\n        case '1':\n            shop.howMany = 1;\n            break;\n        case 'max':\n            shop.howMany = -1;\n            break;\n        case 'any':\n            shop.input = Math.max(Math.trunc(Number(input.value)), -1);\n            if (shop.input === 0) { shop.input = 1; }\n            shop.howMany = shop.input;\n            input.value = format(shop.input, { digits: 0, type: 'input' });\n            break;\n        case 'strict':\n            shop.strict = !shop.strict;\n            break;\n        default:\n            input.value = format(shop.input, { digits: 0, type: 'input' });\n    }\n    const strict = getId('buyStrict') as HTMLButtonElement;\n    strict.style.borderColor = shop.strict ? '' : 'crimson';\n    strict.style.color = shop.strict ? '' : 'var(--red-text-color)';\n    getId('buy1x').style.backgroundColor = shop.howMany === 1 ? 'green' : '';\n    getId('buyAny').style.backgroundColor = Math.abs(shop.howMany) !== 1 ? 'green' : '';\n    getId('buyMax').style.backgroundColor = shop.howMany === -1 ? 'green' : '';\n    numbersUpdate();\n};\n\nexport const stageResetCheck = (stageIndex: number, auto = false): boolean => {\n    let allowed = false;\n    if (stageIndex === 5) {\n        allowed = player.stage.current >= 5; //player.elements[26] === 1;\n    } else if (stageIndex === 4) {\n        return false;\n    } else if (stageIndex === 3) {\n        allowed = Limit(player.buildings[3][0].current).moreOrEqual([2.47, 31]);\n    } else if (stageIndex === 2) {\n        allowed = Limit(player.buildings[2][1].current).moreOrEqual([1.194, 29]);\n    } else if (stageIndex === 1) {\n        allowed = Limit(player.buildings[1][3].current).moreOrEqual([1.67, 21]);\n    }\n\n    if (auto && allowed) {\n        if (player.strangeness[5][2] < 1 || (stageIndex >= 4 && global.strangeInfo.gain(stageIndex) < player.stage.input)) { return false; }\n        stageReset(stageIndex);\n    }\n    return allowed;\n};\n\nexport const stageAsyncReset = async() => {\n    const { stage } = player;\n    const active = player.inflation.vacuum ? 5 : (stage.active === 4 && stage.current === 5 && player.events[1] ? 5 : stage.active);\n\n    if (!stageResetCheck(active)) {\n        if (player.strange[0].total <= 0 && stage.current < 5 && player.inflation.vacuum) { return; }\n        if (active === 5) {\n            return Alert('\"Iron\" wasn\\'t obtained yet');\n        } else if (active === 4) {\n            return Alert('Reach Intergalactic first');\n        } else if (active === 3) {\n            return Alert(`Self sustaining is not yet possible, obtain at least ${format(2.47e31)} Mass`);\n        } else if (active === 2) {\n            return Alert(`Look's like more Mass expected, need even more Drops, around ${Limit([1.194, 29]).minus(player.buildings[2][1].current).format()}`);\n        } else if (active === 1) {\n            return Alert(`You will need enough to form a single Drop of water for next one - ${format(1.67e21)} Molecules`);\n        }\n    } else {\n        let ok = true;\n        if (player.toggles.normal[1]) {\n            ok = active >= 5 ? await Confirm(`You will return to first stage. ${player.strange[0].total === 0 ? 'But maybe you will get something in return' : `In return you will get ${format(global.strangeInfo.gain(active))} Strange quarks`}. Ready?`) :\n                active === stage.current ? await Confirm('Ready to enter next stage? Next one will be harder than current') : await Confirm(`You will reset this stage. In return you will get ${format(global.strangeInfo.gain(active))} Strange quarks. Ready?`);\n        }\n        if (ok) { stageReset(active); }\n    }\n};\n\nconst stageReset = (stageIndex: number) => {\n    const { stage, researchesAuto } = player;\n\n    stage.resets++;\n    const resetThese = [];\n    const increased = player.inflation.vacuum || stageIndex === stage.current;\n    if (increased) {\n        if (player.inflation.vacuum) {\n            stage.current = 1;\n            resetThese.push(1, 2, 3, 4, 5);\n        } else {\n            stage.current = stage.current < 5 ? stage.current + 1 : 1 + player.strangeness[5][0];\n            resetThese.push(stage.current);\n            if (player.milestones[5][0] >= 4) { resetThese.push(5); }\n\n            if (stageIndex === 5) {\n                if (player.strangeness[1][7] < 1) {\n                    researchesAuto[0] = 0;\n                    calculateMaxLevel(0, 1, 'researchesAuto');\n                }\n                if (player.strangeness[2][6] < 1) {\n                    researchesAuto[1] = 0;\n                    calculateMaxLevel(1, 2, 'researchesAuto');\n                }\n            } else if (stageIndex === 2) {\n                if (researchesAuto[1] === 0) {\n                    researchesAuto[1] = 1;\n                    calculateMaxLevel(1, 2, 'researchesAuto');\n                }\n            } else if (stageIndex === 1) {\n                if (researchesAuto[0] === 0) {\n                    researchesAuto[0] = 1;\n                    calculateMaxLevel(0, 1, 'researchesAuto');\n                }\n            }\n            stage.true = Math.max(stage.true, stage.current);\n            player.events[0] = stage.true > stage.current;\n        }\n        stage.active = stage.current;\n    } else { resetThese.push(stageIndex); }\n\n    if (stage.true >= 5) {\n        const gain = global.strangeInfo.gain(stageIndex);\n        player.strange[0].current += gain;\n        player.strange[0].total += gain;\n    }\n\n    reset('stage', resetThese);\n    if (resetThese.includes(stage.active)) { stageCheck(increased ? '' as 'soft' : 'soft'); }\n};\n\nconst stageNoReset = () => {\n    const { stage } = player;\n\n    stage.current++;\n    if (!player.inflation.vacuum) {\n        stage.true = Math.max(stage.current, stage.true);\n        if (!global.stageInfo.activeAll.includes(stage.current)) { reset('stage', [stage.current]); }\n    }\n    stageCheck('soft');\n};\n\nexport const switchStage = (stage: number) => {\n    if (player.stage.active === stage) {\n        getId('stageSelect').classList.remove('active');\n        return;\n    }\n    if (!global.stageInfo.activeAll.includes(stage)) { return; }\n\n    player.stage.active = stage;\n    stageCheck();\n\n    if (!player.events[1] && player.stage.active === 5) { playEvent(4, 1); }\n};\n\nexport const assignDischargeInformation = () => { global.dischargeInfo.next = Math.round((10 - player.researches[1][3] - player.strangeness[1][1]) ** player.discharge.current); };\n\nexport const dischargeResetCheck = (auto = false as false | 'interval' | 'upgrade'): boolean => {\n    if (player.upgrades[1][5] < 1 || player.buildings[1][1].true <= 0) { return false; }\n    assignDischargeInformation();\n\n    if (auto !== false) {\n        if (player.strangeness[1][3] < 1 || (auto === 'interval' && player.discharge.energy < global.dischargeInfo.next)) { return false; }\n        dischargeReset();\n    }\n    return true;\n};\n\nexport const dischargeAsyncReset = async() => {\n    if (!dischargeResetCheck()) { return; }\n\n    let ok = true;\n    if (player.toggles.normal[2]) {\n        ok = player.discharge.energy >= global.dischargeInfo.next ? await Confirm('You have enough Energy to gain boost. Continue?') :\n            await Confirm('This will reset all of your current Structures and Energy. You will NOT gain production boost. Continue?');\n    } else if (player.stage.active !== 1) {\n        ok = await Confirm(`You are trying to Discarge while inside '${global.stageInfo.word[player.stage.active]}'.\\n${player.discharge.energy < global.dischargeInfo.next ? \"You haven't reached next goal\" : 'You will gain boost'}, continue?`);\n    }\n    if (ok) {\n        if (global.screenReader) { getId('SRMain').textContent = player.discharge.energy >= global.dischargeInfo.next ? 'Structures and Energy were reset for some boost' : 'Structures and Energy were reset, no boost'; }\n        assignDischargeInformation(); //Just in case\n        dischargeReset();\n    }\n};\n\nconst dischargeReset = () => {\n    if (player.discharge.energy >= global.dischargeInfo.next) {\n        player.discharge.current++;\n    }\n    milestoneCheck(0, 1);\n    reset('discharge', player.inflation.vacuum ? [1, 2, 3, 4, 5] : [1]);\n};\n\nexport const assignVaporizationInformation = () => {\n    let get = Limit(player.buildings[2][1][player.researchesExtra[2][0] >= 1 ? 'total' : 'current']).divide(global.vaporizationInfo.effect2U1()).toArray();\n    if (Limit(get).moreThan([1, 0])) {\n        if (player.inflation.vacuum) {\n            get = Limit(get).power(0.4).toArray();\n        } else {\n            const cloudsGet = Limit(get).toNumber();\n            if (isFinite(cloudsGet)) {\n                const clouds = Limit(player.vaporization.clouds).toNumber();\n                const check = (cloudsGet ** 0.6) + clouds;\n                const calculate = check > 1e4 ? Math.max(1e4 - clouds, 1) : 1;\n                get = Limit(calculate + ((cloudsGet - calculate) ** (check > 1e4 ? 0.36 : 0.6))).toArray();\n            } else { get = Limit(get).power(0.36).toArray(); }\n        }\n    }\n    global.vaporizationInfo.get = get;\n};\n\nexport const vaporizationResetCheck = (auto = false): boolean => {\n    assignVaporizationInformation();\n    if (player.upgrades[2][1] < 1 || Limit(global.vaporizationInfo.get).lessThan([1, 0])) { return false; }\n\n    if (auto) {\n        if (player.strangeness[2][4] < 1 || Limit(player.vaporization.clouds).multiply(player.vaporization.input).moreOrEqual(global.vaporizationInfo.get)) { return false; }\n        vaporizationReset();\n    }\n    return true;\n};\n\nexport const vaporizationAsyncReset = async() => {\n    if (!vaporizationResetCheck()) { return; }\n\n    let ok = true;\n    if (player.toggles.normal[3]) {\n        ok = await Confirm(`Do you wish to reset structures and upgrades for ${Limit(global.vaporizationInfo.get).format()} Clouds?`);\n    } else if (player.stage.active !== 2) {\n        ok = await Confirm(`You are trying to cause Vaporization while inside '${global.stageInfo.word[player.stage.active]}'.\\nYou will get ${Limit(global.vaporizationInfo.get).format()} Clouds, continue?`);\n    }\n    if (ok) {\n        assignVaporizationInformation(); //Just in case\n        if (global.screenReader) { getId('SRMain').textContent = `Progress were reset for ${Limit(global.vaporizationInfo.get).format()} Clouds`; }\n        vaporizationReset();\n    }\n};\n\nconst vaporizationReset = () => {\n    const { vaporization } = player;\n\n    vaporization.clouds = Limit(vaporization.clouds).plus(global.vaporizationInfo.get).toArray();\n    if (Limit(vaporization.cloudsMax).lessThan(vaporization.clouds)) { vaporization.cloudsMax = cloneArray(vaporization.clouds); }\n    milestoneCheck(0, 2);\n    reset('vaporization', player.inflation.vacuum ? [1, 2, 3, 4, 5] : [2]);\n};\n\nexport const rankResetCheck = (auto = false): boolean => {\n    const requirement = global.accretionInfo.rankCost[player.accretion.rank];\n    if (requirement === 0 ||\n        (!player.inflation.vacuum ? Limit(player.buildings[3][0].current).lessThan(requirement) :\n        Limit(player.buildings[1][0].current).multiply([1.78266192, -33]).lessThan(requirement))\n    ) { return false; }\n\n    if (auto) {\n        if (player.strangeness[3][4] < 1) { return false; }\n        rankReset();\n    }\n    return true;\n};\n\nexport const rankAsyncReset = async() => {\n    if (!rankResetCheck()) { return; }\n\n    let ok = true;\n    if (player.toggles.normal[4] && player.accretion.rank !== 0) {\n        ok = await Confirm('Increasing Rank will reset structures, upgrades, stage researches. But you will get closer to your goal');\n    } else if (player.stage.active !== 3) {\n        ok = await Confirm(`You are trying increase Rank while inside '${global.stageInfo.word[player.stage.active]}'. Continue?`);\n    }\n    if (ok) {\n        rankReset();\n        if (global.screenReader) { getId('SRMain').textContent = `Rank is now ${global.accretionInfo.rankName[player.accretion.rank]}`; }\n    }\n};\n\nconst rankReset = () => {\n    player.accretion.rank++;\n    if (player.accretion.rank === 6) {\n        player.stage.current++;\n        stageCheck('soft');\n    }\n    reset('rank', player.inflation.vacuum ? [1, 2, 3, 4, 5] : [3]);\n    calculateMaxLevel(0, 3, 'researchesExtra');\n    calculateMaxLevel(4, 3, 'researchesExtra');\n    updateRankInfo();\n};\n\nexport const assignCollapseInformation = () => {\n    const { starCheck } = global.collapseInfo;\n    const { stars } = player.collapse;\n    const building = player.buildings[4];\n\n    if (!player.inflation.vacuum) {\n        const { elements } = player;\n\n        let massGain = 0.004;\n        if (elements[3] === 1) { massGain += 0.001; }\n        if (elements[5] === 1) { massGain += 0.00015 * building[1].true; }\n        if (elements[10] === 1) { massGain *= 2; }\n        if (elements[14] === 1) { massGain *= 1.4; }\n        global.collapseInfo.newMass = (building[1].true + (elements[15] === 1 ? building[2].true + building[3].true + building[4].true : 0)) * massGain * global.collapseInfo.starEffect[2]();\n    } else { global.collapseInfo.newMass = Limit(global.buildingsInfo.producing[1][1]).multiply([6, 2]).min(player.buildings[1][0].current).multiply([8.96499278339628, -67]).toNumber(); } //1.78266192e-33 / 1.98847e33\n\n    starCheck[0] = Math.max(building[2].true + Math.floor(building[1].true * player.strangeness[4][3] / 4) - stars[0], 0);\n    starCheck[1] = Math.max(building[3].true - stars[1], 0);\n    starCheck[2] = Math.max(building[4].true - stars[2], 0);\n};\n\nexport const collapseResetCheck = (auto = false): boolean => {\n    if (player.upgrades[4][0] < 1) { return false; }\n    const { collapseInfo } = global;\n    const { collapse } = player;\n    const nova = player.researchesExtra[4][0];\n    assignCollapseInformation();\n\n    if (auto) {\n        const canIncrease =\n            (nova >= 1 && collapse.stars[0] < (collapse.stars[0] + collapseInfo.starCheck[0]) / collapse.inputS) ||\n            (nova >= 2 && collapse.stars[1] < (collapse.stars[1] + collapseInfo.starCheck[1]) / collapse.inputS) ||\n            (nova >= 3 && collapse.stars[2] < (collapse.stars[2] + collapseInfo.starCheck[2]) / collapse.inputS);\n        if ((collapseInfo.newMass < collapse.mass * collapse.inputM && !canIncrease) || player.strangeness[4][5] < 1) { return false; }\n        collapseReset();\n        return true;\n    }\n\n    return (\n        (nova >= 1 && collapseInfo.starCheck[0] > 0) ||\n        (nova >= 2 && collapseInfo.starCheck[1] > 0) ||\n        (nova >= 3 && collapseInfo.starCheck[2] > 0) ||\n        collapseInfo.newMass > collapse.mass\n    );\n};\n\nexport const collapseAsyncReset = async() => {\n    if (!collapseResetCheck()) { return; }\n    const { collapse } = player;\n    const nova = player.researchesExtra[4][0];\n\n    let ok = true;\n    if (player.toggles.normal[5] || player.stage.active !== 4) {\n        const { collapseInfo } = global;\n\n        let message = player.stage.active === 4 ?\n            `This will reset all non automization researches and upgrades. ${collapseInfo.newMass < collapse.mass ? \"Your total Mass won't change\" : `But your total Mass will be now ${format(collapseInfo.newMass)}`}` :\n            `You are trying to Collapse Stars while inside '${global.stageInfo.word[player.stage.active]}'.\\nSolar mass will increase by +${format(collapseInfo.newMass - collapse.mass)}`;\n        if (nova >= 1) {\n            message += `, also you will get ${format(collapseInfo.starCheck[0])} Red giants`;\n            if (nova >= 2) {\n                message += `, ${format(collapseInfo.starCheck[1])} Neutron stars`;\n                if (nova >= 3) {\n                    message += ` and ${format(collapseInfo.starCheck[2])} Black holes`;\n                }\n            }\n        }\n        if (player.stage.active !== 4) { message += '.\\nContinue?'; }\n        ok = await Confirm(message);\n    }\n    if (ok) {\n        assignCollapseInformation(); //Just in case\n        collapseReset();\n        if (global.screenReader) { //Not optimal, but I don't think anyone is playing this with SR\n            let message = `Your Mass has increased to ${format(collapse.mass)}`;\n            if (nova >= 1) { message += `, Red giants to ${format(collapse.stars[0])}`; }\n            if (nova >= 2) { message += `, Neutron stars - ${format(collapse.stars[1])}`; }\n            if (nova >= 3) { message += ` and Black holes - ${format(collapse.stars[2])}`; }\n            getId('SRMain').textContent = message;\n        }\n    }\n};\n\nconst collapseReset = () => {\n    const { collapseInfo } = global;\n    const { collapse } = player;\n    const resetThese = player.inflation.vacuum ?\n        ([1, 2, 3, 4, 5]) :\n        (player.strangeness[5][5] < 1 ? [4, 5] : [4]);\n\n    if (collapseInfo.newMass > collapse.mass) { collapse.mass = collapseInfo.newMass; }\n    for (let i = 0; i < player.researchesExtra[4][0]; i++) {\n        collapse.stars[i] += collapseInfo.starCheck[i];\n    }\n    if (collapse.massMax < collapse.mass) { collapse.massMax = collapse.mass; }\n    milestoneCheck(0, 4);\n    milestoneCheck(1, 4);\n    reset('collapse', resetThese);\n    calculateMaxLevel(0, 4, 'researches');\n    calculateMaxLevel(1, 4, 'researches');\n    calculateMaxLevel(2, 4, 'researches');\n};\n", "import Limit from './Limit';\nimport { getId } from './Main';\nimport { global, player } from './Player';\nimport { assignCollapseInformation, assignDischargeInformation, assignVaporizationInformation } from './Stage';\nimport { format, numbersUpdate, stageCheck, visualUpdate } from './Update';\n\n//Eventually might move more HTML into here\nexport const specialHTML = {\n    resetHTML: [ /* All new ID's need to be checked for being null */\n        '',\n        '<span class=\"bigWord orangeText\">Discharge</span>. Reset current Structures and Energy. Will also boost production by <span id=\"dischargeEffect\" class=\"orangeText\"></span>, if to reset with enough Energy.',\n        '<span class=\"bigWord grayText\">Vaporization</span>. Structures, upgrades, will be reset. But in return gain <span class=\"grayText\">Clouds</span>. It takes a lot to form more than one.',\n        '<img id=\"rankImage\" src=\"Used_art/Missing.png\" alt=\"Missing\">Current <span class=\"bigWord darkorchidText\">Rank</span> is: <span id=\"rankName\" class=\"blueText\"></span>. <span id=\"rankMessage\"></span>',\n        '<span class=\"bigWord orchidText\">Collapse</span> - Everything will be lost, but at same time gained. Each of the Stars will produce something unique and special.',\n        ''\n    ],\n    longestBuilding: 7, //Max +1; If max will increase then new HTML need to be added into index.html\n    buildingHTML: [ //outerHTML is slow\n        [],\n        [\n            ['Preon.png', 'Preon'], //[0] === image; [1] === alt\n            ['Quarks.png', 'Quarks'],\n            ['Particle.png', 'Particle'],\n            ['Atom.png', 'Atom'],\n            ['Molecule.png', 'Molecule']\n        ],\n        [\n            ['Drop.png', 'Drop of water'],\n            ['Puddle.png', 'Puddle'],\n            ['Pond.png', 'Pond'],\n            ['Lake.png', 'Lake'],\n            ['Sea.png', 'Sea'],\n            ['Ocean.png', 'Ocean']\n        ],\n        [\n            ['Cosmic%20dust.png', 'Cosmic dust'],\n            ['Planetesimal.png', 'Planetesimal'],\n            ['Protoplanet.png', 'Protoplanet'],\n            ['Natural%20satellite.png', 'Moon'],\n            ['Subsatellite.png', 'Submoon']\n        ],\n        [\n            ['Brown%20dwarf.png', 'Brown dwarf'],\n            ['Orange%20dwarf.png', 'Orange dwarf'],\n            ['Red%20supergiant.png', 'Red supergiant'],\n            ['Blue%20hypergiant.png', 'Blue hypergiant'],\n            ['Quasi%20star.png', 'Quasi star']\n        ],\n        [\n            ['Nebula.png', 'Nebula'],\n            ['Star%20cluster.png', 'Star cluster'],\n            ['Galaxy.png', 'Galaxy'],\n            ['Galaxy%20filament.png', 'Galaxy filaments']\n        ]\n    ],\n    longestUpgrade: 13, //If max will increase then new HTML need to be added into index.html\n    upgradeHTML: [\n        [],\n        [\n            ['UpgradeQ1.png', 'Weak force'],\n            ['UpgradeQ2.png', 'Strong force'],\n            ['UpgradeQ3.png', 'Electron'],\n            ['UpgradeQ4.png', 'Proton'],\n            ['UpgradeQ5.png', 'Neutron'],\n            ['UpgradeQ6.png', 'Superposition'],\n            ['UpgradeQ7.png', 'Protium'],\n            ['UpgradeQ8.png', 'Deuterium'],\n            ['UpgradeQ9.png', 'Tritium'],\n            ['UpgradeQ10.png', 'Fusion']\n        ],\n        [\n            ['UpgradeW1.png', 'Mole'],\n            ['UpgradeW2.png', 'Vaporization'],\n            ['UpgradeW3.png', 'Tension'],\n            ['UpgradeW4.png', 'Stress'],\n            ['UpgradeW5.png', 'Stream'],\n            ['UpgradeW6.png', 'River'],\n            ['UpgradeW7.png', 'Tsunami']\n        ],\n        [\n            ['UpgradeA1.png', 'Motion'],\n            ['UpgradeA2.png', 'Gas'],\n            ['UpgradeA3.png', 'Micrometeoroid'],\n            ['UpgradeA4.png', 'Instability'],\n            ['UpgradeA5.png', 'Gravity'],\n            ['UpgradeA6.png', 'Pile'],\n            ['UpgradeA7.png', 'Orbit'],\n            ['UpgradeA8.png', 'Magma'],\n            ['UpgradeA9.png', 'Equilibrium'],\n            ['UpgradeA10.png', 'Atmosphere'],\n            ['UpgradeA11.png', 'Pebble'],\n            ['UpgradeA12.png', 'Tidal force'],\n            ['UpgradeA13.png', 'Ring']\n        ],\n        [\n            ['UpgradeS1.png', 'Collapse'],\n            ['UpgradeS2.png', 'Reaction'],\n            ['UpgradeS3.png', 'CNO'],\n            ['UpgradeS4.png', 'Helium fusion']\n        ],\n        [\n            ['UpgradeG1.png', 'Instability'],\n            ['UpgradeG2.png', 'Super cluster'],\n            ['UpgradeG3.png', 'Quasar']\n        ]\n    ],\n    longestResearch: 8, //If max will increase then new HTML need to be added into index.html\n    researchHTML: [\n        [],\n        [\n            ['ResearchQ1.png', 'Protium+', 'stage1borderImage'], //[2] === className\n            ['ResearchQ2.png', 'Deuterium+', 'stage1borderImage'],\n            ['ResearchQ3.png', 'Tritium+', 'stage1borderImage'],\n            ['ResearchQ4.png', 'Discharge-', 'stage4borderImage'],\n            ['ResearchQ5.png', 'Discharge+', 'stage4borderImage'],\n            ['ResearchQ6.png', 'Discharge++', 'stage4borderImage']\n        ],\n        [\n            ['ResearchW1.png', 'Moles+', 'stage2borderImage'],\n            ['ResearchW2.png', 'Moles++', 'stage2borderImage'],\n            ['ResearchW3.png', 'Tension+', 'stage2borderImage'],\n            ['ResearchW4.png', 'Stress+', 'stage2borderImage'],\n            ['ResearchW5.png', 'Streams+', 'stage2borderImage'],\n            ['ResearchW6.png', 'Channel', 'stage2borderImage']\n        ],\n        [\n            ['ResearchA1.png', 'Mass+', 'stage3borderImage'],\n            ['ResearchA2.png', 'Adhesion', 'stage2borderImage'],\n            ['ResearchA3.png', 'Weathering', 'stage3borderImage'],\n            ['ResearchA4.png', 'Collision', 'stage3borderImage'],\n            ['ResearchA5.png', 'Binary', 'stage3borderImage'],\n            ['ResearchA6.png', 'Gravity+', 'stage1borderImage'],\n            ['ResearchA7.png', 'Layers', 'stage7borderImage'],\n            ['ResearchA8.png', 'Drag', 'stage1borderImage']\n        ],\n        [\n            ['ResearchS1.png', 'Orbit', 'stage5borderImage'],\n            ['ResearchS2.png', '2 stars', 'stage5borderImage'],\n            ['ResearchS3.png', 'Protodisc', 'stage7borderImage'],\n            ['ResearchS4.png', 'Planetary nebula', 'stage5borderImage']\n        ],\n        [\n            ['ResearchG1.png', 'Density', 'stage1borderImage'],\n            ['ResearchG2.png', 'Frequency', 'stage6borderImage']\n        ]\n    ],\n    longestResearchExtra: 5, //If max will increase then new HTML need to be added into index.html\n    researchExtraDivHTML: [\n        [],\n        ['Energy%20Researches.png', 'Energy researches', 'stage4borderImage'],\n        ['Cloud%20Researches.png', 'Cloud researches', 'stage2borderImage'],\n        ['Rank%20Researches.png', 'Rank researches', 'stage6borderImage'],\n        ['Star%20Researches.png', 'Star researches', 'stage6borderImage'],\n        []\n    ],\n    researchExtraHTML: [\n        [],\n        [\n            ['ResearchEnergy1.png', 'Strong force+', 'stage1borderImage'],\n            ['ResearchEnergy2.png', 'Radiation+', 'stage5borderImage'],\n            ['ResearchEnergy3.png', 'Accretion', 'stage3borderImage'],\n            ['ResearchEnergy4.png', 'Preon Mass', 'stage1borderImage'],\n            ['ResearchEnergy5.png', 'Impulse', 'stage6borderImage']\n        ],\n        [\n            ['ResearchClouds1.png', 'Vaporization+', 'stage3borderImage'],\n            ['ResearchClouds2.png', 'Rain', 'stage2borderImage'],\n            ['ResearchClouds3.png', 'Storm', 'stage4borderImage'],\n            ['Ocean%20world.png', 'Ocean world', 'stage2borderImage']\n        ],\n        [\n            ['ResearchRank1.png', 'Ocean', 'stage3borderImage'],\n            ['ResearchRank2.png', 'Rank', 'stage3borderImage'],\n            ['ResearchRank3.png', 'Weight', 'stage3borderImage'],\n            ['ResearchRank4.png', 'Viscosity', 'stage2borderImage'],\n            ['ResearchRank5.png', 'Water rank', 'stage2borderImage']\n        ],\n        [\n            ['ResearchStar1.png', 'Supernova', 'stage6borderImage'],\n            ['ResearchStar2.png', 'White dwarf', 'stage1borderImage']\n        ],\n        []\n    ],\n    longestFooterStats: 3, //If max will increase then new HTML need to be added into index.html\n    footerStatsHTML: [\n        [],\n        [\n            ['Energy%20mass.png', 'Energy mass', 'stage1borderImage cyanText', 'Mass'], //[3] === textcontent\n            ['Energy.png', 'Energy', 'stage4borderImage orangeText', 'Energy']\n        ],\n        [\n            ['Clouds.png', 'Clouds', 'stage3borderImage grayText', 'Clouds'],\n            ['Water.png', 'H2O', 'stage2borderImage blueText', 'Moles'],\n            ['Drop.png', 'Drop of water', 'stage2borderImage blueText', 'Drops']\n        ],\n        [\n            ['Mass.png', 'Mass', 'stage3borderImage grayText', 'Mass']\n        ],\n        [\n            ['Main_sequence%20mass.png', 'Solar mass', 'stage1borderImage cyanText', 'Mass'],\n            ['Elements.png', 'Elements', 'stage4borderImage orangeText', 'Elements']\n        ],\n        [\n            ['Main_sequence%20mass.png', 'Solar mass', 'stage1borderImage cyanText', 'Mass'],\n            ['Elements.png', 'Elements', 'stage4borderImage orangeText', 'Elements'],\n            ['Stars.png', 'Stars', 'stage7borderImage redText', 'Stars']\n        ]\n    ]\n};\n\nexport const setTheme = (themeNumber: number, initial = false) => {\n    if (!initial) {\n        if (player.stage.true < themeNumber) { initial = true; }\n    }\n\n    if (initial) {\n        global.theme.default = true;\n        localStorage.removeItem('theme');\n    } else {\n        global.theme.default = false;\n        global.theme.stage = themeNumber;\n        localStorage.setItem('theme', `${themeNumber}`);\n    }\n    switchTheme();\n};\n\n//Not done through CSS, because worse (?)\nexport const switchTheme = () => {\n    const { theme } = global;\n    const body = document.body.style;\n    const dropStat = document.querySelector('#footerStat2 > p') as HTMLParagraphElement;\n    const waterStat = document.querySelector('#footerStat3 > p') as HTMLParagraphElement;\n\n    if (theme.default) {\n        theme.stage = player.stage.active;\n        getId('currentTheme').textContent = 'Default';\n    } else {\n        getId('currentTheme').textContent = global.stageInfo.word[theme.stage];\n    }\n\n    /* Full reset, for easier out of order theme change */\n    body.setProperty('--transition-all', '1s');\n    body.setProperty('--transition-buttons', '700ms');\n    for (const text of ['upgrade', 'research', 'element']) {\n        getId(`${text}Effect`).style.color = '';\n        getId(`${text}Cost`).style.color = '';\n        if (text === 'upgrade') { continue; } //Not changed anywhere\n        getId(`${text}Text`).style.color = '';\n    }\n    body.removeProperty('--background-color');\n    body.removeProperty('--window-color');\n    body.removeProperty('--window-border');\n    body.removeProperty('--footer-color');\n    body.removeProperty('--button-main-color');\n    body.removeProperty('--button-main-border');\n    body.removeProperty('--button-main-hover');\n    body.removeProperty('--building-can-buy');\n    body.removeProperty('--button-tab-border');\n    body.removeProperty('--button-tab-active');\n    body.removeProperty('--button-extra-hover');\n    body.removeProperty('--button-delete-color');\n    body.removeProperty('--button-delete-hover');\n    body.removeProperty('--input-border-color');\n    body.removeProperty('--input-text-color');\n    body.removeProperty('--button-text-color');\n    body.removeProperty('--main-text-color');\n    body.removeProperty('--white-text-color');\n    //body.removeProperty('--cyan-text-color');\n    body.removeProperty('--blue-text-color');\n    body.removeProperty('--orange-text-color');\n    body.removeProperty('--gray-text-color');\n    body.removeProperty('--orchid-text-color');\n    body.removeProperty('--darkorchid-text-color');\n    body.removeProperty('--darkviolet-text-color');\n    body.removeProperty('--red-text-color');\n    body.removeProperty('--green-text-color');\n    body.removeProperty('--yellow-text-color');\n    dropStat.style.color = '';\n    waterStat.style.color = '';\n    /* These colors will need to be changed in other places as well: (not just 2, but from 2 to max)\n        --window-color > '.stage2windowBackground';\n        --button-main-color > '.stage2backgroundButton' and 'global.stageInfo.buttonBackgroundColor[2]';\n        --button-main-border > '.stage2borderButton' and 'global.stageInfo.buttonBorderColor[2]'; */\n    switch (theme.stage) {\n        case 2:\n            for (const text of ['upgrade', 'research', 'element']) {\n                getId(`${text}Effect`).style.color = 'var(--green-text-color)';\n                getId(`${text}Cost`).style.color = 'var(--cyan-text-color)';\n            }\n            body.setProperty('--background-color', '#070026');\n            body.setProperty('--window-color', '#000052');\n            body.setProperty('--window-border', 'blue');\n            body.setProperty('--footer-color', '#0000db');\n            body.setProperty('--button-main-color', 'blue');\n            body.setProperty('--button-main-border', '#427be1');\n            body.setProperty('--button-main-hover', '#1515cf');\n            body.setProperty('--button-tab-border', '#376ac5');\n            body.setProperty('--button-tab-active', '#990000');\n            body.setProperty('--button-extra-hover', '#2400d7');\n            body.setProperty('--input-border-color', '#4747ff');\n            body.setProperty('--input-text-color', 'dodgerblue');\n            body.setProperty('--main-text-color', 'var(--blue-text-color)');\n            body.setProperty('--gray-text-color', '#9b9b9b');\n            body.setProperty('--darkorchid-text-color', '#c71bff');\n            body.setProperty('--darkviolet-text-color', '#a973ff');\n            body.setProperty('--green-text-color', '#82cb3b');\n            body.setProperty('--red-text-color', '#f70000');\n            if (player.stage.active === 2) {\n                dropStat.style.color = '#3099ff';\n                waterStat.style.color = '#3099ff';\n            }\n            break;\n        case 3:\n            for (const text of ['upgrade', 'research', 'element']) {\n                getId(`${text}Cost`).style.color = 'var(--green-text-color)';\n                if (text === 'upgrade') { continue; }\n                getId(`${text}Text`).style.color = 'var(--orange-text-color)';\n            }\n            body.setProperty('--background-color', '#000804');\n            body.setProperty('--window-color', '#2e1200');\n            body.setProperty('--window-border', '#31373e');\n            body.setProperty('--footer-color', '#221a00');\n            body.setProperty('--button-main-color', '#291344');\n            body.setProperty('--button-main-border', '#404040');\n            body.setProperty('--button-main-hover', '#361f52');\n            body.setProperty('--button-tab-border', '#484848');\n            body.setProperty('--button-tab-active', '#8d4c00');\n            body.setProperty('--button-extra-hover', '#5a2100');\n            body.setProperty('--button-delete-color', '#891313');\n            body.setProperty('--button-delete-hover', '#a10a0a');\n            body.setProperty('--input-border-color', '#8b4a00');\n            body.setProperty('--input-text-color', '#e77e00');\n            body.setProperty('--main-text-color', 'var(--gray-text-color)');\n            body.setProperty('--white-text-color', '#dfdfdf');\n            body.setProperty('--orange-text-color', '#f58600');\n            body.setProperty('--green-text-color', '#00db00');\n            if (player.stage.active === 2) {\n                dropStat.style.color = '#3099ff';\n                waterStat.style.color = '#3099ff';\n            }\n            break;\n        case 4:\n            for (const text of ['upgrade', 'research', 'element']) {\n                getId(`${text}Effect`).style.color = 'var(--green-text-color)';\n                getId(`${text}Cost`).style.color = 'var(--cyan-text-color)';\n                if (text === 'upgrade') { continue; }\n                getId(`${text}Text`).style.color = 'var(--blue-text-color)';\n            }\n            body.setProperty('--background-color', '#140e04');\n            body.setProperty('--window-color', '#4e0000');\n            body.setProperty('--window-border', '#894800');\n            body.setProperty('--footer-color', '#4e0505');\n            body.setProperty('--button-main-color', '#6a3700');\n            body.setProperty('--button-main-border', '#9f6700');\n            body.setProperty('--button-main-hover', '#914b00');\n            body.setProperty('--building-can-buy', '#007f95');\n            body.setProperty('--button-tab-border', '#af5d00');\n            body.setProperty('--button-tab-active', '#008297');\n            body.setProperty('--button-extra-hover', '#605100');\n            body.setProperty('--button-delete-color', '#8f0000');\n            body.setProperty('--button-delete-hover', '#ad0000');\n            body.setProperty('--input-border-color', '#008399');\n            body.setProperty('--input-text-color', '#05c3c3');\n            body.setProperty('--button-text-color', '#d9d900');\n            body.setProperty('--main-text-color', 'var(--orange-text-color)');\n            body.setProperty('--white-text-color', '#e5e500');\n            body.setProperty('--blue-text-color', '#42a2ff');\n            body.setProperty('--gray-text-color', '#8b8b8b');\n            body.setProperty('--darkorchid-text-color', '#c71bff');\n            body.setProperty('--darkviolet-text-color', '#9859ff');\n            body.setProperty('--red-text-color', 'red');\n            body.setProperty('--green-text-color', '#00e600');\n            body.setProperty('--yellow-text-color', 'var(--green-text-color)');\n            break;\n        case 5:\n            for (const text of ['upgrade', 'research', 'element']) {\n                getId(`${text}Effect`).style.color = 'var(--green-text-color)';\n                getId(`${text}Cost`).style.color = 'var(--red-text-color)';\n                if (text === 'upgrade') { continue; }\n                getId(`${text}Text`).style.color = 'var(--orange-text-color)';\n            }\n            body.setProperty('--background-color', '#060010');\n            body.setProperty('--window-color', '#001d42');\n            body.setProperty('--window-border', '#35466e');\n            body.setProperty('--footer-color', '#2f005c');\n            body.setProperty('--button-main-color', '#4a008f');\n            body.setProperty('--button-main-border', '#8a0049');\n            body.setProperty('--button-main-hover', '#6800d6');\n            body.setProperty('--building-can-buy', '#8603ff');\n            body.setProperty('--button-tab-border', '#9d0054');\n            body.setProperty('--button-tab-active', '#8500ff');\n            body.setProperty('--button-extra-hover', '#3b0080');\n            body.setProperty('--button-delete-color', '#800000');\n            body.setProperty('--button-delete-hover', '#9b1212');\n            body.setProperty('--input-border-color', '#3656a1');\n            body.setProperty('--input-text-color', '#6a88cd');\n            body.setProperty('--button-text-color', '#fc9cfc');\n            body.setProperty('--main-text-color', 'var(--darkorchid-text-color)');\n            body.setProperty('--white-text-color', '#ff79ff');\n            body.setProperty('--orchid-text-color', '#ff00f4');\n            body.setProperty('--darkorchid-text-color', '#c000ff');\n            body.setProperty('--darkviolet-text-color', '#9f52ff');\n            body.setProperty('--yellow-text-color', 'var(--darkviolet-text-color)');\n            break;\n        case 6:\n            for (const text of ['upgrade', 'research', 'element']) {\n                getId(`${text}Effect`).style.color = 'var(--red-text-color)';\n                if (text === 'upgrade') { continue; }\n                getId(`${text}Text`).style.color = 'var(--orchid-text-color)';\n            }\n            body.setProperty('--background-color', 'black');\n            body.setProperty('--window-color', '#01003c');\n            body.setProperty('--window-border', '#7100ff');\n            body.setProperty('--footer-color', '#00007a');\n            body.setProperty('--button-main-color', '#2b0095');\n            body.setProperty('--button-main-border', '#711bda');\n            body.setProperty('--button-main-hover', '#3d00d6');\n            body.setProperty('--building-can-buy', '#a80000');\n            body.setProperty('--button-tab-border', '#6719c8');\n            body.setProperty('--button-tab-active', '#8d0000');\n            body.setProperty('--button-extra-hover', '#490070');\n            body.setProperty('--button-delete-color', '#930606');\n            body.setProperty('--button-delete-hover', '#b80000');\n            body.setProperty('--input-border-color', '#a50000');\n            body.setProperty('--input-text-color', 'red');\n            body.setProperty('--button-text-color', '#efe0ff');\n            body.setProperty('--main-text-color', 'var(--darkviolet-text-color)');\n            body.setProperty('--gray-text-color', '#9b9b9b');\n            body.setProperty('--darkviolet-text-color', '#8157ff');\n            body.setProperty('--white-text-color', '#f9f5ff');\n            body.setProperty('--red-text-color', 'red');\n            body.setProperty('--yellow-text-color', 'var(--red-text-color)');\n    }\n    setTimeout(() => {\n        body.removeProperty('--transition-all');\n        body.removeProperty('--transition-buttons');\n    }, 1000);\n};\n\nexport const Alert = (text: string) => { void AlertWait(text); };\nexport const AlertWait = async(text: string): Promise<void> => {\n    return await new Promise((resolve) => {\n        const blocker = getId('blocker') as HTMLDivElement;\n        if (blocker.style.display !== 'none') {\n            console.warn(\"Wasn't able to show another window (alert)\");\n            resolve();\n            return;\n        }\n\n        getId('alertText').textContent = text;\n        const confirm = getId('confirmBtn') as HTMLButtonElement;\n        blocker.style.display = '';\n        confirm.focus();\n\n        const key = async(button: KeyboardEvent) => {\n            if (button.key === 'Escape' || button.key === 'Enter') {\n                close();\n            }\n        };\n        const close = () => {\n            blocker.style.display = 'none';\n            document.removeEventListener('keydown', key);\n            confirm.removeEventListener('click', close);\n            resolve();\n        };\n        document.addEventListener('keydown', key);\n        confirm.addEventListener('click', close);\n    });\n};\n\nexport const Confirm = async(text: string): Promise<boolean> => {\n    return await new Promise((resolve) => {\n        const blocker = getId('blocker') as HTMLDivElement;\n        if (blocker.style.display !== 'none') {\n            console.warn(\"Wasn't able to show another window (confirm)\");\n            resolve(false);\n            return;\n        }\n\n        getId('alertText').textContent = text;\n        const cancel = getId('cancelBtn') as HTMLButtonElement;\n        const confirm = getId('confirmBtn') as HTMLButtonElement;\n        blocker.style.display = '';\n        cancel.style.display = '';\n        confirm.focus();\n\n        const yes = () => { close(true); };\n        const no = () => { close(false); };\n        const key = (button: KeyboardEvent) => {\n            if (button.key === 'Escape') {\n                no();\n            } else if (button.key === 'Enter') {\n                yes();\n            }\n        };\n        const close = (result: boolean) => {\n            blocker.style.display = 'none';\n            cancel.style.display = 'none';\n            document.removeEventListener('keydown', key);\n            confirm.removeEventListener('click', yes);\n            cancel.removeEventListener('click', no);\n            resolve(result);\n        };\n        document.addEventListener('keydown', key);\n        confirm.addEventListener('click', yes);\n        cancel.addEventListener('click', no);\n    });\n};\n\nexport const Prompt = async(text: string): Promise<string | null> => {\n    return await new Promise((resolve) => {\n        const blocker = getId('blocker') as HTMLDivElement;\n        if (blocker.style.display !== 'none') {\n            console.warn(\"Wasn't able to show another window (prompt)\");\n            resolve(null);\n            return;\n        }\n\n        getId('alertText').textContent = text;\n        const input = getId('inputArea') as HTMLInputElement;\n        const cancel = getId('cancelBtn') as HTMLButtonElement;\n        const confirm = getId('confirmBtn') as HTMLButtonElement;\n        blocker.style.display = '';\n        cancel.style.display = '';\n        input.style.display = '';\n        input.value = '';\n        input.focus();\n\n        const yes = () => { close(input.value); };\n        const no = () => { close(null); };\n        const key = (button: KeyboardEvent) => {\n            if (button.key === 'Escape') {\n                no();\n            } else if (button.key === 'Enter') {\n                yes();\n            }\n        };\n        const close = (result: string | null) => {\n            blocker.style.display = 'none';\n            cancel.style.display = 'none';\n            input.style.display = 'none';\n            document.removeEventListener('keydown', key);\n            confirm.removeEventListener('click', yes);\n            cancel.removeEventListener('click', no);\n            resolve(result);\n        };\n        document.addEventListener('keydown', key);\n        confirm.addEventListener('click', yes);\n        cancel.addEventListener('click', no);\n    });\n};\n\nexport const hideFooter = () => {\n    const footer = getId('footer') as HTMLDivElement;\n    const hide = getId('footerColor') as HTMLDivElement;\n    const toggle = getId('hideToggle') as HTMLDivElement;\n    const text = getId('hideText') as HTMLParagraphElement;\n    const arrow = getId('hideArrow') as HTMLDivElement;\n\n    global.footer = !global.footer;\n    toggle.removeEventListener('click', hideFooter);\n    if (global.footer) {\n        hide.style.display = '';\n        arrow.style.transform = '';\n        footer.style.animation = 'hide 1s forwards reverse';\n        arrow.style.animation = 'rotate 1s forwards reverse';\n        text.textContent = 'Hide';\n\n        numbersUpdate();\n        visualUpdate();\n    } else {\n        footer.style.animation = 'hide 1s backwards';\n        arrow.style.animation = 'rotate 1s backwards';\n        text.textContent = 'Show';\n        setTimeout(() => { //While forwards would work, I'm lazy to pause animation\n            hide.style.display = 'none';\n            arrow.style.transform = 'rotate(180deg)';\n        }, 1000);\n    }\n    setTimeout(() => {\n        footer.style.animation = ''; //Better than using a class\n        arrow.style.animation = '';\n        toggle.addEventListener('click', hideFooter);\n    }, 1000);\n};\n\nexport const mobileDeviceSupport = (change = false) => {\n    let turnOn = Boolean(localStorage.getItem('mobile device') ?? false);\n    const toggle = getId('mobileDeviceToggle') as HTMLButtonElement;\n\n    if (change) { turnOn = !turnOn; }\n\n    if (turnOn) {\n        toggle.textContent = 'ON';\n        toggle.style.color = 'var(--red-text-color)';\n        toggle.style.borderColor = 'crimson';\n        localStorage.setItem('mobile device', 'true');\n        global.mobileDevice = true;\n        if (change) { Alert('For full support please refresh the page. This will add on touch start check upgrade and touch end create an upgrade.\\n(For non mobile device this will cause issues)'); }\n    } else {\n        toggle.textContent = 'OFF';\n        toggle.style.color = '';\n        toggle.style.borderColor = '';\n        localStorage.removeItem('mobile device');\n        global.mobileDevice = false;\n    }\n};\n\nexport const screenReaderSupport = (info = false as boolean | number, type = 'toggle' as 'toggle' | 'button', special = 'building' as 'reload' | 'building' | 'resource' | 'information') => {\n    switch (type) {\n        case 'toggle': {\n            const change = info as boolean;\n            let turnOn = Boolean(localStorage.getItem('screen reader') ?? false);\n            const toggle = getId('screenReaderToggle') as HTMLButtonElement;\n\n            if (change) { turnOn = !turnOn; }\n\n            if (turnOn) {\n                if (special === 'reload') { player.toggles.shop.strict = false; } //Too lazy to add dynamic aria-label for current status\n\n                toggle.textContent = 'ON';\n                toggle.style.color = 'var(--red-text-color)';\n                toggle.style.borderColor = 'crimson';\n                localStorage.setItem('screen reader', 'true');\n                global.screenReader = true;\n                stageCheck();\n                if (change) { Alert('You will get: focus event on upgrades to get description (Refresh page to get it, also I need feedback on it), special tab to check progress and more.\\n(For non screen readers this will cause issues)'); }\n            } else {\n                toggle.textContent = 'OFF';\n                toggle.style.color = '';\n                toggle.style.borderColor = '';\n                localStorage.removeItem('screen reader');\n                global.screenReader = false;\n            }\n            break;\n        }\n        case 'button': {\n            const index = info as number;\n            const invText = getId('SRMain') as HTMLLabelElement;\n\n            if (special === 'building') {\n                const { buildingsInfo } = global;\n                const active = player.stage.active;\n                const buildings = player.buildings[active];\n\n                let extra = index - 1;\n                if (active === 4 || active === 5) { extra = 0; }\n\n                if (index === 0) {\n                    invText.textContent = `You have ${Limit(buildings[0].current).format()} ${buildingsInfo.name[active][0]}`;\n                } else {\n                    invText.textContent = `You have ${Limit(buildings[index].current).format()} ${buildingsInfo.name[active][index]}${Limit(buildings[index].current).notEqual(buildings[index as 1].true) ? `, out of them ${format(buildings[index as 1].true)} are self-made ones` : ''}, they are ${buildingsInfo.type[active][index] === 'producing' ? `producing ${Limit(buildingsInfo.producing[active][index]).format()} ${buildingsInfo.name[active][extra]} per second` : `improving production of ${buildingsInfo.name[active][extra]} by ${Limit(buildingsInfo.producing[active][index]).format()}`}${player.ASR[active] >= index ? `, auto is ${player.toggles.buildings[active][index] ? 'on' : 'off'}` : ''}`;\n                }\n            } else if (special === 'resource') {\n                if (index === 0) {\n                    invText.textContent = `You have ${format(player.strange[0].current)} Strange quarks${global.strangeInfo.stageBoost[player.stage.active] !== null ? ` they are boosting production of current stage by ${format(global.strangeInfo.stageBoost[player.stage.active] as number)}` : ''}, you will gain ${format(global.strangeInfo.gain(player.stage.active))} on Stage reset`;\n                } else if (index === 1) {\n                    if (player.stage.active === 1) {\n                        assignDischargeInformation();\n                        invText.textContent = `You have ${format(player.discharge.energy)} Energy${player.upgrades[1][5] === 1 ? `, next discharge goal is ${format(global.dischargeInfo.next)} Energy, you reached goal ${format(player.discharge.current)} times` : ''}${global.dischargeInfo.bonus > 0 ? `, you also have +${format(global.dischargeInfo.bonus)} free goals.` : ''}`;\n                    } else if (player.stage.active === 2) {\n                        assignVaporizationInformation();\n                        invText.textContent = `You have ${Limit(player.vaporization.clouds).format()} Clouds${Limit(global.vaporizationInfo.get).moreThan([1, 0]) ? `, you can get +${Limit(global.vaporizationInfo.get).format()} if you reset now` : ''}`;\n                    } else if (player.stage.active === 4) {\n                        assignCollapseInformation();\n                        invText.textContent = `You have ${format(player.collapse.mass)} Mass${global.collapseInfo.newMass >= player.collapse.mass ? `, you can get +${format(global.collapseInfo.newMass - player.collapse.mass)} if you reset now` : ''}${player.researchesExtra[4][0] >= 1 ? `, also ${format(global.collapseInfo.starCheck[0])} Red giants` : ''}${player.researchesExtra[4][0] >= 2 ? `,  ${format(global.collapseInfo.starCheck[1])} Neutron stars` : ''}${player.researchesExtra[4][0] >= 3 ? ` and also ${format(global.collapseInfo.starCheck[2])} Black holes` : ''}`;\n                    }\n                }\n            } else if (special === 'information') {\n                let activeStages = '';\n\n                for (let i = 0; i < global.stageInfo.activeAll.length; i++) {\n                    activeStages += (i === 0 ? '' : ', ') + global.stageInfo.word[global.stageInfo.activeAll[i]];\n                }\n\n                invText.textContent = `Current Active Stages are ${activeStages}`;\n            }\n        }\n    }\n};\n\nexport const changeFontSize = (change = false, inputChange = false) => {\n    const body = document.body.style;\n    const input = getId('customFontSize') as HTMLInputElement;\n    const toggle = getId('fontSizeToggle') as HTMLButtonElement;\n    let enable = Boolean(localStorage.getItem('enableCustomFontSize')) ?? false;\n    let size = localStorage.getItem('fontSize');\n\n    if (change) { enable = !enable; }\n\n    if (!enable) {\n        body.removeProperty('--font-size');\n        localStorage.removeItem('fontSize');\n        localStorage.removeItem('enableCustomFontSize');\n        toggle.textContent = 'OFF';\n        toggle.style.color = 'var(--red-text-color)';\n        toggle.style.borderColor = 'crimson';\n    } else {\n        if (size === null || Number(size) < 10 || Number(size) > 32 || inputChange) {\n            size = `${Math.min(Math.max(Math.trunc(Number(input.value) * 10) / 10, 10), 32)}`;\n            localStorage.setItem('fontSize', size);\n        }\n        body.setProperty('--font-size', `${size}px`);\n        input.value = size;\n        localStorage.setItem('enableCustomFontSize', 'true');\n        toggle.textContent = 'ON';\n        toggle.style.color = '';\n        toggle.style.borderColor = '';\n    }\n};\n\nexport const changeFormat = (point: boolean) => {\n    const htmlInput = point ? getId('decimalPoint') as HTMLInputElement : getId('thousandSeparator') as HTMLInputElement;\n    const allowed = ['.', ',', ' ', '_', '^', '\"', \"'\", '`', '|'].includes(htmlInput.value);\n    if (!allowed || (point ? player.separator[0] : player.separator[1]) === htmlInput.value) {\n        if (point && player.separator[0] === '.') {\n            (getId('thousandSeparator') as HTMLInputElement).value = '';\n            player.separator[0] = '';\n        }\n        htmlInput.value = point ? '.' : '';\n    }\n    point ? player.separator[1] = htmlInput.value : player.separator[0] = htmlInput.value;\n};\n\n//If done for span, then add class=\"noMoveSpan\";\nexport const assignWithNoMove = (html: HTMLElement, text: string) => {\n    html.textContent = text;\n    html.style.width = `${text.length * 0.63}em`;\n};\n\nexport const playEvent = (event: number, index: number) => {\n    if (getId('blocker').style.display !== 'none') { return; }\n    player.events[index] = true;\n\n    switch (event) {\n        case 0: //[0] Discharge explanation\n            Alert(\"Energy that had been spent, can't be obtained again. But doing Discharge will reset spent Energy\");\n            break;\n        case 1: //[0] Clouds softcap\n            Alert('Cloud density is too high... Getting more will be harder now');\n            break;\n        case 2: //[0] Accretion new Rank unlocked\n            Alert('Getting more Mass, seems impossible. We need to change our approach, next Rank is going to be Softcapped');\n            if (player.accretion.rank <= 4) {\n                global.accretionInfo.rankCost[4] = 5e29;\n                const button = getId('reset1Button');\n                if (button.textContent === 'Max Rank achieved') { button.textContent = 'Next Rank is 5e29 Mass'; }\n            }\n            break;\n        case 3: //[0] Collapse explanation\n            Alert('Any Collapse reset from now on will give even more rewards. Collapse is only possible when can increase any of rewards.\\nRewards effects are unknown, but with more Elements will be revealed');\n            break;\n        case 4: //[1] Entering Intergalactic\n            Alert(\"There doesn't seem to be anything here. Let's try going back to start and find what is missing\");\n            break;\n        case 5: //[2] Creating Galaxy\n            Alert('Galaxy will boost production of Nebulas and Star clusters, but for the cost of every other structure/upgrade.\\nElements are disabled until can afford them again');\n    }\n};\n", "import { getId } from './Main';\nimport { cloneArray, global, player, playerStart } from './Player';\nimport { reset } from './Reset';\nimport { Alert, AlertWait, Confirm, specialHTML } from './Special';\nimport { stageCheck } from './Update';\n\nexport const prepareVacuum = () => {\n    const { buildings } = playerStart;\n    const { buildingsInfo, upgradesInfo, researchesInfo, researchesExtraInfo, strangenessInfo } = global;\n\n    if (player.inflation.vacuum) {\n        specialHTML.footerStatsHTML[1][0] = ['Energy%20mass.png', 'Energy mass', 'stage1borderImage cyanText', 'Mass'];\n        buildings[1][0].current = [5.476, -3];\n        buildings[2][0].current = [0, 0];\n        buildings[3][0].current = [0, 0];\n        const maxBuildings = [6, 7, 6, 6, 5];\n        buildingsInfo.maxActive.splice(1, maxBuildings.length, ...maxBuildings);\n        if (buildingsInfo.name[1][0] !== 'Mass') {\n            specialHTML.buildingHTML[1].unshift(['Preon.png', 'Preon'], ['Quarks.png', 'Quarks']);\n            buildingsInfo.name[1].unshift('Mass', 'Preons');\n        }\n        buildingsInfo.startCost[1] = [0, 0.005476, 6, 3, 24, 3];\n        buildingsInfo.firstCost[1] = [0, 0.005476, 6, 3, 24, 3];\n        global.dischargeInfo.energyType[1] = [0, 1, 3, 5, 10, 20];\n        buildingsInfo.type[2][1] = 'improves';\n        buildingsInfo.type[3][1] = 'improves';\n\n        const upgrades1Cost = [32, 48, 60, 90, 150, 400, 1600, 4000, 32000, 100000];\n        upgradesInfo[1].startCost.splice(0, upgrades1Cost.length, ...upgrades1Cost);\n        upgradesInfo[2].startCost[0] = 10;\n        //upgradesInfo[1].maxActive = 10;\n        //upgradesInfo[2].maxActive = 7;\n        //upgradesInfo[3].maxActive = 13;\n        //upgradesInfo[4].maxActive = 4;\n        //upgradesInfo[5].maxActive = 3;\n\n        const researches1Cost = [2500, 8000, 40000, 8000, 58000, 36000];\n        const researches1Scaling = [500, 4000, 6000, 38000, 0, 8000];\n        researchesInfo[1].startCost.splice(0, researches1Cost.length, ...researches1Cost);\n        researchesInfo[1].scaling.splice(0, researches1Scaling.length, ...researches1Scaling);\n        //researchesInfo[1].maxActive = 6;\n        //researchesInfo[2].maxActive = 6;\n        //researchesInfo[3].maxActive = 8;\n        //researchesInfo[4].maxActive = 4;\n        //researchesInfo[5].maxActive = 2;\n\n        researchesExtraInfo[3].scaling[3] = 1e14;\n        researchesExtraInfo[1].maxActive = 5;\n        researchesExtraInfo[2].maxActive = 4;\n        researchesExtraInfo[3].maxActive = 5;\n        //esearchesExtraInfo[4].maxActive = 2;\n        //researchesExtraInfo[5].maxActive = 0;\n\n        global.accretionInfo.rankCost[5] = 2.47e31;\n        global.researchesAutoInfo.startCost[0] = 2000;\n        global.ASRInfo.costRange[1] = [4000, 12000, 24000, 32000, 44000];\n\n        const strangeness1Cost = [2, 1, 20, 40, 2, 1, 2, 4, 10];\n        const strangeness1Scaling = [4, 3, 2, 1, 1.5, 1.5, 2, 3, 1];\n        strangenessInfo[1].startCost.splice(0, strangeness1Cost.length, ...strangeness1Cost);\n        strangenessInfo[1].scaling.splice(0, strangeness1Scaling.length, ...strangeness1Scaling);\n        const strangeness2Cost = [1, 2, 4, 6, 20, 4, 1, 6, 20];\n        const strangeness2Scaling = [1.6, 2.5, 3, 3.5, 1, 2.5, 1.8, 4, 1];\n        strangenessInfo[2].startCost.splice(0, strangeness2Cost.length, ...strangeness2Cost);\n        strangenessInfo[2].scaling.splice(0, strangeness2Scaling.length, ...strangeness2Scaling);\n        const strangeness3Cost = [1, 2, 6, 20, 30, 3, 12, 30];\n        const strangeness3Scaling = [1.46, 2.5, 2.5, 1, 1, 1.8, 3, 1];\n        strangenessInfo[3].startCost.splice(0, strangeness3Cost.length, ...strangeness3Cost);\n        strangenessInfo[3].scaling.splice(0, strangeness3Scaling.length, ...strangeness3Scaling);\n        const strangeness4Cost = [1, 3, 5, 5, 108, 20, 4, 4, 80, 40];\n        const strangeness4Scaling = [1.9, 2, 3, 4, 1, 1, 1.8, 1.8, 1, 1];\n        strangenessInfo[4].startCost.splice(0, strangeness4Cost.length, ...strangeness4Cost);\n        strangenessInfo[4].scaling.splice(0, strangeness4Scaling.length, ...strangeness4Scaling);\n        const strangeness5Cost = [1e10, 10, 20, 5, 10, 40, 800, 40, 20];\n        const strangeness5Scaling = [1, 1, 1, 1.9, 1.85, 1, 1.5, 2, 1];\n        strangenessInfo[5].startCost.splice(0, strangeness5Cost.length, ...strangeness5Cost);\n        strangenessInfo[5].scaling.splice(0, strangeness5Scaling.length, ...strangeness5Scaling);\n        //strangenessInfo[1].maxActive = 10; //Re enable when done\n        //strangenessInfo[2].maxActive = 9;\n        //strangenessInfo[3].maxActive = 8;\n        //strangenessInfo[4].maxActive = 10;\n        //strangenessInfo[5].maxActive = 9;\n\n        getId('strange9Stage1').style.display = '';\n        getId('strange8Stage2').style.display = '';\n        getId('strange9Stage2').style.display = '';\n        getId('strange8Stage3').style.display = '';\n        getId('strange9Stage4').style.display = '';\n        getId('strange10Stage4').style.display = '';\n        getId('strange6Stage5').style.display = '';\n        getId('strangenessSection2').style.display = '';\n        getId('strangenessSection3').style.display = '';\n        getId('strangenessSection4').style.display = '';\n        getId('strangenessSection5').style.display = '';\n        getId('preonCap').style.display = '';\n        getId('dustCap').style.display = '';\n        getId('strange10Stage1').style.display = 'none'; //''; //Re enable when done\n\n        const stageWord = getId('stageWord') as HTMLSpanElement;\n        stageWord.textContent = global.stageInfo.word[6];\n        stageWord.style.color = global.stageInfo.textColor[6];\n        getId('unknownStructures').style.display = 'none';\n    } else {\n        specialHTML.footerStatsHTML[1][0] = ['Quarks.png', 'Quarks', 'stage1borderImage cyanText', 'Quarks'];\n        buildings[1][0].current = [3, 0];\n        buildings[2][0].current = [2.8, -3];\n        buildings[3][0].current = [1, -19];\n        if (buildingsInfo.name[1][0] === 'Mass') {\n            specialHTML.buildingHTML[1].splice(0, 2);\n            buildingsInfo.name[1].splice(0, 2);\n        }\n        const maxBuildings = [4, 6, 5, 5, 4];\n        buildingsInfo.maxActive.splice(1, maxBuildings.length, ...maxBuildings);\n        buildingsInfo.startCost[1] = [0, 3, 24, 3];\n        buildingsInfo.firstCost[1] = [0, 3, 24, 3];\n        global.dischargeInfo.energyType[1] = [0, 1, 5, 20];\n        buildingsInfo.type[2][1] = 'producing';\n        buildingsInfo.type[3][1] = 'producing';\n\n        const upgrades1Cost = [0, 0, 9, 12, 36, 300, 800, 2000, 8000, 30000];\n        upgradesInfo[1].startCost.splice(0, upgrades1Cost.length, ...upgrades1Cost);\n        upgradesInfo[2].startCost[0] = 10000;\n        upgradesInfo[1].maxActive = 10;\n        upgradesInfo[2].maxActive = 7;\n        upgradesInfo[3].maxActive = 13;\n        upgradesInfo[4].maxActive = 4;\n        upgradesInfo[5].maxActive = 3;\n\n        const researches1Cost = [1000, 3000, 12000, 6000, 10000, 20000];\n        const researches1Scaling = [500, 2000, 2000, 26000, 0, 5000];\n        researchesInfo[1].startCost.splice(0, researches1Cost.length, ...researches1Cost);\n        researchesInfo[1].scaling.splice(0, researches1Scaling.length, ...researches1Scaling);\n        researchesInfo[1].maxActive = 6;\n        researchesInfo[2].maxActive = 6;\n        researchesInfo[3].maxActive = 8;\n        researchesInfo[4].maxActive = 4;\n        researchesInfo[5].maxActive = 2;\n\n        researchesExtraInfo[3].scaling[3] = 100;\n        researchesExtraInfo[1].maxActive = 0;\n        researchesExtraInfo[2].maxActive = 3;\n        researchesExtraInfo[3].maxActive = 4;\n        researchesExtraInfo[4].maxActive = 2;\n        researchesExtraInfo[5].maxActive = 0;\n\n        global.accretionInfo.rankCost[5] = 0;\n        global.researchesAutoInfo.startCost[0] = 300;\n        global.ASRInfo.costRange[1] = [4000, 12000, 20000];\n\n        const strangeness1Cost = [1, 1, 2, 4, 4, 1, 2, 2, 10];\n        const strangeness1Scaling = [1.5, 1, 3, 0, 2, 0.25, 2, 1.5, 0];\n        strangenessInfo[1].startCost.splice(0, strangeness1Cost.length, ...strangeness1Cost);\n        strangenessInfo[1].scaling.splice(0, strangeness1Scaling.length, ...strangeness1Scaling);\n        const strangeness2Cost = [1, 2, 2, 1, 3, 2, 1, 3, 8];\n        const strangeness2Scaling = [0.2, 0.5, 1.5, 2, 0, 1, 1.34, 2.5, 0];\n        strangenessInfo[2].startCost.splice(0, strangeness2Cost.length, ...strangeness2Cost);\n        strangenessInfo[2].scaling.splice(0, strangeness2Scaling.length, ...strangeness2Scaling);\n        const strangeness3Cost = [1, 1, 3, 4, 3, 2, 5, 6];\n        const strangeness3Scaling = [0.75, 1.5, 2.5, 0, 0, 1, 3.5, 0];\n        strangenessInfo[3].startCost.splice(0, strangeness3Cost.length, ...strangeness3Cost);\n        strangenessInfo[3].scaling.splice(0, strangeness3Scaling.length, ...strangeness3Scaling);\n        const strangeness4Cost = [1, 1, 3, 2, 4, 3, 3, 2, 4, 4];\n        const strangeness4Scaling = [1, 1.5, 1.5, 2, 0, 0, 1, 2.5, 0, 0];\n        strangenessInfo[4].startCost.splice(0, strangeness4Cost.length, ...strangeness4Cost);\n        strangenessInfo[4].scaling.splice(0, strangeness4Scaling.length, ...strangeness4Scaling);\n        const strangeness5Cost = [120, 10, 20, 5, 10, 20, 800, 20, 40];\n        const strangeness5Scaling = [60, 0, 0, 5, 10, 0, 400, 20, 0];\n        strangenessInfo[5].startCost.splice(0, strangeness5Cost.length, ...strangeness5Cost);\n        strangenessInfo[5].scaling.splice(0, strangeness5Scaling.length, ...strangeness5Scaling);\n        strangenessInfo[1].maxActive = 9;\n        strangenessInfo[2].maxActive = 9;\n        strangenessInfo[3].maxActive = 8;\n        strangenessInfo[4].maxActive = 10;\n        strangenessInfo[5].maxActive = 9;\n\n        getId('rankStat0').style.display = '';\n        getId('elementsExtra').style.display = 'none';\n        getId('mainCap').style.display = 'none';\n        getId('strange10Stage1').style.display = 'none';\n    }\n\n    for (let s = 1; s <= 3; s++) {\n        buildings[s][0].total = cloneArray(buildings[s][0].current);\n        buildings[s][0].trueTotal = cloneArray(buildings[s][0].current);\n        buildings[s][0].highest = cloneArray(buildings[s][0].current);\n    }\n};\n\nexport const switchVacuum = async() => {\n    if (player.inflation.vacuum) { return Alert('This cannot be undone'); }\n    const { milestones } = player;\n    let count = 0;\n\n    if (milestones[1][0] >= 5) { count++; }\n    if (milestones[2][1] >= 4) { count++; }\n    if (milestones[3][1] >= 5) { count++; }\n    if (milestones[4][1] >= 5) { count++; }\n    if (milestones[5][1] >= 8) { count++; }\n\n    if (count < 5) { return Alert(`Universe is still stable. Vacuum state is false. ${5 - count} more`); }\n\n    const ready = await Confirm('This will not be possible to undo. Are you ready?');\n    if (!ready) { return; }\n\n    await AlertWait('Universe is too unstable. Vacuum instability is imminent');\n    getId('vacuumState').textContent = 'true';\n    player.inflation.vacuum = true;\n    player.stage.true = 6;\n    player.stage.current = 1;\n    player.stage.active = 1;\n    prepareVacuum();\n    reset('vacuum', []);\n    stageCheck('reload');\n};\n\nexport const updateUnknown = () => {\n    const { milestones } = player;\n    const div = getId('unknownStructures') as HTMLDivElement;\n\n    div.style.display = milestones[1][0] >= 5 || milestones[2][1] >= 4 || milestones[3][1] >= 5 || milestones[4][1] >= 5 || milestones[5][1] >= 8 ? '' : 'none';\n\n    let text = '<h4 class=\"darkvioletText\">Unknown Structures:</h4>';\n    if (milestones[1][0] >= 5) { text += '\\n<img src=\"Used_art/Preon.png\" alt=\"Unknown Structure\" loading=\"lazy\">'; }\n    if (milestones[2][1] >= 4) { text += '\\n<img src=\"Used_art/Ocean.png\" alt=\"Unknown Structure\" loading=\"lazy\">'; }\n    if (milestones[3][1] >= 5) { text += '\\n<img src=\"Used_art/Subsatellite.png\" alt=\"Unknown Structure\" loading=\"lazy\">'; }\n    if (milestones[4][1] >= 5) { text += '\\n<img src=\"Used_art/Quasi%20star.png\" alt=\"Unknown Structure\" loading=\"lazy\">'; }\n    if (milestones[5][1] >= 8) { text += '\\n<img src=\"Used_art/Galaxy%20filament.png\" alt=\"Unknown Structure\" loading=\"lazy\">'; }\n\n    if (div.innerHTML === text) { return; }\n    div.innerHTML = text;\n};\n", "import { checkTab } from './Check';\nimport Limit from './Limit';\nimport { getClass, getId } from './Main';\nimport { cloneArray, global, player } from './Player';\nimport { playEvent, assignWithNoMove, specialHTML, switchTheme } from './Special';\nimport { autoElementsBuy, autoElementsSet, autoResearchesBuy, autoResearchesSet, autoUpgradesBuy, autoUpgradesSet, buyBuilding, calculateBuildingsCost, calculateGainedBuildings, calculateMaxLevel, assignBuildingInformation, collapseResetCheck, dischargeResetCheck, rankResetCheck, stageResetCheck, toggleSwap, vaporizationResetCheck, assignDischargeInformation, assignVaporizationInformation, assignCollapseInformation } from './Stage';\nimport { overlimit } from './Types';\nimport { updateUnknown } from './Vacuum';\n\nexport const switchTab = (tab: string, subtab = null as null | string) => {\n    if (subtab === null) {\n        const oldTab = global.tab;\n        getId(`${oldTab}Tab`).style.display = 'none';\n        getId(`${oldTab}TabBtn`).classList.remove('tabActive');\n        if (Object.hasOwn(global.subtab, oldTab + 'Current')) {\n            for (const inside of global.tabList[oldTab + 'Subtabs' as 'settingsSubtabs']) {\n                getId(`${oldTab}SubtabBtn${inside}`).style.display = 'none';\n            }\n        }\n\n        global.tab = tab;\n        let subtabAmount = 0;\n        getId(`${tab}Tab`).style.display = '';\n        getId(`${tab}TabBtn`).classList.add('tabActive');\n        if (Object.hasOwn(global.subtab, tab + 'Current')) {\n            for (const inside of global.tabList[tab + 'Subtabs' as 'settingsSubtabs']) {\n                if (checkTab(tab, inside)) {\n                    getId(`${tab}SubtabBtn${inside}`).style.display = '';\n                    subtabAmount++;\n                } else {\n                    if (global.subtab[tab + 'Current' as 'settingsCurrent'] === inside) {\n                        switchTab(tab, global.tabList[tab + 'Subtabs' as 'settingsSubtabs'][0]);\n                    }\n                }\n            }\n        }\n        getId('subtabs').style.display = subtabAmount > 1 ? '' : 'none';\n        getId('SRTab').textContent = `Current tab is ${tab} tab${subtabAmount > 1 ? ` and its subtab is ${global.subtab[tab + 'Current' as 'settingsCurrent']}` : ''}`;\n    } else {\n        const oldSubtab = global.subtab[tab + 'Current' as 'settingsCurrent'];\n        getId(`${tab}Subtab${oldSubtab}`).style.display = 'none';\n        getId(`${tab}SubtabBtn${oldSubtab}`).classList.remove('tabActive');\n\n        global.subtab[tab + 'Current' as 'settingsCurrent'] = subtab;\n        getId(`${tab}Subtab${subtab}`).style.display = '';\n        getId(`${tab}SubtabBtn${subtab}`).classList.add('tabActive');\n        if (global.screenReader) { getId('SRTab').textContent = `Current subtab is ${subtab}, part of ${tab} tab`; }\n    }\n\n    visualUpdate();\n    numbersUpdate();\n};\n\n//In seconds\nexport const maxOfflineTime = (): number => !player.inflation.vacuum ?\n/**/((14400 + 14400 * player.researchesAuto[1]) * (1 + player.strangeness[2][7])) :\n/**/(28800 + 28800 * player.researchesAuto[1]);\nexport const maxExportTime = (): number => 86400 * (player.inflation.vacuum ? (1 + player.strangeness[4][8]) : 2);\nexport const exportMultiplier = (): number => player.strangeness[4][7] * (player.inflation.vacuum ? 2 : 1);\n\nexport const timeUpdate = (timeWarp = 0) => { //Time based information\n    const { toggles } = player;\n    const vacuum = player.inflation.vacuum;\n\n    let passedSeconds: number;\n    if (timeWarp > 0) {\n        const extraTime = Math.min(60, timeWarp);\n        passedSeconds = extraTime;\n        timeWarp -= extraTime;\n    } else {\n        const { time } = player;\n\n        passedSeconds = (Date.now() - time.updated) / 1000;\n        time.updated = Date.now();\n        if (passedSeconds < 0) {\n            time.offline += passedSeconds;\n            return; //To prevent free time warps\n        }\n        global.timeSpecial.lastSave += passedSeconds * 1000;\n        player.stage.export = Math.min(player.stage.export + passedSeconds, maxExportTime());\n        if (passedSeconds > 60) {\n            const extraTime = passedSeconds - 60;\n            passedSeconds = 60;\n            time.offline += extraTime;\n            time.offline = Math.min(time.offline, maxOfflineTime());\n        } else if (time.offline !== 0 && (toggles.normal[0] || player.researchesAuto[0] < 3)) {\n            if (time.offline > 0) {\n                const extraTime = Math.min(Math.max(time.offline / 3600, 1) * passedSeconds, time.offline);\n                time.offline -= Math.min(extraTime * (6 / (vacuum && player.strangeness[2][7] >= 1 ? 1.5 * player.strangeness[2][7] : 1)), time.offline);\n                passedSeconds += extraTime;\n            } else { time.offline += passedSeconds; }\n        }\n    }\n    const { buildingsInfo, automatization } = global;\n\n    assignBuildingInformation();\n    if (vacuum && toggles.auto[0]) { stageResetCheck(5, true); }\n    for (const s of global.stageInfo.activeAll) {\n        if (!vacuum && toggles.auto[0]) { stageResetCheck(s, true); }\n        if (s === 4 && toggles.auto[4]) { collapseResetCheck(true); }\n        if (s === 3 && toggles.auto[3]) { rankResetCheck(true); }\n        if (s === 2 && toggles.auto[2]) { vaporizationResetCheck(true); }\n        if (s === 1 && toggles.auto[1]) { dischargeResetCheck('interval'); }\n\n        if (s === 4 && automatization.elements.length !== 0) { autoElementsBuy(); }\n        if (automatization.autoE[s].length !== 0) { autoResearchesBuy('researchesExtra', s); }\n        if (automatization.autoR[s].length !== 0) { autoResearchesBuy('researches', s); }\n        if (automatization.autoU[s].length !== 0) { autoUpgradesBuy(s); }\n\n        for (let i = buildingsInfo.maxActive[s] - 1; i >= 1; i--) {\n            if (toggles.buildings[s][i] && player.ASR[s] >= i) { buyBuilding(i, s, true); }\n            if (buildingsInfo.type[s][i] === 'producing') {\n                calculateGainedBuildings(i - 1, s, passedSeconds);\n            }\n        }\n        if (s === 1 && player.upgrades[1][8] === 1) { calculateGainedBuildings(player.inflation.vacuum ? 5 : 3, 1, passedSeconds); } //Molecules from Radiation\n        if (s === 5) { //Stars from Nebulas\n            const research = player.researches[5][0];\n\n            if (research >= 1) { calculateGainedBuildings(1, 5, passedSeconds); }\n            if (research >= 2) { calculateGainedBuildings(2, 5, passedSeconds); }\n            if (research >= 3) { calculateGainedBuildings(3, 5, passedSeconds); }\n        }\n    }\n\n    if (timeWarp > 0) { timeUpdate(timeWarp); }\n};\n\nexport const numbersUpdate = () => { //This is for relevant visual info (can be done async)\n    const { tab, subtab } = global;\n    const active = player.stage.active;\n    const buildings = player.buildings[active];\n\n    if (global.footer) {\n        if (active === 1) {\n            getId('footerStat1Span').textContent = Limit(buildings[0].current).format({ padding: true });\n            getId('footerStat2Span').textContent = format(player.discharge.energy);\n        } else if (active === 2) {\n            getId('footerStat1Span').textContent = Limit(player.vaporization.clouds).format();\n            getId('footerStat2Span').textContent = !player.inflation.vacuum ? Limit(buildings[0].current).format({ padding: true }) :\n                Limit(player.buildings[1][5].current).divide([6.02214076, 23]).format({ padding: true });\n            getId('footerStat3Span').textContent = Limit(buildings[1].current).format({ padding: Limit(buildings[2].current).moreThan([0, 0]) });\n        } else if (active === 3) {\n            getId('footerStat1Span').textContent = !player.inflation.vacuum ? Limit(buildings[0].current).format({ padding: true }) :\n                Limit(player.buildings[1][0].current).multiply([1.78266192, -33]).format({ padding: true });\n        } else if (active === 4 || active === 5) {\n            const stars = player.buildings[4];\n\n            getId('footerStat1Span').textContent = format(player.collapse.mass);\n            getId('footerStat2Span').textContent = Limit(stars[0].current).format({ padding: true });\n            if (active === 5) {\n                buildings[0].current = Limit(stars[1].current).plus(stars[2].current, stars[3].current, stars[4].current).toArray();\n                getId('footerStat3Span').textContent = Limit(buildings[0].current).format();\n            }\n        }\n    }\n    if (tab === 'stage') {\n        if (subtab.stageCurrent === 'Structures') {\n            const { buildingsInfo } = global;\n            const howMany = player.toggles.shop.howMany;\n            const strict = player.toggles.shop.strict;\n\n            for (let i = 1; i < buildingsInfo.maxActive[active]; i++) {\n                const trueCountID = getId(`building${i}True`);\n                assignWithNoMove(getId(`building${i}Cur`), Limit(buildings[i].current).format({ padding: trueCountID.style.display !== 'none' }));\n                getId(`building${i}Prod`).textContent = Limit(buildingsInfo.producing[active][i]).format({ padding: true });\n                trueCountID.textContent = `[${format(buildings[i as 1].true)}]`;\n\n                if ((active === 4 && player.collapse.mass < global.collapseInfo.unlockB[i]) ||\n                    (active === 5 && player.collapse.mass < global.collapseInfo.unlockG[i])) {\n                    getId(`building${i}`).classList.remove('availableBuilding');\n                    getId(`building${i}Btn`).textContent = `Unlocked at ${format(global.collapseInfo[active === 4 ? 'unlockB' : 'unlockG'][i])} Mass`;\n                    getId(`building${i}BuyX`).textContent = 'Locked';\n                    continue;\n                }\n\n                let costName: string;\n                let currency: number | overlimit;\n                if (active === 5 && i === 3) { //Galaxy\n                    costName = 'Mass';\n                    currency = player.collapse.mass;\n                } else {\n                    let e = i - 1;\n                    let extra = active;\n                    if (active === 2) {\n                        if (i !== 1) { e = 1; } //Drops\n                    } else if (active >= 3) { //3, 4, 5\n                        e = 0; //Mass || Elements\n                        if (active === 5) { extra = 4; }\n                    }\n\n                    costName = buildingsInfo.name[extra][e];\n                    currency = cloneArray(player.buildings[extra][e].current);\n                }\n\n                let totalCost: overlimit;\n                let totalBuy: number;\n                const cost = calculateBuildingsCost(i, active);\n                if (player.researchesAuto[0] === 0 || howMany === 1 || ((howMany === -1 || !strict) && Limit(cost).moreThan(currency))) {\n                    totalCost = cost;\n                    totalBuy = 1;\n                } else {\n                    const increase = buildingsInfo.increase[active][i];\n                    const firstCost = buildingsInfo.firstCost[active][i];\n                    const alreadyBought = buildings[i as 1].true;\n                    const totalBefore = Limit(increase).power(alreadyBought).minus([1, 0]).divide(increase - 1).multiply(firstCost).toArray();\n\n                    if (howMany === -1 || !strict) {\n                        const maxAfford = Math.floor(Limit(totalBefore).plus(currency).multiply(increase - 1).divide(firstCost).plus([1, 0]).log(10).divide(Math.log10(increase)).toNumber()) - alreadyBought;\n                        totalBuy = howMany === -1 ? maxAfford : Math.min(maxAfford, howMany);\n                    } else {\n                        totalBuy = howMany;\n                    }\n                    totalCost = Limit(increase).power(totalBuy + alreadyBought).minus([1, 0]).divide(increase - 1).multiply(firstCost).minus(totalBefore).toArray();\n                }\n\n                getId(`building${i}BuyX`).textContent = format(totalBuy);\n                if (Limit(totalCost).lessOrEqual(currency)) {\n                    getId(`building${i}`).classList.add('availableBuilding');\n                    getId(`building${i}Btn`).textContent = `Make for: ${Limit(totalCost).format()} ${costName}`;\n                } else {\n                    getId(`building${i}`).classList.remove('availableBuilding');\n                    getId(`building${i}Btn`).textContent = `Need: ${Limit(totalCost).format()} ${costName}`;\n                }\n            }\n            if (active === 1) {\n                assignDischargeInformation();\n                const effect = getId('dischargeEffect');\n                if (effect !== null) { effect.textContent = format(global.upgradesInfo[1].effect[5] as number); }\n                getId('reset1Button').textContent = `Next goal is ${format(global.dischargeInfo.next)} Energy`;\n            } else if (active === 2) {\n                assignVaporizationInformation();\n                getId('reset1Button').textContent = `Reset for ${Limit(global.vaporizationInfo.get).format()} Clouds`;\n            } else if (active === 4) {\n                const { collapse } = player;\n                const { collapseInfo } = global;\n                assignCollapseInformation();\n\n                getId('reset1Button').textContent = `Collapse to ${format(collapseInfo.newMass)} Mass`;\n                for (let i = 1; i <= player.researchesExtra[4][0]; i++) {\n                    getId(`starSpecial${i}Cur`).textContent = format(collapse.stars[i - 1]);\n                    getId(`starSpecial${i}Get`).textContent = format(collapseInfo.starCheck[i - 1]);\n                }\n            }\n\n            if (player.time.offline > 0 && (player.toggles.normal[0] || player.researchesAuto[0] < 3)) {\n                const time = Math.max(player.time.offline / 3600, 1);\n                getId('offlineBoostEffect').textContent = `+${format(time * 1, { digits: 0 })} seconds`;\n                getId('offlineBoostWaste').textContent = `${format(time * (6 / (player.inflation.vacuum && player.strangeness[2][7] >= 1 ? 1.5 * player.strangeness[2][7] : 1)), { digits: 0 })} seconds`;\n            }\n            if (global.lastUpgrade[0]) { getUpgradeDescription(global.lastUpgrade[1], 'auto', 'upgrades'); }\n        }\n    } else if (tab === 'research') {\n        if (subtab.researchCurrent === 'Researches') {\n            if (global.lastResearch[0]) { getUpgradeDescription(global.lastResearch[1], 'auto', global.lastResearch[2]); }\n        } else if (subtab.researchCurrent === 'Elements') {\n            if (global.lastElement[0]) { getUpgradeDescription(global.lastElement[1], 4, 'elements'); }\n        }\n    } else if (tab === 'strangeness') {\n        if (subtab.strangenessCurrent === 'Matter') {\n            const stageBoost = global.strangeInfo.stageBoost[active];\n\n            getId('strange0Cur').textContent = format(player.strange[0].current);\n            getId('strange0Prod').textContent = stageBoost !== null ? format(stageBoost) : 'none';\n            getId('strange0Gain').textContent = format(global.strangeInfo.gain(active));\n        }\n    } else if (tab === 'settings') {\n        if (subtab.settingsCurrent === 'Settings') {\n            assignWithNoMove(getId('exportGain'), format(player.stage.export * exportMultiplier() / 86400, { padding: true }));\n            if (global.timeSpecial.lastSave >= 1000) { getId('isSaved').textContent = `${format(global.timeSpecial.lastSave, { type: 'time' })} ago`; }\n        } else if (subtab.settingsCurrent === 'Stats') {\n            const { strange } = player;\n\n            getId('firstPlay').textContent = `${format(Date.now() - player.time.started, { type: 'time' })} ago`;\n            getId('stageResetsCount').textContent = format(player.stage.resets);\n            getId('offlineStat').textContent = format(player.time.offline * 1000, { type: 'time' });\n            getId('maxOfflineStat').textContent = `${format(maxOfflineTime() / 3600)} hours`;\n            getId('maxExportStat').textContent = format(maxExportTime() * exportMultiplier() / 86400);\n            if (active === 1) {\n                getId('maxEnergyStat').textContent = format(player.discharge.energyMax);\n                getId('dischargeStat').textContent = format(player.discharge.current);\n                getId('dischargeStatBonus').textContent = `[+${format(global.dischargeInfo.bonus)}]`;\n                if (player.inflation.vacuum) {\n                    assignWithNoMove(getId('preonCapStat'), Limit(global.inflationInfo.preonCap).format({ padding: true }));\n                }\n            } else if (active === 2) {\n                getId('maxCloudsStat').textContent = Limit(player.vaporization.cloudsMax).format();\n\n                if (player.inflation.vacuum) {\n                    const moles = player.buildings[1][5];\n\n                    buildings[0].trueTotal = Limit(moles.trueTotal).divide([6.02214076, 23]).toArray();\n                    buildings[0].highest = Limit(moles.highest).divide([6.02214076, 23]).toArray();\n                }\n            } else if (active === 3) {\n                if (player.inflation.vacuum) {\n                    const mass = player.buildings[1][0];\n\n                    buildings[0].total = Limit(mass.total).multiply([1.78266192, -33]).toArray();\n                    buildings[0].trueTotal = Limit(mass.trueTotal).multiply([1.78266192, -33]).toArray();\n                    buildings[0].highest = Limit(mass.highest).multiply([1.78266192, -33]).toArray();\n\n                    assignWithNoMove(getId('dustCapStat'), Limit(global.inflationInfo.dustCap).format({ padding: true }));\n                }\n            } else if (active === 4 || active === 5) {\n                getId('maxSolarMassStat').textContent = format(player.collapse.massMax);\n                if (player.inflation.vacuum) {\n                    assignWithNoMove(getId('mainCapStat'), Limit(global.buildingsInfo.producing[1][1]).multiply([5.378995670037768, -64]).format({ padding: true }));\n                }\n                if (active === 4) {\n                    const { starEffect } = global.collapseInfo;\n\n                    assignWithNoMove(getId('star1StatCurrent'), format(starEffect[0](), { padding: true }));\n                    assignWithNoMove(getId('star1StatAfter'), format(starEffect[0](true), { padding: true }));\n                    assignWithNoMove(getId('star2StatCurrent'), format(starEffect[1](), { padding: true }));\n                    assignWithNoMove(getId('star2StatAfter'), format(starEffect[1](true), { padding: true }));\n                    assignWithNoMove(getId('star3StatCurrent'), format(starEffect[2](), { padding: true }));\n                    assignWithNoMove(getId('star3StatAfter'), format(starEffect[2](true), { padding: true }));\n                } else if (active === 5) {\n                    getId('starsStatTrue').textContent = format(global.collapseInfo.trueStars);\n                    const stars = player.buildings[4];\n\n                    buildings[0].total = Limit(stars[1].total).plus(stars[2].total, stars[3].total, stars[4].total).toArray();\n                    buildings[0].trueTotal = Limit(stars[1].trueTotal).plus(stars[2].trueTotal, stars[3].trueTotal, stars[4].trueTotal).toArray();\n                    buildings[0].highest = Limit(stars[1].highest).plus(stars[2].highest, stars[3].highest, stars[4].highest).toArray();\n                }\n            }\n            for (let i = 0; i < buildings.length; i++) {\n                getId(`building${i}StatTotal`).textContent = Limit(buildings[i].total).format();\n                getId(`building${i}StatTrueTotal`).textContent = Limit(buildings[i].trueTotal).format();\n                getId(`building${i}StatHighest`).textContent = Limit(buildings[i].highest).format();\n            }\n            for (let i = 0; i < strange.length; i++) {\n                getId(`strange${i}StatTotal`).textContent = format(strange[i].total);\n            }\n        }\n    }\n};\n\nexport const visualUpdate = () => { //This is what can appear/disappear when inside Stage (can be done async)\n    const { stage } = player;\n    const { tab, subtab } = global;\n    const activeAll = global.stageInfo.activeAll;\n    const active = stage.active;\n\n    if (active === 1) {\n        if (global.footer) { getId('footerStat2').style.display = player.discharge.unlock ? '' : 'none'; }\n        if (player.strange[0].total <= 0) { getId('researchTabBtn').style.display = player.discharge.current >= 4 ? '' : 'none'; }\n        if (!player.events[0] && player.upgrades[1][6] === 1) { playEvent(0, 0); }\n    } else if (active === 2) {\n        if (global.footer) { getId('footerStat1').style.display = player.upgrades[2][1] === 1 ? '' : 'none'; }\n        if (!player.events[0]) {\n            assignVaporizationInformation();\n            if (Limit(global.vaporizationInfo.get).plus(player.vaporization.clouds).moreThan([1, 4])) { playEvent(1, 0); }\n        }\n    } else if (active === 3) {\n        if (!player.events[0] && Limit(player.buildings[3][0].current).moreOrEqual([5, 29])) { playEvent(2, 0); }\n    } else if (active === 4) {\n        if (!player.events[0] && player.researchesExtra[4][0] >= 1) { playEvent(3, 0); }\n    }\n\n    if (tab === 'stage') {\n        if (subtab.stageCurrent === 'Structures') {\n            const buildings = player.buildings[active];\n            const researchAuto0 = player.researchesAuto[0];\n            const ASR = player.ASR[active];\n\n            if (player.inflation.vacuum) {\n                getId('stageReset').textContent = stage.current >= 5 ? 'Return back to start' : 'You are not ready';\n                if (player.strange[0].total <= 0 && stage.current < 5) { getId('resetStage').style.display = 'none'; }\n            } else {\n                getId('stageReset').textContent =\n                    active === 1 ? (Limit(buildings[3].current).moreOrEqual([1.67, 21]) ? (active === stage.current ? 'Enter next Stage' : 'Reset this Stage') : 'You are not ready') :\n                    active === 2 ? (Limit(buildings[1].current).moreOrEqual([1.194, 29]) ? (active === stage.current ? 'Enter next Stage' : 'Reset this Stage') : 'You are not ready') :\n                    active === 3 ? (Limit(buildings[0].current).moreOrEqual([2.47, 31]) ? (active === stage.current ? 'Enter next Stage' : 'Reset this Stage') : 'You are not ready') :\n                    (player.events[1] && stage.current === 5 ? 'Return back to start' : 'You are not ready');\n            }\n\n            getId('toggleBuy').style.display = researchAuto0 >= 1 ? '' : 'none';\n            getId('toggleBuilding0').style.display = researchAuto0 >= 2 ? '' : 'none';\n            getId('offlineBoost').style.display = player.time.offline > 0 && (player.toggles.normal[0] || player.researchesAuto[0] < 3) ? '' : 'none';\n            for (let i = 1; i < global.buildingsInfo.maxActive[active]; i++) {\n                getId(`building${i}True`).style.display = Limit(buildings[i].current).notEqual(buildings[i as 1].true) ? '' : 'none';\n                getId(`toggleBuilding${i}`).style.display = ASR >= i ? '' : 'none';\n                getId(`building${i}BuyDiv`).style.display = researchAuto0 > 0 ? '' : 'none';\n            }\n            if (active === 1) {\n                const discharge = player.discharge.current;\n\n                getId('reset1Main').style.display = player.upgrades[1][5] === 1 ? '' : 'none';\n                getId('building2').style.display = Limit(buildings[1].trueTotal).moreOrEqual(player.inflation.vacuum ? [4, 0] : [1.1, 1]) ? '' : 'none';\n                getId('building3').style.display = Limit(buildings[2].trueTotal).moreOrEqual([2, 0]) ? '' : 'none';\n                if (player.inflation.vacuum) {\n                    getId('building4').style.display = Limit(buildings[3].trueTotal).moreOrEqual([8, 0]) ? '' : 'none';\n                    getId('building5').style.display = Limit(buildings[4].trueTotal).moreOrEqual([2, 0]) ? '' : 'none';\n                }\n                getId('upgrades').style.display = player.discharge.unlock ? '' : 'none';\n                getId('upgrade7').style.display = discharge >= 3 ? '' : 'none';\n                getId('upgrade8').style.display = discharge >= 3 ? '' : 'none';\n                getId('upgrade9').style.display = discharge >= 3 ? '' : 'none';\n                getId('upgrade10').style.display = discharge >= 3 ? '' : 'none';\n                if (stage.true < 2) { getId('resetStage').style.display = player.upgrades[1][9] === 1 ? '' : 'none'; }\n            } else if (active === 2) {\n                getId('reset1Main').style.display = player.upgrades[2][1] === 1 ? '' : 'none';\n                getId('building2').style.display = Limit(buildings[1].trueTotal).moreOrEqual([3, 2]) ? '' : 'none';\n                getId('building3').style.display = Limit(buildings[1].trueTotal).moreOrEqual([5, 6]) ? '' : 'none';\n                getId('building4').style.display = Limit(buildings[1].trueTotal).moreOrEqual([5, 17]) ? '' : 'none';\n                getId('building5').style.display = Limit(buildings[1].trueTotal).moreOrEqual([5, 22]) ? '' : 'none';\n                if (player.inflation.vacuum) { getId('building6').style.display = 'none'; }\n                getId('upgrade2').style.display = Limit(buildings[3].trueTotal).moreOrEqual([1, 0]) ? '' : 'none';\n                getId('upgrade3').style.display = Limit(buildings[2].trueTotal).moreOrEqual([1, 0]) ? '' : 'none';\n                getId('upgrade4').style.display = Limit(buildings[2].trueTotal).moreOrEqual([1, 0]) ? '' : 'none';\n                getId('upgrade5').style.display = Limit(buildings[3].trueTotal).moreOrEqual([1, 0]) ? '' : 'none';\n                getId('upgrade6').style.display = Limit(buildings[4].trueTotal).moreOrEqual([1, 0]) ? '' : 'none';\n                getId('upgrade7').style.display = Limit(buildings[5].trueTotal).moreOrEqual([1, 0]) && player.strangeness[2][2] >= 3 ? '' : 'none';\n            } else if (active === 3) {\n                const upgrades = player.upgrades[3];\n                getId('building2').style.display = upgrades[2] === 1 ? '' : 'none';\n                getId('building3').style.display = upgrades[4] === 1 ? '' : 'none';\n                getId('building4').style.display = upgrades[6] === 1 ? '' : 'none';\n                if (player.inflation.vacuum) { getId('building5').style.display = 'none'; }\n                getId('upgrade4').style.display = Limit(buildings[2].trueTotal).moreOrEqual([1, 0]) ? '' : 'none';\n                if (upgrades[4] === 1) { getId('upgrade6').style.display = ''; }\n                getId('upgrade9').style.display = player.accretion.rank >= 4 && player.strangeness[3][2] >= 3 ? '' : 'none';\n            } else if (active === 4) {\n                const upgrades = player.upgrades[4];\n                const nova = player.researchesExtra[4][0];\n\n                getId('starsSpecial').style.display = nova >= 1 ? '' : 'none';\n                getId('starSpecial2').style.display = nova >= 2 ? '' : 'none';\n                getId('starSpecial3').style.display = nova >= 3 ? '' : 'none';\n                getId('reset1Main').style.display = upgrades[0] === 1 ? '' : 'none';\n                if (!player.inflation.vacuum) {\n                    getId('building2').style.display = upgrades[1] === 1 ? '' : 'none';\n                    getId('building3').style.display = upgrades[2] === 1 ? '' : 'none';\n                    getId('building4').style.display = player.collapse.mass >= 10 ? '' : 'none';\n                } else { getId('building5').style.display = 'none'; }\n                getId('upgrade4').style.display = player.strangeness[4][2] >= 1 ? '' : 'none';\n            } else if (active === 5) {\n                if (!player.inflation.vacuum) {\n                    const nebula = player.milestones[2][0] >= 3;\n                    const cluster = player.milestones[3][0] >= 3;\n\n                    getId('buildings').style.display = nebula || cluster ? '' : 'none';\n                    getId('building1').style.display = nebula ? '' : 'none';\n                    getId('building2').style.display = cluster ? '' : 'none';\n                    getId('upgrades').style.display = nebula || cluster ? '' : 'none';\n                    getId('upgrade1').style.display = nebula ? '' : 'none';\n                    getId('upgrade2').style.display = cluster ? '' : 'none';\n                } else { getId('building4').style.display = 'none'; }\n                getId('building3').style.display = player.strangeness[5][6] >= 1 ? '' : 'none';\n                getId('upgrade3').style.display = Limit(buildings[3].current).moreOrEqual([1, 0]) ? '' : 'none';\n            }\n        }\n    } else if (tab === 'research') {\n        if (subtab.researchCurrent === 'Researches') {\n            if (player.strangeness[3][6] < 1) { getId('researchAuto3').style.display = 'none'; }\n\n            if (active === 1) {\n                if (player.inflation.vacuum) {\n                    getId('extraResearch').style.display = stage.current > 1 || player.discharge.current >= 5 ? '' : 'none';\n                    getId('researchExtra2').style.display = stage.current >= 3 ? '' : 'none';\n                    getId('researchExtra4').style.display = stage.current >= 2 ? '' : 'none';\n                    getId('researchExtra5').style.display = stage.current >= 4 ? '' : 'none';\n                }\n            } else if (active === 2) {\n                const buildings = player.buildings[2];\n\n                getId('extraResearch').style.display = Limit(player.vaporization.clouds).moreThan([1, 0]) ? '' : 'none';\n                getId('research3').style.display = Limit(buildings[2].trueTotal).moreOrEqual([1, 0]) ? '' : 'none';\n                getId('research4').style.display = Limit(buildings[2].trueTotal).moreOrEqual([1, 0]) ? '' : 'none';\n                getId('research5').style.display = Limit(buildings[3].trueTotal).moreOrEqual([1, 0]) ? '' : 'none';\n                getId('research6').style.display = Limit(buildings[4].trueTotal).moreOrEqual([1, 0]) ? '' : 'none';\n                getId('researchExtra3').style.display = Limit(buildings[5].trueTotal).moreOrEqual([1, 0]) ? '' : 'none';\n            } else if (active === 3) {\n                if (player.upgrades[3][4] === 1) { getId('research6').style.display = ''; }\n                getId('research3').style.display = Limit(player.buildings[3][2].trueTotal).moreOrEqual([1, 0]) ? '' : 'none';\n                getId('research4').style.display = Limit(player.buildings[3][2].trueTotal).moreOrEqual([1, 0]) ? '' : 'none';\n                if (player.inflation.vacuum) {\n                    getId('researchExtra5').style.display = player.accretion.rank >= 3 && player.researchesExtra[1][2] >= 2 ? '' : 'none';\n                }\n            } else if (active === 4) {\n                getId('research4').style.display = player.strangeness[4][2] >= 2 ? '' : 'none';\n                getId('extraResearch').style.display = Limit(player.buildings[4][2].trueTotal).moreThan([0, 0]) ? '' : 'none';\n                getId('researchExtra2').style.display = player.strangeness[4][2] >= 3 ? '' : 'none';\n            } else if (active === 5) {\n                if (!player.inflation.vacuum) {\n                    getId('stageResearch').style.display = player.milestones[2][0] >= 3 || player.milestones[3][0] >= 3 ? '' : 'none';\n                    getId('research1').style.display = player.milestones[2][0] >= 3 ? '' : 'none';\n                    getId('research2').style.display = player.milestones[3][0] >= 3 ? '' : 'none';\n                }\n            }\n        } else if (subtab.researchCurrent === 'Elements') {\n            const mass = player.collapse.mass >= 10;\n            const upgrades = player.upgrades[4];\n            const grid = getId('elementsGrid') as HTMLDivElement;\n\n            grid.style.display = upgrades[2] === 1 ? '' : 'flex';\n            for (let i = 6; i <= 10; i++) { getId(`element${i}`).style.display = upgrades[2] === 1 ? '' : 'none'; }\n            upgrades[2] === 1 && !mass ? grid.classList.add('Elements10App') : grid.classList.remove('Elements10App');\n            for (let i = 11; i <= 26; i++) { getId(`element${i}`).style.display = mass ? '' : 'none'; }\n            getId('element27').style.display = mass && upgrades[3] === 1 ? '' : 'none';\n            getId('element28').style.display = mass && upgrades[3] === 1 ? '' : 'none';\n            if (player.inflation.vacuum) { getId('elementsExtra').style.display = player.strangeness[4][4] >= 1 ? '' : 'none'; }\n        }\n    } else if (tab === 'strangeness') {\n        if (subtab.strangenessCurrent === 'Matter') {\n            const vacuum = player.inflation.vacuum;\n            const bound = player.strangeness[5][5] >= 1;\n\n            getId('strange4Stage5').style.display = (vacuum ? bound : player.milestones[2][0] >= 3) ? '' : 'none';\n            getId('strange5Stage5').style.display = (vacuum ? bound : player.milestones[3][0] >= 3) ? '' : 'none';\n            getId('strange8Stage5').style.display = (vacuum ? bound : player.milestones[2][0] >= 3 || player.milestones[3][0] >= 3) ? '' : 'none';\n            getId('strange7Stage5').style.display = bound ? '' : 'none';\n            if (!vacuum) {\n                const strange5 = player.milestones[4][0] >= 3;\n\n                getId('strange9Stage1').style.display = strange5 ? '' : 'none';\n                getId('strange8Stage2').style.display = strange5 ? '' : 'none';\n                getId('strange9Stage2').style.display = strange5 ? '' : 'none';\n                getId('strange8Stage3').style.display = strange5 ? '' : 'none';\n                getId('strange9Stage4').style.display = strange5 ? '' : 'none';\n                getId('strange10Stage4').style.display = strange5 ? '' : 'none';\n                getId('strangenessSection5').style.display = strange5 ? '' : 'none';\n                getId('strange6Stage5').style.display = player.milestones[2][0] >= 3 || player.milestones[3][0] >= 3 ? '' : 'none';\n            }\n        } else if (subtab.strangenessCurrent === 'Milestones') {\n            getId('milestone1Stage5Div').style.display = player.strangeness[5][8] >= 1 ? '' : 'none';\n            getId('milestone2Stage5Div').style.display = player.strangeness[5][8] >= 1 && player.strangeness[5][6] >= 1 ? '' : 'none';\n        }\n    } else if (tab === 'settings') {\n        if (subtab.settingsCurrent === 'Settings') {\n            const { researchesAuto, strangeness } = player;\n\n            getId('toggleAuto0').style.display = strangeness[5][2] >= 1 ? '' : 'none';\n            getId('toggleAuto0Mark').style.display = strangeness[5][2] >= 1 ? '' : 'none';\n            getId('exportSpecial').style.display = strangeness[4][7] >= 1 ? '' : 'none';\n            if (player.strange[0].total <= 0 && stage.current < 5 && player.inflation.vacuum) {\n                getId('stageToggleReset').style.display = 'none';\n                getId('stageSwitchHotkey').style.display = 'none';\n            }\n            getId('toggle0').style.display = researchesAuto[0] >= 3 ? '' : 'none';\n            getId('offlineStorage').textContent = researchesAuto[0] >= 3 ? 'Auto consume offline storage' : 'Offline storage';\n            getId('autoTogglesUpgrades').style.display = researchesAuto[2] >= 1 ? '' : 'none';\n            getId('autoToggle6').style.display = researchesAuto[2] >= 2 ? '' : 'none';\n            getId('autoToggle7').style.display = researchesAuto[2] >= 3 ? '' : 'none';\n\n            if (activeAll.includes(1)) {\n                getId('toggleAuto1').style.display = strangeness[1][3] >= 1 ? '' : 'none';\n                if (stage.true < 2) { getId('resetToggles').style.display = player.discharge.current >= 1 ? '' : 'none'; }\n            }\n            if (activeAll.includes(2)) {\n                if (stage.true < 3) { getId('vaporizationToggleReset').style.display = Limit(player.vaporization.clouds).moreThan([1, 0]) ? '' : 'none'; }\n                getId('toggleAuto2').style.display = strangeness[2][4] >= 1 ? '' : 'none';\n                getId('toggleAuto2Mark').style.display = strangeness[2][4] >= 1 ? '' : 'none';\n            }\n            if (activeAll.includes(3)) {\n                getId('toggleAuto3').style.display = strangeness[3][4] >= 1 ? '' : 'none';\n            }\n            if (activeAll.includes(4)) {\n                if (stage.true < 5) { getId('collapseToggleReset').style.display = player.collapse.mass > 0.01235 ? '' : 'none'; }\n                getId('toggleAuto4').style.display = strangeness[4][5] >= 1 ? '' : 'none';\n                getId('toggleAuto4Mark').style.display = strangeness[4][5] >= 1 ? '' : 'none';\n            }\n        } else if (subtab.settingsCurrent === 'Stats') {\n            const buildings = player.buildings[active];\n\n            getId('maxExportStats').style.display = player.strangeness[4][7] >= 1 ? '' : 'none';\n            for (let i = 1; i < global.buildingsInfo.maxActive[active]; i++) {\n                getId(`building${i}Stats`).style.display = Limit(buildings[i].trueTotal).moreThan([0, 0]) ? '' : 'none';\n            }\n\n            getId('stageResets').style.display = stage.resets > 0 ? '' : 'none';\n            if (!player.inflation.vacuum) { updateUnknown(); }\n            if (active === 1) {\n                getId('energyStats').style.display = player.discharge.unlock ? '' : 'none';\n                getId('dischargeStats').style.display = player.discharge.current + global.dischargeInfo.bonus > 0 ? '' : 'none';\n                getId('dischargeStatBonus').style.display = global.dischargeInfo.bonus > 0 ? '' : 'none';\n            } else if (active === 2) {\n                getId('cloudsStats').style.display = player.upgrades[2][1] === 1 ? '' : 'none';\n            } else if (active === 3) {\n                if (player.inflation.vacuum) { getId('rankStat0').style.display = player.researchesExtra[2][3] >= 1 ? '' : 'none'; }\n            } else if (active === 4) {\n                const nova = player.researchesExtra[4][0];\n\n                getId('starsStats').style.display = nova >= 1 ? '' : 'none';\n                getId('star2Stats').style.display = nova >= 2 ? '' : 'none';\n                getId('star3Stats').style.display = nova >= 3 ? '' : 'none';\n            }\n        }\n    } else if (tab === 'special') {\n        const buildings = player.buildings[active];\n\n        for (let i = 1; i < global.buildingsInfo.maxActive[active]; i++) {\n            getId(`SRBuild${i}`).style.display = Limit(buildings[i].trueTotal).moreThan([0, 0]) ? '' : 'none';\n        }\n\n        if (active === 1) {\n            getId('SRExtra1').style.display = player.discharge.unlock ? '' : 'none';\n        } else if (active === 2) {\n            getId('SRExtra1').style.display = player.upgrades[2][1] === 1 ? '' : 'none';\n        } else if (active === 4) {\n            getId('SRExtra1').style.display = player.upgrades[4][0] === 1 ? '' : 'none';\n        }\n    }\n};\n\nexport const getUpgradeDescription = (index: number, stageIndex: 'auto' | number, type: 'upgrades' | 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'elements' | 'strangeness' | 'milestones') => {\n    if (stageIndex === 'auto') { stageIndex = player.stage.active; }\n\n    if (type === 'upgrades') {\n        const pointer = global.upgradesInfo[stageIndex];\n        global.lastUpgrade = [pointer.effect[index] !== null, index];\n\n        getId('upgradeText').textContent = pointer.description[index];\n        getId('upgradeEffect').textContent = pointer.effectText[index]();\n        getId('upgradeCost').textContent = player.upgrades[stageIndex][index] >= 1 ? 'Created.' :\n            stageIndex === 4 && global.collapseInfo.unlockU[index] > player.collapse.mass ? `Unlocked at ${format(global.collapseInfo.unlockU[index])} Mass.` :\n            `${format(pointer.startCost[index])} ${global.stageInfo.priceName}.`;\n    } else if (type === 'researches' || type === 'researchesExtra') {\n        const pointer = global[type + 'Info' as 'researchesInfo'][stageIndex];\n        global.lastResearch = [pointer.effect[index] !== null, index, type];\n\n        getId('researchText').textContent = pointer.description[index];\n        getId('researchEffect').textContent = pointer.effectText[index]();\n        getId('researchCost').textContent = player[type][stageIndex][index] >= pointer.max[index] ? 'Maxed.' :\n            stageIndex === 4 && type === 'researches' && global.collapseInfo.unlockR[index] > player.collapse.mass ? `Unlocked at ${format(global.collapseInfo.unlockR[index])} Mass.` :\n            `${format(pointer.cost[index])} ${global.stageInfo.priceName}.`;\n    } else if (type === 'researchesAuto') {\n        const { researchesAutoInfo } = global;\n        global.lastResearch = [false, index, type];\n\n        getId('researchText').textContent = researchesAutoInfo.description[index];\n        getId('researchEffect').textContent = researchesAutoInfo.effectText[index]();\n        getId('researchCost').textContent = player.researchesAuto[index] >= researchesAutoInfo.max[index] ? 'Maxed.' :\n            stageIndex !== researchesAutoInfo.autoStage[index] ? `Can't be created outside of ${global.stageInfo.word[researchesAutoInfo.autoStage[index]]} stage.` :\n            `${format(researchesAutoInfo.cost[index])} ${global.stageInfo.priceName}.`;\n    } else if (type === 'ASR') {\n        const { ASRInfo } = global;\n        const autoIndex = Math.min(player.ASR[stageIndex] + 1, ASRInfo.max[stageIndex]);\n        global.lastResearch = [false, index, type];\n\n        getId('researchText').textContent = 'Automatization for making Structures.';\n        getId('researchEffect').textContent = `Will automatically make ${Limit(player.buildings[stageIndex][autoIndex].trueTotal).notEqual([0, 0]) ? global.buildingsInfo.name[stageIndex][autoIndex] : '(unknown)'}.\\n(Auto will make them, only when have 2 times of the Structure cost)`;\n        getId('researchCost').textContent = player.ASR[stageIndex] >= ASRInfo.max[stageIndex] ? 'Maxed.' : `${format(ASRInfo.cost[stageIndex])} ${global.stageInfo.priceName}.`;\n    } else if (type === 'elements') {\n        const { elementsInfo } = global;\n        global.lastElement = [elementsInfo.effect[index] !== null, index];\n\n        getId('elementText').textContent = elementsInfo.description[index] + (player.collapse.disabled && player.collapse.show.includes(index) ? ' (Disabled)' : '');\n        getId('elementEffect').textContent = !player.collapse.show.includes(index) ? 'Effect is not yet known.' : elementsInfo.effectText[index]();\n        getId('elementCost').textContent = player.elements[index] >= 1 ? 'Obtained.' : `${format(elementsInfo.startCost[index])} ${global.stageInfo.priceName}.`;\n    } else if (type === 'strangeness' || type === 'milestones') {\n        const stageText = getId(`${type}Stage`) as HTMLSpanElement;\n        stageText.style.color = global.stageInfo.textColor[stageIndex];\n        stageText.textContent = `${global.stageInfo.word[stageIndex]}. `;\n        if (type === 'strangeness') {\n            const pointer = global.strangenessInfo[stageIndex];\n\n            getId('strangenessText').textContent = `${pointer.description[index]}`;\n            getId('strangenessEffect').textContent = pointer.effectText[index]();\n            getId('strangenessCost').textContent = player.strangeness[stageIndex][index] >= pointer.max[index] ? 'Maxed.' : `${format(pointer.cost[index])} Strange quarks.`;\n        } else {\n            const pointer = global.milestonesInfo[stageIndex];\n            const level = player.milestones[stageIndex][index];\n\n            getId('milestonesText').textContent = `${pointer.description[index]}`;\n            if (level < pointer.need[index].length) {\n                getId('milestonesCost').textContent = pointer.needText[index][0] + format(pointer.need[index][player.milestones[stageIndex][index]]) + pointer.needText[index][1];\n                getId('milestonesReward').textContent = `You will gain ${format(pointer.quarks[index][level])} Strange quarks for reaching this milestone.`;\n                getId('milestonesCostMain').style.display = '';\n                getId('milestonesRewardMain').style.display = '';\n            } else {\n                getId('milestonesCostMain').style.display = 'none';\n                getId('milestonesRewardMain').style.display = 'none';\n            }\n            getId('milestonesEffect').textContent = level >= pointer.unlock[index] ? pointer.rewardText[index] : `Next reward unlocked after ${pointer.unlock[index] - level} more completions.`;\n        }\n    }\n};\n\nexport const visualUpdateUpgrades = (index: number, stageIndex: number, type: 'upgrades' | 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'elements' | 'strangeness') => {\n    if (stageIndex !== player.stage.active && (type === 'upgrades' || type === 'researches' || type === 'researchesExtra' || type === 'ASR' || (type === 'elements' && player.stage.active !== 5))) { return; }\n\n    let maxHTML = undefined as undefined | HTMLElement;\n    let progress: boolean | number[];\n    let upgradeHTML: HTMLElement;\n    if (type === 'upgrades') {\n        progress = player.upgrades[stageIndex][index] >= 1;\n\n        upgradeHTML = getId(`upgrade${index + 1}`);\n    } else if (type === 'researches' || type === 'researchesExtra') {\n        progress = [player[type][stageIndex][index], global[type + 'Info' as 'researchesInfo'][stageIndex].max[index]];\n\n        const extra = type === 'researchesExtra' ? 'Extra' : '';\n        upgradeHTML = getId(`research${extra}${index + 1}Level`);\n        maxHTML = getId(`research${extra}${index + 1}Max`);\n    } else if (type === 'researchesAuto') {\n        progress = [player.researchesAuto[index], global.researchesAutoInfo.max[index]];\n\n        upgradeHTML = getId(`researchAuto${index + 1}Level`);\n        maxHTML = getId(`researchAuto${index + 1}Max`);\n    } else if (type === 'ASR') {\n        progress = [player.ASR[stageIndex], global.ASRInfo.max[stageIndex]];\n\n        upgradeHTML = getId('ASRLevel');\n        maxHTML = getId('ASRMax');\n    } else if (type === 'elements') {\n        progress = player.elements[index] >= 1;\n\n        upgradeHTML = getId(`element${index}`);\n    } else /*if (type === 'strangeness')*/ {\n        progress = [player.strangeness[stageIndex][index], global.strangenessInfo[stageIndex].max[index]];\n\n        upgradeHTML = getId(`strange${index + 1}Stage${stageIndex}Level`);\n        maxHTML = getId(`strange${index + 1}Stage${stageIndex}Max`);\n    }\n\n    if (type === 'upgrades' || type === 'elements') {\n        let color = 'green';\n        if (type === 'elements') {\n            if ([1, 2, 3, 4, 11, 12, 19, 20].includes(index)) {\n                color = '#780000'; //Darker darkred\n            } else if ([5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18].includes(index)) {\n                color = '#a55900'; //Darker darkorange\n            } else {\n                color = '#0000c1'; //Darker mediumblue\n            }\n        } else {\n            if (stageIndex === 2) {\n                color = 'darkgreen';\n            } else if (stageIndex === 3) {\n                color = '#0000b1'; //Darker blue\n            } else if (stageIndex === 4) {\n                color = '#1f1f8f'; //Brigher midnightblue\n            } else if (stageIndex === 5) {\n                color = '#990000'; //Brigher maroon\n            }\n        }\n        upgradeHTML.style.backgroundColor = progress as boolean ? color : '';\n    } else {\n        const max = (progress as number[])[1];\n        const level = (progress as number[])[0];\n\n        (maxHTML as HTMLElement).textContent = `${max}`;\n        upgradeHTML.textContent = `${level}`;\n        if (level >= max) {\n            upgradeHTML.style.color = 'var(--green-text-color)';\n        } else if (level === 0) {\n            upgradeHTML.style.color = ''; //Red\n        } else {\n            upgradeHTML.style.color = 'var(--orchid-text-color)';\n        }\n    }\n};\n\nexport const format = (input: number | overlimit, settings = {} as { digits?: 0, type?: 'number' | 'input' | 'time', padding?: boolean }): string => {\n    if (typeof input === 'object') { return Limit(input).format(settings as any); }\n    const type = settings.type ?? 'number';\n\n    switch (type) {\n        case 'input':\n        case 'number': {\n            if (!isFinite(input)) { return `${input}`; }\n            const inputAbs = Math.abs(input);\n            if (inputAbs >= 1e6 || (inputAbs < 1e-3 && inputAbs > 0)) {\n                let digits = Math.floor(Math.log10(inputAbs));\n                let endValue: number | string = Math.round(input / 10 ** (digits - 2)) / 100;\n                if (Math.abs(endValue) === 10) {\n                    endValue = 1;\n                    digits++;\n                }\n                if (settings.padding === true) { endValue = endValue.toFixed(2); }\n                if (type === 'input') { return `${endValue}e${digits}`; }\n                return `${`${endValue}`.replace('.', player.separator[1])}e${digits}`;\n            } else {\n                const precision = inputAbs >= 1e3 || settings.digits === 0 ? 0 : (inputAbs < 1 ? 4 : 2);\n                let endValue: number | string = Math.round(input * 10 ** precision) / 10 ** precision;\n                if (settings.padding === true && precision > 0) { endValue = endValue.toFixed(precision); }\n                if (type === 'input') { return `${endValue}`; }\n                return endValue >= 1000 ?\n                    `${endValue}`.replace(/\\B(?=(\\d{3})+(?!\\d))/, player.separator[0]) :\n                    `${endValue}`.replace('.', player.separator[1]);\n            }\n        }\n        case 'time':\n            if (input >= 172800000) {\n                return `${Math.round(input / 86400000)} days`;\n            } else if (input >= 7200000) {\n                return `${Math.round(input / 3600000)} hours`;\n            } else if (input >= 600000) {\n                return `${Math.round(input / 60000)} minutes`;\n            } else {\n                return `${Math.round(input / 1000)} seconds`;\n            }\n    }\n};\n\n//Soft means that Stage wasn't changed\nexport const stageCheck = (extra = '' as 'soft' | 'reload') => {\n    const { stage } = player;\n    const { stageInfo, buildingsInfo } = global;\n    const vacuum = player.inflation.vacuum;\n\n    if (vacuum) {\n        stageInfo.activeAll = [1];\n        if (stage.current >= 3) { stageInfo.activeAll.push(2); }\n        if (stage.current >= 2) { stageInfo.activeAll.push(3); }\n        if (stage.current >= 4) {\n            stageInfo.activeAll.push(4);\n            if (player.strangeness[5][5] >= 1) { stageInfo.activeAll.push(5); }\n        }\n    } else {\n        stageInfo.activeAll = [stage.current];\n        if (stage.current === 4) {\n            if (player.milestones[5][0] >= 4) { stageInfo.activeAll.push(5); }\n        } else if (stage.current === 5) { stageInfo.activeAll.unshift(4); }\n        for (let i = player.strangeness[5][0]; i >= 1; i--) {\n            if (stage.current !== i) { stageInfo.activeAll.unshift(i); }\n        }\n    }\n    const active = stage.active;\n\n    for (let s = 1; s <= 6; s++) {\n        for (const i of getClass(`stage${s}Only`)) {\n            i.style.display = active === s ? '' : 'none';\n        }\n        for (const i of getClass(`stage${s}Include`)) {\n            i.style.display = stageInfo.activeAll.includes(s) ? '' : 'none';\n        }\n        for (const i of getClass(`stage${s}Unlock`)) {\n            i.style.display = stage.true >= s ? '' : 'none';\n        }\n    }\n\n    getId('solarMassStats').style.display = active === 4 || active === 5 ? '' : 'none';\n    getId('stageSelect').style.display = stageInfo.activeAll.length > 1 ? '' : 'none';\n    if (player.strange[0].total <= 0) {\n        getId('strangenessTabBtn').style.display = 'none';\n        getId('strangeAllStats').style.display = 'none';\n    }\n    if (vacuum) {\n        getId('mainCap').style.display = active === 4 || active === 5 ? '' : 'none';\n        if (stage.current < 3 && player.strange[0].total <= 0) { getId('researchAuto2').style.display = 'none'; }\n    } else {\n        getId('strangenessSection2').style.display = stage.resets >= 5 ? '' : 'none';\n        getId('strangenessSection3').style.display = stage.resets >= 6 ? '' : 'none';\n        getId('strangenessSection4').style.display = stage.resets >= 7 ? '' : 'none';\n        getId('preonCap').style.display = 'none';\n        getId('dustCap').style.display = 'none';\n    }\n\n    if (global.screenReader) {\n        if (extra !== 'soft') {\n            getId('SRMain').textContent = `Current Active Stage is '${stageInfo.word[active]}'`;\n            for (let i = buildingsInfo.maxActive[active]; i < specialHTML.longestBuilding; i++) { getId(`SRBuild${i}`).style.display = 'none'; }\n            for (let i = 0; i < buildingsInfo.maxActive[active]; i++) { getId(`SRBuild${i}`).textContent = `Information for ${buildingsInfo.name[active][i]}`; }\n            getId('SRExtra0').style.display = player.strange[0].total > 0 ? '' : 'none';\n            if (active === 1 || active === 2 || active === 4) {\n                getId('SRExtra1').textContent = `Information for ${['', 'Energy', 'Clouds', 'Rank', 'Stars', ''][active]}`;\n            } else { getId('SRExtra1').style.display = 'none'; }\n        }\n        getId('SRInfo0').style.display = stage.true >= 5 ? '' : 'none';\n        getId('SRHotkeyA').style.display = stageInfo.activeAll.length > 1 ? '' : 'none';\n    }\n    if (extra === 'soft') { return; }\n\n    for (const text of ['upgrade', 'research', 'element']) {\n        getId(`${text}Text`).textContent = 'Hover to see.';\n        getId(`${text}Effect`).textContent = 'Hover to see.';\n        getId(`${text}Cost`).textContent = 'Resource.';\n    }\n    if (extra === 'reload') {\n        for (const text of ['strangeness', 'milestones']) {\n            getId(`${text}Stage`).textContent = '';\n            getId(`${text}Text`).textContent = 'Hover to see.';\n            getId(`${text}Effect`).textContent = 'Hover to see.';\n        }\n        getId('strangenessCost').textContent = 'Strange quarks.';\n        getId('milestonesCost').textContent = 'Hover to see.';\n        getId('milestonesReward').textContent = 'Strange quarks.';\n        getId('milestonesCostMain').style.display = '';\n        getId('milestonesRewardMain').style.display = '';\n\n        assignBuildingInformation();\n        autoUpgradesSet('all');\n        autoResearchesSet('researches', 'all');\n        autoResearchesSet('researchesExtra', 'all');\n        autoElementsSet();\n\n        for (const s of stageInfo.activeAll) {\n            calculateMaxLevel(0, s, 'ASR');\n            for (let i = 0; i < global.researchesInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researches'); }\n            for (let i = 0; i < global.researchesExtraInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researchesExtra'); }\n        }\n        for (let i = 0; i < global.researchesAutoInfo.startCost.length; i++) { calculateMaxLevel(i, global.researchesAutoInfo.autoStage[i], 'researchesAuto'); }\n        for (let s = 1; s < global.strangenessInfo.length; s++) {\n            for (let i = 0; i < global.strangenessInfo[s].startCost.length; i++) {\n                calculateMaxLevel(i, s, 'strangeness');\n            }\n        }\n    }\n    global.lastUpgrade[0] = false;\n    global.lastResearch[0] = false;\n    global.lastResearch[1] = -1;\n    global.lastElement[0] = false;\n\n    //Hide | show what is required\n    for (let i = buildingsInfo.maxActive[active]; i < specialHTML.longestBuilding; i++) {\n        getId(`building${i}Stats`).style.display = 'none';\n        getId(`building${i}`).style.display = 'none';\n    }\n    for (let i = global.upgradesInfo[active].maxActive; i < specialHTML.longestUpgrade; i++) {\n        getId(`upgrade${i + 1}`).style.display = 'none';\n    }\n    for (let i = global.researchesInfo[active].maxActive; i < specialHTML.longestResearch; i++) {\n        getId(`research${i + 1}`).style.display = 'none';\n    }\n    for (let i = global.researchesExtraInfo[active].maxActive; i < specialHTML.longestResearchExtra; i++) {\n        getId(`researchExtra${i + 1}`).style.display = 'none';\n    }\n    for (let i = specialHTML.footerStatsHTML[active].length; i < specialHTML.longestFooterStats; i++) {\n        getId(`footerStat${i + 1}`).style.display = 'none';\n    }\n\n    const showU = [] as number[]; //Which upgrades need to be shown\n    const showR = [] as number[]; //Researches\n    const showRE = [] as number[]; //ResearchesExtra\n    const showF = [] as number[]; //Footer stats\n    if (active === 1) {\n        showU.push(3, 4, 5, 6);\n        showR.push(1, 2, 3, 4, 5, 6);\n        showF.push(1, 2);\n        if (vacuum) {\n            showU.unshift(1, 2);\n            showRE.push(1, 3);\n        } else {\n            getId('upgrade1').style.display = 'none';\n            getId('upgrade2').style.display = 'none';\n            getId('extraResearch').style.display = 'none';\n        }\n    } else if (active === 2) {\n        showU.push(1);\n        showR.push(1, 2);\n        showRE.push(1, 2);\n        showF.push(2, 3);\n        if (vacuum) { showRE.push(4); }\n    } else if (active === 3) {\n        getId('reset1Main').style.display = '';\n        showU.push(1, 2);\n        showR.push(1, 2);\n        showRE.push(1);\n        showF.push(1);\n    } else if (active === 4) {\n        showU.push(1, 2, 3);\n        showR.push(1, 2, 3);\n        showRE.push(1);\n        showF.push(1, 2);\n        if (vacuum) {\n            getId('building2').style.display = '';\n            getId('building3').style.display = '';\n            getId('building4').style.display = '';\n        }\n    } else if (active === 5) {\n        getId('reset1Main').style.display = 'none';\n        getId('extraResearch').style.display = 'none';\n        showF.push(1, 2, 3);\n        if (vacuum) {\n            getId('building2').style.display = '';\n            showU.push(1, 2);\n            showR.push(1, 2);\n        }\n    }\n\n    getId('reset1Text').innerHTML = specialHTML.resetHTML[active]; //Can contain new ID's\n\n    const buildingHTML = specialHTML.buildingHTML[active];\n    for (let i = 1; i < buildingsInfo.maxActive[active]; i++) {\n        const image = getId(`building${i}Image`) as HTMLImageElement;\n        image.src = `Used_art/${buildingHTML[i - 1][0]}`;\n        image.alt = buildingHTML[i - 1][1];\n        getId(`building${i}StatName`).textContent = buildingsInfo.name[active][i];\n        getId(`building${i}Name`).textContent = buildingsInfo.name[active][i];\n        getId(`building${i}Type`).textContent = buildingsInfo.type[active][i];\n        toggleSwap(i, 'buildings');\n    }\n    getId('building0StatName').textContent = buildingsInfo.name[active][0];\n    toggleSwap(0, 'buildings');\n\n    const upgradeHTML = specialHTML.upgradeHTML[active];\n    for (let i = 0; i < global.upgradesInfo[active].maxActive; i++) {\n        const image = getId(`upgrade${i + 1}`) as HTMLInputElement;\n        if (showU.includes(i + 1)) { image.style.display = ''; }\n        image.src = `Used_art/${upgradeHTML[i][0]}`;\n        image.alt = upgradeHTML[i][1];\n        visualUpdateUpgrades(i, active, 'upgrades');\n    }\n\n    const researchHTML = specialHTML.researchHTML[active];\n    for (let i = 0; i < global.researchesInfo[active].maxActive; i++) {\n        const main = getId(`research${i + 1}`) as HTMLDivElement;\n        if (showR.includes(i + 1)) { main.style.display = ''; }\n        main.className = researchHTML[i][2];\n        const image = getId(`research${i + 1}Image`) as HTMLInputElement;\n        image.src = `Used_art/${researchHTML[i][0]}`;\n        image.alt = researchHTML[i][1];\n        visualUpdateUpgrades(i, active, 'researches');\n    }\n\n    const researchExtraHTML = specialHTML.researchExtraHTML[active];\n    for (let i = 0; i < global.researchesExtraInfo[active].maxActive; i++) {\n        const main = getId(`researchExtra${i + 1}`) as HTMLDivElement;\n        if (showRE.includes(i + 1)) { main.style.display = ''; }\n        main.className = researchExtraHTML[i][2];\n        const image = getId(`researchExtra${i + 1}Image`) as HTMLInputElement;\n        image.src = `Used_art/${researchExtraHTML[i][0]}`;\n        image.alt = researchExtraHTML[i][1];\n        visualUpdateUpgrades(i, active, 'researchesExtra');\n    }\n    if (active !== 5) {\n        const researchExtraDivHTML = specialHTML.researchExtraDivHTML[active];\n        const image = document.querySelector('#extraResearch > img') as HTMLImageElement;\n        image.src = `Used_art/${researchExtraDivHTML[0]}`;\n        image.alt = researchExtraDivHTML[1];\n        (document.querySelector('#extraResearch > div') as HTMLDivElement).className = researchExtraDivHTML[2];\n    }\n    visualUpdateUpgrades(0, active, 'ASR');\n\n    const footerStatsHTML = specialHTML.footerStatsHTML[active];\n    for (let i = 0; i < footerStatsHTML.length; i++) {\n        if (showF.includes(i + 1)) { getId(`footerStat${i + 1}`).style.display = ''; }\n        const image = document.querySelector(`#footerStat${i + 1} > img`) as HTMLImageElement;\n        image.src = `Used_art/${footerStatsHTML[i][0]}`;\n        image.alt = footerStatsHTML[i][1];\n        (document.querySelector(`#footerStat${i + 1} > p`) as HTMLParagraphElement).className = footerStatsHTML[i][2];\n        getId(`footerStat${i + 1}Name`).textContent = footerStatsHTML[i][3];\n    }\n\n    updateRankInfo();\n    if (active === 4 || active === 5) {\n        for (let i = 1; i < global.elementsInfo.startCost.length; i++) { visualUpdateUpgrades(i, 4, 'elements'); }\n    }\n\n    if (!vacuum) {\n        const stageWord = getId('stageWord') as HTMLSpanElement;\n        stageWord.textContent = stageInfo.word[stage.current];\n        stageWord.style.color = stageInfo.textColor[stage.current];\n    }\n    stageInfo.priceName = ['', 'Energy', 'Drops', 'Mass', 'Elements', 'Elements'][active];\n    const body = document.body.style;\n\n    if (active === 1) {\n        body.removeProperty('--stage-text-color');\n        body.removeProperty('--stage-button-color');\n        body.removeProperty('--stage-button-border');\n        body.removeProperty('--image-border-main');\n        body.removeProperty('--image-stage-outer');\n    } else {\n        body.setProperty('--stage-text-color', stageInfo.textColor[active]);\n        body.setProperty('--stage-button-color', stageInfo.buttonBackgroundColor[active]);\n        body.setProperty('--stage-button-border', stageInfo.buttonBorderColor[active]);\n        body.setProperty('--image-border-main', `url(Used_art/Stage${active}%20border.png)`);\n        body.setProperty('--image-stage-outer', stageInfo.imageBorderColor[active]);\n    }\n    getId('currentSwitch').textContent = stageInfo.word[active];\n\n    switchTab(checkTab(global.tab) ? global.tab : 'stage'); //Deal with unallowed tabs/subtabs (also visualUpdate)\n    switchTheme(); //Some colors are based on active Stage\n};\n\nexport const updateRankInfo = () => { //Visual only\n    if (player.stage.active !== 3) { return; }\n    const image = getId('rankImage') as HTMLImageElement;\n    if (image === null) { return; } //Called twice anyway\n    const name = getId('rankName') as HTMLSpanElement;\n    const { accretionInfo } = global;\n    const rank = player.accretion.rank;\n\n    getId('rankMessage').textContent = rank === 0 ?\n        'Might need more than just water... You can increase rank with Mass.' :\n        'Increase it with Mass. (Return back to Dust, but unlock something new)';\n    getId('reset1Button').textContent = accretionInfo.rankCost[rank] === 0 ?\n        'Max Rank achieved' : `Next Rank is ${format(accretionInfo.rankCost[rank])} Mass`;\n    image.src = `Used_art/${accretionInfo.rankImage[rank]}`;\n    image.alt = accretionInfo.rankName[rank];\n    name.textContent = accretionInfo.rankName[rank];\n    if (rank === 0) {\n        name.style.color = ''; //Blue\n    } else if (rank === 1) {\n        name.style.color = 'var(--cyan-text-color)';\n    } else if (rank === 5) {\n        name.style.color = 'var(--darkviolet-text-color)';\n    } else if (rank === 6) {\n        name.style.color = 'var(--orange-text-color)';\n    } else {\n        name.style.color = 'var(--gray-text-color)';\n    }\n\n    getId('buildings').style.display = rank >= 1 ? '' : 'none';\n    getId('upgrades').style.display = rank >= 1 ? '' : 'none';\n    getId('upgrade3').style.display = rank >= 2 ? '' : 'none';\n    getId('upgrade5').style.display = rank >= 3 ? '' : 'none';\n    getId('upgrade6').style.display = rank >= 4 ? '' : 'none';\n    getId('upgrade7').style.display = rank >= 4 ? '' : 'none';\n    getId('upgrade8').style.display = rank >= 4 ? '' : 'none';\n    getId('upgrade10').style.display = rank >= 4 ? '' : 'none';\n    getId('upgrade11').style.display = rank >= 5 ? '' : 'none';\n    getId('upgrade12').style.display = rank >= 5 ? '' : 'none';\n    getId('upgrade13').style.display = rank >= 5 ? '' : 'none';\n    getId('stageResearch').style.display = rank >= 1 ? '' : 'none';\n    getId('research5').style.display = rank >= 3 ? '' : 'none';\n    getId('research6').style.display = rank >= 4 ? '' : 'none';\n    getId('research7').style.display = rank >= 4 ? '' : 'none';\n    getId('research8').style.display = rank >= 5 ? '' : 'none';\n    getId('extraResearch').style.display = rank >= 2 ? '' : 'none';\n    getId('researchExtra2').style.display = rank >= 3 ? '' : 'none';\n    getId('researchExtra3').style.display = rank >= 4 ? '' : 'none';\n    getId('researchExtra4').style.display = rank >= 5 ? '' : 'none';\n    if (player.stage.true < 4) { getId('rankToggleReset').style.display = rank >= 2 ? '' : 'none'; }\n    for (let i = 1; i < accretionInfo.rankImage.length; i++) { getId(`rankStat${i}`).style.display = rank >= i ? '' : 'none'; }\n};\n", "import Limit from './Limit';\nimport { getId } from './Main';\nimport { globalType, overlimit, playerType } from './Types';\nimport { format } from './Update';\nconsole.time('Game loaded in'); //Just for fun (end is in Main.ts file)\n\nexport const player: playerType = { //Only for information that need to be saved (cannot be calculated)\n    version: 'v0.1.2',\n    fileName: 'Fundamental, [date] [time], [stage]',\n    separator: ['', '.'], //[0] every 3 numbers, [1] point\n    stage: {\n        true: 1,\n        current: 1,\n        active: 1,\n        resets: 0,\n        export: 86400, //Seconds\n        input: 1\n    },\n    discharge: { //Stage 1\n        unlock: false, //Energy\n        energy: 0,\n        energyMax: 0,\n        current: 0\n    },\n    vaporization: { //Stage 2\n        clouds: [1, 0],\n        cloudsMax: [1, 0],\n        input: 10\n    },\n    accretion: { //Stage 3\n        rank: 0\n    },\n    collapse: { //Stage 4, 5\n        mass: 0.01235,\n        massMax: 0.01235,\n        elementsMax: [1, 0], //Used for Nickel (reset on Stage)\n        stars: [0, 0, 0],\n        show: [], //What Elements have been bought this Stage reset\n        disabled: false, //Elements\n        inputM: 4,\n        inputS: 2\n    },\n    inflation: { //Stage 6\n        vacuum: false\n    },\n    intervals: {\n        main: 100,\n        numbers: 100,\n        visual: 1,\n        autoSave: 60\n    },\n    time: {\n        updated: Date.now(),\n        started: Date.now(),\n        offline: 0 //Seconds\n    },\n    buildings: [\n        [] as unknown as [{ current: overlimit, total: overlimit, trueTotal: overlimit, highest: overlimit }, ...Array<{ true: number, current: overlimit, total: overlimit, trueTotal: overlimit, highest: overlimit }>], //Placeholder\n        [ //Stage 1\n            {\n                current: [3, 0],\n                total: [3, 0],\n                trueTotal: [3, 0],\n                highest: [3, 0]\n            }, {\n                true: 0, //How many were bought\n                current: [0, 0], //On hands\n                total: [0, 0], //How many were gained this reset\n                trueTotal: [0, 0], //How many were gained this stage\n                highest: [0, 0] //Highest 'current' that was reached in any stage\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }\n        ], [ //Stage 2\n            {\n                current: [2.8, -3],\n                total: [2.8, -3],\n                trueTotal: [2.8, -3],\n                highest: [2.8, -3]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }\n        ], [ //Stage 3\n            {\n                current: [1, -19],\n                total: [1, -19],\n                trueTotal: [1, -19],\n                highest: [1, -19]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }\n        ], [ //Stage 4\n            {\n                current: [1, 0],\n                total: [1, 0],\n                trueTotal: [1, 0],\n                highest: [1, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }\n        ], [ //Stage 5\n            {\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }\n        ]\n    ],\n    strange: [ //Stage 5\n        {\n            current: 0,\n            total: 0\n        }\n    ],\n    /* Because I'm lazy to write 50+ 0's, all empty [] auto added */\n    upgrades: [],\n    researches: [],\n    researchesExtra: [],\n    researchesAuto: [],\n    ASR: [], //Auto Structures Research\n    elements: [],\n    strangeness: [],\n    milestones: [],\n    toggles: {\n        normal: [], //Auto added for every element with a class 'toggle'\n        /* Offline auto use[0]; Stage confirm[1]; Discharge confirm[2]; Vaporization confirm[3]; Rank confirm[4]; Collapse confirm[5]\n           Hotkeys type[6] */\n        buildings: [], //Class 'toggleBuilding' ([0] everywhere, is toggle all)\n        auto: [], //Class 'toggleAuto'\n        /* Stage[0], Discharge[1], Vaporization[2], Rank[3], Collapse[4],\n           Upgrades[5], Researches[6], ResearchesExtra[7], Elements[8] */\n        shop: {\n            howMany: 1,\n            input: 10,\n            strict: true\n        }\n    },\n    events: [false, false, false] //One time events, set in playEvent\n};\n\nexport const global: globalType = { //For information that doesn't need to be saved\n    tab: 'stage', //Tabs and subtabs have same name as buttons\n    subtab: {\n        /* Subtab format must be: [subtabName] + 'Current' */\n        stageCurrent: 'Structures',\n        settingsCurrent: 'Settings',\n        researchCurrent: 'Researches',\n        strangenessCurrent: 'Matter'\n        //Starting subtab must be unlocked at same time as tab and have index 0 in proper tabList\n    },\n    tabList: { //Tabs and subtab must be in same order as in footer\n        /* Subtabs format must be: [subtabName] + 'Subtabs' */\n        tabs: ['stage', 'research', 'strangeness', 'settings', 'special'], //'special' must be last\n        stageSubtabs: ['Structures', 'Advanced'],\n        settingsSubtabs: ['Settings', 'Stats'],\n        researchSubtabs: ['Researches', 'Elements'],\n        strangenessSubtabs: ['Matter', 'Milestones']\n    },\n    footer: true,\n    mobileDevice: false,\n    screenReader: false,\n    versionInfo: {\n        build: false,\n        changed: false\n    },\n    timeSpecial: {\n        lastSave: 0\n    },\n    automatization: { //Sorted cheapest first\n        autoU: [ //Upgrades\n            [], //Empty\n            [],\n            [],\n            [],\n            [],\n            []\n        ],\n        autoR: [ //Researches\n            [], //Empty\n            [],\n            [],\n            [],\n            [],\n            []\n        ],\n        autoE: [ //Researches Extra\n            [], //Empty\n            [],\n            [],\n            [],\n            [],\n            []\n        ],\n        elements: []\n    },\n    theme: {\n        stage: 1,\n        default: true\n    },\n    dischargeInfo: {\n        updateEnergy: () => {\n            global.dischargeInfo.energyType[1][1] = 1 + player.strangeness[1][4];\n        },\n        energyType: [\n            [],\n            [0, 1, 3, 5, 10, 20],\n            [0, 40, 60, 80, 100, 125, 150],\n            [0, 5, 15, 30, 50, 80],\n            [0, 100, 200, 300, 400, 1000],\n            [0, 600, 600, 4000, 10000]\n        ],\n        bonus: 0,\n        next: 1\n    },\n    vaporizationInfo: {\n        effect2U1: () => (global.upgradesInfo[2].effect[1] = 1e10 / 3 ** player.strangeness[2][3]),\n        effect2RE3: () => (global.researchesExtraInfo[2].effect[3] = 1 + Math.floor(Limit(player.vaporization.clouds).log(10).min([2, 0]).toNumber())),\n        get: [0, 0]\n    },\n    accretionInfo: {\n        rankU: [1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5, 5], //Upgrades\n        rankR: [1, 1, 2, 2, 3, 3, 4, 5], //Researches\n        rankE: [2, 3, 4, 5, 3], //Researches Extra\n        rankCost: [5.97e27, 1e-7, 1e10, 1e24, 5e29, 2.47e31, 0],\n        rankName: ['Ocean world', 'Cosmic dust', 'Meteoroid', 'Asteroid', 'Planet', 'Jovian planet', 'Protostar'], //Also alt attribute\n        rankImage: ['Ocean%20world.png', 'Dust.png', 'Meteoroids.png', 'Asteroid.png', 'Planet.png', 'Giant.png', 'Protostar.png']\n    },\n    collapseInfo: {\n        unlockB: [0, 0.01235, 0.23, 10, 40, 1000], //Buildings (stage 4)\n        unlockG: [0, 100, 1000, 1e5], //Buildings (stage 5)\n        unlockU: [0.01235, 0.076, 1.3, 10], //Upgrades\n        unlockR: [0.18, 0.3, 0.8, 1.3], //Researches\n        newMass: 0,\n        starCheck: [0, 0, 0],\n        starEffect: [\n            (post = false) => {\n                global.elementsInfo.effect[6] = player.researchesExtra[4][1] >= 1 ? 2 : 1.5;\n\n                let effect = player.collapse.stars[0] + 1;\n                if (post) { effect += global.collapseInfo.starCheck[0]; }\n                if (player.elements[6] === 1) { effect **= global.elementsInfo.effect[6]; }\n                return effect;\n            },\n            (post = false) => {\n                let stars = player.collapse.stars[1] + 1;\n                if (post) { stars += global.collapseInfo.starCheck[1]; }\n                if (player.elements[22] === 1) {\n                    stars += player.collapse.stars[0];\n                    if (post) { stars += global.collapseInfo.starCheck[0]; }\n                }\n\n                let effect = stars ** 0.5;\n                if (player.elements[12] === 1 && stars > 10) { effect *= Math.log10(stars); }\n                return effect;\n            },\n            (post = false) => {\n                let blackHoles = player.collapse.stars[2];\n                if (post) { blackHoles += global.collapseInfo.starCheck[2]; }\n                if (blackHoles < 1) { return 1; }\n                //let stars = blackHoles + 1;\n\n                return (blackHoles + 1) / Math.log10(blackHoles + (player.elements[18] === 1 ? 9 : 99));\n            }\n        ],\n        trueStars: 0\n    },\n    inflationInfo: {\n        preonCap: [2, 13],\n        dustCap: [5, 45]\n    },\n    intervalsId: {\n        main: 0,\n        numbers: 0,\n        visual: 0,\n        autoSave: 0\n    },\n    stageInfo: {\n        word: ['', 'Microworld', 'Submerged', 'Accretion', 'Interstellar', 'Intergalactic', 'Void'],\n        textColor: ['', 'var(--cyan-text-color)', 'var(--blue-text-color)', 'var(--gray-text-color)', 'var(--orange-text-color)', 'var(--darkorchid-text-color)', 'var(--darkviolet-text-color)'],\n        buttonBackgroundColor: ['', 'mediumblue', 'blue', '#291344', '#6a3700', '#4a008f', '#2b0095'],\n        buttonBorderColor: ['', 'darkcyan', '#427be1', '#404040', '#9f6700', '#8a0049', '#711bda'],\n        imageBorderColor: ['', '#008b8b', '#1460a8', '#5b5b75', '#e87400', '#b324e2', '#5300c1'],\n        priceName: 'Energy',\n        activeAll: [1]\n    },\n    buildingsInfo: {\n        maxActive: [0, 4, 6, 5, 5, 4], //Pre vacuum ([1] > [5])\n        name: [\n            [],\n            ['Mass', 'Preons', 'Quarks', 'Particles', 'Atoms', 'Molecules'], //[0] Must be 'Mass'\n            ['Moles', 'Drops', 'Puddles', 'Ponds', 'Lakes', 'Seas', 'Oceans'],\n            ['Mass', 'Cosmic dust', 'Planetesimals', 'Protoplanets', 'Satellites', 'Subsatellites'],\n            ['Elements', 'Brown dwarfs', 'Main sequence', 'Red supergiants', 'Blue hypergiants', 'Quasi stars'],\n            ['Stars', 'Nebulas', 'Clusters', 'Galaxies', 'Filaments']\n        ],\n        type: [ //'Not allowed index x', means that this index is reserved for gain calculation\n            [],\n            ['' as 'improves', 'producing', 'producing', 'producing', 'producing', 'producing'], //Not allowed index 6 (for 'producing')\n            ['' as 'improves', 'producing', 'producing', 'improves', 'improves', 'improves', 'improves'],\n            ['' as 'improves', 'producing', 'producing', 'producing', 'improves', 'improves'],\n            ['' as 'improves', 'producing', 'producing', 'producing', 'producing', 'producing'],\n            ['' as 'improves', 'producing', 'improves', 'improves', 'improves'] //Not allowed index 2, 3, 4 (for 'producing')\n        ],\n        firstCost: [],\n        startCost: [\n            [],\n            [0, 0.005476, 6, 3, 24, 3],\n            [0, 0.0028, 100, 1e7, 1e18, 1e23, 2.676e25],\n            [0, 1e-19, 1e-9, 1e21, 1e17, 1e22],\n            [0, 1, 1e5, 1e16, 1e31, 1e50],\n            [0, 1e30, 1e40, 1e5, 100]\n        ],\n        increase: [\n            [],\n            [0, 1.4, 1.4, 1.4, 1.4, 1.4],\n            [0, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2],\n            [0, 1.15, 1.15, 1.15, 10, 10],\n            [0, 1.4, 1.55, 1.70, 1.85, 2],\n            [0, 2, 2, 1.11, 1.11]\n        ],\n        producing: [\n            [],\n            [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]],\n            [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]],\n            [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]],\n            [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]],\n            [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]\n        ]\n    },\n    strangeInfo: {\n        Element28: () => {\n            let effect = Limit(player.collapse.elementsMax).log(10).toNumber() - 52;\n            if (player.upgrades[5][2] === 1) { effect **= 1.5; }\n            return (global.elementsInfo.effect[28] = Math.floor(effect));\n        },\n        gain: (stage: number) => {\n            let gain = 1;\n            if (player.inflation.vacuum) {\n                gain += 3;\n                if (player.researchesExtra[2][3] >= 1) { gain += global.vaporizationInfo.effect2RE3(); }\n\n                if (stage < 4) { stage = 4; }\n            }\n            if (stage >= 4) {\n                if (player.elements[27] === 1) { gain += 2; }\n                if (player.elements[28] === 1) { gain += global.strangeInfo.Element28(); }\n            }\n            if (player.strangeness[5][1] >= 1) { gain *= 2; }\n            return gain;\n        },\n        stageBoost: [null, null, null, null, null, null]\n    },\n    upgradesInfo: [ //Effect is null if it can't change\n        {\n            description: [],\n            effectText: [],\n            effect: [],\n            startCost: [],\n            maxActive: 0\n        }, { //Stage 1\n            description: [\n                'Weak force.',\n                'Strong force.',\n                'Bigger electrons.',\n                'Stronger protons.',\n                'More neutrons.',\n                'Superposition. Unlock a new reset tier.',\n                'Protium. Basic.',\n                'Deuterium. Heavy.',\n                'Tritium. Radioactive.',\n                'Nuclear fusion.'\n            ],\n            effectText: [\n                () => 'Particles produce 5 times more Quarks.',\n                () => 'Qluons now bind Quarks into Particles, which makes Particles 10 times cheaper.',\n                () => `${player.inflation.vacuum ? 'Atoms' : 'Particle'} cost is 10 times cheaper.`,\n                () => `${player.inflation.vacuum ? 'Atoms' : 'Particle'} produce 10 times more ${player.inflation.vacuum ? 'Particles' : 'Quarks'}.`,\n                () => `${player.inflation.vacuum ? 'Molecules' : 'Atoms'} produce 5 times more ${player.inflation.vacuum ? 'Atoms' : 'Particles'}.`,\n                () => `Ability to reset at any time, and if had enough Energy, then production for all Structures will also be boosted by ${format(global.upgradesInfo[1].effect[5] as number)} times.\\nTotal boost from reached goals is: ${Limit(global.upgradesInfo[1].effect[5] as number).power(player.discharge.current + global.dischargeInfo.bonus).format()}.`,\n                () => `Cost scaling is decreased by ${format(global.upgradesInfo[1].effect[6] as number)}.`,\n                () => `Structures (only self-made one's) boost themselves by ${format(global.upgradesInfo[1].effect[7] as number)} times.`,\n                () => `Molecules produce Molecules. At a reduced rate. (${Limit(global.upgradesInfo[1].effect[8] as overlimit).format({ padding: true })} per second)`,\n                () => 'Unspent Energy boost Molecules production of themselves 1 to 1.'\n            ],\n            effect: [null, null, null, null, null, 4, 0.2, 1.01, 0, null],\n            startCost: [32, 48, 60, 90, 150, 400, 1600, 4000, 32000, 100000],\n            maxActive: 10\n        }, { //Stage 2\n            description: [\n                'Molecules to Moles. Even more Moles.',\n                'Vaporization. Unlock a new reset tier.',\n                'Surface tension. Bigger Puddles.',\n                'Surface stress. Biggest Puddles.',\n                'Stream. Spreads water around.',\n                'River. Spreads even more water.',\n                'Tsunami. Spreads water too fast.'\n            ],\n            effectText: [\n                () => 'Drops will produce Moles even more for every self-made Drops.',\n                () => `Gain ability to convert Drops into Clouds. (Puddles get a boost equal to Cloud amount)\\nCurrent Cloud gain is (Drops / ${format(global.vaporizationInfo.effect2U1())})^${player.inflation.vacuum ? `${format(0.4)}.` : Limit(player.vaporization.clouds).moreOrEqual([1, 4]) ? `${format(0.36)}. (Softcapped)` : `${format(0.6)}.`}`,\n                () => `Puddles get boost based on Moles. (Equal to Moles ^ ${format(global.upgradesInfo[2].effect[2] as number)})`,\n                () => `Puddles get boost based on Drops. (Equal to Drops ^ ${format(global.upgradesInfo[2].effect[3] as number)})`,\n                () => `Ponds do not produce Puddles, instead they only improve them.\\nThis upgrade will create extra Puddles for every Pond. (${format(global.upgradesInfo[2].effect[4] as number)} extra Puddles per Pond)`,\n                () => `Lakes now create extra Ponds. (${format(global.upgradesInfo[2].effect[5] as number)} extra Ponds per Lake)`,\n                () => 'Each Sea creates 1 extra Lake.'\n            ],\n            effect: [null, 1e10, 0.02, 0.02, 1, 1, null],\n            startCost: [10, 1e10, 1000, 10000, 2e9, 5e20, 1e28],\n            maxActive: 7\n        }, { //Stage 3\n            description: [\n                'Brownian motion.',\n                'Gas. New substance for Accretion.',\n                'Micrometeoroid. Unlock a new Structure.',\n                'Streaming instability.',\n                'Gravitational field. Unlock a new Structure.',\n                'Rubble pile.',\n                'Satellite system.',\n                'Magma ocean.',\n                'Hydrostatic equilibrium',\n                'Atmosphere.',\n                'Pebble accretion.',\n                'Tidal force.',\n                'Ring system.'\n            ],\n            effectText: [\n                () => `Through random collisions every self-made Dust speeds up Accretion speed. (By ${format(global.upgradesInfo[3].effect[0] as number)})`,\n                () => `Accretion speed is now quicker based on current Dust amount. (${Limit(global.upgradesInfo[3].effect[1] as overlimit).format()} boost)`,\n                () => 'Just a small meteoroid, but it will be a good base for what to come. (Also 2x boost to Dust)',\n                () => `Small bodies spontaneously concentrate into clumps. (Self-made Planetesimals boost each other by ${format(1.02)})`,\n                () => 'Bodies are now massive enough to affect each other with gravity. (4x boost to Planetesimals)',\n                () => 'Shattered pieces fall back together. Mass production is now even bigger. (By 3x)',\n                () => 'Unlock yet another Structure.',\n                () => `Core melted, Accretion speed increased. (Mass production increased by ${format(global.upgradesInfo[3].effect[7] as number)})`,\n                () => 'After reaching equilibrium, Protoplanets will boost themselfs, more with each self-made one.',\n                () => 'Accretion speed increased again (because of drag and escape velocity), by 2.',\n                () => `Accretion speed greatly increased by ${format(global.upgradesInfo[3].effect[10] as number)}.`,\n                () => 'Satellites scaling cost is now 2 times smaller.',\n                () => 'Satellites effect scales better.'\n            ],\n            effect: [1.01, 0, null, null, null, null, null, 2, null, null, 10, null, null],\n            startCost: [1e-16, 1e-13, 1e-13, 1, 1e14, 1e17, 1e22, 1e11, 1e22, 1e23, 1e9, 1e26, 1e29],\n            maxActive: 13\n        }, { //Stage 4\n            description: [\n                'Gravitational collapse.',\n                'Proton-proton chain.',\n                'Carbon-Nitrogen-Oxygen cycle.',\n                'Helium fusion.'\n            ],\n            effectText: [\n                () => 'As fuel runs out, each star will boost production in its own special way.',\n                () => `Fuse with Protium instead of Deuterium. ${player.inflation.vacuum ? 'Unlock 5 first Elements.' : 'Unlock a new Structure and something else.\\n(Somewhere in Research tab)'}`,\n                () => `CNO cycle is now a better source of Helium and Energy. ${player.inflation.vacuum ? 'Unlock 5 more Elements' : 'Unlock a new Structure and more of something else'}.`,\n                () => 'Through Triple-alpha and then Alpha process, unlock a few more Elements.'\n            ],\n            effect: [null, null, null, null],\n            startCost: [100, 1000, 1e9, 1e50],\n            maxActive: 4\n        }, { //Stage 5\n            description: [\n                'Jeans instability.',\n                'Super star cluster.',\n                'Quasar'\n            ],\n            effectText: [\n                () => `Gravitational collapse within Nebulas will increase speed for production of Stars by ${format(global.upgradesInfo[5].effect[0] as number)} times.`,\n                () => `A very massive Star clusters, that will boost Stars by ${format(global.upgradesInfo[5].effect[1] as number)}.`,\n                () => `Nickel Element receives super boost of ^${format(1.5)}.`\n            ],\n            effect: [4, 6, null],\n            startCost: [1e50, 1e60, 1e100],\n            maxActive: 3\n        }\n    ],\n    researchesInfo: [ //Max 2 digits after a dot\n        {\n            description: [],\n            effectText: [],\n            effect: [],\n            cost: [],\n            startCost: [],\n            scaling: [],\n            max: [],\n            maxActive: 0\n        }, { //Stage 1\n            description: [\n                \"Effect of 'Protium' upgrade is stronger.\",\n                \"Effect of 'Deuterium' upgrade is bigger.\",\n                \"Effect of 'Tritium' upgrade is better.\",\n                'Discharge goal requirements decreased.',\n                'Discharge bonus improved.',\n                'Radioactive Discharge.'\n            ],\n            effectText: [\n                () => `Cost scaling is ${format(0.01)} smaller for each level.`,\n                () => `Each self-made Structure, boost each other by additional ${format(0.01)}.`,\n                () => `Molecules now produce themselves ${format(global.researchesInfo[1].effect[2] as number)} times quicker.`,\n                () => 'Next goal for Discharge bonus scales by -1 less.',\n                () => 'Discharge is now provides 2 times bigger bonus per reached goal.',\n                () => \"Discharge will boost 'Tritium' upgrade for every reached goal + 1.\"\n            ],\n            effect: [null, null, 12, null, null, null],\n            cost: [],\n            startCost: [2500, 8000, 40000, 8000, 58000, 36000],\n            scaling: [500, 4000, 6000, 38000, 0, 8000],\n            max: [9, 3, 9, 2, 1, 3],\n            maxActive: 6\n        }, { //Stage 2\n            description: [\n                'Better Mole production.',\n                'Condensation.',\n                'Stronger surface tension.',\n                'Stronger surface stress.',\n                'More streams.',\n                'Distributary channel.'\n            ],\n            effectText: [\n                () => 'Drops produce 3 times more Moles.',\n                () => 'Through condensation bonus to Structure production is now based on total produced, instead of current amount.\\nLevel 1 for Drops, level 2 for Moles.',\n                () => `Surface tension upgrade is now +${format(0.02)} stronger.`,\n                () => `Surface stress upgrade is now +${format(0.03)} stronger.`,\n                () => 'With more streams, can have even more extra Puddles. (+1 extra Puddles per Pond)',\n                () => 'Rivers can split now, that allows even more Ponds per Lake. (+1 per)'\n            ],\n            effect: [null, null, null, null, null, null],\n            cost: [],\n            startCost: [20, 1e12, 1e5, 1e6, 1e14, 1e22],\n            scaling: [1.2, 1000, 1000, 10000, 1000, 100],\n            max: [9, 2, 3, 3, 2, 2],\n            maxActive: 6\n        }, { //Stage 3\n            description: [\n                'More massive bodies.',\n                'Adhesion.',\n                'Space weathering.',\n                'Inelastic collisions.',\n                'Contact binary.',\n                'Gravity.',\n                'Planetary differentiation.',\n                'Aerodynamic drag.'\n            ],\n            effectText: [\n                () => 'Dust production is increased by 3.',\n                () => `Dust particles cling to each other. (+${format(0.01)} to 'Brownian motion')`,\n                () => 'Planetesimals produce more Dust. (3 times more)',\n                () => 'Slow encounter velocities will result in a more efficient growth, so this research will make bodies lose more energy with each deflection. Mass production increased by 2.',\n                () => 'Some Planetesimals instead of shattering form a contact binary or even trinary. Planetesimals production boosted by 5x.',\n                () => `Planetesimals attract other bodies with own gravity. Planetesimals get boost to production based on unspent Mass.\\n(Total boost: ${format(global.researchesInfo[3].effect[5] as number, { padding: true })}${player.inflation.vacuum && global.researchesInfo[3].effect[5] as number >= 4000 ? ', hardcapped' : ''})`,\n                () => `'Magma Ocean' upgrade is stronger now. (${format(1.5)}x times)`,\n                () => `Accretion speed for 'Pebble accretion' increased again, by ${player.inflation.vacuum ? 2 : 3}.`\n            ],\n            effect: [null, null, null, null, null, 0, null, null],\n            cost: [],\n            startCost: [1e-14, 1e-15, 1e-5, 1e5, 1e10, 1e15, 1e13, 1e12],\n            scaling: [11, 111, 22, 10, 100, 10, 100000, 1000],\n            max: [7, 3, 9, 4, 2, 5, 3, 3],\n            maxActive: 8\n        }, { //Stage 4\n            description: [\n                'Planetary system.',\n                'Star system.',\n                'Protoplanetary disk.',\n                'Planetary nebula.'\n            ],\n            effectText: [\n                () => `From Planetesimals to Planets, will get ${format(global.researchesInfo[4].effect[0] as number)}x boost to all Stars.`,\n                () => `Each Star boost another Star. (Total to each Star is ${Limit(global.researchesInfo[4].effect[1] as overlimit).format({ padding: true })}x${Limit(global.researchesInfo[4].effect[1] as overlimit).moreOrEqual([1, 10]) ? ', softcapped' : ''})`,\n                () => \"Improve effect of 'Planetary system', as well increases its max level by +3.\",\n                () => 'Matter expelled from Red giants, but get 10x boost to Main-sequence stars anyway.'\n            ],\n            effect: [1.1, 1, null, null],\n            cost: [],\n            startCost: [1000, 50000, 1e8, 1e12],\n            scaling: [10, 200, 1e12, 0],\n            max: [3, 2, 1, 1],\n            maxActive: 4\n        }, { //Stage 5\n            description: [\n                'Higher density.',\n                'Type frequency.'\n            ],\n            effectText: [\n                () => {\n                    const index = Math.min(player.researches[5][0] + 2, 4);\n                    return `Higher density of Nebulas, will allow them to produce higher tier of Stars, but each tier is 4 times slower than previous one. Also will boost Nebulas by 4.\\nNext tier will be ${Limit(player.buildings[4][index].trueTotal).notEqual([0, 0]) ? global.buildingsInfo.name[4][index] : '(unknown)'}.`;\n                },\n                () => {\n                    const index = Math.max(3 - player.researches[5][1], 1);\n                    return `More types of Stars are found within Star cluster. Increasing effect by 3, but also boosting lower tier of Stars. (3 times less than higher one)\\nNext tier will be ${Limit(player.buildings[4][index].trueTotal).notEqual([0, 0]) ? global.buildingsInfo.name[4][index] : '(unknown)'}.`;\n                }\n            ],\n            effect: [null, null],\n            cost: [],\n            startCost: [1e40, 1e55],\n            scaling: [1e20, 1e15],\n            max: [3, 3],\n            maxActive: 2\n        }\n    ],\n    researchesExtraInfo: [\n        {\n            description: [],\n            effectText: [],\n            effect: [],\n            cost: [],\n            startCost: [],\n            scaling: [],\n            max: [],\n            maxActive: 0\n        }, {\n            description: [\n                'Extra strong force.',\n                'Better radiation base.',\n                'Accretion.',\n                'Later Preons.',\n                'Impulse.'\n            ],\n            effectText: [\n                () => 'Mesons now binds Particles to form Atoms as well. Atoms are affected by strong force.',\n                () => `Improve formula for Radiation, ${player.researchesExtra[1][1] < 1 ? 'logE > log2' : `log${format(global.researchesExtraInfo[1].effect[1] as number)}${player.researchesExtra[1][1] < 10 ? ` > log${format(global.researchesExtraInfo[1].effect[1] as number - 0.1)}` : ''}`}.`,\n                () => 'First level is to begin the Accretion, second level is to Submerge it.\\nEverything is connected. All Structures produce Energy on creation.',\n                () => `Hardcap for Mass production from Preons is delayed by current Energy ^ ${format(global.researchesExtraInfo[1].effect[3] as number)}.`,\n                () => `Discharge goals can now boost all Structures from Submerged, Accretion and Interstellar Stages, but at reduced base.\\nCurrent base is ${format(global.researchesExtraInfo[1].effect[4] as number)}, total boost is ${Limit(global.researchesExtraInfo[1].effect[4] as number).power(player.discharge.current + global.dischargeInfo.bonus).format()}.`\n            ],\n            effect: [null, 2, null, 1e13, 1.04],\n            cost: [],\n            startCost: [12000, 42000, 24000, 46000, 200000],\n            scaling: [0, 8000, 72000, 36000, 0],\n            max: [1, 10, 2, 4, 1],\n            maxActive: 0\n        }, { //Stage 2\n            description: [\n                'Natural Vaporization.',\n                'Rain Clouds.',\n                'Storm Clouds.',\n                'Ocean world.'\n            ],\n            effectText: [\n                () => 'Clouds will now use total produced Drops instead, when formed.',\n                () => `Some Clouds will start pouring Drops themselves. (${player.inflation.vacuum ? `Improves Puddles by ${format(global.researchesExtraInfo[2].effect[1] as number)} in total` : `${format(global.researchesExtraInfo[2].effect[1] as number)} per second`})`,\n                () => `Seas get a boost based on amount of Clouds. (Equal to ${Limit(global.researchesExtraInfo[2].effect[2] as overlimit).format({ padding: true })})`,\n                () => `On Stage reset gain extra reward for every new digit in Clouds, as well +1. (Currently +${format(global.vaporizationInfo.effect2RE3())})\\nDue to some balance issues, currenly hardcapped at +3.`\n            ],\n            effect: [null, 0, 0, 1],\n            cost: [],\n            startCost: [1e16, 1e13, 1e26, 1e10],\n            scaling: [0, 100, 0, 0],\n            max: [1, 4, 1, 1],\n            maxActive: 3\n        }, { //Stage 3\n            description: [\n                'Rank boost.',\n                'Efficient growth.',\n                'Weight.',\n                'Viscosity.',\n                'Efficient submersion.'\n            ],\n            effectText: [\n                () => `Dust production is increased by another ${format(global.researchesExtraInfo[3].effect[0] as number)}.`,\n                () => `Accretion speed is even quicker. Multiplied by current rank. (Total boost to Dust: ${format(global.researchesExtraInfo[3].effect[1] as number)})`,\n                () => \"'Gravitational field' upgrade will boost Protoplanets now as well. (Only half of effect)\",\n                () => \"'Gas' upgrade is now stronger.\",\n                () => `'Efficient growth' now boost Puddles as well. (Current boost is: ${format(global.researchesExtraInfo[3].effect[4] as number)})`\n            ],\n            effect: [0, 0, null, null, 0],\n            cost: [],\n            startCost: [1e-18, 1e-16, 1e26, 1e-12, 1e21],\n            scaling: [10, 100, 0, 1e14, 1e5],\n            max: [12, 5, 1, 2, 1],\n            maxActive: 4\n        }, { //Stage 4\n            description: [\n                'Nova.',\n                'White dwarfs.'\n            ],\n            effectText: [\n                () => {\n                    const index = Math.min(player.researchesExtra[4][0] + 2, 4);\n                    return `${Limit(player.buildings[4][index].trueTotal).notEqual([0, 0]) ? global.buildingsInfo.name[4][index] : '(Unknown)'} Stars are now creating something new, upon collapse reset.`;\n                },\n                () => 'Red giants are turning into White dwarfs, this will improve effect of Carbon element.'\n            ],\n            effect: [null, null],\n            cost: [],\n            startCost: [1e6, 1e50],\n            scaling: [1e12, 0],\n            max: [3, 1],\n            maxActive: 2\n        }, { //Stage 5\n            description: [],\n            effectText: [],\n            effect: [],\n            cost: [],\n            startCost: [],\n            scaling: [],\n            max: [],\n            maxActive: 0\n        }\n    ],\n    researchesAutoInfo: {\n        description: [\n            'New toggles.',\n            'Increased max offline time.',\n            'Automatic upgrades.'\n        ],\n        effectText: [\n            () => !player.inflation.vacuum && player.strange[0].total <= 0 ? 'Unlock ability to make multiple Structures at same time.' :\n            /**/'First level is for making multiple Structures at same time.\\nSecond level is to turn OFF/ON all auto toggles at once.\\nThird level is to turn OFF/ON auto consumption of Offline storage.',\n            () => `Research this to make max offline timer +${player.inflation.vacuum ? 8 : 4} hours longer.`,\n            () => 'This is going to create all upgrades automatically. Each level increases highest type of upgrades to create.\\n(Upgrades > Researches > Special researches)'\n        ],\n        cost: [],\n        startCost: [2000, 1e9, 1],\n        scaling: [28000, 2e4, 1e10],\n        max: [1, 1, 0],\n        autoStage: [1, 2, 3] //Stage to buy from\n    },\n    ASRInfo: { //Auto Structures Research\n        cost: [0, 4000, 1e10, 1e-7, 1e6, 1],\n        costRange: [ //Random scaling\n            [],\n            [4000, 12000, 24000, 32000, 44000],\n            [1e10, 1e13, 1e16, 1e24, 1e28, 1e99],\n            [1e-7, 1e10, 5e29, 2e30, 1e99],\n            [1e6, 1e17, 1e28, 1e39, 1e99],\n            [1, 1, 1, 1]\n        ],\n        max: [0, 5, 5, 4, 4, 0]\n    },\n    elementsInfo: {\n        description: [\n            '[0] Placeholder.',\n            '[1] Hydrogen.',\n            '[2] Helium.',\n            '[3] Lithium.',\n            '[4] Beryllium.',\n            '[5] Boron.',\n            '[6] Carbon.',\n            '[7] Nitrogen.',\n            '[8] Oxygen.',\n            '[9] Fluorine.',\n            '[10] Neon.',\n            '[11] Sodium.',\n            '[12] Magnesium.',\n            '[13] Aluminium.',\n            '[14] Silicon.',\n            '[15] Phosphorus.',\n            '[16] Sulfur.',\n            '[17] Chlorine.',\n            '[18] Argon.',\n            '[19] Potassium.',\n            '[20] Calcium.',\n            '[21] Scandium.',\n            '[22] Titanium.',\n            '[23] Vanadium.',\n            '[24] Chromium.',\n            '[25] Manganese.',\n            '[26] Iron.',\n            '[27] Cobalt.',\n            '[28] Nickel.'\n        ],\n        effectText: [\n            () => 'Placeholder.',\n            () => 'Most basic Element, increases Brown dwarf production by 2.\\nAlso Main-sequence mass effect is now known - boost to all Stars.',\n            () => `Fusion reaction by product, makes everything Interstellar scale ${format(0.1)} less.`,\n            () => `First metal, Mass ${player.inflation.vacuum ? 'hardcap for Cosmic dust' : ''} per Brown dwarf lightly ${player.inflation.vacuum ? 'delayed' : 'increased'}.`,\n            () => `Brittle earth metal, so is brittle increase to production. (${format(1.1)}x to all Stars)`,\n            () => `A new color, and a new ${player.inflation.vacuum ? 'delay to Mass hardcap for Cosmic dust' : 'boost to Mass gain'} that is based on current Dwarf Stars.`,\n            () => `Base for organics, boost from Red giants is now increased to the power of ${format(global.elementsInfo.effect[6] as number)}.\\nRed giants effect is now known - boost to all Main-sequence stars.`,\n            () => \"Most abundant uncombined Element in atmosphere of some Planets, also allows to have 2 extra levels of 'Star system'.\",\n            () => `An oxidizing agent, that will make everything Interstellar scale even slower. (${format(0.05)} less)`,\n            () => \"Highly toxic and reactive, +12 to max level of 'Planetary system'.\",\n            () => `A noble 2x ${player.inflation.vacuum ? 'delay to Cosmic dust hardcap' : 'boost to Mass gain'}.`,\n            () => \"Through leaching, get 1 extra level of 'Protoplanetary disk'.\",\n            () => 'Stars are inside you, as well Neutrons stars strength is now increased to the decimal logarithm.\\nNeutron stars effect is now known - boost to all Stars.',\n            () => `Has a great affinity towards Oxygen and to decrease cost of all Stars by ${format(1e3)}.`,\n            () => `Number is 14, group is 14, melts at 1414\u00B0C and so is Mass ${player.inflation.vacuum ? 'hardcap for Cosmic dust delayed' : 'gain increased'} by ${format(1.4)}.`,\n            () => `One of the Fundamentals of Life and to make all of Stars ${player.inflation.vacuum ? 'delay Mass hardcap (Cosmic dust)' : 'boost Mass'}.`,\n            () => \"From hot area, to increase max level of 'Star system' by 1.\",\n            () => \"Extremely reactive to extend max level of 'Planetary system', by another 27 levels.\",\n            () => `Less noble boost, but Black holes effect scales a little better.\\nBlack holes effect is now known - ${player.inflation.vacuum ? 'delay for Preon Mass hardcap' : 'boost to Main-sequence mass gain'}.`,\n            () => \"Don't forget about it and get a 3x boost to all Stars.\",\n            () => \"Get stronger with 1 extra level of 'Star system'.\",\n            () => `A new color and a rare bonus of ^${format(1.1)} to Mass effect.`,\n            () => 'New alloy allowing Red giants to be added into effective amount of Neutron stars.',\n            () => 'Catalyst for production of Elements. Black holes boost all Stars to the decimal logarithm.',\n            () => `No corrosion, only ^${format(0.01)} boost to all Stars based on unspent Elements.`,\n            () => \"Brittle Element, but not the bonus - 1 more level in 'Star system'.\",\n            () => `Any further fusion will be an endothermic process. Gain 2x boost to all Stars, ${player.inflation.vacuum ? 'unlock Stage reset.' : 'but what next?\\nUnlock ability to switch beetwin Stages. (Also enter a new Stage)'}`,\n            () => \"While new Elements won't produce much Energy, this one can create 2 extra Strange quark for this Stage reset.\",\n            () => `Slow to react, but gain extra Strange quarks for every new reached digit past 52 anyway.\\n(+${format(global.strangeInfo.Element28())} for this Stage reset)`\n        ],\n        effect: [\n            null, null, null, null, null, null, 1.5, null, null, null,\n            null, null, null, null, null, null, null, null, null, null,\n            null, null, null, null, null, null, null, null, 0\n        ],\n        startCost: [ //If index 0 to be added, then it should have cost higher than last unlocked before it (or add continue for autoElements)\n            1e308, 1000, 4000, 2e4, 1e5, 1e8, 1e10, 4e11, 2e13, 1e14,\n            1e16, 1e20, 1e24, 1e25, 1.4e27, 1e30, 1e31, 5e31, 5e33, 1e35,\n            1e36, 1e38, 2e39, 3e41, 4e42, 1e45, 1e50, 1e52, 1e55\n        ]\n    },\n    strangenessInfo: [ //Right now only 2 digits allowed past point for scaling\n        {\n            description: [],\n            effectText: [],\n            cost: [],\n            startCost: [],\n            scaling: [],\n            max: [],\n            maxActive: 0\n        }, { //Stage 1\n            description: [\n                'Stronger Discharge.',\n                'Cheaper Discharge.',\n                'Free Discharge.',\n                'Automatic Discarge.',\n                'Increased Energy.',\n                \"Better 'Tritium' effect.\",\n                'Keep auto Structures.',\n                'More toggles.',\n                'Strange boost.',\n                'Energy recycling.'\n            ],\n            effectText: [\n                () => 'Base Discharge effect is now +1.',\n                () => 'Discharge goal scales slower. (-1)',\n                () => 'Always have +1 bonus Discharge.',\n                () => 'Automatically Discharge upon creating an upgrade or reaching next goal.',\n                () => `Gain more Energy from creating ${player.inflation.vacuum ? 'Preons' : 'Particles'}, +1.`,\n                () => `Research for improved 'Tritium' upgrade is now better. (+${format(0.3)})`,\n                () => `Start with auto for ${global.buildingsInfo.name[1][Math.min(player.strangeness[1][6] + 1, global.ASRInfo.max[1])]}.`,\n                () => `Increase max level of 'New toggles'.${player.inflation.vacuum ? '' : 'Also keep them on Stage reset.'}`,\n                () => 'Unspend Strange quarks will boost this stage. (Stronger radiation)',\n                () => \"Energy is no longer gained on Structure creation, but instead it's based on current self-made amount of Structures.\\nFirst step towards something more.\"\n            ],\n            cost: [],\n            startCost: [2, 1, 20, 40, 2, 1, 2, 4, 10, 10000],\n            scaling: [4, 3, 2, 1, 1.5, 1.5, 2, 3, 1, 1],\n            max: [4, 4, 2, 1, 2, 10, 3, 1, 1, 1],\n            maxActive: 9\n        }, { //Stage 2\n            description: [\n                'More Moles.',\n                'Bigger Puddles.',\n                'More spread.',\n                'Cloud density.',\n                'Automatic Vaporization.',\n                'Keep auto Structures.',\n                'Longer max offline.',\n                'Longest max offline.',\n                'Strange boost.'\n            ],\n            effectText: [\n                () => 'Mole production increased by 2x.',\n                () => 'Puddles produce 2 times more.',\n                () => 'Increase max level of some researches by +1.\\nFinal level will instead unlock a new upgrade.',\n                () => 'Decrease requirement per Cloud.',\n                () => 'Automatically Vaporize when reach certain amount.',\n                () => `Start with auto for ${global.buildingsInfo.name[2][Math.min(player.strangeness[2][5] + 1, global.ASRInfo.max[5])]}.`,\n                () => `Increase max offline time research level.${player.inflation.vacuum ? '' : 'Also keep them on Stage reset.'}`,\n                () => !player.inflation.vacuum ? 'Max offline time is now 2 times longer. (Additive)' :\n                /**/`Offline time being wasted ${format(1.5)} times less. (Additive)`,\n                () => 'Unspend Strange quarks will boost this stage. (Puddle production)'\n            ],\n            cost: [],\n            startCost: [1, 2, 4, 6, 20, 4, 1, 6, 20],\n            scaling: [1.6, 2.5, 3, 3.5, 1, 2.5, 1.8, 4, 1],\n            max: [9, 6, 3, 3, 1, 5, 4, 2, 1],\n            maxActive: 9\n        }, { //Stage 3\n            description: [\n                'Accretion speed increase.',\n                'Intense weathering.',\n                'More levels.',\n                'Improved Satellites.',\n                'Automatic Rank.',\n                'Keep auto Structures.',\n                'Automatization for Upgrades.',\n                'Strange boost.'\n            ],\n            effectText: [\n                () => `Accretion speed is 2 times faster. (Affected by ${player.inflation.vacuum ? 'hard' : 'soft'}cap)`,\n                () => 'All Accretion Structures that produce another Structure now do it 2 times faster.',\n                () => 'Some Rank researches receive extra Max level.\\nFinal level will instead unlock a new upgrade.',\n                () => 'Satellites now improve all Accretion Structures.',\n                () => 'Automatically increase Rank when available.',\n                () => `Start with auto for ${global.buildingsInfo.name[3][Math.min(player.strangeness[3][5] + 1, global.ASRInfo.max[3])]}.`,\n                () => `Unlock automatization for Upgrades / Researches.${player.inflation.vacuum ? '' : 'Also keep them on Stage reset.'}`,\n                () => 'Unspend Strange quarks will boost this stage. (Cheaper Accretion)\\n(Scales slower past 800 Strange quarks)'\n            ],\n            cost: [],\n            startCost: [1, 2, 6, 20, 30, 3, 12, 30],\n            scaling: [1.46, 2.5, 2.5, 1, 1, 1.8, 3, 1],\n            max: [8, 4, 3, 1, 1, 4, 3, 1],\n            maxActive: 8\n        }, { //Stage 4\n            description: [\n                'Hotter Stars.',\n                'Cheaper Stars.',\n                'New Upgrade.',\n                'Main giants.',\n                'Remnants of past.',\n                'Automatic Collapse.',\n                'Keep auto Structures.',\n                'Daily gain.',\n                'Max gain.',\n                'Strange boost.'\n            ],\n            effectText: [\n                () => `All Stars produce ${format(1.5)} times more Elements.`,\n                () => 'Stars are 2 times cheaper.',\n                () => 'Unlock a new Upgrade.\\nFirst one is extra good.',\n                () => '25% of Brown dwarfs will turn into Red giants now.',\n                () => `Elements in Research tab will be ${player.inflation.vacuum ? 'auto created' : 'preserved through Collapse reset'}.`,\n                () => 'Stars will Collapse automatically.',\n                () => `Start with auto for ${global.buildingsInfo.name[4][Math.min(player.strangeness[4][6] + 1, global.ASRInfo.max[4])]}.`,\n                () => `Creates +${player.inflation.vacuum ? 2 : 1} Strange quarks per day, can claim only full one's only with export.`,\n                () => player.inflation.vacuum ? 'Reward from Export is now at least 10% of best Stage reset.' :\n                /**/'Unclaimed Strange quarks max storage is now 1 day longer.',\n                () => 'Unspend Strange quarks will boost this stage. (All Stars production)'\n            ],\n            cost: [],\n            startCost: [1, 3, 5, 5, 108, 20, 4, 4, 80, 40],\n            scaling: [1.9, 2, 3, 4, 1, 1, 1.8, 1.8, 1, 1],\n            max: [8, 4, 3, 2, 1, 1, 4, 3, 1, 1],\n            maxActive: 10\n        }, { //Stage 5\n            description: [\n                'Omnipresent reality.',\n                'Strange gain.',\n                'Auto Stage.',\n                'Bigger Nebulas.',\n                'Denser Clusters.',\n                'Gravitational bound.',\n                'Hypercompact stellar system.',\n                'Auto Structures.',\n                'New Milestones.'\n            ],\n            effectText: [\n                () => player.inflation.vacuum ? 'Gain abbility to be inside multiple (not yet) at once.' :\n                /**/`Gain abbility to be inside multiple Stages at once. (Next one to always be inside is ${global.stageInfo.word[Math.min(player.strangeness[5][0] + 1, global.stageInfo.word.length - 1)]})`,\n                () => 'Gain 2 times more Strange quarks from Stage resets.',\n                () => 'Allows to auto switch Stage, has some special settings.',\n                () => \"Bigger Nebulas, more matter for Accretion. 'Jeans instability' upgrade is 3 times stronger.\",\n                () => \"'Super star cluster' is now even bigger. Effect increased by 4.\",\n                () => player.inflation.vacuum ? 'Unlock Intergalactic Stage.' :\n                /**/'Intergalactic is no longer affected by lower Stage reset types.',\n                () => 'With this, a new Structure, can be created. Second level unlocks auto for it.',\n                () => \"Increase current level of auto Structures. It's the only way to do it.\",\n                () => `Unlock${player.inflation.vacuum ? '' : ' Intergalactic'} Milestones.`\n            ],\n            cost: [],\n            startCost: [1e10, 10, 20, 5, 10, 40, 800, 40, 20],\n            scaling: [1, 1, 1, 1.9, 1.85, 1, 1.5, 2, 1],\n            max: [3, 1, 1, 9, 9, 1, 2, 2, 1],\n            maxActive: 9\n        }\n    ],\n    lastUpgrade: [false, -1], //One per subtab (to auto update description)\n    lastResearch: [false, -1, 'researches'],\n    lastElement: [false, -1],\n    milestonesInfo: [\n        {\n            description: [],\n            needText: [],\n            need: [],\n            rewardText: [],\n            quarks: [],\n            unlock: []\n        }, { //Stage 1\n            description: [\n                'Endless Matter.',\n                'Energized.'\n            ],\n            needText: [\n                ['Discharge with at least ', ' Quarks at once.'],\n                ['Have max Energy reach ', '.']\n            ],\n            need: [ //Length = max\n                [1e220, 1e240, 1e260, 1e280, 1e300],\n                [40000, 46000, 52000, 58000]\n            ],\n            rewardText: [ //Only null reward, right now\n                \"Unknown Structure, it doesn't belong to this Universe.\\nYou can view it in stats.\",\n                'Stars produce 4 times more Elements.'\n            ],\n            quarks: [\n                [1, 1, 1, 1, 2],\n                [1, 1, 1, 2]\n            ],\n            unlock: [5, 3] //Reward unlocked at (index + 1)\n        }, { //Stage 2\n            description: [\n                'A Nebula of Drops.',\n                'Just a bigger Puddle.'\n            ],\n            needText: [\n                ['Vaporize ', ' Drops at once.'],\n                ['Have at least ', ' Puddles at same time.']\n            ],\n            need: [\n                [1e30, 1e35, 1e40, 1e45, 1e50],\n                [3000, 5000, 9000, 18000]\n            ],\n            rewardText: [\n                'Unlock a new Structure.',\n                \"Unknown Structure, it doesn't belong to this Universe.\\nYou can view it in stats.\"\n            ],\n            quarks: [\n                [1, 1, 1, 2, 3],\n                [1, 2, 2, 3]\n            ],\n            unlock: [3, 4]\n        }, { //Stage 3\n            description: [\n                'Cluster of Mass.',\n                'Satellites of Satellites.'\n            ],\n            needText: [\n                ['Have at least ', ' Mass at once.'],\n                ['Have more Satellites than ', '.']\n            ],\n            need: [\n                [1e30, 1e35, 1e40, 1e46, 1e52, 1e58],\n                [25, 40, 55, 70, 85]\n            ],\n            rewardText: [\n                'Unlock a new Structure.',\n                \"Unknown Structure, it doesn't belong to this Universe.\\nYou can view it in stats.\"\n            ],\n            quarks: [\n                [1, 1, 1, 2, 2, 3],\n                [1, 2, 2, 3, 3]\n            ],\n            unlock: [3, 5]\n        }, { //Stage 4\n            description: [\n                'Just more Mass.',\n                'Biggest of all.'\n            ],\n            needText: [\n                ['Collapse to at least ', ' Main-sequence mass.'],\n                ['Collapse to ', ' Black holes or more.']\n            ],\n            need: [\n                [9000, 15000, 22000, 30000, 40000, 60000, 80000],\n                [100, 150, 200, 250, 300]\n            ],\n            rewardText: [\n                'Unlock a new Strangeness.',\n                \"Unknown Structure, it doesn't belong to this Universe.\\nYou can view it in stats.\"\n            ],\n            quarks: [\n                [1, 2, 3, 4, 5, 6, 8],\n                [1, 2, 3, 4, 5]\n            ],\n            unlock: [3, 5]\n        }, { //Stage 5\n            description: [\n                'Light in the dark.',\n                'Greatest of the walls.'\n            ],\n            needText: [\n                ['Have self-made Stars count reach at least ', '.'],\n                ['Have ', ' Galaxies or more.']\n            ],\n            need: [\n                [1200, 1400, 1600, 1800, 2000, 2200, 2400],\n                [1, 2, 4, 8, 12, 16, 20, 24]\n            ],\n            rewardText: [\n                'Intergalactic is always unlocked with Interstellar.',\n                \"Unknown Structure, it doesn't belong to this Universe.\\nYou can view it in stats.\"\n            ],\n            quarks: [\n                [5, 5, 10, 10, 20, 20, 50],\n                [25, 25, 50, 50, 100, 100, 200, 0]\n            ],\n            unlock: [4, 8]\n        }\n    ]\n};\n\n//Extension for Math.log for any base\n//export const logAny = (number: number, base: number) => Math.log(number) / Math.log(base);\n\n//Not for deep copy. Actual type is any[], it's because TS is dumb\nexport const cloneArray = <ArrayClone extends Array<number | string | boolean | null | undefined>>(array: ArrayClone) => array.slice(0) as ArrayClone; //[...array] is better when >10000 keys\n\n//For non deep clone use {...object} or cloneArray when possible; Allows functions inside\nexport const deepClone = <CloneType>(toClone: CloneType): CloneType => {\n    if (typeof toClone !== 'object' || toClone === null) { return toClone; }\n    const isArray = Array.isArray(toClone);\n\n    //Just like null check (without it null will turn into {})\n    //Add extra checks if they are required (toClone instanceof Date)\n\n    const value = isArray ? [] : {} as any;\n    if (isArray) { //Faster this way\n        for (let i = 0; i < toClone.length; i++) { value.push(deepClone(toClone[i])); }\n    } else {\n        for (const check in toClone) { value[check] = deepClone(toClone[check]); }\n    }\n\n    return value;\n};\n\nconst createArray = (amount: number, special: 'toggle' | 'toggleAuto' | 'upgrade') => {\n    const array = [];\n    for (let i = 0; i < amount; i++) {\n        if (special === 'toggle') {\n            array.push(true);\n        } else if (special === 'toggleAuto') {\n            array.push(false);\n        } else if (special === 'upgrade') {\n            array.push(0);\n        }\n    }\n    return array;\n};\n\nfor (let s = 0; s < global.buildingsInfo.startCost.length; s++) {\n    global.buildingsInfo.firstCost[s] = cloneArray(global.buildingsInfo.startCost[s]);\n}\nglobal.researchesAutoInfo.cost = cloneArray(global.researchesAutoInfo.startCost);\nfor (const upgradeType of ['researches', 'researchesExtra', 'strangeness']) {\n    const pointer = global[upgradeType + 'Info' as 'researchesInfo'];\n    for (let s = 0; s < pointer.length; s++) {\n        pointer[s].cost = cloneArray(pointer[s].startCost);\n    }\n}\n\nObject.assign(player, {\n    upgrades: [\n        [],\n        createArray(global.upgradesInfo[1].startCost.length, 'upgrade'),\n        createArray(global.upgradesInfo[2].startCost.length, 'upgrade'),\n        createArray(global.upgradesInfo[3].startCost.length, 'upgrade'),\n        createArray(global.upgradesInfo[4].startCost.length, 'upgrade'),\n        createArray(global.upgradesInfo[5].startCost.length, 'upgrade')\n    ],\n    researches: [\n        [],\n        createArray(global.researchesInfo[1].startCost.length, 'upgrade'),\n        createArray(global.researchesInfo[2].startCost.length, 'upgrade'),\n        createArray(global.researchesInfo[3].startCost.length, 'upgrade'),\n        createArray(global.researchesInfo[4].startCost.length, 'upgrade'),\n        createArray(global.researchesInfo[5].startCost.length, 'upgrade')\n    ],\n    researchesExtra: [\n        [],\n        createArray(global.researchesExtraInfo[1].startCost.length, 'upgrade'),\n        createArray(global.researchesExtraInfo[2].startCost.length, 'upgrade'),\n        createArray(global.researchesExtraInfo[3].startCost.length, 'upgrade'),\n        createArray(global.researchesExtraInfo[4].startCost.length, 'upgrade'),\n        createArray(global.researchesExtraInfo[5].startCost.length, 'upgrade')\n    ],\n    researchesAuto: createArray(global.researchesAutoInfo.startCost.length, 'upgrade'),\n    ASR: createArray(global.ASRInfo.costRange.length, 'upgrade'),\n    elements: createArray(global.elementsInfo.startCost.length, 'upgrade'),\n    strangeness: [\n        [],\n        createArray(global.strangenessInfo[1].startCost.length, 'upgrade'),\n        createArray(global.strangenessInfo[2].startCost.length, 'upgrade'),\n        createArray(global.strangenessInfo[3].startCost.length, 'upgrade'),\n        createArray(global.strangenessInfo[4].startCost.length, 'upgrade'),\n        createArray(global.strangenessInfo[5].startCost.length, 'upgrade')\n    ],\n    milestones: [\n        [],\n        createArray(global.milestonesInfo[1].need.length, 'upgrade'),\n        createArray(global.milestonesInfo[2].need.length, 'upgrade'),\n        createArray(global.milestonesInfo[3].need.length, 'upgrade'),\n        createArray(global.milestonesInfo[4].need.length, 'upgrade'),\n        createArray(global.milestonesInfo[5].need.length, 'upgrade')\n    ]\n});\nObject.assign(player.toggles, { //Done separately just in case\n    normal: createArray(document.getElementsByClassName('toggle').length, 'toggle'),\n    buildings: [\n        [],\n        createArray(player.buildings[1].length, 'toggleAuto'),\n        createArray(player.buildings[2].length, 'toggleAuto'),\n        createArray(player.buildings[3].length, 'toggleAuto'),\n        createArray(player.buildings[4].length, 'toggleAuto'),\n        createArray(player.buildings[5].length, 'toggleAuto')\n    ],\n    auto: createArray(document.getElementsByClassName('toggleAuto').length, 'toggleAuto')\n});\n\n//player.example = playerStart.example; Is not allowed (if example is an array or object), instead iterate or create clone\nexport const playerStart = deepClone(player);\n\nexport const checkPlayerValues = () => {\n    for (const s of global.stageInfo.activeAll) { //No visual update (lazy)\n        const upgrades = player.upgrades[s];\n        for (let i = 0; i < global.upgradesInfo[s].startCost.length; i++) {\n            if (upgrades[i] > 1) {\n                upgrades[i] = 1;\n                console.warn(`Upgrade (${i + 1} of ${s}) had an illegal value`);\n            }\n        }\n        const researches = player.researches[s];\n        const researchesMax = global.researchesInfo[s].max;\n        for (let i = 0; i < global.researchesInfo[s].startCost.length; i++) {\n            if (researches[i] > researchesMax[i]) {\n                researches[i] = researchesMax[i];\n                console.warn(`Research (${i + 1} of ${s}) had level above maxium`);\n            }\n        }\n        const researchesExtra = player.researchesExtra[s];\n        const researchesExtraMax = global.researchesExtraInfo[s].max;\n        for (let i = 0; i < global.researchesExtraInfo[s].startCost.length; i++) {\n            if (researchesExtra[i] > researchesExtraMax[i]) {\n                researchesExtra[i] = researchesExtraMax[i];\n                console.warn(`Extra research (${i + 1} of ${s}) had level above maxium`);\n            }\n        }\n    }\n    const researchesAuto = player.researchesAuto;\n    const researchesAutoMax = global.researchesAutoInfo.max;\n    for (let i = 0; i < global.researchesAutoInfo.startCost.length; i++) {\n        if (researchesAuto[i] > researchesAutoMax[i]) {\n            researchesAuto[i] = researchesAutoMax[i];\n            console.warn(`Research (${i + 1}) for automatization had level above maxium`);\n        }\n    } //No need to check ASR max level\n    if (player.stage.true >= 4) {\n        const elements = player.elements;\n        for (let i = 1; i < global.elementsInfo.startCost.length; i++) {\n            if (elements[i] > 1) {\n                elements[i] = 1;\n                console.warn(`Element (${i}) had an illegal value`);\n            }\n        }\n    }\n    if (player.stage.true >= 5) {\n        for (let s = 1; s < global.strangenessInfo.length; s++) {\n            const strangeness = player.strangeness[s];\n            const strangenessMax = global.strangenessInfo[s].max;\n            for (let i = 0; i < global.strangenessInfo[s].startCost.length; i++) {\n                if (strangeness[i] > strangenessMax[i]) {\n                    strangeness[i] = strangenessMax[i];\n                    console.warn(`Strangeness research (${i + 1} of ${s + 1}) had level above maxium`);\n                }\n            }\n        }\n    }\n};\n\nexport const updatePlayer = (load: playerType) => {\n    if (Object.hasOwn(load, 'player')) { load = load['player' as keyof unknown]; } //Old save had it\n    if (!Object.hasOwn(load, 'discharge')) { throw new ReferenceError('This save file is missing important information and is most likely not from this game'); }\n\n    for (const i in playerStart) {\n        if (!Object.hasOwn(load, i)) {\n            if (i === 'version') {\n                load.version = '0.0.0';\n            } else {\n                load[i as 'version'] = deepClone(playerStart[i as 'version']);\n            }\n        }\n    }\n\n    if (load.version !== playerStart.version) {\n        if (load.version === '0.0.0') {\n            load.version = 'v0.0.1';\n            for (let i = 0; i <= 3; i++) { (load.buildings[i] as unknown as typeof load.buildings[1][1]).trueTotal = [0, 0]; }\n            load.discharge.energy = load['energy' as 'discharge']['current' as 'energy']; //Auto deleted\n            load.discharge.energyMax = load.discharge.energy;\n        }\n        if (load.version === 'v0.0.1') {\n            load.version = 'v0.0.2';\n            load.stage.resets = load.stage.current - 1;\n        }\n        if (load.version === 'v0.0.2') {\n            load.version = 'v0.0.3';\n            load.toggles = deepClone(playerStart.toggles);\n        }\n        if (load.version === 'v0.0.3' || load.version === 'v0.0.4' || load.version === 'v0.0.5') {\n            load.version = 'v0.0.6';\n            load.events = [false];\n        }\n        if (load.version === 'v0.0.6') {\n            load.version = 'v0.0.7';\n            if (load.stage.current === 4) { load.elements[26] = 0; }\n            load.vaporization.input = 10;\n            load.collapse.inputM = 4;\n            load.collapse.inputS = 2;\n            load.stage.input = 1;\n        }\n        if (load.version === 'v0.0.7') {\n            load.version = 'v0.0.8';\n            load.stage.export = 1;\n        }\n        if (load.version === 'v0.0.8') {\n            load.version = 'v0.0.9';\n            load.stage.active = Math.min(load.stage.current, 4);\n            const a = load.stage.active;\n            const oldB = load.buildings as unknown as typeof player.buildings[0];\n            load.buildings = deepClone(playerStart.buildings);\n            load.buildings[a] = oldB;\n            if (load.buildings[a].length > playerStart.buildings[a].length) {\n                for (let i = load.buildings[a].length; i > playerStart.buildings[a].length; i--) {\n                    load.buildings[a].splice(i - 1, 1);\n                }\n            }\n            const oldU = load.upgrades as unknown as typeof player.upgrades[0];\n            load.upgrades = deepClone(playerStart.upgrades);\n            load.upgrades[a] = oldU;\n            const oldR = load.researches as unknown as typeof player.researches[0];\n            load.researches = deepClone(playerStart.researches);\n            load.researches[a] = oldR;\n            if (a !== 1) {\n                const oldE = load.researchesExtra as unknown as typeof player.researchesExtra[0];\n                load.researchesExtra = deepClone(playerStart.researchesExtra);\n                load.researchesExtra[a] = oldE;\n            }\n            if (load.strangeness.length < 5) { load.strangeness.unshift([]); }\n            load.stage.export *= 86400;\n            load.ASR[a] = load.researchesAuto.splice(1, 1)[0];\n        }\n        if (load.version === 'v0.0.9') {\n            load.version = 'v0.1.0';\n            if (load.upgrades[3].length === 12) { load.upgrades[3].splice(8, 0, 0); }\n            if (load.strangeness[5] === undefined) { load.strangeness[5] = []; }\n            load.strangeness[5][0] = 0;\n            load.strangeness[5][1] = 0;\n            if (load.strange[0]['true' as 'current'] > 24) {\n                load.strange[0].total -= (load.strange[0]['true' as 'current'] - 24);\n                load.strange[0]['true' as 'current'] = 24;\n            }\n            load.stage.active = load.stage.current;\n            for (let s = 1; s < load.buildings.length; s++) {\n                for (let i = 0; i < load.buildings[s].length; i++) {\n                    load.buildings[s][i].highest = [0, 0];\n                }\n            }\n            load.collapse.show = [];\n            for (let i = 1; i < load.elements.length; i++) {\n                if (load.elements[i] === 1) { load.collapse.show.push(i); }\n            }\n            load.collapse.disabled = false;\n        }\n        if (load.version === 'v0.1.0') {\n            load.version = 'v0.1.1';\n            if (Object.hasOwn(load.discharge, 'energyCur')) {\n                load.discharge.energy = load.discharge['energyCur' as 'energy'];\n                delete load.discharge['energyCur' as keyof unknown];\n            }\n            load.collapse.massMax = load.collapse.mass;\n        }\n        if (load.version === 'v0.1.1') {\n            load.version = 'v0.1.2';\n            for (let s = 1; s < load.buildings.length; s++) {\n                for (let i = 0; i < load.buildings[s].length; i++) {\n                    load.buildings[s][i].current = Limit(load.buildings[s][i].current).toArray();\n                    load.buildings[s][i].total = Limit(load.buildings[s][i].total).toArray();\n                    load.buildings[s][i].trueTotal = Limit(load.buildings[s][i].trueTotal).toArray();\n                    load.buildings[s][i].highest = Limit(load.buildings[s][i].highest).toArray();\n                }\n            }\n            load.discharge.unlock = load.stage.current === 1 && load.discharge.energy >= 9;\n            load.vaporization.clouds = Limit(load.vaporization.clouds).toArray();\n            load.vaporization.cloudsMax = cloneArray(load.vaporization.clouds);\n            load.collapse.elementsMax = cloneArray(load.buildings[4][0].current);\n            load.strange[0].current = load.strange[0]['true' as 'current'] ?? 0;\n            if (load.upgrades[1].length < 10) { load.upgrades[1].unshift(0, 0); }\n            delete load.vaporization['current' as keyof unknown];\n            delete load.strange[0]['true' as keyof unknown];\n            load.time.offline = 0;\n        }\n\n        if (load.version !== playerStart.version) {\n            throw new ReferenceError('Save file version is higher than game version');\n        }\n        for (const i in load) {\n            if (!Object.hasOwn(playerStart, i)) {\n                delete load[i as keyof playerType];\n            }\n        }\n\n        global.versionInfo.changed = true;\n    } else { global.versionInfo.changed = false; }\n\n    for (let s = 1; s < playerStart.buildings.length; s++) {\n        if (!Array.isArray(load.buildings[s])) {\n            load.buildings[s] = deepClone(playerStart.buildings[s]);\n        } else if (playerStart.buildings[s].length > load.buildings[s].length) {\n            for (let i = load.buildings[s].length; i < playerStart.buildings[s].length; i++) {\n                load.buildings[s][i] = deepClone(playerStart.buildings[s][i]);\n            }\n        }\n    }\n\n    for (let s = 1; s < playerStart.upgrades.length; s++) {\n        if (!Array.isArray(load.upgrades[s])) {\n            load.upgrades[s] = cloneArray(playerStart.upgrades[s]);\n        } else if (playerStart.upgrades[s].length > load.upgrades[s].length) {\n            for (let i = load.upgrades[s].length; i < playerStart.upgrades[s].length; i++) {\n                load.upgrades[s][i] = 0;\n            }\n        }\n    }\n    for (let s = 1; s < playerStart.researches.length; s++) {\n        if (!Array.isArray(load.researches[s])) {\n            load.researches[s] = cloneArray(playerStart.researches[s]);\n        } else if (playerStart.researches[s].length > load.researches[s].length) {\n            for (let i = load.researches[s].length; i < playerStart.researches[s].length; i++) {\n                load.researches[s][i] = 0;\n            }\n        }\n    }\n    for (let s = 1; s < playerStart.researchesExtra.length; s++) {\n        if (!Array.isArray(load.researchesExtra[s])) {\n            load.researchesExtra[s] = cloneArray(playerStart.researchesExtra[s]);\n        } else if (playerStart.researchesExtra[s].length > load.researchesExtra[s].length) {\n            for (let i = load.researchesExtra[s].length; i < playerStart.researchesExtra[s].length; i++) {\n                load.researchesExtra[s][i] = 0;\n            }\n        }\n    }\n    if (playerStart.researchesAuto.length > load.researchesAuto.length) {\n        for (let i = load.researchesAuto.length; i < playerStart.researchesAuto.length; i++) {\n            load.researchesAuto[i] = 0;\n        }\n    }\n    if (playerStart.ASR.length > load.ASR.length) {\n        for (let i = load.ASR.length; i < playerStart.ASR.length; i++) {\n            load.ASR[i] = 0;\n        }\n    }\n    if (playerStart.elements.length > load.elements.length) {\n        for (let i = load.elements.length; i < playerStart.elements.length; i++) {\n            load.elements[i] = 0;\n        }\n    }\n    for (let s = 0; s < playerStart.strangeness.length; s++) {\n        if (!Array.isArray(load.strangeness[s])) {\n            load.strangeness[s] = cloneArray(playerStart.strangeness[s]);\n        } else if (playerStart.strangeness[s].length > load.strangeness[s].length) {\n            for (let i = load.strangeness[s].length; i < playerStart.strangeness[s].length; i++) {\n                load.strangeness[s][i] = 0;\n            }\n        }\n    }\n    for (let s = 0; s < playerStart.milestones.length; s++) {\n        if (!Array.isArray(load.milestones[s])) {\n            load.milestones[s] = cloneArray(playerStart.milestones[s]);\n        } else if (playerStart.milestones[s].length > load.milestones[s].length) {\n            for (let i = load.milestones[s].length; i < playerStart.milestones[s].length; i++) {\n                load.milestones[s][i] = 0;\n            }\n        }\n    }\n\n    if (playerStart.toggles.normal.length > load.toggles.normal.length) {\n        for (let i = load.toggles.normal.length; i < playerStart.toggles.normal.length; i++) {\n            load.toggles.normal[i] = playerStart.toggles.normal[i];\n        }\n    }\n    for (let s = 1; s < playerStart.toggles.buildings.length; s++) {\n        if (!Array.isArray(load.toggles.buildings[s])) {\n            load.toggles.buildings[s] = cloneArray(playerStart.toggles.buildings[s]);\n        } else if (playerStart.toggles.buildings[s].length > load.toggles.buildings[s].length) {\n            for (let i = load.toggles.buildings[s].length; i < playerStart.toggles.buildings[s].length; i++) {\n                load.toggles.buildings[s][i] = false;\n            }\n        }\n    }\n    if (playerStart.toggles.auto.length > load.toggles.auto.length) {\n        for (let i = load.toggles.auto.length; i < playerStart.toggles.auto.length; i++) {\n            load.toggles.auto[i] = false;\n        }\n    }\n\n    if (playerStart.events.length > load.events.length) {\n        for (let i = load.events.length; i < playerStart.events.length; i++) {\n            load.events[i] = false;\n        }\n    }\n\n    /* Fake save file data (not saved) */\n    const stars = load.buildings[4];\n    global.accretionInfo.rankCost[4] = load.stage.true < 3 || (load.stage.true === 3 && !load.events[0]) ? 0 : 5e29;\n    global.collapseInfo.trueStars = stars[1].true + stars[2].true + stars[3].true + stars[4].true + stars[5].true;\n\n    Object.assign(player, load);\n};\n\nexport const buildVersionInfo = () => {\n    if (global.versionInfo.build) { return; }\n\n    const changeVersion = (version: string) => {\n        let text = '';\n        switch (version) {\n            case 'v0.0.1':\n                text = '- Stage 2 full rework\\n- Introduced automatic changelog\\n- Auto Structures now auto make 1st one without waiting for 2 times the cost\\n- Fixed v0.0.0 save file corruption\\n\\n';\n                text += '- Mobile device support\\n\\n';\n                text += '- Tritium now shows how much Molecules being produced per second\\n- Upgrades auto update description';\n                break;\n            case 'v0.0.2':\n                text = '- Added stats subtab\\n- Added Stage resets into save file';\n                break;\n            case 'v0.0.3':\n                text = '- Added new content (Stage 3)\\n- Stage 2 is extended\\n- Max offline time base and from research is now 2 times longer\\n- Offline time is now calculated better\\n- Toggles have been reset due to change in the way they are saved\\n- Researches auto update description\\n- Some new stats';\n                break;\n            case 'v0.0.4':\n                text = '- Buffed all Stages\\n- Added events for early Stages\\n- Update to stats visuals\\n- Intervals have been reset due to change in save file saving\\n\\n';\n                text += '- Numbers are now formated\\n\\n';\n                text += '- New stat for Stage 3';\n                break;\n            case 'v0.0.5':\n                text = '- New content (Stage 4)\\n- Basic loading screen\\n- Full visual update\\n- Optimization for bulk making Structures due to change in cost calculation formula\\n- That also allowed to add visual indication for how many can be afforded\\n\\n';\n                text += \"- Elements now always show effect, after being created at least once\\n- Improved transition when changing themes\\n- Fixed being able to create Research for automatization when can't afford it (and get negative resources)\\n\\n\";\n                text += '- Added hotkeys\\n- Stage event have been reset\\n\\n';\n                text += '- Stage 1 is fixed, but rework is coming';\n                break;\n            case 'v0.0.6':\n                text = '- List of hotkeys can be seen now\\n\\n';\n                text += '- Option to remove text movement from footer resources\\n- Abbility to rename save file';\n                break;\n            case 'v0.0.7':\n                text = '- New content (Stage 5)\\n- Stage 1 rework\\nSelf-made Structures are moved into Stage tab (displayed when current is not equal self-made amount)\\n- Hotkeys for Resets\\n- Pressing non tab key on keyboard no longer highlights last selected button\\n- Due to built in function for formating numbers being painfully slow, added self-made formating with custom settings\\n\\n';\n                text += '- Numpad can now be used as digits for hotkeys\\n\\n';\n                text += '- Save file name can now display in game stats';\n                break;\n            case 'v0.0.8':\n                text = '- Minor speed up to Stages 2 to 5\\n- Fixed [true] being [stage] and other way around';\n                break;\n            case 'v0.0.9':\n                text = '- New content (Milestones)\\n- Stage 4 speed up\\n- Fixed export reward not being saved into exported file\\n- Optimization\\n- Auto Structures toggles have been reset\\n\\n';\n                text += '- Fix being unable to start game, if playing for first time\\n\\n';\n                text += '- Fixed F1 - F12, keyboard buttons working as digits\\n- Milestones are now unlocked instanly (at Stage 5)\\n- Added new event for changing Active Stage for first time (must be triggered to progress)\\n\\n';\n                text += '- Max offline base and research is increased by 2 times, also related Strangeness cost and max level have been better balanced\\n\\n';\n                text += '- Some Stage 3 and Stage 5 quick balance changes';\n                break;\n            case 'v0.1.0':\n                text = '- New content and balance of old Stage 5 late content\\n- New stats for Stage 5\\n- Due to balance changes, Strangeness for Stage 5 and Strange quarks had been reset';\n                break;\n            case 'v0.1.1':\n                text = '- More balance for Stage 5\\n- New stats for Stage 2 and 4, max energy no longer resets\\n- New hotkey for changing Active Stage';\n                break;\n            case 'v0.1.2':\n                text = '- New content (Vacuum)\\n- Some descriptions have been expanded\\n- Added self-made break infinity\\n- Heavy optimization\\n- Offline time been reworked\\n- Removed automatic change log in favor of version window\\n- Removed text movement and related option from settings\\n\\n';\n                text += '- New color theme (Stage 6 related)\\n- Offline warp unlock condition is now switched with Offline storage consumption toggle\\n- Offline time is being wasted less (from 9 to 6)\\n- Balance changes for Stage 6\\n- New stats for Stage 4\\n- Other minor stuff\\n\\n';\n                text += '- Removed more text movement from Stage tab, footer and descriptions\\n- Fixed unable to reset current separator setting';\n        }\n        getId('versionText').textContent = text;\n        getId('currentVesion').textContent = version;\n    };\n\n    getId('versionInfo').innerHTML = `<div style=\"display: flex; flex-direction: column; justify-content: space-between; align-items: center; width: clamp(42vw, 36em, 80vw); height: clamp(26vh, 36em, 90vh); background-color: var(--window-color); border: 3px solid var(--window-border); border-radius: 12px; padding: 1em 1em 0.8em; row-gap: 1em;\">\n        <div style=\"display: flex; justify-content: center; flex-wrap: wrap; gap: 0.06em;\">\n            <button id=\"v0.0.1\" style=\"width: 3.8em; height: 2em; font-size: 0.88em;\">v0.0.1</button>\n            <button id=\"v0.0.2\" style=\"width: 3.8em; height: 2em; font-size: 0.88em;\">v0.0.2</button>\n            <button id=\"v0.0.3\" style=\"width: 3.8em; height: 2em; font-size: 0.88em;\">v0.0.3</button>\n            <button id=\"v0.0.4\" style=\"width: 3.8em; height: 2em; font-size: 0.88em;\">v0.0.4</button>\n            <button id=\"v0.0.5\" style=\"width: 3.8em; height: 2em; font-size: 0.88em;\">v0.0.5</button>\n            <button id=\"v0.0.6\" style=\"width: 3.8em; height: 2em; font-size: 0.88em;\">v0.0.6</button>\n            <button id=\"v0.0.7\" style=\"width: 3.8em; height: 2em; font-size: 0.88em;\">v0.0.7</button>\n            <button id=\"v0.0.8\" style=\"width: 3.8em; height: 2em; font-size: 0.88em;\">v0.0.8</button>\n            <button id=\"v0.0.9\" style=\"width: 3.8em; height: 2em; font-size: 0.88em;\">v0.0.9</button>\n            <button id=\"v0.1.0\" style=\"width: 3.8em; height: 2em; font-size: 0.88em;\">v0.1.0</button>\n            <button id=\"v0.1.1\" style=\"width: 3.8em; height: 2em; font-size: 0.88em;\">v0.1.1</button>\n            <button id=\"v0.1.2\" style=\"width: 3.8em; height: 2em; font-size: 0.88em;\">v0.1.2</button>\n        </div>\n        <div style=\"width: 100%; overflow-y: auto;\">\n            <label id=\"currentVesion\" class=\"bigWord\"></label>\n            <p id=\"versionText\" class=\"whiteText\" style=\"white-space: pre-wrap; line-height: 1.3em; margin-top: 0.4em;\"></p>\n        </div>\n        <button id=\"closeVersionInfo\" style=\"width: 6em; border-radius: 4px; font-size: 0.92em;\">Close</button>\n    </div>`;\n    getId('closeVersionInfo').addEventListener('click', () => { getId('versionInfo').style.display = 'none'; });\n    getId('v0.0.1').addEventListener('click', () => changeVersion('v0.0.1'));\n    getId('v0.0.2').addEventListener('click', () => changeVersion('v0.0.2'));\n    getId('v0.0.3').addEventListener('click', () => changeVersion('v0.0.3'));\n    getId('v0.0.4').addEventListener('click', () => changeVersion('v0.0.4'));\n    getId('v0.0.5').addEventListener('click', () => changeVersion('v0.0.5'));\n    getId('v0.0.6').addEventListener('click', () => changeVersion('v0.0.6'));\n    getId('v0.0.7').addEventListener('click', () => changeVersion('v0.0.7'));\n    getId('v0.0.8').addEventListener('click', () => changeVersion('v0.0.8'));\n    getId('v0.0.9').addEventListener('click', () => changeVersion('v0.0.9'));\n    getId('v0.1.0').addEventListener('click', () => changeVersion('v0.1.0'));\n    getId('v0.1.1').addEventListener('click', () => changeVersion('v0.1.1'));\n    getId('v0.1.2').addEventListener('click', () => changeVersion('v0.1.2'));\n    changeVersion(playerStart.version);\n\n    global.versionInfo.build = true;\n};\n", "import { global, player } from './Player';\nimport { checkTab } from './Check';\nimport { switchTab } from './Update';\nimport { buyBuilding, collapseAsyncReset, dischargeAsyncReset, rankAsyncReset, stageAsyncReset, switchStage, vaporizationAsyncReset } from './Stage';\nimport { timeWarp } from './Main';\n\nexport const detectHotkey = (check: KeyboardEvent) => {\n    const checkEl = document.activeElement as HTMLInputElement;\n    if (checkEl.type === 'text' || checkEl.type === 'number') { return; }\n    if (check.code === 'Tab') {\n        document.body.classList.add('outlineOnFocus');\n        return;\n    } else { document.body.classList.remove('outlineOnFocus'); }\n    if (check.ctrlKey || check.altKey) { return; }\n\n    const shift = check.shiftKey;\n    const isNumber = !isNaN(Number(check.code.slice(-1)));\n    const key = !player.toggles.normal[6] || (isNumber && shift) ? check.code : check.key;\n\n    if (isNumber) {\n        if (check.code[0] === 'F') { return; }\n        const numberKey = Number(key.slice(-1));\n\n        if (!shift && numberKey >= 1) { buyBuilding(numberKey); }\n        return;\n    } else if (check.key.length === 1) {\n        const stringKey = key.replace('Key', '').toLowerCase();\n\n        if (!shift) {\n            if (stringKey === 's') {\n                void stageAsyncReset();\n            } else if (stringKey === 'd') {\n                if (global.stageInfo.activeAll.includes(1)) { void dischargeAsyncReset(); }\n            } else if (stringKey === 'v') {\n                if (global.stageInfo.activeAll.includes(2)) { void vaporizationAsyncReset(); }\n            } else if (stringKey === 'r') {\n                if (global.stageInfo.activeAll.includes(3)) { void rankAsyncReset(); }\n            } else if (stringKey === 'c') {\n                if (global.stageInfo.activeAll.includes(4)) { void collapseAsyncReset(); }\n            } else if (stringKey === 'w') {\n                check.preventDefault();\n                void timeWarp();\n            }\n        }\n        return;\n    }\n\n    if (!check.repeat) {\n        if (shift) {\n            if (key === 'ArrowLeft' || key === 'ArrowRight') {\n                const { activeAll } = global.stageInfo;\n                if (activeAll.length === 1) { return; }\n                let index = activeAll.indexOf(player.stage.active);\n\n                if (key === 'ArrowLeft') {\n                    if (index <= 0) {\n                        index = activeAll.length - 1;\n                    } else { index--; }\n                    switchStage(activeAll[index]);\n                } else {\n                    if (index >= activeAll.length - 1) {\n                        index = 0;\n                    } else { index++; }\n                    switchStage(activeAll[index]);\n                }\n            }\n        } else {\n            if (key === 'ArrowLeft' || key === 'ArrowRight') {\n                const { tabs } = global.tabList;\n                let index = tabs.indexOf(global.tab);\n\n                if (key === 'ArrowLeft') {\n                    do {\n                        if (index <= 0) {\n                            index = tabs.length - 1;\n                        } else { index--; }\n                    } while (!checkTab(tabs[index]));\n                    switchTab(tabs[index]);\n                } else {\n                    do {\n                        if (index >= tabs.length - 1) {\n                            index = 0;\n                        } else { index++; }\n                    } while (!checkTab(tabs[index]));\n                    switchTab(tabs[index]);\n                }\n            } else if (key === 'ArrowDown' || key === 'ArrowUp') {\n                if (!Object.hasOwn(global.subtab, global.tab + 'Current')) { return; }\n                const subtabs = global.tabList[global.tab + 'Subtabs' as 'settingsSubtabs'];\n                let index = subtabs.indexOf(global.subtab[global.tab + 'Current' as 'settingsCurrent']);\n\n                if (key === 'ArrowDown') {\n                    do {\n                        if (index <= 0) {\n                            index = subtabs.length - 1;\n                        } else { index--; }\n                    } while (!checkTab(global.tab, subtabs[index]));\n                    switchTab(global.tab, subtabs[index]);\n                } else {\n                    do {\n                        if (index >= subtabs.length - 1) {\n                            index = 0;\n                        } else { index++; }\n                    } while (!checkTab(global.tab, subtabs[index]));\n                    switchTab(global.tab, subtabs[index]);\n                }\n            }\n        }\n    }\n};\n", "import { player, global, playerStart, updatePlayer, checkPlayerValues, buildVersionInfo } from './Player';\nimport { getUpgradeDescription, timeUpdate, switchTab, numbersUpdate, visualUpdate, format, stageCheck, maxOfflineTime, exportMultiplier, maxExportTime } from './Update';\nimport { autoElementsSet, autoResearchesSet, autoUpgradesSet, buyBuilding, buyUpgrades, collapseAsyncReset, dischargeAsyncReset, rankAsyncReset, stageAsyncReset, switchStage, toggleBuy, toggleSwap, vaporizationAsyncReset } from './Stage';\nimport { Alert, hideFooter, Prompt, setTheme, changeFontSize, screenReaderSupport, mobileDeviceSupport, changeFormat, specialHTML, AlertWait } from './Special';\nimport { detectHotkey } from './Hotkeys';\nimport { prepareVacuum, switchVacuum } from './Vacuum';\n\nexport const getId = (id: string) => document.getElementById(id) as HTMLElement;\nexport const getClass = (idCollection: string) => document.getElementsByClassName(idCollection) as HTMLCollectionOf<HTMLElement>;\n\nexport const reLoad = (firstLoad = false) => {\n    if (firstLoad) {\n        const save = localStorage.getItem('save');\n        if (save !== null) {\n            const load = JSON.parse(atob(save));\n            updatePlayer(load);\n\n            const { time } = player;\n            const offlineTime = Date.now() - time.updated;\n            const maxOffline = maxOfflineTime();\n            time.updated = Date.now();\n            global.timeSpecial.lastSave += offlineTime;\n            time.offline = Math.min(time.offline + offlineTime / 1000, maxOffline);\n            player.stage.export = Math.min(player.stage.export + offlineTime / 1000, maxExportTime());\n            Alert(`Welcome back, you were away for ${format(offlineTime, { type: 'time' })}.${offlineTime + (time.offline * 1000) > maxOffline * 1000 ? ' (Your offline time storage is full)' : ''}${global.versionInfo.changed ? ` Game has been updated to ${player.version}` : `\\nCurrent version is ${player.version}`}`);\n        } else {\n            Alert(`Welcome to 'Fundamental'.\\nThis is a test-project made by awWhy. Should be supported by modern browsers, phones and screen readers (need to turn support ON in settings).\\nWas inspired by 'Synergism', 'Antimatter Dimensions' and others.\\nCurrent version is ${player.version}`);\n        }\n\n        mobileDeviceSupport();\n        screenReaderSupport(false, 'toggle', 'reload');\n        changeFontSize();\n    }\n\n    const theme = localStorage.getItem('theme');\n    setTheme(Number(theme), theme === null);\n\n    prepareVacuum();\n    stageCheck('reload'); //Stage information (incuding part of timeUpdate), visualUpdate\n    if (firstLoad) {\n        getId('body').style.display = '';\n        getId('loading').style.display = 'none';\n    }\n    checkPlayerValues(); //Must be after stageCheck\n\n    (getId('saveFileNameInput') as HTMLInputElement).value = player.fileName;\n    (getId('thousandSeparator') as HTMLInputElement).value = player.separator[0];\n    (getId('decimalPoint') as HTMLInputElement).value = player.separator[1];\n    (getId('stageInput') as HTMLInputElement).value = `${player.stage.input}`;\n    (getId('vaporizationInput') as HTMLInputElement).value = `${player.vaporization.input}`;\n    (getId('collapseMassInput') as HTMLInputElement).value = `${player.collapse.inputM}`;\n    (getId('collapseStarsInput') as HTMLInputElement).value = `${player.collapse.inputS}`;\n    getId('vacuumState').textContent = `${player.inflation.vacuum}`;\n    getId('stageSelect').classList.remove('active');\n    for (let i = 0; i < playerStart.toggles.normal.length; i++) { toggleSwap(i, 'normal'); }\n    for (let i = 0; i < playerStart.toggles.auto.length; i++) { toggleSwap(i, 'auto'); }\n    toggleBuy(); //Also numbersUpdate\n\n    changeIntervals(false, 'all'); //Unpause game and set input values\n};\n\nreLoad(true); //This will start the game\n\n{\n    /* Global */\n    const { mobileDevice, screenReader } = global;\n    document.addEventListener('keydown', (key: KeyboardEvent) => detectHotkey(key));\n    for (let i = 0; i < playerStart.toggles.normal.length; i++) {\n        getId(`toggle${i}`).addEventListener('click', () => toggleSwap(i, 'normal', true));\n    }\n    for (let i = 0; i < specialHTML.longestBuilding; i++) {\n        getId(`toggleBuilding${i}`).addEventListener('click', () => toggleSwap(i, 'buildings', true));\n    }\n    for (let i = 0; i < playerStart.toggles.auto.length; i++) {\n        getId(`toggleAuto${i}`).addEventListener('click', () => toggleSwap(i, 'auto', true));\n    }\n\n    /* Stage tab */\n    for (let i = 1; i < specialHTML.longestBuilding; i++) {\n        getId(`building${i}Btn`).addEventListener('click', () => buyBuilding(i));\n    }\n    for (let i = 0; i < specialHTML.longestUpgrade; i++) {\n        const image = getId(`upgrade${i + 1}`) as HTMLInputElement;\n        if (!mobileDevice) {\n            image.addEventListener('mouseover', () => getUpgradeDescription(i, 'auto', 'upgrades'));\n            image.addEventListener('click', () => buyUpgrades(i, 'auto', 'upgrades'));\n        } else {\n            image.addEventListener('touchstart', () => getUpgradeDescription(i, 'auto', 'upgrades'));\n            image.addEventListener('touchend', () => buyUpgrades(i, 'auto', 'upgrades'));\n        }\n        if (screenReader) { image.addEventListener('focus', () => getUpgradeDescription(i, 'auto', 'upgrades')); }\n    }\n    getId('stageReset').addEventListener('click', () => { void stageAsyncReset(); });\n    getId('reset1Button').addEventListener('click', () => {\n        switch (player.stage.active) {\n            case 1:\n                void dischargeAsyncReset();\n                break;\n            case 2:\n                void vaporizationAsyncReset();\n                break;\n            case 3:\n                void rankAsyncReset();\n                break;\n            case 4:\n                void collapseAsyncReset();\n        }\n    });\n    getId('buy1x').addEventListener('click', () => toggleBuy('1'));\n    getId('buyAny').addEventListener('click', () => toggleBuy('any'));\n    getId('buyAnyInput').addEventListener('blur', () => toggleBuy('any'));\n    getId('buyMax').addEventListener('click', () => toggleBuy('max'));\n    getId('buyStrict').addEventListener('click', () => toggleBuy('strict'));\n\n    getId('vacuumSwitch').addEventListener('click', switchVacuum);\n\n    /* Research tab */\n    for (let i = 0; i < specialHTML.longestResearch; i++) {\n        const image = getId(`research${i + 1}Image`) as HTMLInputElement;\n        if (!mobileDevice) {\n            image.addEventListener('mouseover', () => getUpgradeDescription(i, 'auto', 'researches'));\n            image.addEventListener('click', () => buyUpgrades(i, 'auto', 'researches'));\n        } else {\n            image.addEventListener('touchstart', () => getUpgradeDescription(i, 'auto', 'researches'));\n            image.addEventListener('touchend', () => buyUpgrades(i, 'auto', 'researches'));\n        }\n        if (screenReader) { image.addEventListener('focus', () => getUpgradeDescription(i, 'auto', 'researches')); }\n    }\n    for (let i = 0; i < specialHTML.longestResearchExtra; i++) {\n        const image = getId(`researchExtra${i + 1}Image`) as HTMLInputElement;\n        if (!mobileDevice) {\n            image.addEventListener('mouseover', () => getUpgradeDescription(i, 'auto', 'researchesExtra'));\n            image.addEventListener('click', () => buyUpgrades(i, 'auto', 'researchesExtra'));\n        } else {\n            image.addEventListener('touchstart', () => getUpgradeDescription(i, 'auto', 'researchesExtra'));\n            image.addEventListener('touchend', () => buyUpgrades(i, 'auto', 'researchesExtra'));\n        }\n        if (screenReader) { image.addEventListener('focus', () => getUpgradeDescription(i, 'auto', 'researchesExtra')); }\n    }\n    for (let i = 0; i < global.researchesAutoInfo.startCost.length; i++) {\n        const image = getId(`researchAuto${i + 1}Image`) as HTMLInputElement;\n        if (!mobileDevice) {\n            image.addEventListener('mouseover', () => getUpgradeDescription(i, 'auto', 'researchesAuto'));\n            image.addEventListener('click', () => buyUpgrades(i, 'auto', 'researchesAuto'));\n        } else {\n            image.addEventListener('touchstart', () => getUpgradeDescription(i, 'auto', 'researchesAuto'));\n            image.addEventListener('touchend', () => buyUpgrades(i, 'auto', 'researchesAuto'));\n        }\n        if (screenReader) { image.addEventListener('focus', () => getUpgradeDescription(i, 'auto', 'researchesAuto')); }\n    }\n    {\n        const image = getId('ASRImage') as HTMLInputElement;\n        if (!mobileDevice) {\n            image.addEventListener('mouseover', () => getUpgradeDescription(0, 'auto', 'ASR'));\n            image.addEventListener('click', () => buyUpgrades(0, 'auto', 'ASR'));\n        } else {\n            image.addEventListener('touchstart', () => getUpgradeDescription(0, 'auto', 'ASR'));\n            image.addEventListener('touchend', () => buyUpgrades(0, 'auto', 'ASR'));\n        }\n        if (screenReader) { image.addEventListener('focus', () => getUpgradeDescription(0, 'auto', 'ASR')); }\n    }\n\n    getId('toggleAuto8').addEventListener('click', () => autoElementsSet());\n    for (let i = 1; i < global.elementsInfo.startCost.length; i++) {\n        const image = getId(`element${i}`) as HTMLInputElement;\n        if (!mobileDevice) {\n            image.addEventListener('mouseover', () => getUpgradeDescription(i, 4, 'elements'));\n            image.addEventListener('click', () => buyUpgrades(i, 4, 'elements'));\n        } else {\n            image.addEventListener('touchstart', () => getUpgradeDescription(i, 4, 'elements'));\n            image.addEventListener('touchend', () => buyUpgrades(i, 4, 'elements'));\n        }\n        if (screenReader) { image.addEventListener('focus', () => getUpgradeDescription(i, 4, 'elements')); }\n    }\n\n    /* Strangeness tab */\n    for (let s = 1; s < global.strangenessInfo.length; s++) {\n        for (let i = 0; i < global.strangenessInfo[s].startCost.length; i++) {\n            const image = getId(`strange${i + 1}Stage${s}Image`) as HTMLInputElement;\n            if (!mobileDevice) {\n                image.addEventListener('mouseover', () => getUpgradeDescription(i, s, 'strangeness'));\n                image.addEventListener('click', () => buyUpgrades(i, s, 'strangeness'));\n            } else {\n                image.addEventListener('touchstart', () => getUpgradeDescription(i, s, 'strangeness'));\n                image.addEventListener('touchend', () => buyUpgrades(i, s, 'strangeness'));\n            }\n            if (screenReader) { image.addEventListener('focus', () => getUpgradeDescription(i, s, 'strangeness')); }\n        }\n    }\n    for (let s = 1; s < global.milestonesInfo.length; s++) {\n        for (let i = 0; i < global.milestonesInfo[s].need.length; i++) {\n            getId(`milestone${i + 1}Stage${s}`).addEventListener('mouseover', () => getUpgradeDescription(i, s, 'milestones'));\n            if (screenReader) { getId(`milestone${i + 1}Stage${s}`).addEventListener('focus', () => getUpgradeDescription(i, s, 'milestones')); }\n        }\n    }\n\n    /* Settings tab */\n    getId('vaporizationInput').addEventListener('blur', () => {\n        const input = getId('vaporizationInput') as HTMLInputElement;\n        input.value = format(Math.max(Number(input.value), 0), { type: 'input' });\n        player.vaporization.input = Number(input.value);\n    });\n    getId('collapseMassInput').addEventListener('blur', () => {\n        const input = getId('collapseMassInput') as HTMLInputElement;\n        input.value = format(Math.max(Number(input.value), 1), { type: 'input' });\n        player.collapse.inputM = Number(input.value);\n    });\n    getId('collapseStarsInput').addEventListener('blur', () => {\n        const input = getId('collapseStarsInput') as HTMLInputElement;\n        input.value = format(Math.max(Number(input.value), 0), { type: 'input' });\n        player.collapse.inputS = Number(input.value);\n    });\n    getId('stageInput').addEventListener('blur', () => {\n        const input = getId('stageInput') as HTMLInputElement;\n        input.value = format(Math.max(Number(input.value), 1), { type: 'input' });\n        player.stage.input = Number(input.value);\n    });\n    getId('versionButton').addEventListener('click', () => {\n        buildVersionInfo();\n        getId('versionInfo').style.display = '';\n    });\n    getId('save').addEventListener('click', () => { void saveLoad('save'); });\n    getId('file').addEventListener('change', () => { void saveLoad('load'); });\n    getId('export').addEventListener('click', () => { void saveLoad('export'); });\n    getId('delete').addEventListener('click', () => { void saveLoad('delete'); });\n    getId('switchTheme0').addEventListener('click', () => setTheme(0, true));\n    for (let i = 1; i < global.stageInfo.word.length; i++) {\n        getId(`switchTheme${i}`).addEventListener('click', () => setTheme(i));\n    }\n    getId('toggleAuto5').addEventListener('click', () => autoUpgradesSet('all'));\n    getId('toggleAuto6').addEventListener('click', () => autoResearchesSet('researches', 'all'));\n    getId('toggleAuto7').addEventListener('click', () => autoResearchesSet('researchesExtra', 'all'));\n    getId('saveFileNameInput').addEventListener('blur', () => changeSaveFileName());\n    getId('saveFileHoverButton').addEventListener('mouseover', () => {\n        getId('saveFileNamePreview').textContent = replaceSaveFileSpecials();\n    });\n    getId('saveFileHoverButton').addEventListener('focus', () => {\n        getId('saveFileNamePreview').textContent = replaceSaveFileSpecials();\n    });\n    getId('mainInterval').addEventListener('blur', () => changeIntervals(false, 'main'));\n    getId('numbersInterval').addEventListener('blur', () => changeIntervals(false, 'numbers'));\n    getId('visualInterval').addEventListener('blur', () => changeIntervals(false, 'visual'));\n    getId('autoSaveInterval').addEventListener('blur', () => changeIntervals(false, 'autoSave'));\n    getId('thousandSeparator').addEventListener('blur', () => changeFormat(false));\n    getId('decimalPoint').addEventListener('blur', () => changeFormat(true));\n    getId('pauseGame').addEventListener('click', () => { void pauseGame(); });\n    getId('offlineWarp').addEventListener('click', () => { void timeWarp(); });\n    getId('fontSizeToggle').addEventListener('click', () => changeFontSize(true));\n    getId('customFontSize').addEventListener('blur', () => changeFontSize(false, true));\n\n    /* Only for phones */\n    getId('mobileDeviceToggle').addEventListener('click', () => mobileDeviceSupport(true));\n\n    /* Only for screen readers */\n    getId('screenReaderToggle').addEventListener('click', () => screenReaderSupport(true));\n    if (screenReader) {\n        for (let i = 0; i < specialHTML.longestBuilding; i++) {\n            getId(`SRBuild${i}`).addEventListener('click', () => screenReaderSupport(i, 'button', 'building'));\n        }\n        getId('SRExtra0').addEventListener('click', () => screenReaderSupport(0, 'button', 'resource'));\n        getId('SRExtra1').addEventListener('click', () => screenReaderSupport(1, 'button', 'resource'));\n        getId('SRInfo0').addEventListener('click', () => screenReaderSupport(0, 'button', 'information'));\n    }\n\n    /* Footer */\n    getId('hideToggle').addEventListener('click', hideFooter);\n    const tabList = global.tabList.tabs.slice(0, -1);\n    for (const tabText of tabList) {\n        getId(`${tabText}TabBtn`).addEventListener('click', () => switchTab(tabText));\n        for (const subtabText of global.tabList[tabText + 'Subtabs' as 'stageSubtabs']) {\n            getId(`${tabText}SubtabBtn${subtabText}`).addEventListener('click', () => switchTab(tabText, subtabText));\n        }\n    }\n    for (let i = 1; i < global.stageInfo.word.length; i++) {\n        getId(`${global.stageInfo.word[i]}Switch`).addEventListener('click', () => switchStage(i));\n    }\n    getId('currentSwitch').addEventListener('click', () => getId('stageSelect').classList.add('active'));\n}\n\nconsole.timeEnd('Game loaded in'); //Started in Player.ts\n\nfunction changeIntervals(pause = false, input = '') {\n    const { intervals } = player;\n    const { intervalsId } = global;\n    if (input !== '') {\n        const mainInput = getId('mainInterval') as HTMLInputElement;\n        const numberInput = getId('numbersInterval') as HTMLInputElement;\n        const visualInput = getId('visualInterval') as HTMLInputElement;\n        const autoSaveInput = getId('autoSaveInterval') as HTMLInputElement;\n        if (input === 'main') {\n            intervals.main = Math.min(Math.max(Math.trunc(Number(mainInput.value)), 20), 1000);\n            if (intervals.main > intervals.numbers) { intervals.numbers = intervals.main; }\n        } else if (input === 'numbers') {\n            intervals.numbers = Math.min(Math.max(Math.trunc(Number(numberInput.value)), 20), 1000);\n            if (intervals.numbers < intervals.main) { intervals.main = intervals.numbers; }\n        } else if (input === 'visual') {\n            intervals.visual = Math.min(Math.max(Math.trunc(Number(visualInput.value) * 10) / 10, 0.2), 10);\n        } else if (input === 'autoSave') {\n            intervals.autoSave = Math.min(Math.max(Math.trunc(Number(autoSaveInput.value)), 10), 1800);\n        }\n        mainInput.value = `${intervals.main}`;\n        numberInput.value = `${intervals.numbers}`;\n        visualInput.value = `${intervals.visual}`;\n        autoSaveInput.value = `${intervals.autoSave}`;\n    }\n    clearInterval(intervalsId.main);\n    clearInterval(intervalsId.numbers);\n    clearInterval(intervalsId.visual);\n    clearInterval(intervalsId.autoSave);\n    if (!pause) {\n        intervalsId.main = setInterval(timeUpdate, intervals.main);\n        intervalsId.numbers = setInterval(numbersUpdate, intervals.numbers);\n        intervalsId.visual = setInterval(visualUpdate, intervals.visual * 1000);\n        intervalsId.autoSave = setInterval(saveLoad, intervals.autoSave * 1000, 'save');\n    }\n}\n\nasync function saveLoad(type: string) {\n    switch (type) {\n        case 'load': {\n            const id = getId('file') as HTMLInputElement;\n            const saveFile = id.files as FileList;\n            const text = await saveFile[0].text();\n\n            try {\n                const load = JSON.parse(atob(text));\n                const versionCheck = Object.hasOwn(load, 'player') ? load.player.version : load.version;\n                changeIntervals(true);\n                updatePlayer(load);\n\n                const { time } = player;\n                const offlineTime = Date.now() - time.updated;\n                const maxOffline = maxOfflineTime();\n                time.updated = Date.now();\n                global.timeSpecial.lastSave += offlineTime;\n                time.offline = Math.min(time.offline + offlineTime / 1000, maxOffline);\n                player.stage.export = Math.min(player.stage.export + offlineTime / 1000, maxExportTime());\n                Alert(`This save is ${format(offlineTime, { type: 'time' })} old${offlineTime + (time.offline * 1000) > maxOffline * 1000 ? ', storage is maxed' : ''}.${versionCheck !== player.version ? `\\nAlso save file version is ${versionCheck}, while game version is ${player.version}` : `\\nSave file version is ${player.version}`}`);\n                global.timeSpecial.lastSave = 0;\n                getId('isSaved').textContent = 'Imported';\n\n                reLoad();\n            } catch (error) {\n                changeIntervals(); //Unpause game, in case there was an issue;\n                Alert(`Incorrect save file format.\\nFull error is: '${error}'`);\n            } finally {\n                id.value = ''; //Remove inputed file\n            }\n            return;\n        }\n        case 'save': {\n            try {\n                const save = btoa(JSON.stringify(player));\n                localStorage.setItem('save', save);\n                clearInterval(global.intervalsId.autoSave);\n                global.intervalsId.autoSave = setInterval(saveLoad, player.intervals.autoSave * 1000, 'save');\n                getId('isSaved').textContent = 'Saved';\n                global.timeSpecial.lastSave = 0;\n            } catch (error) {\n                Alert(`Failed to save file.\\nFull error is: '${error}'`);\n            }\n            return;\n        }\n        case 'export': {\n            if (player.strangeness[4][7] >= 1) {\n                const multiplier = exportMultiplier();\n                const strangeGain = Math.floor(player.stage.export * multiplier / 86400);\n                player.strange[0].current += strangeGain;\n                player.strange[0].total += strangeGain;\n                player.stage.export -= strangeGain * 86400 / multiplier;\n            }\n\n            const save = btoa(JSON.stringify(player)); //This way in case of errors\n            const a = document.createElement('a');\n            a.href = 'data:text/plain;charset=utf-8,' + save;\n            a.download = replaceSaveFileSpecials();\n            a.click();\n            return;\n        }\n        case 'delete': {\n            const ok = await Prompt(\"This will truly delete your save file and clear local storage!\\nType 'delete' to confirm.\");\n            if (ok?.toLowerCase() === 'delete') {\n                changeIntervals(true);\n                localStorage.clear();\n                Alert('Game will auto refresh. If not then do it manually');\n                window.location.reload();\n            } else if (ok !== null && ok !== '') {\n                Alert(`You wrote '${ok}', so save file wasn't deleted`);\n            }\n        }\n    }\n}\n\nconst changeSaveFileName = () => {\n    const input = getId('saveFileNameInput') as HTMLInputElement;\n    const newValue = input.value.length === 0 ? playerStart.fileName : input.value.replaceAll(/[\\\\/:*?\"<>|]/g, '_');\n\n    try {\n        btoa(newValue); //Test for any illegal characters\n        player.fileName = newValue;\n        input.value = newValue;\n    } catch (error) {\n        Alert(`Save file name is not allowed.\\nFull error is: '${error}'`);\n    }\n};\n\nconst replaceSaveFileSpecials = (): string => {\n    let realName = player.fileName;\n    const special = [\n        '[stage]',\n        '[true]',\n        '[date]',\n        '[time]'\n    ];\n    const replaceWith = [\n        global.stageInfo.word[player.stage.active],\n        global.stageInfo.word[player.stage.true],\n        getDate('dateDMY'),\n        getDate('timeHMS')\n    ];\n    for (let i = 0; i < special.length; i++) {\n        realName = realName.replaceAll(special[i], replaceWith[i]);\n    }\n    return realName + '.txt';\n};\n\nconst getDate = (type: 'dateDMY' | 'timeHMS'): string => {\n    const current = new Date();\n    switch (type) {\n        case 'dateDMY': {\n            let day = `${current.getDate()}`;\n            if (day.length === 1) { day = '0' + day; }\n            let month = `${current.getMonth() + 1}`;\n            if (month.length === 1) { month = '0' + month; }\n            return `${day}.${month}.${current.getFullYear()}`;\n        }\n        case 'timeHMS': {\n            let minutes = `${current.getMinutes()}`;\n            if (minutes.length === 1) { minutes = '0' + minutes; }\n            let seconds = `${current.getSeconds()}`;\n            if (seconds.length === 1) { seconds = '0' + seconds; }\n            return `${current.getHours()}-${minutes}-${seconds}`;\n        }\n    }\n};\n\nexport const timeWarp = async() => {\n    const { time } = player;\n    if (time.offline <= 0) { return Alert(\"Can't Warp without any Offline time\"); }\n\n    const warpTime = Math.min(Number(await Prompt(`How many seconds do you wish to Warp forward? Current Offline time is ${format(time.offline * 1000, { type: 'time' })} (will be used without any loss, 1 minute at a time)\\nBigger number will result in more lag`)), time.offline);\n    if (warpTime <= 0 || !isFinite(warpTime)) { return; }\n\n    time.offline -= warpTime;\n    timeUpdate(warpTime);\n};\n\nconst pauseGame = async() => {\n    changeIntervals(true);\n    await AlertWait(\"Game is currently paused. Press 'confirm' to unpause it. Time spend here will be moved into offline storage\");\n\n    const { time } = player;\n    const maxOffline = maxOfflineTime();\n    const offlineTime = Date.now() - time.updated;\n    time.updated = Date.now();\n    global.timeSpecial.lastSave += offlineTime;\n    time.offline = Math.min(time.offline + offlineTime / 1000, maxOffline);\n    player.stage.export = Math.min(player.stage.export + offlineTime / 1000, maxExportTime());\n\n    changeIntervals();\n};\n"],
  "mappings": "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",
  "names": ["overlimit", "number", "technical", "result", "numbers", "array", "i", "power", "base", "compare", "allEqual", "settings", "left", "right", "check", "difference", "after", "digits", "negative", "base10", "target", "tooSmall", "test", "_a", "_b", "_c", "player", "exponent", "formated", "index", "convert", "Limit", "LimitAlt", "Limit_default", "checkTab", "tab", "subtab", "player", "global", "checkBuilding", "index", "stageIndex", "checkUpgrade", "upgrade", "type", "Limit_default", "allowedToBeReset", "check", "milestoneCheck", "need", "award", "reward", "getUpgradeDescription", "reset", "type", "stageIndex", "player", "global", "elements", "i", "visualUpdateUpgrades", "autoElementsSet", "s", "buildings", "cloneArray", "playerStart", "allowedToBeReset", "upgrades", "autoUpgradesSet", "researches", "calculateResearchCost", "autoResearchesSet", "researchesExtra", "visualUpdate", "buildingsStart", "updateRankInfo", "collapse", "calculateMaxLevel", "building", "assignEnergy", "assignBuildingInformation", "numbersUpdate", "assignBuildingInformation", "strangeInfo", "upgradesInfo", "researchesInfo", "researchesExtraInfo", "inflationInfo", "global", "buildings", "upgrades", "researches", "researchesExtra", "strangeness", "player", "producing", "strangeQuarks", "activeAll", "vacuum", "discharge", "v", "totalMultiplier", "listForMult5", "prod5Number", "Limit_default", "listForRadiation", "radiationProd", "listForMult4", "prod4Number", "listForMult3", "prod3Number", "listForMult2", "listForMult1", "dischargeBoost", "current5", "current4", "current3", "current2", "prod2Number", "effective", "old", "prod1Number", "elements", "capGain", "stars", "starEffect", "listForTotal", "totalNumber", "clusterBoost", "buyBuilding", "index", "stageIndex", "auto", "checkBuilding", "buildingsInfo", "building", "galaxy", "convert", "extra", "stageExtra", "keep", "currency", "cloneArray", "cost", "calculateBuildingsCost", "getId", "howMany", "canAfford", "total", "increase", "firstCost", "alreadyBought", "totalBefore", "maxAfford", "reset", "numbersUpdate", "assignEnergy", "milestoneCheck", "playEvent", "format", "dischargeInfo", "energyType", "i", "_a", "calculateGainedBuildings", "get", "time", "add", "stageGet", "buyUpgrades", "upgrade", "type", "checkUpgrade", "pointer", "calculateMaxLevel", "stageCheck", "calculateResearchCost", "elementsInfo", "stageNoReset", "dischargeResetCheck", "visualUpdateUpgrades", "getUpgradeDescription", "research", "digits", "autoResearchesSet", "autoUpgradesSet", "which", "s", "startCost", "a", "b", "autoUpgradesBuy", "autoResearchesBuy", "sort", "bought", "autoElementsSet", "autoElementsBuy", "toggleSwap", "number", "change", "_b", "_c", "_d", "toggles", "toggle", "active", "status", "extraText", "toggleBuy", "shop", "input", "strict", "stageResetCheck", "allowed", "stageReset", "stageAsyncReset", "stage", "ok", "Confirm", "Alert", "researchesAuto", "resetThese", "increased", "gain", "switchStage", "assignDischargeInformation", "dischargeReset", "dischargeAsyncReset", "assignVaporizationInformation", "cloudsGet", "clouds", "check", "calculate", "vaporizationResetCheck", "vaporizationReset", "vaporizationAsyncReset", "vaporization", "rankResetCheck", "requirement", "rankReset", "rankAsyncReset", "updateRankInfo", "assignCollapseInformation", "starCheck", "massGain", "collapseResetCheck", "collapseInfo", "collapse", "nova", "canIncrease", "collapseReset", "collapseAsyncReset", "message", "specialHTML", "setTheme", "themeNumber", "initial", "player", "global", "switchTheme", "theme", "body", "dropStat", "waterStat", "getId", "text", "Alert", "AlertWait", "resolve", "blocker", "confirm", "key", "button", "close", "Confirm", "cancel", "yes", "no", "result", "Prompt", "input", "hideFooter", "footer", "hide", "toggle", "arrow", "numbersUpdate", "visualUpdate", "mobileDeviceSupport", "change", "_a", "turnOn", "screenReaderSupport", "info", "type", "special", "stageCheck", "index", "invText", "buildingsInfo", "active", "buildings", "extra", "Limit_default", "format", "assignDischargeInformation", "assignVaporizationInformation", "assignCollapseInformation", "activeStages", "i", "changeFontSize", "inputChange", "enable", "size", "changeFormat", "point", "htmlInput", "assignWithNoMove", "html", "playEvent", "event", "prepareVacuum", "buildings", "playerStart", "buildingsInfo", "upgradesInfo", "researchesInfo", "researchesExtraInfo", "strangenessInfo", "global", "player", "specialHTML", "maxBuildings", "upgrades1Cost", "researches1Cost", "researches1Scaling", "strangeness1Cost", "strangeness1Scaling", "strangeness2Cost", "strangeness2Scaling", "strangeness3Cost", "strangeness3Scaling", "strangeness4Cost", "strangeness4Scaling", "strangeness5Cost", "strangeness5Scaling", "getId", "stageWord", "s", "cloneArray", "switchVacuum", "Alert", "milestones", "count", "Confirm", "AlertWait", "reset", "stageCheck", "updateUnknown", "div", "text", "switchTab", "tab", "subtab", "oldTab", "global", "getId", "inside", "subtabAmount", "checkTab", "oldSubtab", "visualUpdate", "numbersUpdate", "maxOfflineTime", "player", "maxExportTime", "exportMultiplier", "timeUpdate", "timeWarp", "toggles", "vacuum", "passedSeconds", "extraTime", "time", "buildingsInfo", "automatization", "assignBuildingInformation", "stageResetCheck", "s", "collapseResetCheck", "rankResetCheck", "vaporizationResetCheck", "dischargeResetCheck", "autoElementsBuy", "autoResearchesBuy", "autoUpgradesBuy", "i", "buyBuilding", "calculateGainedBuildings", "research", "active", "buildings", "Limit_default", "format", "stars", "howMany", "strict", "trueCountID", "assignWithNoMove", "costName", "currency", "e", "extra", "cloneArray", "totalCost", "totalBuy", "cost", "calculateBuildingsCost", "increase", "firstCost", "alreadyBought", "totalBefore", "maxAfford", "assignDischargeInformation", "effect", "assignVaporizationInformation", "collapse", "collapseInfo", "assignCollapseInformation", "getUpgradeDescription", "stageBoost", "strange", "moles", "mass", "starEffect", "stage", "activeAll", "playEvent", "researchAuto0", "ASR", "discharge", "upgrades", "nova", "nebula", "cluster", "grid", "bound", "strange5", "researchesAuto", "strangeness", "updateUnknown", "index", "stageIndex", "type", "pointer", "researchesAutoInfo", "ASRInfo", "autoIndex", "elementsInfo", "stageText", "level", "visualUpdateUpgrades", "maxHTML", "progress", "upgradeHTML", "color", "max", "input", "settings", "_a", "inputAbs", "digits", "endValue", "precision", "stageCheck", "stageInfo", "getClass", "specialHTML", "text", "autoUpgradesSet", "autoResearchesSet", "autoElementsSet", "calculateMaxLevel", "showU", "showR", "showRE", "showF", "buildingHTML", "image", "toggleSwap", "researchHTML", "main", "researchExtraHTML", "researchExtraDivHTML", "footerStatsHTML", "updateRankInfo", "stageWord", "body", "switchTheme", "name", "accretionInfo", "rank", "player", "global", "Limit_default", "post", "effect", "stars", "blackHoles", "stage", "gain", "format", "index", "cloneArray", "array", "deepClone", "toClone", "isArray", "value", "i", "check", "createArray", "amount", "special", "s", "upgradeType", "pointer", "playerStart", "checkPlayerValues", "upgrades", "researches", "researchesMax", "researchesExtra", "researchesExtraMax", "researchesAuto", "researchesAutoMax", "elements", "strangeness", "strangenessMax", "updatePlayer", "load", "_a", "a", "oldB", "oldU", "oldR", "oldE", "buildVersionInfo", "changeVersion", "version", "text", "getId", "detectHotkey", "check", "checkEl", "shift", "isNumber", "key", "player", "numberKey", "buyBuilding", "stringKey", "stageAsyncReset", "global", "dischargeAsyncReset", "vaporizationAsyncReset", "rankAsyncReset", "collapseAsyncReset", "timeWarp", "activeAll", "index", "switchStage", "tabs", "checkTab", "switchTab", "subtabs", "getId", "id", "getClass", "idCollection", "reLoad", "firstLoad", "save", "load", "updatePlayer", "time", "player", "offlineTime", "maxOffline", "maxOfflineTime", "global", "maxExportTime", "Alert", "format", "mobileDeviceSupport", "screenReaderSupport", "changeFontSize", "theme", "setTheme", "prepareVacuum", "stageCheck", "checkPlayerValues", "i", "playerStart", "toggleSwap", "toggleBuy", "changeIntervals", "mobileDevice", "screenReader", "key", "detectHotkey", "specialHTML", "buyBuilding", "image", "getUpgradeDescription", "buyUpgrades", "stageAsyncReset", "dischargeAsyncReset", "vaporizationAsyncReset", "rankAsyncReset", "collapseAsyncReset", "switchVacuum", "autoElementsSet", "input", "buildVersionInfo", "saveLoad", "autoUpgradesSet", "autoResearchesSet", "changeSaveFileName", "replaceSaveFileSpecials", "changeFormat", "pauseGame", "timeWarp", "hideFooter", "tabList", "tabText", "switchTab", "subtabText", "switchStage", "pause", "intervals", "intervalsId", "mainInput", "numberInput", "visualInput", "autoSaveInput", "timeUpdate", "numbersUpdate", "visualUpdate", "type", "text", "versionCheck", "error", "multiplier", "exportMultiplier", "strangeGain", "a", "ok", "Prompt", "newValue", "realName", "special", "replaceWith", "getDate", "current", "day", "month", "minutes", "seconds", "warpTime", "AlertWait"]
}
