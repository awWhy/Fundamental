{
  "version": 3,
  "sources": ["Source_TS/Limit.ts", "Source_TS/Check.ts", "Source_TS/Vacuum.ts", "Source_TS/Update.ts", "Source_TS/Reset.ts", "Source_TS/Stage.ts", "Source_TS/Special.ts", "Source_TS/Player.ts", "Source_TS/Hotkeys.ts", "Source_TS/Main.ts"],
  "sourcesContent": ["import { player } from './Player';\n\n/* This is version has all settings (and other stuff) removed (for better speed) */\nexport const overlimit = {\n    Limit: (number: string | number | [number, number]) => {\n        const { technical } = overlimit;\n        let result = technical.convert(number);\n\n        return {\n            plus: function(...numbers: Array<string | number | [number, number]>) {\n                if (numbers.length < 1) { return this; }\n                const array = technical.convertAll(numbers);\n\n                for (let i = 0; i < array.length; i++) {\n                    result = technical.add(result, array[i]);\n                }\n\n                return this;\n            },\n            minus: function(...numbers: Array<string | number | [number, number]>) {\n                if (numbers.length < 1) { return this; }\n                const array = technical.convertAll(numbers);\n\n                for (let i = 0; i < array.length; i++) {\n                    result = technical.sub(result, array[i]);\n                }\n\n                return this;\n            },\n            multiply: function(...numbers: Array<string | number | [number, number]>) {\n                if (numbers.length < 1) { return this; }\n                const array = technical.convertAll(numbers);\n\n                for (let i = 0; i < array.length; i++) {\n                    result = technical.mult(result, array[i]);\n                }\n\n                return this;\n            },\n            divide: function(...numbers: Array<string | number | [number, number]>) {\n                if (numbers.length < 1) { return this; }\n                const array = technical.convertAll(numbers);\n\n                for (let i = 0; i < array.length; i++) {\n                    result = technical.div(result, array[i]);\n                }\n\n                return this;\n            },\n            power: function(power: number) {\n                result = technical.pow(result, power);\n                return this;\n            },\n            log: function(base = 2.718281828459045) {\n                result = technical.log(result, base);\n                return this;\n            },\n            abs: function() {\n                result[0] = Math.abs(result[0]);\n                return this;\n            },\n            trunc: function() {\n                result = technical.trunc(result);\n                return this;\n            },\n            floor: function() {\n                result = technical.floor(result);\n                return this;\n            },\n            ceil: function() {\n                result = technical.ceil(result);\n                return this;\n            },\n            round: function() {\n                result = technical.round(result);\n                return this;\n            },\n            isNaN: (): boolean => isNaN(result[0]) || isNaN(result[1]),\n            isFinite: (): boolean => isFinite(result[0]) && isFinite(result[1]),\n            lessThan: (compare: string | number | [number, number]): boolean => technical.less(result, technical.convert(compare)),\n            lessOrEqual: (compare: string | number | [number, number]): boolean => technical.lessOrEqual(result, technical.convert(compare)),\n            moreThan: (compare: string | number | [number, number]): boolean => technical.more(result, technical.convert(compare)),\n            moreOrEqual: (compare: string | number | [number, number]): boolean => technical.moreOrEqual(result, technical.convert(compare)),\n            notEqual: (compare: string | number | [number, number]): boolean => technical.notEqual(result, technical.convert(compare)),\n            equal: (...compare: Array<string | number | [number, number]>): boolean => {\n                if (compare.length < 1) { return true; }\n                const array = technical.convertAll(compare);\n\n                let allEqual = technical.equal(result, array[0]);\n                for (let i = 1; i < array.length; i++) {\n                    if (!allEqual) { return false; }\n                    allEqual = technical.equal(array[i - 1], array[i]);\n                }\n\n                return allEqual;\n            },\n            max: function(...compare: Array<string | number | [number, number]>) {\n                if (compare.length < 1) { return this; }\n                const array = technical.convertAll(compare);\n\n                for (let i = 0; i < array.length; i++) {\n                    if (isNaN(array[i][0])) {\n                        result = [NaN, NaN];\n                        break;\n                    }\n\n                    if (technical.less(result, array[i])) { result = array[i]; }\n                }\n\n                return this;\n            },\n            min: function(...compare: Array<string | number | [number, number]>) {\n                if (compare.length < 1) { return this; }\n                const array = technical.convertAll(compare);\n\n                for (let i = 0; i < array.length; i++) {\n                    if (isNaN(array[i][0])) {\n                        result = [NaN, NaN];\n                        break;\n                    }\n\n                    if (technical.more(result, array[i])) { result = array[i]; }\n                }\n\n                return this;\n            },\n            format: (settings = {} as { digits?: number, type?: 'number' | 'input', padding?: boolean }): string => technical.format(result, settings),\n            toNumber: (): number => Number(technical.convertBack(result)),\n            toString: (): string => technical.convertBack(result),\n            toArray: (): [number, number] => technical.prepare(result)\n        };\n    },\n    LimitAlt: {\n        abs: (number: string): string => number[0] === '-' ? number.substring(1) : number,\n        isNaN: (number: string): boolean => number.includes('NaN'),\n        isFinite: (number: string): boolean => !number.includes('Infinity') && !number.includes('NaN'),\n        clone: (number: [number, number]): [number, number] => [number[0], number[1]],\n        /* Sort is WIP, need to figure out how to add easy to use return function instead of 'descend' (also maybe some optimization) */\n        sort: <sortType extends Array<string | number | [number, number]>>(toSort: sortType, descend = false) => {\n            if (toSort.length < 2) { return; }\n            const numbers = overlimit.technical.convertAll(toSort);\n            const compare = descend ? overlimit.technical.moreOrEqual : overlimit.technical.lessOrEqual;\n\n            let main: number[] | number[][] = [[0]];\n            initial:\n            for (let i = 1; i < numbers.length; i++) {\n                const target = main[main.length - 1];\n                if (compare(numbers[i - 1], numbers[i])) {\n                    do {\n                        target.push(i);\n                        i++;\n                        if (i >= numbers.length) { break initial; }\n                    } while (compare(numbers[i - 1], numbers[i]));\n                    main.push([i]);\n                } else {\n                    do {\n                        target.push(i);\n                        i++;\n                        if (i >= numbers.length) {\n                            target.reverse();\n                            break initial;\n                        }\n                    } while (compare(numbers[i], numbers[i - 1]));\n                    target.reverse();\n                    main.push([i]);\n                }\n            }\n\n            const merge = (array: number[][]): number[] | number[][] => {\n                if (array.length === 1) { return array[0]; }\n                let main: number[] | number[][] = [] as number[][];\n\n                let i;\n                for (i = 0; i < array.length - 1; i += 2) {\n                    main.push([]);\n                    const target = main[main.length - 1];\n                    const first = array[i];\n                    const second = array[i + 1];\n                    let f = 0;\n                    let s = 0;\n                    while (f < first.length || s < second.length) {\n                        if (s >= second.length || (f < first.length && compare(numbers[first[f]], numbers[second[s]]))) {\n                            target.push(first[f]);\n                            f++;\n                        } else {\n                            target.push(second[s]);\n                            s++;\n                        }\n                    }\n                }\n                if (i === array.length - 1) { main.push(array[i]); }\n\n                main = merge(main);\n                return main;\n            };\n            main = merge(main) as number[];\n\n            const clone = toSort.slice(0);\n            toSort.length = 0;\n            for (let i = 0; i < clone.length; i++) {\n                toSort.push(clone[main[i]]);\n            }\n        }\n    },\n    technical: {\n        add: (left: [number, number], right: [number, number]): [number, number] => {\n            if (right[0] === 0) { return left; }\n            if (left[0] === 0) { return right; }\n            if (!isFinite(left[0]) || !isFinite(right[0])) {\n                const check = left[0] + right[0]; //Infinity + -Infinity === NaN\n                return isNaN(left[0]) || isNaN(right[0]) || isNaN(check) ? [NaN, NaN] : [check, Infinity];\n            }\n\n            const difference = left[1] - right[1];\n            if (Math.abs(difference) > 15) { return difference > 0 ? left : right; }\n\n            if (difference === 0) {\n                left[0] += right[0];\n            } else if (difference > 0) {\n                left[0] += right[0] / 10 ** difference;\n            } else {\n                right[0] += left[0] / 10 ** (-difference);\n                left = right;\n            }\n\n            const after = Math.abs(left[0]);\n            if (after === 0) {\n                left[1] = 0;\n            } else if (after >= 10) {\n                left[0] /= 10;\n                left[1]++;\n            } else if (after < 1) {\n                const digits = -Math.floor(Math.log10(after));\n                left[0] *= 10 ** digits;\n                left[1] -= digits;\n            }\n\n            left[0] = Math.round(left[0] * 1e14) / 1e14;\n            if (Math.abs(left[0]) === 10) {\n                left[0] = 1;\n                left[1]++;\n            }\n\n            return left;\n        },\n        sub: (left: [number, number], right: [number, number]): [number, number] => {\n            right[0] *= -1; //Easier this way\n            return overlimit.technical.add(left, right);\n        },\n        mult: (left: [number, number], right: [number, number]): [number, number] => {\n            if (left[0] === 0 || right[0] === 0) { return [0, 0]; }\n\n            left[1] += right[1];\n            left[0] *= right[0];\n\n            if (Math.abs(left[0]) >= 10) {\n                left[0] /= 10;\n                left[1]++;\n            }\n\n            left[0] = Math.round(left[0] * 1e14) / 1e14;\n            if (Math.abs(left[0]) === 10) {\n                left[0] = 1;\n                left[1]++;\n            }\n\n            return left;\n        },\n        div: (left: [number, number], right: [number, number]): [number, number] => {\n            if (right[0] === 0) { return [NaN, NaN]; }\n            if (left[0] === 0) { return [0, 0]; }\n\n            left[1] -= right[1];\n            left[0] /= right[0];\n\n            if (Math.abs(left[0]) < 1) {\n                left[0] *= 10;\n                left[1]--;\n            }\n\n            left[0] = Math.round(left[0] * 1e14) / 1e14;\n            if (Math.abs(left[0]) === 10) {\n                left[0] = 1;\n                left[1]++;\n            }\n\n            return left;\n        },\n        pow: (left: [number, number], power: number): [number, number] => {\n            if (power === 0) { return left[0] === 0 || isNaN(left[0]) ? [NaN, NaN] : [1, 0]; }\n            if (left[0] === 0) { return power < 0 ? [NaN, NaN] : [0, 0]; }\n            if (!isFinite(power)) {\n                if (left[1] === 0 && (left[0] === 1 || (left[0] === -1 && !isNaN(power)))) { return [1, 0]; }\n                if ((power === -Infinity && left[1] >= 0) || (power === Infinity && left[1] < 0)) { return [0, 0]; }\n                return isNaN(power) || isNaN(left[0]) ? [NaN, NaN] : [Infinity, Infinity];\n            }\n\n            const negative = left[0] < 0 ? Math.abs(power) % 2 : null;\n            if (negative !== null) { //Complex numbers are not supported\n                if (Math.floor(power) !== power) { return [NaN, NaN]; }\n                left[0] *= -1;\n            }\n\n            const base10 = power * (Math.log10(left[0]) + left[1]);\n            if (!isFinite(base10)) {\n                if (isNaN(left[0])) { return [NaN, NaN]; }\n                if (base10 === -Infinity) { return [0, 0]; }\n                return [negative === 1 ? -Infinity : Infinity, Infinity];\n            }\n\n            const target = Math.floor(base10);\n            left[0] = 10 ** (base10 - target);\n            left[1] = target;\n\n            left[0] = Math.round(left[0] * 1e14) / 1e14;\n            if (left[0] === 10) {\n                left[0] = 1;\n                left[1]++;\n            }\n\n            if (negative === 1) { left[0] *= -1; }\n            return left;\n        },\n        log: (left: [number, number], base: number): [number, number] => {\n            if (Math.abs(base) === 1 || (left[0] === -1 && left[1] === 0)) { return [NaN, NaN]; }\n            if (left[0] === 1 && left[1] === 0) { return [0, 0]; }\n            if (base === 0) { return [NaN, NaN]; } //Order matters (0 ** 0 === 1)\n            if (left[0] === 0) { return isNaN(base) ? [NaN, NaN] : [Math.abs(base) > 1 ? -Infinity : Infinity, Infinity]; }\n            if (!isFinite(base)) { return [NaN, NaN]; } //Order matters (Infinity ** 0 === 1 || Infinity ** -Infinity === 0)\n            if (!isFinite(left[0])) {\n                if (isNaN(left[0]) || left[0] === -Infinity) { return [NaN, NaN]; }\n                return [Math.abs(base) < 1 ? -Infinity : Infinity, Infinity];\n            }\n\n            const negative = left[0] < 0;\n            if (negative) { //Complex numbers are not supported\n                if (base > 0) { return [NaN, NaN]; }\n                left[0] *= -1;\n            }\n\n            const tooSmall = left[1] < 0; //Minor issue with negative power\n            const base10 = Math.log10(Math.abs(Math.log10(left[0]) + left[1]));\n            const target = Math.floor(base10);\n            left[0] = 10 ** (base10 - target);\n            left[1] = target;\n\n            if (tooSmall) { left[0] *= -1; } //Already can be negative\n            if (base !== 10) {\n                left[0] /= Math.log10(Math.abs(base));\n\n                const after = Math.abs(left[0]);\n                if (after < 1 || after >= 10) {\n                    const digits = Math.floor(Math.log10(after));\n                    left[0] /= 10 ** digits;\n                    left[1] += digits;\n                }\n            }\n\n            if (base < 0 || negative) { //Special test for negative numbers\n                if (left[1] < 0) { return [NaN, NaN]; }\n                //Due to floats (1.1 * 100 !== 110), test is done in this way\n                const test = left[1] < 16 ? Math.abs(Math.round(left[0] * 1e14) / 10 ** (14 - left[1])) % 2 : 0;\n                if (base < 0 && !negative) {\n                    if (test !== 0) { return [NaN, NaN]; } //Result must be even\n                } else { //base < 0 && negative\n                    if (test !== 1) { return [NaN, NaN]; } //Result must be uneven\n                }\n            }\n\n            left[0] = Math.round(left[0] * 1e14) / 1e14;\n            if (Math.abs(left[0]) === 10) {\n                left[0] = 1;\n                left[1]++;\n            }\n\n            return left;\n        },\n        less: (left: [number, number], right: [number, number]): boolean => {\n            if (left[0] === 0 || right[0] === 0 || left[1] === right[1]) { return left[0] < right[0]; }\n            if (left[0] > 0 && right[0] > 0) { return left[1] < right[1]; }\n            if (left[0] < 0 && right[0] > 0) { return true; }\n            if (right[0] < 0 && left[0] > 0) { return false; }\n            return left[1] > right[1];\n        },\n        lessOrEqual: (left: [number, number], right: [number, number]): boolean => {\n            if (left[0] === 0 || right[0] === 0 || left[1] === right[1]) { return left[0] <= right[0]; }\n            if (left[0] > 0 && right[0] > 0) { return left[1] < right[1]; }\n            if (left[0] < 0 && right[0] > 0) { return true; }\n            if (right[0] < 0 && left[0] > 0) { return false; }\n            return left[1] > right[1];\n        },\n        more: (left: [number, number], right: [number, number]): boolean => {\n            if (left[0] === 0 || right[0] === 0 || left[1] === right[1]) { return left[0] > right[0]; }\n            if (left[0] > 0 && right[0] > 0) { return left[1] > right[1]; }\n            if (left[0] < 0 && right[0] > 0) { return false; }\n            if (right[0] < 0 && left[0] > 0) { return true; }\n            return left[1] < right[1];\n        },\n        moreOrEqual: (left: [number, number], right: [number, number]): boolean => {\n            if (left[0] === 0 || right[0] === 0 || left[1] === right[1]) { return left[0] >= right[0]; }\n            if (left[0] > 0 && right[0] > 0) { return left[1] > right[1]; }\n            if (left[0] < 0 && right[0] > 0) { return false; }\n            if (right[0] < 0 && left[0] > 0) { return true; }\n            return left[1] < right[1];\n        },\n        equal: (left: [number, number], right: [number, number]): boolean => {\n            return left[1] === right[1] ? left[0] === right[0] : false;\n        },\n        notEqual: (left: [number, number], right: [number, number]): boolean => {\n            return left[1] !== right[1] ? true : left[0] !== right[0];\n        },\n        trunc: (left: [number, number]): [number, number] => {\n            if (left[1] < 0) {\n                return [0, 0];\n            } else if (left[1] === 0) {\n                left[0] = Math.trunc(left[0]);\n            } else if (left[1] <= 14) {\n                left[0] = Math.trunc(left[0] * 10 ** left[1]) / 10 ** left[1];\n            }\n\n            return left;\n        },\n        floor: (left: [number, number]): [number, number] => {\n            if (left[1] < 0) {\n                return [left[0] < 0 ? -1 : 0, 0];\n            } else if (left[1] === 0) {\n                left[0] = Math.floor(left[0]);\n            } else if (left[1] <= 14) {\n                left[0] = Math.floor(left[0] * 10 ** left[1]) / 10 ** left[1];\n            }\n\n            return left;\n        },\n        ceil: (left: [number, number]): [number, number] => {\n            if (left[1] < 0) {\n                return [left[0] < 0 ? 0 : 1, 0];\n            } else if (left[1] === 0) {\n                left[0] = Math.ceil(left[0]);\n            } else if (left[1] <= 14) {\n                left[0] = Math.ceil(left[0] * 10 ** left[1]) / 10 ** left[1];\n            }\n\n            return left;\n        },\n        round: (left: [number, number]): [number, number] => {\n            if (left[1] < 0) {\n                return [left[1] === -1 ? Math.round(left[0] / 10) : 0, 0];\n            } else if (left[1] === 0) {\n                left[0] = Math.round(left[0]);\n            } else if (left[1] <= 14) {\n                left[0] = Math.round(left[0] * 10 ** left[1]) / 10 ** left[1];\n            }\n\n            return left;\n        },\n        format: (left: [number, number], settings: { digits?: number, type?: 'number' | 'input', padding?: boolean }): string => {\n            const [base, power] = left;\n            if (!isFinite(base) || !isFinite(power)) { return overlimit.technical.convertBack(left); }\n\n            //1.23ee123 (-1.23e-e123)\n            if ((power >= 1e4 || power <= -1e4) && settings.type !== 'input') {\n                const digits = settings.digits !== undefined ? settings.digits : 2;\n                let exponent = Math.floor(Math.log10(Math.abs(power)));\n                let result = Math.abs(Math.round(power / 10 ** (exponent - digits)) / 10 ** digits);\n                if (result === 10) {\n                    result = 1;\n                    exponent++;\n                }\n                if (base < 0) { result *= -1; }\n\n                const formated = settings.padding === true ? result.toFixed(digits).replace('.', player.separator[1]) : `${result}`.replace('.', player.separator[1]);\n                return `${formated}e${power < 0 ? '-' : ''}e${exponent}`;\n            }\n\n            //1.23e123\n            if (power >= 6 || power < -3) {\n                const digits = settings.digits !== undefined ? settings.digits : 2;\n                let exponent = power;\n                let result: number | string = Math.round(base * 10 ** digits) / 10 ** digits;\n                if (Math.abs(result) === 10) {\n                    result = 1;\n                    exponent++;\n                }\n\n                result = settings.padding === true ? result.toFixed(digits) : `${result}`;\n                return settings.type !== 'input' ? `${result.replace('.', player.separator[1])}e${exponent}` : `${result}e${exponent}`;\n            }\n\n            //12345\n            const digits = settings.digits !== undefined ? settings.digits : Math.max(4 - Math.max(power, 0), 0);\n            const result = Math.round(base * 10 ** (digits + power)) / 10 ** digits;\n            let formated = digits > 0 && settings.padding === true ? result.toFixed(digits) : `${result}`;\n\n            if (settings.type === 'input') { return formated; }\n            formated = formated.replace('.', player.separator[1]);\n            return result >= 1e3 ? formated.replace(/\\B(?=(\\d{3})+(?!\\d))/, player.separator[0]) : formated;\n        },\n        convert: (number: string | number | [number, number]): [number, number] => {\n            let result: [number, number];\n            if (typeof number !== 'object' || number === null) { //Not an Array\n                if (typeof number !== 'string') { number = `${number}`; } //Using log10 could cause floating point error\n                const index = number.indexOf('e'); //About 5+ times quicker than regex\n                result = index === -1 ? [Number(number), 0] : [Number(number.slice(0, index)), Number(number.slice(index + 1))];\n            } else { result = [number[0], number[1]]; } //Not instant return, because might need a fix\n\n            if (!isFinite(result[0])) { return isNaN(result[0]) ? [NaN, NaN] : [result[0], Infinity]; }\n\n            const after = Math.abs(result[0]);\n            if (after === 0) {\n                return [0, 0];\n            } else if (after < 1 || after >= 10) {\n                const digits = Math.floor(Math.log10(after));\n                result[0] /= 10 ** digits;\n                result[1] += digits;\n\n                if (Math.abs(result[0]) < 1) { //Happens more often than you would think\n                    result[0] *= 10;\n                    result[1]--;\n                }\n            }\n\n            //Float fix always done after exponent, because (11.1 / 10 !== 1.11)\n            result[0] = Math.round(result[0] * 1e14) / 1e14;\n            if (Math.abs(result[0]) === 10) {\n                result[0] = 1;\n                result[1]++;\n            }\n\n            return result;\n        },\n        convertAll: (numbers: Array<string | number | [number, number]>): Array<[number, number]> => {\n            const result = [];\n            const { convert } = overlimit.technical;\n            for (let i = 0; i < numbers.length; i++) {\n                result[i] = convert(numbers[i]);\n            }\n            return result;\n        },\n        prepare: (number: [number, number]): [number, number] => {\n            if (isFinite(number[0]) && isFinite(number[1])) { return number; }\n            if (number[0] === 0 || number[1] === -Infinity) { return [0, 0]; }\n            if (isNaN(number[0]) || isNaN(number[1])) { return [NaN, NaN]; }\n            return [number[0] < 0 ? -Infinity : Infinity, Infinity]; //Base can be non Infinity\n        },\n        convertBack: (number: [number, number]): string => {\n            number = overlimit.technical.prepare(number);\n            if (!isFinite(number[0])) { return `${number[0]}`; }\n            return number[1] === 0 ? `${number[0]}` : `${number[0]}e${number[1]}`;\n        }\n    }\n};\n\nexport const { Limit, LimitAlt } = overlimit;\nexport default Limit;\n", "import Limit from './Limit';\nimport { global, player } from './Player';\n\nexport const checkTab = (tab: string, subtab = null as null | string): boolean => {\n    switch (tab) {\n        case 'stage':\n            if (subtab === 'Advanced') { return player.inflation.vacuum || global.strangeInfo.instability > 0; }\n            return subtab === 'Structures' || subtab === null;\n        case 'Elements':\n        case 'research':\n            if (player.stage.resets < 1 && player.discharge.current < 4) { return false; }\n            if (subtab === 'Elements' || tab === 'Elements') { return global.stageInfo.activeAll.includes(4) && player.upgrades[4][1] === 1; }\n            return subtab === 'Researches' || subtab === null;\n        case 'strangeness':\n            if (player.strange[0].total === 0) { return false; }\n            if (subtab === 'Milestones') { return player.strangeness[5][8] >= 1 || !player.inflation.vacuum; }\n            return subtab === 'Matter' || subtab === null;\n        case 'settings':\n            if (subtab === 'History') { return player.strange[0].total > 0; }\n            return subtab === 'Settings' || subtab === 'Stats' || subtab === null;\n    }\n\n    return false;\n};\n\nexport const checkBuilding = (index: number, stageIndex: number): boolean => {\n    if (global.buildingsInfo.maxActive[stageIndex] < index + 1) { return false; }\n\n    if (stageIndex === 1) {\n        return index >= 1;\n    } else if (stageIndex === 2) {\n        if (index === 6) { return player.strangeness[2][8] >= 1; }\n        return index >= 1;\n    } else if (stageIndex === 3) {\n        if (player.accretion.rank === 0) { return false; }\n        if (index === 1) { return true; }\n        if (index === 2) { return player.upgrades[3][2] === 1; }\n        if (index === 3) { return player.upgrades[3][4] === 1; }\n        if (index === 4) { return player.upgrades[3][8] === 1; }\n        if (index === 5) { return player.upgrades[3][11] === 1 && player.strangeness[3][8] >= 1; }\n    } else if (stageIndex === 4) {\n        if (player.collapse.mass < global.collapseInfo.unlockB[index]) { return false; }\n        if (index === 1) { return true; }\n        if (index === 2) { return player.researchesExtra[4][0] >= 1; }\n        if (index === 3) { return player.researchesExtra[4][0] >= 2; }\n        if (index === 4) { return player.researchesExtra[4][0] >= 3; }\n        if (index === 5) { return player.strangeness[4][9] >= 1 && (player.collapse.stars[2] > 0 || player.buildings[5][3].true > 0); }\n    } else if (stageIndex === 5) {\n        if (index === 3) { return player.strangeness[5][6] >= 1; }\n        if (player.collapse.mass < global.collapseInfo.unlockG[index]) { return false; } //Only for index < 3\n        if (index === 1) { return player.inflation.vacuum || player.milestones[2][0] >= 6; }\n        if (index === 2) { return player.inflation.vacuum || player.milestones[3][0] >= 7; }\n    }\n\n    return false;\n};\n\nexport const checkUpgrade = (upgrade: number, stageIndex: number, type: 'upgrades' | 'researches' | 'researchesExtra' | 'ASR' | 'elements' | 'strangeness'): boolean => {\n    switch (type) { //Some cases are handled by max level being 0\n        case 'upgrades':\n            if (global.upgradesInfo[stageIndex].maxActive < upgrade + 1) { return false; }\n            if (stageIndex === 1) {\n                if (upgrade === 0 || upgrade === 1) { return player.inflation.vacuum; }\n                if (upgrade > 5) { return player.discharge.current >= 3; }\n                return true;\n            } else if (stageIndex === 2) {\n                //if (upgrade === 1 || upgrade === 3 || upgrade === 4) { return player.buildings[2][2].trueTotal[0] > 0; }\n                //if (upgrade === 2 || upgrade === 5) { return player.buildings[2][3].trueTotal[0] > 0; }\n                //if (upgrade === 6) { return player.buildings[2][4].trueTotal[0] > 0; }\n                if (upgrade === 7) { return player.strangeness[2][2] >= 3; } //&& player.buildings[2][5].trueTotal[0] > 0\n                if (upgrade === 8) { return player.strangeness[2][10] >= 3; } //&& player.buildings[2][6].trueTotal[0] > 0\n                return true;\n            } else if (stageIndex === 3) {\n                if (player.accretion.rank < global.accretionInfo.rankU[upgrade] || player.accretion.rank === 0) { return false; }\n                //if (upgrade === 3) { return player.buildings[3][2].trueTotal[0] > 0; }\n                //if (upgrade === 5) { return player.accretion.rank >= 4 || player.upgrades[3][4] === 1; }\n                if (upgrade === 7) { return player.strangeness[3][2] >= 3; }\n                return true;\n            } else if (stageIndex === 4) {\n                if (player.collapse.mass < global.collapseInfo.unlockU[upgrade]) { return false; }\n                if (upgrade === 2) { return player.upgrades[4][1] === 1; }\n                if (upgrade === 3) { return player.strangeness[4][2] >= 1 && player.upgrades[4][2] === 1 && player.collapse.stars[1] > 0; }\n                return true;\n            } else if (stageIndex === 5) {\n                if (upgrade === 0) { return player.inflation.vacuum || player.milestones[2][0] >= 6; }\n                if (upgrade === 1) { return player.inflation.vacuum || player.milestones[3][0] >= 7; }\n                if (upgrade === 2) { return player.buildings[5][3].true >= 1 && (player.collapse.mass >= 1e6 || !player.inflation.vacuum); }\n            }\n            break;\n        case 'researches':\n            if (global.researchesInfo[stageIndex].maxActive < upgrade + 1) { return false; }\n            if (stageIndex === 1) {\n                return player.discharge.current >= 4;\n            } else if (stageIndex === 2) {\n                //if (upgrade === 1 || upgrade === 2 || upgrade === 3) { return player.buildings[2][2].trueTotal[0] > 0; }\n                //if (upgrade === 4) { return player.buildings[2][3].trueTotal[0] > 0; }\n                //if (upgrade === 5) { return player.buildings[2][4].trueTotal[0] > 0; }\n                return true;\n            } else if (stageIndex === 3) {\n                return player.accretion.rank >= global.accretionInfo.rankR[upgrade] && player.accretion.rank !== 0;\n                //if (upgrade === 2 || upgrade === 3) { return player.buildings[3][2].trueTotal[0] > 0; }\n                //if (upgrade === 6) { return player.accretion.rank >= 4 || player.upgrades[3][4] === 1; }\n            } else if (stageIndex === 4) {\n                if (player.collapse.mass < global.collapseInfo.unlockR[upgrade]) { return false; }\n                if (upgrade === 3) { return (player.collapse.stars[0] > 0 || player.buildings[5][3].true >= 1) && player.strangeness[4][2] >= 2; }\n                if (upgrade === 4) { return player.collapse.stars[2] > 0 || player.buildings[5][3].true >= 1; }\n                return true;\n            } else if (stageIndex === 5) {\n                if (upgrade === 0) { return player.inflation.vacuum || player.milestones[2][0] >= 6; }\n                if (upgrade === 1) { return player.inflation.vacuum || player.milestones[3][0] >= 7; }\n            }\n            break;\n        case 'researchesExtra':\n            if (global.researchesExtraInfo[stageIndex].maxActive < upgrade + 1) { return false; }\n            if (stageIndex === 1) {\n                if (upgrade === 1) { return player.researchesExtra[1][2] >= 2; }\n                if (upgrade === 3) { return player.researchesExtra[1][2] >= 1; }\n                if (upgrade === 4) { return player.accretion.rank >= 6; }\n                return player.discharge.current >= 5;\n            } else if (stageIndex === 2) {\n                if (player.vaporization.clouds[0] === 0) { return false; }\n                //if (upgrade === 2) { return player.buildings[2][5].trueTotal[0] > 0; }\n                if (upgrade === 3) { return player.accretion.rank >= 6; }\n                return true;\n            } else if (stageIndex === 3) {\n                if (player.accretion.rank < global.accretionInfo.rankE[upgrade] || player.accretion.rank === 0) { return false; }\n                if (upgrade === 4) { return player.researchesExtra[1][2] >= 2; }\n                return true;\n            } else if (stageIndex === 4) {\n                if (upgrade === 1) { return player.collapse.stars[0] > 0 || player.buildings[5][3].true >= 1; }\n                if (upgrade === 2) { return (player.collapse.stars[0] > 0 || player.buildings[5][3].true >= 1) && player.strangeness[4][2] >= 3; }\n                return true;\n            }\n            break;\n        case 'ASR':\n            if (stageIndex === 1) { return player.upgrades[1][5] >= 1; }\n            if (stageIndex === 3) { return player.accretion.rank !== 0; }\n            return true;\n        case 'elements':\n            if (upgrade >= 27) { return player.upgrades[4][3] === 1; }\n            if (upgrade >= 11) { return player.collapse.stars[1] > 0 || player.buildings[5][3].true >= 1; }\n            if (upgrade >= 6) { return player.upgrades[4][2] === 1; }\n            return player.upgrades[4][1] === 1;\n        case 'strangeness':\n            if (global.strangenessInfo[stageIndex].maxActive < upgrade + 1) { return false; }\n            if (player.inflation.vacuum) {\n                if (stageIndex === 1) {\n                    if (upgrade === 9) { return player.challenges.void[1] >= 1; }\n                    if (upgrade === 10) { return player.challenges.void[1] >= 2; }\n                    if (upgrade === 11) { return player.challenges.void[4] >= 2; }\n                } else if (stageIndex === 2) {\n                    if (upgrade === 9) { return player.challenges.void[2] >= 1; }\n                    if (upgrade === 10) { return player.challenges.void[2] >= 2; }\n                } else if (stageIndex === 3) {\n                    if (upgrade === 9) { return player.challenges.void[4] >= 4; }\n                    if (upgrade === 10) { return player.challenges.void[1] >= 3; }\n                } else if (stageIndex === 4) {\n                    if (upgrade === 10) { return player.challenges.void[4] >= 3; }\n                } else if (stageIndex === 5) {\n                    if (upgrade === 8) { return player.challenges.void[4] >= 1; }\n                    if (upgrade === 10) { return player.challenges.void[3] >= 5; }\n                    if (upgrade === 6) { return false; } //Remove once Galaxies properly added\n                    if ([3, 4, 6, 7, 9].includes(upgrade)) { return player.strangeness[5][5] >= 1; }\n                }\n                return true;\n            }\n            if (((stageIndex === 1 || stageIndex === 4) && upgrade < 8) || ((stageIndex === 2 || stageIndex === 3) && upgrade < 7)) { return true; }\n            if (player.milestones[4][0] < 8) { return false; }\n            if (stageIndex === 5) {\n                if (upgrade === 3 || upgrade === 7) { return player.milestones[2][0] >= 6; }\n                if (upgrade === 4) { return player.milestones[3][0] >= 7; }\n                if (upgrade === 5) { return player.milestones[2][0] >= 6 || player.milestones[3][0] >= 7; }\n            }\n            return true;\n    }\n\n    return false;\n};\n\nexport const allowedToBeReset = (check: number, stageIndex: number, type: 'structures' | 'upgrades' | 'researches' | 'researchesExtra' | 'elements'): boolean => {\n    switch (type) {\n        case 'structures':\n            if (stageIndex === 5 && check === 3) { return false; }\n            break;\n        case 'upgrades':\n            if (stageIndex === 1) {\n                if (check === 5) { return false; }\n            } else if (stageIndex === 2) {\n                if (check === 2) { return false; }\n            } else if (stageIndex === 4) {\n                return false;\n            } else if (stageIndex === 5) {\n                if (check === 2) { return player.inflation.vacuum; }\n            }\n            break;\n        case 'researches':\n            if (stageIndex === 1) {\n                if (check === 3) { return false; }\n            }\n            break;\n        case 'researchesExtra':\n            if (stageIndex === 1) {\n                if (check === 2) { return false; }\n            } else if (stageIndex === 2) {\n                if (check <= 2) { return false; }\n            } else if (stageIndex === 4) {\n                if (check === 0) { return false; }\n            }\n            break;\n        case 'elements':\n            if (check === 26 || check === 27) { return false; }\n    }\n\n    return true;\n};\n\nexport const milestoneCheck = (index: number, stageIndex: number): boolean => {\n    if (player.inflation.vacuum) {\n        if (player.strangeness[5][8] < 1 || player.challenges.active !== 0) { return false; }\n    } else if (player.strange[0].total === 0 || (stageIndex === 5 && player.strangeness[5][8] < 1)) { return false; }\n    const need = global.milestonesInfo[stageIndex].need[index];\n    if (need[0] === 0) { return false; }\n\n    if (stageIndex === 1) {\n        if (index === 0) { return Limit(player.buildings[1][player.inflation.vacuum ? 1 : 0].current).moreOrEqual(need); }\n        if (index === 1) { return Limit(player.discharge.energy).moreOrEqual(need); }\n    } else if (stageIndex === 2) {\n        if (index === 0) { return Limit(player.inflation.vacuum ? player.vaporization.clouds : player.buildings[2][1].current).moreOrEqual(need); }\n        if (index === 1) { return Limit(player.buildings[2][2].current).moreOrEqual(need); }\n    } else if (stageIndex === 3) {\n        if (index === 0) { return Limit(player.buildings[3][0].current).moreOrEqual(need); }\n        if (index === 1) { return Limit(player.buildings[3][4].true + player.buildings[3][5].true).moreThan(need); }\n    } else if (stageIndex === 4) {\n        if (index === 0) { return Limit(player.inflation.vacuum ? player.buildings[4][0].current : player.collapse.mass).moreOrEqual(need); }\n        if (index === 1) { return Limit(player.collapse.stars[2]).moreOrEqual(need); }\n    } else if (stageIndex === 5) {\n        if (index === 0) { return Limit(global.collapseInfo.trueStars).moreOrEqual(need); }\n        if (index === 1) { return Limit(player.buildings[5][3].current).moreOrEqual(need); }\n    }\n    return false;\n};\n", "import { getClass, getId, getQuery } from './Main';\nimport { cloneArray, global, player, playerStart } from './Player';\nimport { resetVacuum } from './Reset';\nimport { Alert, Confirm, specialHTML } from './Special';\n\nexport const prepareVacuum = (state: boolean) => { //Must not use direct player values\n    const { buildings } = playerStart;\n    const { buildingsInfo, upgradesInfo, researchesInfo, researchesExtraInfo, strangenessInfo } = global;\n\n    if (state) {\n        specialHTML.footerStatsHTML[1][0] = ['Energy%20mass.png', 'stage1borderImage cyanText', 'Mass'];\n        buildingsInfo.hoverText[2][0] = 'Tritium';\n        buildingsInfo.hoverText[3][0] = 'Preons hardcap';\n        buildings[1][0].current = [5.476, -3];\n        buildings[2][0].current = [0, 0];\n        buildings[3][0].current = [9.76185667392, -36];\n        const maxBuildings = [6, 7, 6, 6, 4];\n        buildingsInfo.maxActive.splice(1, maxBuildings.length, ...maxBuildings);\n        if (buildingsInfo.name[1][0] !== 'Mass') {\n            specialHTML.buildingHTML[1].unshift('Preon.png', 'Quarks.png');\n            buildingsInfo.name[1].unshift('Mass', 'Preons');\n            buildingsInfo.hoverText[1].unshift('Mass', 'Preons');\n        }\n        buildingsInfo.startCost[1] = [0, 0.005476, 6, 3, 24, 3];\n        buildingsInfo.firstCost[1] = [0, 0.005476, 6, 3, 24, 3];\n        global.dischargeInfo.energyType[1] = [0, 1, 3, 5, 10, 20];\n        buildingsInfo.type[2][1] = 'improving';\n        buildingsInfo.type[3][1] = 'delaying';\n        buildingsInfo.increase[5][1] = 4;\n        buildingsInfo.increase[5][2] = 4;\n\n        const upgrades1Cost = [36, 48, 60, 90, 150, 400, 2000, 4000, 20000, 70000];\n        upgradesInfo[1].startCost.splice(0, upgrades1Cost.length, ...upgrades1Cost);\n        upgradesInfo[5].startCost[2] = 1e120;\n        //upgradesInfo[1].maxActive = 10;\n        upgradesInfo[2].maxActive = 9;\n        //upgradesInfo[3].maxActive = 13;\n        //upgradesInfo[4].maxActive = 4;\n        //upgradesInfo[5].maxActive = 3;\n\n        const researches1Cost = [2400, 6000, 24000, 30000, 24000, 30000];\n        const researches1Scaling = [400, 2000, 6000, 24000, 12000, 12000];\n        researchesInfo[1].startCost.splice(0, researches1Cost.length, ...researches1Cost);\n        researchesInfo[1].scaling.splice(0, researches1Scaling.length, ...researches1Scaling);\n        //researchesInfo[1].maxActive = 6;\n        //researchesInfo[2].maxActive = 6;\n        //researchesInfo[3].maxActive = 9;\n        //researchesInfo[4].maxActive = 5;\n        //researchesInfo[5].maxActive = 2;\n\n        researchesExtraInfo[1].maxActive = 5;\n        researchesExtraInfo[2].maxActive = 4;\n        researchesExtraInfo[3].maxActive = 5;\n        //researchesExtraInfo[4].maxActive = 3;\n        //researchesExtraInfo[5].maxActive = 0;\n\n        global.accretionInfo.rankCost[5] = 2.47e31;\n        global.ASRInfo.costRange[1] = [4000, 10000, 16000, 24000, 32000];\n        global.ASRInfo.costRange[3][3] = 2.47e31;\n\n        const strangeness1Cost = [2, 1, 4, 24, 2, 1, 2, 4, 36];\n        const strangeness1Scaling = [2.4, 4, 6, 1, 4, 2.2, 2, 2, 1];\n        strangenessInfo[1].startCost.splice(0, strangeness1Cost.length, ...strangeness1Cost);\n        strangenessInfo[1].scaling.splice(0, strangeness1Scaling.length, ...strangeness1Scaling);\n        const strangeness2Cost = [1, 2, 16, 2, 24, 2, 4, 36];\n        const strangeness2Scaling = [1.8, 1.8, 2, 4, 650, 2, 2, 1];\n        strangenessInfo[2].startCost.splice(0, strangeness2Cost.length, ...strangeness2Cost);\n        strangenessInfo[2].scaling.splice(0, strangeness2Scaling.length, ...strangeness2Scaling);\n        const strangeness3Cost = [1, 2, 3, 9, 24, 3, 12, 36];\n        const strangeness3Scaling = [1.8, 2.8, 2, 1, 400, 2.3, 2, 1];\n        strangenessInfo[3].startCost.splice(0, strangeness3Cost.length, ...strangeness3Cost);\n        strangenessInfo[3].scaling.splice(0, strangeness3Scaling.length, ...strangeness3Scaling);\n        const strangeness4Cost = [1, 3, 5, 5, 6, 24, 3, 4, 36];\n        const strangeness4Scaling = [1.8, 2.8, 2.4, 4, 16, 250, 2.3, 2, 1];\n        strangenessInfo[4].startCost.splice(0, strangeness4Cost.length, ...strangeness4Cost);\n        strangenessInfo[4].scaling.splice(0, strangeness4Scaling.length, ...strangeness4Scaling);\n        const strangeness5Cost = [4, 16, 2400, 8, 10, 64, 2400, 60, 1600, 180];\n        const strangeness5Scaling = [1, 5, 1, 1.8, 1.8, 1, 4, 2, 1, 1];\n        strangenessInfo[5].startCost.splice(0, strangeness5Cost.length, ...strangeness5Cost);\n        strangenessInfo[5].scaling.splice(0, strangeness5Scaling.length, ...strangeness5Scaling);\n        strangenessInfo[1].maxActive = 12;\n        strangenessInfo[2].maxActive = 11;\n        strangenessInfo[3].maxActive = 11;\n        strangenessInfo[4].maxActive = 11;\n        strangenessInfo[5].maxActive = 11;\n\n        getId('milestonesWelcome').innerHTML = 'Milestones, can only be done when inside the <span class=\"darkvioletText\">Void</span>';\n        const milestone1S2 = getQuery('#milestone1Stage2Div > img') as HTMLImageElement;\n        global.milestonesInfo[2].name[0] = 'Distant Clouds';\n        milestone1S2.src = milestone1S2.src.replace('Drop.png', 'Clouds.png');\n        milestone1S2.alt = 'Clouds';\n        global.milestonesInfo[3].name[0] = 'Center of gravity';\n        getQuery('#stageHistory > h4').textContent = 'Stage resets:';\n\n        getId('strange10Stage2').style.display = '';\n        getId('strange9Stage3').style.display = '';\n        getId('strange10Stage3').style.display = '';\n        getId('strange11Stage4').style.display = '';\n\n        getId('strangeBoostMain').style.display = '';\n        getId('strange9Stage1').style.display = '';\n        getId('strange8Stage2').style.display = '';\n        getId('strange8Stage3').style.display = '';\n        getId('strange9Stage4').style.display = '';\n        getId('strange6Stage5').style.display = '';\n        for (let s = 2; s <= 5; s++) {\n            getId(`strangenessSection${s}`).style.display = '';\n            getId(`milestone1Stage${s}Div`).style.display = '';\n            getId(`milestone2Stage${s}Div`).style.display = '';\n        }\n        for (const element of getClass('vacuum')) { element.style.display = ''; }\n        getId('vacuumBoost').style.display = 'none';\n        getId('stageInstant').style.display = 'none';\n        getId('unknownStructures').style.display = 'none';\n    } else {\n        specialHTML.footerStatsHTML[1][0] = ['Quarks.png', 'stage1borderImage cyanText', 'Quarks'];\n        buildingsInfo.hoverText[2][0] = 'Moles';\n        buildingsInfo.hoverText[3][0] = 'Mass';\n        buildings[1][0].current = [3, 0];\n        buildings[2][0].current = [2.8, -3];\n        buildings[3][0].current = [1, -19];\n        if (buildingsInfo.name[1][0] === 'Mass') {\n            specialHTML.buildingHTML[1].splice(0, 2);\n            buildingsInfo.name[1].splice(0, 2);\n            buildingsInfo.hoverText[1].splice(0, 2);\n        }\n        const maxBuildings = [4, 6, 5, 5, 4];\n        buildingsInfo.maxActive.splice(1, maxBuildings.length, ...maxBuildings);\n        buildingsInfo.startCost[1] = [0, 3, 24, 3];\n        buildingsInfo.firstCost[1] = [0, 3, 24, 3];\n        global.dischargeInfo.energyType[1] = [0, 1, 5, 20];\n        buildingsInfo.type[2][1] = 'producing';\n        buildingsInfo.type[3][1] = 'producing';\n        buildingsInfo.increase[5][1] = 2;\n        buildingsInfo.increase[5][2] = 2;\n\n        const upgrades1Cost = [0, 0, 9, 12, 36, 300, 800, 2000, 4000, 22000];\n        upgradesInfo[1].startCost.splice(0, upgrades1Cost.length, ...upgrades1Cost);\n        upgradesInfo[5].startCost[2] = 1e100;\n        upgradesInfo[1].maxActive = 10;\n        upgradesInfo[2].maxActive = 8;\n        upgradesInfo[3].maxActive = 13;\n        upgradesInfo[4].maxActive = 4;\n        upgradesInfo[5].maxActive = 3;\n\n        const researches1Cost = [1000, 2500, 6000, 8000, 8000, 6000];\n        const researches1Scaling = [250, 500, 2000, 8000, 4000, 6000];\n        researchesInfo[1].startCost.splice(0, researches1Cost.length, ...researches1Cost);\n        researchesInfo[1].scaling.splice(0, researches1Scaling.length, ...researches1Scaling);\n        researchesInfo[1].maxActive = 6;\n        researchesInfo[2].maxActive = 6;\n        researchesInfo[3].maxActive = 9;\n        researchesInfo[4].maxActive = 5;\n        researchesInfo[5].maxActive = 2;\n\n        researchesExtraInfo[1].maxActive = 0;\n        researchesExtraInfo[2].maxActive = 3;\n        researchesExtraInfo[3].maxActive = 4;\n        researchesExtraInfo[4].maxActive = 3;\n        researchesExtraInfo[5].maxActive = 0;\n\n        global.accretionInfo.rankCost[5] = 0;\n        global.ASRInfo.costRange[1] = [6000, 12000, 18000];\n        global.ASRInfo.costRange[3][3] = 2e30;\n\n        const strangeness1Cost = [1, 1, 3, 6, 6, 1, 2, 2, 12];\n        const strangeness1Scaling = [1.5, 2, 3.5, 0, 4, 0.75, 2, 4, 0];\n        strangenessInfo[1].startCost.splice(0, strangeness1Cost.length, ...strangeness1Cost);\n        strangenessInfo[1].scaling.splice(0, strangeness1Scaling.length, ...strangeness1Scaling);\n        const strangeness2Cost = [1, 2, 2, 1, 6, 2, 2, 12];\n        const strangeness2Scaling = [0.4, 0.5, 2.5, 3, 0, 1, 4, 0];\n        strangenessInfo[2].startCost.splice(0, strangeness2Cost.length, ...strangeness2Cost);\n        strangenessInfo[2].scaling.splice(0, strangeness2Scaling.length, ...strangeness2Scaling);\n        const strangeness3Cost = [1, 1, 2, 8, 6, 2, 8, 12];\n        const strangeness3Scaling = [0.75, 1.5, 2, 0, 0, 1, 8, 0];\n        strangenessInfo[3].startCost.splice(0, strangeness3Cost.length, ...strangeness3Cost);\n        strangenessInfo[3].scaling.splice(0, strangeness3Scaling.length, ...strangeness3Scaling);\n        const strangeness4Cost = [1, 1, 3, 2, 4, 6, 3, 3, 12];\n        const strangeness4Scaling = [1, 2, 2.5, 3, 28, 0, 1, 5.5, 0];\n        strangenessInfo[4].startCost.splice(0, strangeness4Cost.length, ...strangeness4Cost);\n        strangenessInfo[4].scaling.splice(0, strangeness4Scaling.length, ...strangeness4Scaling);\n        const strangeness5Cost = [120, 16, 80, 10, 10, 40, 800, 20, 40, 60];\n        const strangeness5Scaling = [60, 0, 0, 8, 10, 0, 1600, 20, 0, 0];\n        strangenessInfo[5].startCost.splice(0, strangeness5Cost.length, ...strangeness5Cost);\n        strangenessInfo[5].scaling.splice(0, strangeness5Scaling.length, ...strangeness5Scaling);\n        strangenessInfo[1].maxActive = 9;\n        strangenessInfo[2].maxActive = 8;\n        strangenessInfo[3].maxActive = 8;\n        strangenessInfo[4].maxActive = 9;\n        strangenessInfo[5].maxActive = 10;\n\n        getId('milestonesWelcome').innerHTML = 'Any reached Milestone will award 1 <span class=\"greenText\">Strange quark</span>';\n        const milestone1S2 = getQuery('#milestone1Stage2Div > img') as HTMLImageElement;\n        global.milestonesInfo[2].name[0] = 'A Nebula of Drops';\n        milestone1S2.src = milestone1S2.src.replace('Clouds.png', 'Drop.png');\n        milestone1S2.alt = 'Drop of water';\n        global.milestonesInfo[3].name[0] = 'Cluster of Mass';\n        getQuery('#stageHistory > h4').textContent = 'Interstellar Stage resets:';\n\n        getId('vacuumBoost').style.display = '';\n        getId('strange9Stage5').style.display = '';\n        getId('strange10Stage5').style.display = '';\n        getId('stageInstant').style.display = '';\n        getId('rankStat0').style.display = '';\n        for (const element of getClass('vacuum')) { element.style.display = 'none'; }\n        for (let i = 0; i < global.challengesInfo.name.length; i++) {\n            getId(`challenge${i + 1}`).style.display = 'none';\n        }\n        for (let s = 1; s < strangenessInfo.length; s++) {\n            for (let i = strangenessInfo[s].maxActive + 1; i <= strangenessInfo[s].startCost.length; i++) {\n                getId(`strange${i}Stage${s}`).style.display = 'none';\n            }\n        }\n    }\n\n    for (let s = 1; s <= 3; s++) {\n        const newValue = buildings[s][0].current;\n        buildings[s][0].total = cloneArray(newValue);\n        buildings[s][0].trueTotal = cloneArray(newValue);\n        buildings[s][0].highest = cloneArray(newValue);\n    }\n};\n\nexport const switchVacuum = async() => {\n    if (player.inflation.vacuum) { return void Alert('This cannot be undone'); }\n    const count = global.strangeInfo.instability;\n    if (count < 5) { return void Alert(`Universe is still stable. Vacuum state is false. ${5 - count} more`); }\n\n    if (!await Confirm('This will not be possible to undo. Confirm?')) { return; }\n    await Alert('Universe is too unstable. Vacuum instability is imminent');\n    player.inflation.vacuum = true;\n    if (player.stage.true < 6) { player.stage.true = 6; }\n    player.stage.current = 1;\n    player.stage.active = 1;\n    prepareVacuum(true);\n    resetVacuum();\n};\n\nexport const updateUnknown = () => {\n    const { milestones } = player;\n\n    let text = '<h4 class=\"darkvioletText\">Unknown Structures:</h4>';\n    if (milestones[1][0] >= 6) { text += '<img src=\"Used_art/Preon.png\" alt=\"Unknown Structure\" loading=\"lazy\">'; }\n    if (milestones[2][1] >= 6) { text += '<img src=\"Used_art/Ocean.png\" alt=\"Unknown Structure\" loading=\"lazy\">'; }\n    if (milestones[3][1] >= 7) { text += '<img src=\"Used_art/Subsatellite.png\" alt=\"Unknown Structure\" loading=\"lazy\">'; }\n    if (milestones[4][1] >= 8) { text += '<img src=\"Used_art/Quasi%20star.png\" alt=\"Unknown Structure\" loading=\"lazy\">'; }\n\n    const div = getId('unknownStructures');\n    div.style.display = global.strangeInfo.instability > 0 ? '' : 'none';\n    if (div.innerHTML !== text) { div.innerHTML = text; }\n};\n", "import { checkTab } from './Check';\nimport Limit from './Limit';\nimport { getClass, getId, getQuery } from './Main';\nimport { global, player } from './Player';\nimport { playEvent, specialHTML, switchTheme } from './Special';\nimport { autoElementsBuy, autoElementsSet, autoResearchesBuy, autoResearchesSet, autoUpgradesBuy, autoUpgradesSet, buyBuilding, calculateBuildingsCost, calculateGainedBuildings, assignBuildingInformation, collapseResetCheck, dischargeResetCheck, rankResetCheck, stageResetCheck, toggleSwap, vaporizationResetCheck, assignDischargeInformation, assignVaporizationInformation, assignCollapseInformation, calculateGainedStrangeness, switchStage } from './Stage';\nimport type { overlimit } from './Types';\nimport { updateUnknown } from './Vacuum';\n\nexport const switchTab = (tab: string, subtab = null as null | string) => {\n    if (subtab === null) {\n        const oldTab = global.tab;\n        getId(`${oldTab}Tab`).style.display = 'none';\n        getId(`${oldTab}TabBtn`).classList.remove('tabActive');\n        if (Object.hasOwn(global.tabList, `${oldTab}Subtabs`)) {\n            for (const inside of global.tabList[`${oldTab as 'stage'}Subtabs`]) {\n                getId(`${oldTab}SubtabBtn${inside}`).style.display = 'none';\n            }\n        }\n\n        global.tab = tab;\n        let subtabAmount = 0;\n        getId(`${tab}Tab`).style.display = '';\n        getId(`${tab}TabBtn`).classList.add('tabActive');\n        if (Object.hasOwn(global.tabList, `${tab}Subtabs`)) {\n            for (const inside of global.tabList[`${tab as 'stage'}Subtabs`]) {\n                if (checkTab(tab, inside)) {\n                    getId(`${tab}SubtabBtn${inside}`).style.display = '';\n                    subtabAmount++;\n                } else if (global.subtab[`${tab as 'stage'}Current`] === inside) {\n                    switchTab(tab, global.tabList[`${tab as 'stage'}Subtabs`][0]);\n                }\n            }\n        }\n        getId('subtabs').style.display = subtabAmount > 1 ? '' : 'none';\n        if (global.screenReader[0]) { getId('SRTab').textContent = `Current tab is '${tab}'${subtabAmount > 1 ? ` and subtab is '${global.subtab[`${tab as 'stage'}Current`]}'` : ''}`; }\n    } else {\n        const oldSubtab = global.subtab[`${tab as 'stage'}Current`];\n        getId(`${tab}Subtab${oldSubtab}`).style.display = 'none';\n        getId(`${tab}SubtabBtn${oldSubtab}`).classList.remove('tabActive');\n\n        global.subtab[`${tab as 'stage'}Current`] = subtab;\n        getId(`${tab}Subtab${subtab}`).style.display = '';\n        getId(`${tab}SubtabBtn${subtab}`).classList.add('tabActive');\n        if (global.screenReader[0]) { getId('SRTab').textContent = `Current subtab is '${subtab}', part of '${tab}' tab`; }\n    }\n\n    if (global.lastActive !== null) {\n        switchStage(global.lastActive);\n        global.lastActive = null;\n    } else if ((global.tab === 'research' && global.subtab.researchCurrent === 'Elements') || tab === 'Elements') {\n        const active = player.stage.active;\n        if (active !== 4 && active !== 5) {\n            if (tab === 'research' && subtab === null) {\n                switchTab('research', 'Researches');\n                return;\n            } else {\n                global.lastActive = active;\n                switchStage(4);\n            }\n        }\n    }\n    visualUpdate();\n    numbersUpdate();\n};\n\nexport const maxOfflineTime = (): number => Math.min(7200 * player.stage.true + Math.max(player.inflation.vacuum ? player.stage.resets * 28800 : (player.stage.resets - 4) * 7200, 0), 172800);\nexport const maxExportTime = (): number => player.strange[0].total > 0 ? 172800 : 86400;\nexport const offlineWaste = (): number => 6 - player.strangeness[2][6];\nexport const exportMultiplier = (): number => (1 + player.stage.best / 10) * (player.strangeness[4][7] + 1);\n\nexport const timeUpdate = (timeWarp = 0, tick = 1) => { //Time based information\n    const { auto, buildings: autoBuy } = player.toggles;\n    const { vacuum } = player.inflation;\n    const { maxActive, type } = global.buildingsInfo;\n    const { autoU, autoR, autoE, elements: autoElements } = global.automatization;\n\n    let passedSeconds: number;\n    if (timeWarp > 0) {\n        const extraTime = Math.min(tick, timeWarp);\n        passedSeconds = extraTime;\n        timeWarp -= extraTime;\n    } else {\n        const { time } = player;\n\n        const currentTime = Date.now();\n        passedSeconds = (currentTime - time.updated) / 1000;\n        time.updated = currentTime;\n        global.lastSave += passedSeconds;\n        player.stage.export = Math.min(player.stage.export + passedSeconds, maxExportTime());\n        if (passedSeconds < 0) {\n            time.offline += passedSeconds;\n            return;\n        } else if (passedSeconds > 60) {\n            time.offline = Math.min(time.offline + passedSeconds - 60, maxOfflineTime());\n            passedSeconds = 60;\n        } else if (time.offline > 0 && player.toggles.normal[0] && player.strangeness[1][7] >= 2) {\n            const extraTime = Math.min(Math.max(time.offline / 3600, 1) * passedSeconds, time.offline);\n            time.offline -= Math.min(extraTime * offlineWaste(), time.offline);\n            passedSeconds += extraTime;\n        }\n    }\n    player.stage.time += passedSeconds;\n    player.inflation.age += passedSeconds;\n\n    if (vacuum && auto[0]) { stageResetCheck(5, true); }\n    for (let i = 0; i < player.strangeness[5][10]; i++) {\n        calculateGainedStrangeness(i, passedSeconds);\n    }\n    assignBuildingInformation();\n    for (const s of global.stageInfo.activeAll) {\n        if (!vacuum && auto[0]) { stageResetCheck(s, true); }\n        if (s === 4) {\n            collapseResetCheck(auto[4], true);\n            if (autoElements.length !== 0) { autoElementsBuy(); }\n        } else if (s === 3) {\n            if (auto[3]) { rankResetCheck(true); }\n        } else if (s === 2) {\n            vaporizationResetCheck(auto[2], passedSeconds);\n        } else if (s === 1) {\n            if (auto[1]) { dischargeResetCheck(true); }\n        }\n\n        if (autoU[s].length !== 0) { autoUpgradesBuy(s); }\n        if (autoR[s].length !== 0) { autoResearchesBuy('researches', s); }\n        if (autoE[s].length !== 0) { autoResearchesBuy('researchesExtra', s); }\n\n        for (let i = maxActive[s] - 1; i >= 1; i--) {\n            if (autoBuy[s][i] && player.ASR[s] >= i) { buyBuilding(i, s, true); }\n            if (type[s][i] === 'producing') {\n                calculateGainedBuildings(i - 1, s, passedSeconds);\n            }\n        }\n        if (s === 1) { //Molecules from Radiation\n            if (player.upgrades[1][8] === 1) { calculateGainedBuildings(vacuum ? 5 : 3, 1, passedSeconds); }\n        } else if (s === 5) { //Stars from Nebulas\n            const research = player.researches[5][0];\n\n            if (research >= 1) { calculateGainedBuildings(1, 5, passedSeconds); }\n            if (research >= 2) { calculateGainedBuildings(2, 5, passedSeconds); }\n            if (research >= 3) { calculateGainedBuildings(3, 5, passedSeconds); }\n        }\n    }\n\n    if (timeWarp > 0) { timeUpdate(timeWarp, tick); }\n};\n\nexport const numbersUpdate = () => { //This is for relevant visual info\n    const { tab, subtab } = global;\n    const active = player.stage.active;\n    const buildings = player.buildings[active];\n\n    if (global.footer) {\n        if (active === 1) {\n            getId('footerStat1Span').textContent = Limit(buildings[0].current).format({ padding: true });\n            getId('footerStat2Span').textContent = format(player.discharge.energy);\n        } else if (active === 2) {\n            getId('footerStat1Span').textContent = Limit(player.vaporization.clouds).format({ padding: true });\n            getId('footerStat2Span').textContent = Limit(buildings[0].current).format({ padding: true });\n            getId('footerStat3Span').textContent = Limit(buildings[1].current).format({ padding: buildings[2].current[0] > 0 });\n        } else if (active === 3) {\n            getId('footerStat1Span').textContent = Limit(buildings[0].current).format({ padding: true });\n        } else if (active === 4 || active === 5) {\n            const stars = player.buildings[4];\n\n            getId('footerStat1Span').textContent = format(player.collapse.mass, { padding: true });\n            getId('footerStat2Span').textContent = Limit(stars[0].current).format({ padding: true });\n            if (active === 5) {\n                getId('footerStat3Span').textContent = Limit(stars[1].current).plus(stars[2].current, stars[3].current, stars[4].current, stars[5].current).format({ padding: true });\n            }\n        }\n    }\n    if (tab === 'stage') {\n        if (subtab.stageCurrent === 'Structures') {\n            const { buildingsInfo } = global;\n            const howMany = player.stage.resets < 1 && player.discharge.current < 1 ? 1 : player.toggles.shop.howMany;\n\n            for (let i = 1; i < buildingsInfo.maxActive[active]; i++) {\n                const trueCountID = getId(`building${i}True`);\n                getId(`building${i}Cur`).textContent = Limit(buildings[i].current).format({ padding: trueCountID.style.display !== 'none' });\n                getId(`building${i}Prod`).textContent = Limit(buildingsInfo.producing[active][i]).format({ padding: true });\n                trueCountID.textContent = `[${format(buildings[i as 1].true)}]`;\n\n                if ((active === 4 && player.collapse.mass < global.collapseInfo.unlockB[i]) ||\n                    (active === 5 && i < 3 && player.collapse.mass < global.collapseInfo.unlockG[i])) {\n                    getId(`building${i}`).classList.remove('availableBuilding');\n                    getId(`building${i}Btn`).textContent = `Unlocked at ${format(global.collapseInfo[active === 4 ? 'unlockB' : 'unlockG'][i])} Mass`;\n                    getId(`building${i}BuyX`).textContent = 'Locked';\n                    continue;\n                }\n\n                let costName: string;\n                let currency: number | overlimit;\n                let free = false;\n                if (active === 5 && i === 3) { //Galaxy\n                    costName = 'Mass';\n                    currency = player.collapse.mass;\n                } else {\n                    let e = i - 1;\n                    let extra = active;\n                    if (active === 1) {\n                        if (i === 1 && player.inflation.vacuum) { free = player.strangeness[1][10] >= 1; }\n                    } else if (active === 2) {\n                        if (i !== 1) { e = 1; }\n                    } else if (active >= 3) {\n                        e = 0;\n                        if (active === 5) { extra = 4; }\n                    }\n\n                    costName = buildingsInfo.name[extra][e];\n                    currency = player.buildings[extra][e].current;\n                }\n\n                let totalBuy = 1;\n                let totalCost = calculateBuildingsCost(i, active); //This updates cost information\n                if (howMany !== 1) {\n                    const increase = buildingsInfo.increase[active][i];\n                    const firstCost = buildingsInfo.firstCost[active][i];\n                    if (free) {\n                        totalBuy = howMany === -1 ? Math.max(Math.floor(Limit(currency).divide(firstCost).log(increase).toNumber()) - buildings[i as 1].true + 1, 1) : howMany;\n                        if (totalBuy > 1) { totalCost = Limit(increase).power(totalBuy + buildings[i as 1].true - 1).multiply(firstCost).toArray(); }\n                    } else {\n                        const totalBefore = Limit(increase).power(buildings[i as 1].true).minus('1').divide(increase - 1).multiply(firstCost).toArray();\n\n                        totalBuy = howMany === -1 ? Math.max(Math.floor(Limit(totalBefore).plus(currency).multiply(increase - 1).divide(firstCost).plus('1').log(increase).toNumber()) - buildings[i as 1].true, 1) : howMany;\n                        if (totalBuy > 1) { totalCost = Limit(increase).power(totalBuy + buildings[i as 1].true).minus('1').divide(increase - 1).multiply(firstCost).minus(totalBefore).toArray(); }\n                    }\n                }\n\n                getId(`building${i}`).classList[Limit(totalCost).lessOrEqual(currency) ? 'add' : 'remove']('availableBuilding');\n                getId(`building${i}Btn`).textContent = `Need: ${Limit(totalCost).format({ padding: true })} ${costName}`;\n                getId(`building${i}BuyX`).textContent = format(totalBuy);\n            }\n            if (active === 1) {\n                assignDischargeInformation();\n                const effect = getId('dischargeEffect', false);\n                if (effect !== null) { effect.textContent = format(global.upgradesInfo[1].effect[5] as number); }\n                getId('reset1Button').textContent = `Next goal is ${format(global.dischargeInfo.next)} Energy`;\n            } else if (active === 2) {\n                assignVaporizationInformation();\n                getId('reset1Button').textContent = global.vaporizationInfo.get[0] !== 0 ? `Reset for ${Limit(global.vaporizationInfo.get).format({ padding: true })} Clouds` : `Waiting for ${format(global.vaporizationInfo.effect2U2(), { padding: true })} Drops`;\n            } else if (active === 3) {\n                const rankCost = global.accretionInfo.rankCost[player.accretion.rank];\n                if (rankCost !== 0) { getId('reset1Button').textContent = `Next Rank is ${format(rankCost)} Mass`; }\n            } else if (active === 4) {\n                const { collapse } = player;\n                const { collapseInfo } = global;\n                assignCollapseInformation();\n\n                getId('reset1Button').textContent = `Collapse to ${format(collapseInfo.newMass, { padding: true })} Mass`;\n                for (let i = 1; i <= 3; i++) {\n                    getId(`starSpecial${i}Cur`).textContent = format(collapse.stars[i - 1]);\n                    getId(`starSpecial${i}Get`).textContent = format(collapseInfo.starCheck[i - 1]);\n                }\n            }\n\n            getId('stageTime').textContent = format(player.stage.time, { type: 'time' });\n            if (player.time.offline > 0 && player.toggles.normal[0] && player.strangeness[1][7] >= 2) {\n                const time = Math.max(player.time.offline / 3600, 1);\n                getId('offlineBoostEffect').textContent = `+${format(time * 1, { digits: 0 })} seconds`;\n                getId('offlineBoostWaste').textContent = `${format(time * offlineWaste(), { digits: 0 })} seconds`;\n            }\n            if (global.lastUpgrade[active] >= 0) { getUpgradeDescription(global.lastUpgrade[active], 'upgrades'); }\n        } else if (subtab.stageCurrent === 'Advanced') {\n            if (!player.inflation.vacuum) { getId('vacuumEffect').textContent = format(global.strangeInfo.instability); }\n            getId('universeAge').textContent = format(player.inflation.age, { type: 'time' });\n        }\n    } else if (tab === 'research' || tab === 'Elements') {\n        const trueSubtab = tab === 'Elements' ? tab : subtab.researchCurrent;\n        if (trueSubtab === 'Researches') {\n            if (global.lastResearch[active][0] >= 0) { getUpgradeDescription(global.lastResearch[active][0], global.lastResearch[active][1]); }\n        } else if (trueSubtab === 'Elements') {\n            if (global.lastElement >= 1) { getUpgradeDescription(global.lastElement, 'elements'); }\n        }\n    } else if (tab === 'strangeness') {\n        if (subtab.strangenessCurrent === 'Matter') {\n            const stageGain = global.strangeInfo.gain(active) / 1e12 ** player.strangeness[5][10];\n            getId('strangeGain').textContent = `${format(stageGain)} ${global.strangeInfo.name[player.strangeness[5][10]]}`;\n            getId('strangeTime').textContent = `${format(stageGain / player.stage.time, { padding: true })} per second`;\n            getId('strangeBoost').textContent = global.strangeInfo.stageBoost[active] !== null ? format(global.strangeInfo.stageBoost[active] as number, { padding: true }) : 'none';\n            getId('strange0Cur').textContent = format(player.strange[0].current);\n            getId('strange1Cur').textContent = format(player.strange[1].current);\n        }\n    } else if (tab === 'settings') {\n        if (subtab.settingsCurrent === 'Settings') {\n            getId('exportGain').textContent = format(player.stage.export * exportMultiplier() / 86400 / 1e12 ** player.strangeness[5][10], { padding: true });\n            if (global.lastSave >= 1) { getId('isSaved').textContent = `${format(global.lastSave, { type: 'time' })} ago`; }\n        } else if (subtab.settingsCurrent === 'Stats') {\n            const maxTimeExp = maxExportTime();\n\n            getId('firstPlay').textContent = `${new Date(player.time.started).toLocaleString()} (${format((Date.now() - player.time.started) / 1000, { type: 'time' })} ago)`;\n            getId('stageResetsCount').textContent = format(player.stage.resets);\n            getId('stageBestGain').textContent = format(player.stage.best / 1e12 ** player.strangeness[5][10]);\n            getId('offlineStat').textContent = format(player.time.offline, { type: 'time' });\n            getId('maxOfflineStat').textContent = format(maxOfflineTime(), { type: 'time' });\n            getId('maxExportStat').textContent = format(exportMultiplier() * maxTimeExp / 86400 / 1e12 ** player.strangeness[5][10]);\n            getId('maxExportTime').textContent = format(maxTimeExp, { type: 'time' });\n            if (active === 1) {\n                getId('maxEnergyStat').textContent = format(player.discharge.energyMax);\n                getId('dischargeStat').textContent = format(player.discharge.current + global.dischargeInfo.bonus);\n                getId('dischargeStatTrue').textContent = `[${format(player.discharge.current)}]`;\n                if (player.strangeness[1][11] < 1) { getId('energySpent').textContent = format(global.dischargeInfo.energyTrue - player.discharge.energy); }\n                if (player.inflation.vacuum) {\n                    getId('preonCapStat').textContent = Limit(global.inflationInfo.preonCap).format({ padding: true });\n                    getId('preonCapTill').textContent = Limit(global.inflationInfo.preonTrue).divide(global.inflationInfo.preonCap).format({ padding: true });\n                }\n            } else if (active === 2) {\n                assignVaporizationInformation();\n                const info = global.vaporizationInfo;\n\n                const before = info.cloudEffect();\n                getId('cloudsEffectCurrent').textContent = Limit(before).format({ padding: true });\n                getId('cloudsEffectAfter').textContent = `x${Limit(info.cloudEffect(true)).divide(before).format({ padding: true })}`;\n                const rainBefore = info.rainEffect();\n                getId('rainEffectCurrent').textContent = format(rainBefore, { padding: true });\n                getId('rainEffectAfter').textContent = `x${format(info.rainEffect(true) / rainBefore, { padding: true })}`;\n                getId('maxCloudsStat').textContent = Limit(player.vaporization.cloudsMax).format();\n\n                if (player.inflation.vacuum) {\n                    const moles = player.buildings[1][5];\n\n                    buildings[0].total = Limit(moles.total).divide('6.02214076e23').toArray();\n                    buildings[0].trueTotal = Limit(moles.trueTotal).divide('6.02214076e23').toArray();\n                    buildings[0].highest = Limit(moles.highest).divide('6.02214076e23').toArray();\n\n                    getId('oceanWorldEffect').textContent = format(info.oceanWorld(), { padding: true });\n                }\n            } else if (active === 3) {\n                getId('effectiveRank').textContent = format(global.accretionInfo.effective);\n                if (player.inflation.vacuum) {\n                    const mass = player.buildings[1][0];\n\n                    buildings[0].total = Limit(mass.total).multiply('1.78266192e-33').toArray();\n                    buildings[0].trueTotal = Limit(mass.trueTotal).multiply('1.78266192e-33').toArray();\n                    buildings[0].highest = Limit(mass.highest).multiply('1.78266192e-33').toArray();\n\n                    getId('dustCapStat').textContent = Limit(global.inflationInfo.dustCap).format({ padding: true });\n                    getId('dustCapTill').textContent = Limit(global.inflationInfo.dustTrue).divide(global.inflationInfo.dustCap).format({ padding: true });\n                }\n            } else if (active === 4 || active === 5) {\n                assignCollapseInformation();\n                getId('maxSolarMassStat').textContent = format(player.collapse.massMax);\n                if (player.inflation.vacuum) {\n                    getId('mainCapStat').textContent = Limit(global.buildingsInfo.producing[1][1]).multiply('8.96499278339628e-67', global.inflationInfo.massCap).format({ padding: true });\n                    getId('mainCapLimit').textContent = format(global.inflationInfo.massCap, { type: 'time' });\n                }\n                if (active === 4) {\n                    const { starEffect, massEffect } = global.collapseInfo;\n\n                    const before = massEffect();\n                    getId('starMassStatCurrent').textContent = format(before, { padding: true });\n                    getId('starMassStatAfter').textContent = `x${format(massEffect(true) / before, { padding: true })}`;\n                    for (let i = 0; i <= 2; i++) {\n                        const before = starEffect[i]();\n                        getId(`star${i + 1}StatCurrent`).textContent = format(before, { padding: true });\n                        getId(`star${i + 1}StatAfter`).textContent = `x${format(starEffect[i](true) / before, { padding: true })}`;\n                    }\n                } else if (active === 5) {\n                    getId('starsStatTrue').textContent = format(global.collapseInfo.trueStars);\n                    const stars = player.buildings[4];\n\n                    buildings[0].current = Limit(stars[1].current).plus(stars[2].current, stars[3].current, stars[4].current, stars[5].current).toArray();\n                    buildings[0].total = Limit(stars[1].total).plus(stars[2].total, stars[3].total, stars[4].total, stars[5].total).toArray();\n                    buildings[0].trueTotal = Limit(stars[1].trueTotal).plus(stars[2].trueTotal, stars[3].trueTotal, stars[4].trueTotal, stars[5].trueTotal).toArray();\n                    buildings[0].highest = Limit(stars[1].highest).plus(stars[2].highest, stars[3].highest, stars[4].highest, stars[5].highest).toArray();\n                }\n            }\n            for (let i = 0; i < buildings.length; i++) {\n                getId(`building${i}StatTotal`).textContent = Limit(buildings[i].total).format({ padding: true });\n                getId(`building${i}StatTrueTotal`).textContent = Limit(buildings[i].trueTotal).format({ padding: true });\n                getId(`building${i}StatHighest`).textContent = Limit(buildings[i].highest).format({ padding: true });\n            }\n\n            const { strange } = player;\n            const strangeMax = Math.floor(strange[1].current * 1e12);\n            for (let i = 0; i < strange.length; i++) {\n                getId(`strange${i}StatTotal`).textContent = format(strange[i].total, { padding: true });\n            }\n            getId('strange0StatProd').textContent = format(strangeMax, { padding: true });\n            getId('strange1StatProd').textContent = format(Math.max(1, strangeMax / 600), { padding: true });\n        }\n    }\n};\n\nexport const visualUpdate = () => { //This is what can appear/disappear when inside Stage\n    const { tab, subtab } = global;\n    const active = player.stage.active;\n\n    if (global.footer && !player.toggles.normal[2]) {\n        const check = getId('ElementsTabBtn', false);\n        if (check !== null) { check.style.display = player.upgrades[4][1] === 1 ? '' : 'none'; }\n    }\n    if (active === 1) {\n        if (global.footer && player.stage.resets < 1) {\n            getId('footerStat2').style.display = player.discharge.energyMax >= (player.inflation.vacuum ? 36 : 9) ? '' : 'none';\n            getId('researchTabBtn').style.display = player.discharge.current >= 4 ? '' : 'none';\n        }\n        if (!player.events[0] && player.upgrades[1][6] === 1) { playEvent(0, 0); }\n    } else if (active === 2) {\n        if (global.footer) { getId('footerStat1').style.display = player.upgrades[2][2] === 1 ? '' : 'none'; }\n        if (!player.events[0]) {\n            assignVaporizationInformation();\n            if (Limit(global.vaporizationInfo.get).plus(player.vaporization.clouds).moreThan('1e4')) { playEvent(1, 0); }\n        }\n    } else if (active === 3) {\n        if (!player.events[0] && Limit(player.buildings[3][0].current).moreOrEqual('5e29')) { playEvent(2, 0); }\n    } else if (active === 4) {\n        if (!player.events[0] && player.elements[1] > 0) { playEvent(3, 0); }\n    }\n\n    if (tab === 'stage') {\n        if (subtab.stageCurrent === 'Structures') {\n            const buildings = player.buildings[active];\n            const multiMake = player.stage.resets >= 1 || player.discharge.current >= 1;\n            const ASR = player.ASR[active];\n\n            if (!player.inflation.vacuum) {\n                const resetMessage = active >= 4 ? 'Return back to start' : active === player.stage.current ? 'Enter next Stage' : 'Reset this Stage';\n                const failMessage = (active >= 4 ? player.strange[0].total === 0 : active === player.stage.current) ? 'Not ready for more' : 'Not ready for reset';\n                getId('stageReset').textContent = (active >= 4 ? player.events[1] && player.stage.current >= 5 : stageResetCheck(active)) ? resetMessage : failMessage;\n            }\n\n            getId('toggleBuy').style.display = multiMake ? '' : 'none';\n            getId('autoWaitInput').style.display = player.strangeness[1][7] >= 1 ? '' : 'none';\n            getId('toggleBuilding0').style.display = player.strangeness[1][7] >= 1 ? '' : 'none';\n            getId('offlineBoost').style.display = player.time.offline > 0 && player.toggles.normal[0] && player.strangeness[1][7] >= 2 ? '' : 'none';\n            getId('offlineWarning').style.display = player.time.offline > 0 && player.time.offline >= maxOfflineTime() ? '' : 'none';\n            for (let i = 1; i < global.buildingsInfo.maxActive[active]; i++) {\n                getId(`building${i}True`).style.display = Limit(buildings[i].current).notEqual(buildings[i as 1].true) ? '' : 'none';\n                getId(`toggleBuilding${i}`).style.display = ASR >= i ? '' : 'none';\n                getId(`building${i}BuyDiv`).style.display = multiMake ? '' : 'none';\n            }\n            if (active === 1) {\n                const first3Discharges = player.discharge.current >= 3;\n\n                getId('reset1Main').style.display = player.upgrades[1][5] === 1 ? '' : 'none';\n                getId('building2').style.display = Limit(buildings[1].trueTotal).moreOrEqual(player.inflation.vacuum ? '4' : '11') ? '' : 'none';\n                getId('building3').style.display = Limit(buildings[2].trueTotal).moreOrEqual('2') ? '' : 'none';\n                if (player.inflation.vacuum) {\n                    getId('building4').style.display = Limit(buildings[3].trueTotal).moreOrEqual('8') ? '' : 'none';\n                    getId('building5').style.display = Limit(buildings[4].trueTotal).moreOrEqual('2') ? '' : 'none';\n                }\n                getId('upgrade7').style.display = first3Discharges ? '' : 'none';\n                getId('upgrade8').style.display = first3Discharges ? '' : 'none';\n                getId('upgrade9').style.display = first3Discharges ? '' : 'none';\n                getId('upgrade10').style.display = first3Discharges ? '' : 'none';\n                if (player.stage.resets < 1) { getId('upgrades').style.display = player.discharge.energyMax >= (player.inflation.vacuum ? 36 : 9) ? '' : 'none'; }\n                if (player.stage.true < 2) {\n                    getId('resetStage').style.display = player.upgrades[1][9] === 1 ? '' : 'none';\n                    getId('stageTimeMain').style.display = player.upgrades[1][9] === 1 ? '' : 'none';\n                }\n            } else if (active === 2) {\n                getId('reset1Main').style.display = player.upgrades[2][2] === 1 ? '' : 'none';\n                getId('building2').style.display = Limit(buildings[1].trueTotal).moreOrEqual('200') ? '' : 'none';\n                getId('building3').style.display = Limit(buildings[1].trueTotal).moreOrEqual('4e6') ? '' : 'none';\n                getId('building4').style.display = Limit(buildings[1].trueTotal).moreOrEqual('4e17') ? '' : 'none';\n                getId('building5').style.display = Limit(buildings[1].trueTotal).moreOrEqual('4e22') ? '' : 'none';\n                getId('upgrade2').style.display = buildings[2].trueTotal[0] > 0 ? '' : 'none';\n                getId('upgrade3').style.display = buildings[3].trueTotal[0] > 0 ? '' : 'none';\n                getId('upgrade4').style.display = buildings[2].trueTotal[0] > 0 ? '' : 'none';\n                getId('upgrade5').style.display = buildings[2].trueTotal[0] > 0 ? '' : 'none';\n                getId('upgrade6').style.display = buildings[3].trueTotal[0] > 0 ? '' : 'none';\n                getId('upgrade7').style.display = buildings[4].trueTotal[0] > 0 ? '' : 'none';\n                getId('upgrade8').style.display = player.strangeness[2][2] >= 3 && buildings[5].trueTotal[0] > 0 ? '' : 'none';\n                if (player.inflation.vacuum) {\n                    getId('building6').style.display = player.strangeness[2][8] >= 1 && Limit(buildings[1].trueTotal).moreOrEqual('8e24') ? '' : 'none';\n                    getId('upgrade9').style.display = player.strangeness[2][10] >= 3 && buildings[6].trueTotal[0] > 0 ? '' : 'none';\n                }\n            } else if (active === 3) {\n                const rank = player.accretion.rank;\n                const upgrades = player.upgrades[3];\n\n                getId('buildings').style.display = rank >= 1 ? '' : 'none';\n                getId('building2').style.display = upgrades[2] === 1 ? '' : 'none';\n                getId('building3').style.display = upgrades[4] === 1 ? '' : 'none';\n                getId('building4').style.display = upgrades[8] === 1 ? '' : 'none';\n                if (player.inflation.vacuum) { getId('building5').style.display = upgrades[11] === 1 && player.strangeness[3][8] >= 1 ? '' : 'none'; }\n                getId('upgrades').style.display = rank >= 1 ? '' : 'none';\n                getId('upgrade3').style.display = rank >= 2 ? '' : 'none';\n                getId('upgrade4').style.display = buildings[2].trueTotal[0] > 0 ? '' : 'none';\n                getId('upgrade5').style.display = rank >= 3 ? '' : 'none';\n                getId('upgrade6').style.display = rank >= 4 || upgrades[4] === 1 ? '' : 'none';\n                getId('upgrade7').style.display = rank >= 4 ? '' : 'none';\n                getId('upgrade8').style.display = rank >= 4 && player.strangeness[3][2] >= 3 ? '' : 'none';\n                getId('upgrade9').style.display = rank >= 4 ? '' : 'none';\n                getId('upgrade10').style.display = rank >= 4 ? '' : 'none';\n                getId('upgrade11').style.display = rank >= 5 ? '' : 'none';\n                getId('upgrade12').style.display = rank >= 5 ? '' : 'none';\n                getId('upgrade13').style.display = rank >= 5 ? '' : 'none';\n            } else if (active === 4) {\n                const nova = player.researchesExtra[4][0];\n\n                getId('starsSpecial').style.display = buildings[2].trueTotal[0] > 0 ? '' : 'none';\n                getId('starSpecial2').style.display = buildings[3].trueTotal[0] > 0 ? '' : 'none';\n                getId('starSpecial3').style.display = buildings[4].trueTotal[0] > 0 ? '' : 'none';\n                getId('reset1Main').style.display = player.upgrades[4][0] === 1 ? '' : 'none';\n                getId('building2').style.display = nova >= 1 ? '' : 'none';\n                getId('building3').style.display = nova >= 2 ? '' : 'none';\n                getId('building4').style.display = nova >= 3 ? '' : 'none';\n                if (player.inflation.vacuum) { getId('building5').style.display = player.strangeness[4][9] >= 1 && (player.collapse.stars[2] > 0 || player.buildings[5][3].true > 0) ? '' : 'none'; }\n                getId('upgrade4').style.display = player.strangeness[4][2] >= 1 ? '' : 'none';\n            } else if (active === 5) {\n                if (!player.inflation.vacuum) {\n                    const nebula = player.milestones[2][0] >= 6;\n                    const cluster = player.milestones[3][0] >= 7;\n\n                    getId('buildings').style.display = nebula || cluster ? '' : 'none';\n                    getId('building1').style.display = nebula ? '' : 'none';\n                    getId('building2').style.display = cluster ? '' : 'none';\n                    getId('upgrades').style.display = nebula || cluster ? '' : 'none';\n                    getId('upgrade1').style.display = nebula ? '' : 'none';\n                    getId('upgrade2').style.display = cluster ? '' : 'none';\n                }\n                getId('building3').style.display = player.strangeness[5][6] >= 1 ? '' : 'none';\n                getId('upgrade3').style.display = buildings[3].true >= 1 ? '' : 'none';\n            }\n        } else if (subtab.stageCurrent === 'Advanced') {\n            if (player.inflation.vacuum) {\n                getId('challenge1').style.display = player.strangeness[5][0] >= 1 ? '' : 'none';\n            }\n        }\n    } else if (tab === 'research' || tab === 'Elements') {\n        const trueSubtab = tab === 'Elements' ? tab : subtab.researchCurrent;\n        if (trueSubtab === 'Researches') {\n            if (active === 1) {\n                getId('stageResearch').style.display = player.discharge.current >= 4 ? '' : 'none';\n                if (player.inflation.vacuum) {\n                    getId('researchExtra2').style.display = player.researchesExtra[1][2] >= 2 ? '' : 'none';\n                    getId('researchExtra4').style.display = player.researchesExtra[1][2] >= 1 ? '' : 'none';\n                    getId('researchExtra5').style.display = player.accretion.rank >= 6 ? '' : 'none';\n                    getId('extraResearch').style.display = player.discharge.current >= 5 ? '' : 'none';\n                }\n            } else if (active === 2) {\n                const buildings = player.buildings[2];\n\n                getId('extraResearch').style.display = player.vaporization.clouds[0] > 0 ? '' : 'none';\n                getId('research2').style.display = buildings[2].trueTotal[0] > 0 ? '' : 'none';\n                getId('research3').style.display = buildings[2].trueTotal[0] > 0 ? '' : 'none';\n                getId('research4').style.display = buildings[2].trueTotal[0] > 0 ? '' : 'none';\n                getId('research5').style.display = buildings[3].trueTotal[0] > 0 ? '' : 'none';\n                getId('research6').style.display = buildings[4].trueTotal[0] > 0 ? '' : 'none';\n                getId('researchExtra3').style.display = buildings[5].trueTotal[0] > 0 ? '' : 'none';\n                getId('researchExtra4').style.display = player.accretion.rank >= 6 ? '' : 'none';\n            } else if (active === 3) {\n                const rank = player.accretion.rank;\n\n                getId('stageResearch').style.display = rank >= 1 ? '' : 'none';\n                getId('research3').style.display = player.buildings[3][2].trueTotal[0] > 0 ? '' : 'none';\n                getId('research4').style.display = player.buildings[3][2].trueTotal[0] > 0 ? '' : 'none';\n                getId('research5').style.display = rank >= 3 ? '' : 'none';\n                getId('research6').style.display = rank >= 3 ? '' : 'none';\n                getId('research7').style.display = rank >= 4 || player.upgrades[3][4] === 1 ? '' : 'none';\n                getId('research8').style.display = rank >= 4 ? '' : 'none';\n                getId('research9').style.display = rank >= 5 ? '' : 'none';\n                getId('extraResearch').style.display = rank >= 2 ? '' : 'none';\n                getId('researchExtra2').style.display = rank >= 3 ? '' : 'none';\n                getId('researchExtra3').style.display = rank >= 4 ? '' : 'none';\n                getId('researchExtra4').style.display = rank >= 5 ? '' : 'none';\n                if (player.inflation.vacuum) {\n                    getId('researchExtra5').style.display = rank >= 3 && player.researchesExtra[1][2] >= 2 ? '' : 'none';\n                }\n            } else if (active === 4) {\n                const stars = player.collapse.stars;\n                const galaxy = player.buildings[5][3].true >= 1;\n\n                getId('research4').style.display = (galaxy || stars[0] > 0) && player.strangeness[4][2] >= 2 ? '' : 'none';\n                getId('research5').style.display = galaxy || stars[2] > 0 ? '' : 'none';\n                getId('researchExtra2').style.display = galaxy || stars[0] > 0 ? '' : 'none';\n                getId('researchExtra3').style.display = (galaxy || stars[0] > 0) && player.strangeness[4][2] >= 3 ? '' : 'none';\n            } else if (active === 5) {\n                if (!player.inflation.vacuum) {\n                    getId('stageResearch').style.display = player.milestones[2][0] >= 6 || player.milestones[3][0] >= 7 ? '' : 'none';\n                    getId('research1').style.display = player.milestones[2][0] >= 6 ? '' : 'none';\n                    getId('research2').style.display = player.milestones[3][0] >= 7 ? '' : 'none';\n                }\n            }\n        } else if (trueSubtab === 'Elements') {\n            const neutron = player.collapse.stars[1] > 0 || player.buildings[5][3].true >= 1;\n            const upgrades = player.upgrades[4];\n            const grid = getId('elementsGrid');\n\n            grid.style.display = upgrades[2] === 1 ? '' : 'flex';\n            for (let i = 6; i <= 10; i++) { getId(`element${i}`).style.display = upgrades[2] === 1 ? '' : 'none'; }\n            upgrades[2] === 1 && !neutron ? grid.classList.add('Elements10App') : grid.classList.remove('Elements10App');\n            for (let i = 11; i <= 26; i++) { getId(`element${i}`).style.display = neutron ? '' : 'none'; }\n            getId('element27').style.display = upgrades[3] === 1 ? '' : 'none';\n            getId('element28').style.display = upgrades[3] === 1 ? '' : 'none';\n        }\n    } else if (tab === 'strangeness') {\n        if (subtab.strangenessCurrent === 'Matter') {\n            const vacuum = player.inflation.vacuum;\n            const bound = player.strangeness[5][5] >= 1;\n\n            getId('strange1').style.display = player.strangeness[5][10] >= 1 ? '' : 'none';\n            getId('strange4Stage5').style.display = (vacuum ? bound : player.milestones[2][0] >= 6) ? '' : 'none';\n            getId('strange5Stage5').style.display = (vacuum ? bound : player.milestones[3][0] >= 7) ? '' : 'none';\n            getId('strange7Stage5').style.display = bound ? '' : 'none';\n            getId('strange8Stage5').style.display = (vacuum ? bound : player.milestones[2][0] >= 6) ? '' : 'none';\n            if (vacuum) {\n                const voidProgress = player.challenges.void;\n\n                getId('strange10Stage1').style.display = voidProgress[1] >= 1 ? '' : 'none';\n                getId('strange11Stage1').style.display = voidProgress[1] >= 2 ? '' : 'none';\n                getId('strange12Stage1').style.display = voidProgress[4] >= 2 ? '' : 'none';\n                getId('strange10Stage2').style.display = voidProgress[2] >= 1 ? '' : 'none';\n                getId('strange11Stage2').style.display = voidProgress[2] >= 2 ? '' : 'none';\n                getId('strange10Stage3').style.display = voidProgress[4] >= 4 ? '' : 'none';\n                getId('strange11Stage3').style.display = voidProgress[1] >= 3 ? '' : 'none';\n                getId('strange11Stage4').style.display = voidProgress[4] >= 3 ? '' : 'none';\n                getId('strange9Stage5').style.display = voidProgress[4] >= 1 ? '' : 'none';\n                getId('strange10Stage5').style.display = bound ? '' : 'none';\n                getId('strange11Stage5').style.display = voidProgress[3] >= 5 ? '' : 'none';\n            } else {\n                const strange5 = player.milestones[4][0] >= 8;\n\n                getId('strangeBoostMain').style.display = strange5 ? '' : 'none';\n                getId('strange9Stage1').style.display = strange5 ? '' : 'none';\n                getId('strange8Stage2').style.display = strange5 ? '' : 'none';\n                getId('strange8Stage3').style.display = strange5 ? '' : 'none';\n                getId('strange9Stage4').style.display = strange5 ? '' : 'none';\n                getId('strangenessSection5').style.display = strange5 ? '' : 'none';\n                getId('strange6Stage5').style.display = player.milestones[2][0] >= 6 || player.milestones[3][0] >= 7 ? '' : 'none';\n            }\n        } else if (subtab.strangenessCurrent === 'Milestones') {\n            if (!player.inflation.vacuum) {\n                getId('milestone1Stage5Div').style.display = player.strangeness[5][8] >= 1 ? '' : 'none';\n                getId('milestone2Stage5Div').style.display = player.strangeness[5][8] >= 1 && player.strangeness[5][6] >= 1 ? '' : 'none';\n            }\n        }\n    } else if (tab === 'settings') {\n        if (subtab.settingsCurrent === 'Settings') {\n            const { strangeness } = player;\n            const trueStage = player.stage.true;\n\n            getId('toggleAuto0').style.display = strangeness[5][2] >= 1 ? '' : 'none';\n            getId('toggleAuto0Main').style.display = strangeness[5][2] >= 1 ? '' : 'none';\n            getId('exportSpecial').style.display = player.strange[0].total > 0 ? '' : 'none';\n            getId('exportType').textContent = global.strangeInfo.name[strangeness[5][10]];\n            getId('saveNameMatter').style.display = strangeness[5][10] >= 1 ? '' : 'none';\n            getId('allStructuresHotkey').style.display = strangeness[1][7] >= 1 ? '' : 'none';\n            getId('toggle0').style.display = strangeness[1][7] >= 2 ? '' : 'none';\n            getId('offlineHotkey').style.display = strangeness[1][7] >= 2 ? '' : 'none';\n            getId('autoToggle5').style.display = strangeness[3][6] >= 1 ? '' : 'none';\n            getId('autoToggle6').style.display = strangeness[3][6] >= 2 ? '' : 'none';\n            getId('autoToggle7').style.display = strangeness[3][6] >= 3 ? '' : 'none';\n            getId('autoToggle8').style.display = strangeness[4][4] >= 2 ? '' : 'none';\n            getId('toggleAuto1').style.display = strangeness[1][3] >= 1 ? '' : 'none';\n            getId('toggleAuto2').style.display = strangeness[2][4] >= 1 ? '' : 'none';\n            getId('toggleAuto2Main').style.display = strangeness[2][4] >= 1 ? '' : 'none';\n            getId('toggleAuto3').style.display = strangeness[3][4] >= 1 ? '' : 'none';\n            getId('toggleAuto4').style.display = strangeness[4][5] >= 1 ? '' : 'none';\n            getId('toggleAuto4Main').style.display = strangeness[4][5] >= 1 ? '' : 'none';\n            getId('stageReward').textContent = global.strangeInfo.name[strangeness[5][10]];\n            getId('collapseGalaxy').style.display = strangeness[5][6] >= 2 ? '' : 'none';\n            if (trueStage < 2) { getId('resetToggles').style.display = player.discharge.current >= 1 ? '' : 'none'; }\n            if (trueStage < 3) { getId('vaporizationToggleReset').style.display = player.vaporization.clouds[0] > 0 ? '' : 'none'; }\n            if (trueStage < 4) { getId('rankToggleReset').style.display = player.accretion.rank >= 2 ? '' : 'none'; }\n            if (trueStage < 5) {\n                getId('collapseToggleReset').style.display = player.collapse.mass > 0.01235 ? '' : 'none';\n                getId('elementsAsSubtab').style.display = player.upgrades[4][1] === 1 ? '' : 'none';\n            }\n            if (trueStage < 7) { getId('switchTheme6').style.display = trueStage === 6 && strangeness[5][0] >= 1 ? '' : 'none'; }\n        } else if (subtab.settingsCurrent === 'History') {\n            const stageBest = player.history.stage.best;\n            const converted = stageBest[0] / 1e12 ** stageBest[2];\n            getId('stageBestReset1').textContent = `${format(converted)} ${global.strangeInfo.name[stageBest[2]]}`;\n            getId('stageBestReset2').textContent = format(stageBest[1], { type: 'time' });\n            getId('stageBestReset3').textContent = `${format(converted / stageBest[1], { padding: true })} per second`;\n            updateHistory(/*'stage'*/);\n        } else if (subtab.settingsCurrent === 'Stats') {\n            const { strange, strangeness } = player;\n            const buildings = player.buildings[active];\n\n            getId('maxExportStats').style.display = strange[0].total > 0 ? '' : 'none';\n            getId('maxExportType').textContent = global.strangeInfo.name[strangeness[5][10]];\n            getId('stageBest').style.display = strange[0].total > 0 ? '' : 'none';\n            getId('stageBestType').textContent = global.strangeInfo.name[strangeness[5][10]];\n            getId('stageResets').style.display = player.stage.resets > 0 ? '' : 'none';\n            for (let i = 1; i < global.buildingsInfo.maxActive[active]; i++) {\n                getId(`building${i}Stats`).style.display = buildings[i].trueTotal[0] > 0 ? '' : 'none';\n            }\n            getId('strangeAllStats').style.display = strange[0].total > 0 ? '' : 'none';\n            for (let i = 1; i < strange.length; i++) {\n                getId(`strange${i}Stats`).style.display = strange[i].total > 0 ? '' : 'none';\n            }\n            getId('strange0StatProdDiv').style.display = strangeness[5][10] >= 1 ? '' : 'none';\n\n            getId('solarMassStats').style.display = active === 4 || active === 5 ? '' : 'none';\n            if (!player.inflation.vacuum) { updateUnknown(); }\n            if (active === 1) {\n                getId('energyTrue').style.display = strangeness[1][11] < 1 && player.discharge.energyMax >= (player.inflation.vacuum ? 36 : 9) ? '' : 'none';\n                getId('energyStats').style.display = player.discharge.energyMax >= (player.inflation.vacuum ? 36 : 9) ? '' : 'none';\n                getId('dischargeStats').style.display = player.discharge.current + global.dischargeInfo.bonus > 0 ? '' : 'none';\n                getId('dischargeStatTrue').style.display = global.dischargeInfo.bonus > 0 ? '' : 'none';\n            } else if (active === 2) {\n                getId('cloudsEffect').style.display = player.upgrades[2][2] === 1 ? '' : 'none';\n                getId('rainEffect').style.display = player.researchesExtra[2][1] >= 1 ? '' : 'none';\n                getId('cloudsStats').style.display = player.vaporization.cloudsMax[0] > 0 ? '' : 'none';\n                getId('oceanWorld').style.display = strangeness[2][9] >= 1 ? '' : 'none';\n            } else if (active === 3) {\n                if (player.inflation.vacuum) {\n                    getId('rankStat0').style.display = strangeness[2][9] >= 1 ? '' : 'none';\n                }\n                for (let i = 1; i < global.accretionInfo.rankImage.length; i++) { getId(`rankStat${i}`).style.display = player.accretion.rank >= i ? '' : 'none'; }\n            } else if (active === 4) {\n                getId('star1Stats').style.display = buildings[2].trueTotal[0] > 0 ? '' : 'none';\n                getId('star2Stats').style.display = buildings[3].trueTotal[0] > 0 ? '' : 'none';\n                getId('star3Stats').style.display = buildings[4].trueTotal[0] > 0 ? '' : 'none';\n            }\n        }\n    }\n};\n\nexport const getUpgradeDescription = (index: number, type: 'upgrades' | 'researches' | 'researchesExtra' | 'ASR' | 'elements') => {\n    if (type === 'elements') {\n        const { elementsInfo } = global;\n        global.lastElement = index;\n\n        getId('elementText').textContent = `${elementsInfo.name[index]}.`;\n        getId('elementEffect').textContent = player.elements[index] >= 1 || (player.collapse.show >= index && index !== 0) ? elementsInfo.effectText[index]() : 'Effect is not yet known.';\n        getId('elementCost').textContent = player.elements[index] >= 1 ? 'Obtained.' : player.elements[index] > 0 ? 'Awaiting Collapse.' : `${format(elementsInfo.startCost[index])} ${global.stageInfo.priceName}.`;\n        return;\n    }\n\n    const stageIndex = player.stage.active;\n    if (type === 'upgrades') {\n        const pointer = global.upgradesInfo[stageIndex];\n        global.lastUpgrade[stageIndex] = index;\n\n        getId('upgradeText').textContent = `${pointer.name[index]}.`;\n        getId('upgradeEffect').textContent = pointer.effectText[index]();\n        getId('upgradeCost').textContent = player.upgrades[stageIndex][index] >= 1 ? 'Created.' :\n            stageIndex === 4 && global.collapseInfo.unlockU[index] > player.collapse.mass ? `Unlocked at ${format(global.collapseInfo.unlockU[index])} Mass.` :\n            `${format(pointer.startCost[index])} ${global.stageInfo.priceName}.`;\n    } else if (type === 'researches' || type === 'researchesExtra') {\n        const pointer = global[`${type}Info`][stageIndex];\n        global.lastResearch[stageIndex] = [index, type];\n        if (type === 'researchesExtra' && stageIndex === 4 && index === 0) { pointer.name[0] = ['Nova', 'Supernova', 'Hypernova'][Math.min(player.researchesExtra[4][0], 2)]; }\n\n        getId('researchText').textContent = `${pointer.name[index]}.`;\n        getId('researchEffect').textContent = pointer.effectText[index]();\n        getId('researchCost').textContent = player[type][stageIndex][index] >= pointer.max[index] ? 'Maxed.' :\n            stageIndex === 4 && type === 'researches' && global.collapseInfo.unlockR[index] > player.collapse.mass ? `Unlocked at ${format(global.collapseInfo.unlockR[index])} Mass.` :\n            `${format(pointer.cost[index])} ${global.stageInfo.priceName}.`;\n    } else if (type === 'ASR') {\n        const autoIndex = Math.min(player.ASR[stageIndex] + 1, global.ASRInfo.max[stageIndex]);\n        global.lastResearch[stageIndex] = [0, 'ASR'];\n\n        getId('researchText').textContent = 'Structure Automation.';\n        getId('researchEffect').textContent = `Automatically make ${player.buildings[stageIndex][autoIndex].highest[0] > 0 ? global.buildingsInfo.name[stageIndex][autoIndex] : '(unknown)'}.\\n(Auto will wait until ${format(player.strangeness[1][7] < 1 ? 2 : player.toggles.shop.wait[stageIndex])} times of the Structure cost)`;\n        getId('researchCost').textContent = player.ASR[stageIndex] >= global.ASRInfo.max[stageIndex] ? 'Maxed.' : `${format(global.ASRInfo.cost[stageIndex])} ${global.stageInfo.priceName}.`;\n    }\n};\n\nexport const getStrangenessDescription = (index: number, stageIndex: number, type: 'strangeness' | 'milestones') => {\n    const stageText = getId(`${type}Stage`);\n    stageText.style.color = global.stageInfo.textColor[stageIndex];\n    stageText.textContent = `${global.stageInfo.word[stageIndex]}. `;\n    if (type === 'strangeness') {\n        const pointer = global.strangenessInfo[stageIndex];\n\n        getId('strangenessText').textContent = `${pointer.name[index]}.`;\n        getId('strangenessEffect').textContent = pointer.effectText[index]();\n        getId('strangenessCost').textContent = player.strangeness[stageIndex][index] >= pointer.max[index] ? 'Maxed.' : `${format(pointer.cost[index])} Strange quarks.`;\n    } else {\n        const pointer = global.milestonesInfo[stageIndex];\n\n        getId('milestonesText').textContent = `${pointer.name[index]}. (${format(player.milestones[stageIndex][index])})`;\n        if (player.inflation.vacuum) {\n            getId('milestonesMultiline').innerHTML = `<p class=\"orchidText\">Requirement: <span class=\"greenText\">${pointer.needText[index]()}</span></p>\n            <p class=\"darkvioletText\">Effect: <span class=\"greenText\">${pointer.rewardText[index]()}</span></p>`;\n        } else if (pointer.need[index][0] !== 0) {\n            getId('milestonesMultiline').innerHTML = `<p class=\"orchidText\">Requirement: <span class=\"greenText\">${pointer.needText[index]()}</span></p>\n            <p class=\"darkvioletText\">Unlock: <span class=\"greenText\">Main reward unlocked after ${pointer.scalingOld[index].length - player.milestones[stageIndex][index]} more completions.</span></p>`;\n        } else { getId('milestonesMultiline').innerHTML = `<p class=\"darkvioletText\">Reward: <span class=\"greenText\">${pointer.rewardText[index]()}</span></p>`; }\n    }\n};\n\nexport const getChallengeDescription = (index: number) => {\n    const multi = getId('challengeMultiline');\n\n    let text;\n    if (index === -1) {\n        text = `<h3 class=\"orchidText\">Vacuum state: <span ${player.inflation.vacuum ? 'class=\"greenText\">true' : 'class=\"redText\">false'}</span></h3>`;\n    } else {\n        const { challengesInfo: info } = global;\n        const color = `${info.color[index]}Text`;\n        text = `<h3 class=\"${color} bigWord\">${info.name[index]}${player.challenges.active === index ? ', <span class=\"greenText\">active</span>' : ''}</h3>\n        <p class=\"whiteText\">${info.description[index]}</p>\n        <div><h4 class=\"${color} bigWord\">Effect:</h4>\n        <p>${info.effectText[index]()}</p></div>`;\n    }\n\n    if (index === 0) {\n        const progress = player.challenges.void;\n\n        getId('voidRewards').style.display = '';\n        getId('voidRewardSubmerged').style.display = progress[1] >= 3 ? '' : 'none';\n        getId('voidRewardAccretion').style.display = progress[1] >= 2 ? '' : 'none';\n        getId('voidRewardInterstellar').style.display = progress[3] >= 5 ? '' : 'none';\n    } else { getId('voidRewards').style.display = 'none'; }\n\n    if (multi.innerHTML !== text) { multi.innerHTML = text; }\n};\n\nexport const getChallengeReward = (index: number/*, type: 'void'*/) => {\n    const need = global.challengesInfo.needText[0][index];\n    const reward = global.challengesInfo.rewardText[0][index];\n    const level = player.challenges.void[index];\n    let text = '';\n    for (let i = 0; i < need.length; i++) {\n        text += `<div><p><span class=\"${level > i ? 'greenText' : 'redText'}\">\u2192</span> ${index === 2 && i === 1 ? need[i].replace('1e4', `${format(1e4)}`) : need[i]}</p>\n        <p><span class=\"${level > i ? 'greenText' : 'redText'}\">Reward:</span> ${level > i ? reward[i] : 'Not yet unlocked'}</p></div>`;\n    }\n\n    const multi = getId('voidRewardsDivText');\n    if (multi.innerHTML !== text) { multi.innerHTML = text; }\n};\n\nexport const visualUpdateUpgrades = (index: number, stageIndex: number, type: 'upgrades' | 'elements') => {\n    if (type === 'upgrades') {\n        if (stageIndex !== player.stage.active) { return; }\n\n        let color = '';\n        const image = getId(`upgrade${index + 1}`);\n        if (player.upgrades[stageIndex][index] >= 1) {\n            if (stageIndex === 1) {\n                color = 'green';\n            } else if (stageIndex === 2) {\n                color = 'darkgreen';\n            } else if (stageIndex === 3) {\n                color = '#0000b1'; //Darker blue\n            } else if (stageIndex === 4) {\n                color = '#1f1f8f'; //Brigher midnightblue\n            } else if (stageIndex === 5) {\n                color = '#990000'; //Brigher maroon\n            }\n            image.tabIndex = global.screenReader[1] ? -1 : 0;\n        } else { image.tabIndex = 0; }\n        image.style.backgroundColor = color;\n    } else /*if (type === 'elements')*/ {\n        const image = getId(`element${index}`);\n        if (player.elements[index] >= 1) {\n            image.classList.remove('awaiting');\n            image.classList.add('created');\n            image.tabIndex = global.screenReader[1] ? -1 : 0;\n        } else if (player.elements[index] > 0) {\n            image.classList.add('awaiting');\n            image.classList.remove('created');\n            image.tabIndex = 0;\n        } else {\n            image.classList.remove('awaiting');\n            image.classList.remove('created');\n            image.tabIndex = 0;\n        }\n    }\n};\n\nexport const visualUpdateResearches = (index: number, stageIndex: number, type: 'researches' | 'researchesExtra' | 'ASR' | 'strangeness') => {\n    let max: number;\n    let level: number;\n    let upgradeHTML: HTMLElement;\n    let image: HTMLElement;\n    if (type === 'researches' || type === 'researchesExtra') {\n        if (stageIndex !== player.stage.active) { return; }\n        max = global[`${type}Info`][stageIndex].max[index];\n        level = player[type][stageIndex][index];\n\n        const extra = type === 'researches' ? '' : 'Extra';\n        upgradeHTML = getId(`research${extra}${index + 1}Level`);\n        getId(`research${extra}${index + 1}Max`).textContent = `${max}`;\n        image = getQuery(`#research${extra}${index + 1} > input`);\n    } else if (type === 'ASR') {\n        if (stageIndex !== player.stage.active) { return; }\n        max = global.ASRInfo.max[stageIndex];\n        level = player.ASR[stageIndex];\n\n        upgradeHTML = getId('ASRLevel');\n        getId('ASRMax').textContent = `${max}`;\n        image = getQuery('#ASR > input');\n    } else /*if (type === 'strangeness')*/ {\n        max = global.strangenessInfo[stageIndex].max[index];\n        level = player.strangeness[stageIndex][index];\n\n        upgradeHTML = getId(`strange${index + 1}Stage${stageIndex}Level`);\n        getId(`strange${index + 1}Stage${stageIndex}Max`).textContent = `${max}`;\n        image = getQuery(`#strange${index + 1}Stage${stageIndex} > input`);\n    }\n\n    upgradeHTML.textContent = `${level}`;\n    if (level >= max) {\n        upgradeHTML.style.color = 'var(--green-text-color)';\n        image.tabIndex = global.screenReader[1] ? -1 : 0;\n    } else if (level === 0) {\n        upgradeHTML.style.color = ''; //Red\n        image.tabIndex = 0;\n    } else {\n        upgradeHTML.style.color = 'var(--orchid-text-color)';\n        image.tabIndex = 0;\n    }\n};\n\nconst updateHistory = (/*type: 'stage'*/) => {\n    const list = global.historyStorage.stage;\n\n    let text = '';\n    if (list.length > 0) {\n        for (let i = 0; i < list.length; i++) {\n            const converted = list[i][0] / 1e12 ** list[i][2];\n            text += `<li class=\"whiteText\"><span class=\"greenText\">${format(converted)} ${global.strangeInfo.name[list[i][2]]}</span>, <span class=\"blueText\">${format(list[i][1], { type: 'time' })}</span>, <span class=\"darkorchidText\">${format(converted / list[i][1], { padding: true })} per second</span></li>`;\n        }\n    } else { text = '<li class=\"redText\">Reference list is empty</li>'; }\n\n    const listID = getId('stageResetsList');\n    if (listID.innerHTML !== text) { listID.innerHTML = text; }\n};\n\nexport const format = (input: number | overlimit, settings = {} as { digits?: number, type?: 'number' | 'input' | 'time', padding?: boolean }): string => {\n    if (typeof input !== 'number') { return Limit(input).format(settings as any); }\n    const type = settings.type !== undefined ? settings.type : 'number';\n\n    switch (type) {\n        case 'input':\n        case 'number': {\n            if (!isFinite(input)) { return `${input}`; }\n            const inputAbs = Math.abs(input);\n            if (inputAbs >= 1e6 || (inputAbs < 1e-3 && inputAbs > 0)) {\n                const precision = settings.digits !== undefined ? settings.digits : 2;\n                let digits = Math.floor(Math.log10(inputAbs));\n                let result = Math.round(input / 10 ** (digits - precision)) / (10 ** precision);\n                if (Math.abs(result) === 10) {\n                    result = 1;\n                    digits++;\n                }\n                const formated = settings.padding === true ? result.toFixed(precision) : `${result}`;\n                if (type === 'input') { return `${formated}e${digits}`; }\n                return `${formated.replace('.', player.separator[1])}e${digits}`;\n            }\n\n            const precision = settings.digits !== undefined ? settings.digits : Math.max(4 - Math.floor(Math.log10(Math.max(inputAbs, 1))), 0);\n            const result = Math.round(input * 10 ** precision) / 10 ** precision;\n            let formated = settings.padding === true ? result.toFixed(precision) : `${result}`;\n            if (type === 'input') { return formated; }\n            formated = formated.replace('.', player.separator[1]);\n            return result >= 1e3 ? formated.replace(/\\B(?=(\\d{3})+(?!\\d))/, player.separator[0]) : formated;\n        }\n        case 'time':\n            if (input > 86399999) { return `${Math.round(input / 31556952)} years`; }\n            if (input > 3599999) { return `${Math.round(input / 86400)} days`; }\n            if (input > 59999) { return `${Math.round(input / 3600)} hours`; }\n            if (input > 999) { return `${Math.round(input / 60)} minutes`; }\n            return `${Math.round(input)} seconds`;\n    }\n};\n\n//Soft means that Stage wasn't changed\nexport const stageUpdate = (extra = 'normal' as 'normal' | 'soft' | 'reload') => {\n    const { stageInfo, buildingsInfo } = global;\n    const { active, current, true: highest, resets } = player.stage;\n    const vacuum = player.inflation.vacuum;\n\n    stageInfo.activeAll = [vacuum ? 1 : current];\n    const activeAll = stageInfo.activeAll;\n    if (vacuum) {\n        if (player.researchesExtra[1][2] >= 2) { activeAll.push(2); }\n        if (player.researchesExtra[1][2] >= 1) { activeAll.push(3); }\n        if (player.accretion.rank >= 6) {\n            activeAll.push(4);\n            if (player.strangeness[5][5] >= 1 && (/*current >= 5 ||*/ player.challenges.active !== 0)) { activeAll.push(5); }\n        }\n    } else {\n        if (current === 4) {\n            if (player.milestones[5][0] >= 6) { activeAll.push(5); }\n        } else if (current === 5) { activeAll.unshift(4); }\n        for (let i = player.strangeness[5][0]; i >= 1; i--) {\n            if (current !== i) { activeAll.unshift(i); }\n        }\n    }\n\n    for (let s = 1; s <= 6; s++) {\n        for (const element of getClass(`stage${s}Only`)) {\n            element.style.display = active === s ? '' : 'none';\n        }\n        for (const element of getClass(`stage${s}Include`)) {\n            element.style.display = activeAll.includes(s) ? '' : 'none';\n        }\n        for (const element of getClass(`stage${s}Unlock`)) {\n            element.style.display = highest >= s ? '' : 'none';\n        }\n    }\n\n    getId('stageSelect').style.display = activeAll.length > 1 ? '' : 'none';\n    if (player.strange[0].total === 0) { getId('strangenessTabBtn').style.display = 'none'; }\n    if (vacuum) {\n        getId('stageReset').textContent = current >= 5 ? 'Return back to start' : 'Not ready for reset';\n        if (resets < 1) {\n            if (current < 5) {\n                getId('resetStage').style.display = 'none';\n                getId('stageTimeMain').style.display = 'none';\n                getId('stageToggleReset').style.display = 'none';\n                getId('stageSwitchHotkey').style.display = 'none';\n            }\n        } else {\n            getId('dischargeToggleReset').style.display = '';\n            getId('vaporizationToggleReset').style.display = '';\n            getId('rankToggleReset').style.display = '';\n            getId('collapseToggleReset').style.display = '';\n        }\n    } else {\n        for (let s = 2; s <= 4; s++) {\n            getId(`strangenessSection${s}`).style.display = resets >= s + 3 ? '' : 'none';\n            getId(`milestone1Stage${s}Div`).style.display = resets >= s + 3 ? '' : 'none';\n            getId(`milestone2Stage${s}Div`).style.display = resets >= s + 3 ? '' : 'none';\n        }\n    }\n    const stageWord = getId('stageWord');\n    stageWord.textContent = stageInfo.word[current];\n    stageWord.style.color = stageInfo.textColor[current];\n\n    if (extra === 'soft') {\n        numbersUpdate();\n        visualUpdate();\n        return;\n    } else if (global.screenReader[0]) { //Firefox doesn't support any Aria shorthands\n        getId('reset1Main').setAttribute('aria-label', `${['', 'Discharge', 'Vaporization', 'Rank', 'Collapse', ''][active]} reset (hotkey ${['', 'D', 'V', 'R', 'C'][active]})`);\n        for (let i = 1; i < buildingsInfo.maxActive[active]; i++) {\n            getId(`building${i}`).setAttribute('aria-label', `${buildingsInfo.name[active][i]} (hotkey ${i})`);\n        }\n        getId('extraResearch').setAttribute('aria-label', `${['', 'Energy', 'Cloud', 'Rank', 'Collapse', ''][active]} researches`);\n        getId('SRStage').textContent = `Current Active Stage is '${stageInfo.word[active]}'${extra === 'reload' && player.challenges.active !== -1 ? `, also inside '${global.challengesInfo.name[player.challenges.active]}'` : ''}`;\n    }\n\n    for (const text of ['upgrade', 'research', 'element']) {\n        getId(`${text}Text`).textContent = 'Hover to see.';\n        getId(`${text}Effect`).textContent = 'Hover to see.';\n        getId(`${text}Cost`).textContent = 'Resource.';\n    }\n    if (extra === 'reload') {\n        for (let s = 1; s <= 5; s++) {\n            global.lastUpgrade[s] = -1;\n            global.lastResearch[s][0] = -1;\n        }\n        global.lastElement = -1;\n        for (const text of ['strangeness', 'milestones']) {\n            getId(`${text}Stage`).textContent = '';\n            getId(`${text}Text`).textContent = 'Hover to see.';\n        }\n        getId('strangenessEffect').textContent = 'Hover to see.';\n        getId('strangenessCost').textContent = 'Strange quarks.';\n        getId('milestonesMultiline').innerHTML = '<p class=\"orchidText\">Requirement: <span class=\"greenText\">Hover to see.</span></p><p class=\"darkvioletText\">Unlock: <span class=\"greenText\">Hover to see.</span></p>';\n        getChallengeDescription(-1);\n\n        global.lastActive = null;\n        for (let i = 0; i < global.elementsInfo.startCost.length; i++) { visualUpdateUpgrades(i, 4, 'elements'); }\n        assignBuildingInformation();\n\n        autoUpgradesSet('all');\n        autoResearchesSet('researches', 'all');\n        autoResearchesSet('researchesExtra', 'all');\n        autoElementsSet();\n    }\n\n    for (let i = buildingsInfo.maxActive[active]; i < specialHTML.longestBuilding; i++) {\n        getId(`building${i}Stats`).style.display = 'none';\n        getId(`building${i}`).style.display = 'none';\n    }\n    for (let i = global.upgradesInfo[active].maxActive; i < specialHTML.longestUpgrade; i++) {\n        getId(`upgrade${i + 1}`).style.display = 'none';\n    }\n    for (let i = global.researchesInfo[active].maxActive; i < specialHTML.longestResearch; i++) {\n        getId(`research${i + 1}`).style.display = 'none';\n    }\n    for (let i = global.researchesExtraInfo[active].maxActive; i < specialHTML.longestResearchExtra; i++) {\n        getId(`researchExtra${i + 1}`).style.display = 'none';\n    }\n    for (let i = specialHTML.footerStatsHTML[active].length; i < specialHTML.longestFooterStats; i++) {\n        getId(`footerStat${i + 1}`).style.display = 'none';\n    }\n\n    const showU: number[] = []; //Upgrades\n    const showR: number[] = []; //Researches\n    const showRE: number[] = []; //ResearchesExtra\n    const showF: number[] = []; //Footer stats\n    if (active === 1) {\n        showU.push(3, 4, 5, 6);\n        showR.push(1, 2, 3, 4, 5, 6);\n        showF.push(1, 2);\n        if (vacuum) {\n            showU.unshift(1, 2);\n            showRE.push(1, 3);\n        } else {\n            getId('upgrade1').style.display = 'none';\n            getId('upgrade2').style.display = 'none';\n            getId('extraResearch').style.display = 'none';\n        }\n    } else if (active === 2) {\n        showU.push(1);\n        showR.push(1, 2);\n        showRE.push(1, 2);\n        showF.push(2, 3);\n    } else if (active === 3) {\n        getId('reset1Main').style.display = '';\n        showU.push(1, 2);\n        showR.push(1, 2);\n        showRE.push(1);\n        showF.push(1);\n    } else if (active === 4) {\n        getId('extraResearch').style.display = '';\n        showU.push(1, 2, 3);\n        showR.push(1, 2, 3);\n        showRE.push(1);\n        showF.push(1, 2);\n    } else if (active === 5) {\n        getId('reset1Main').style.display = 'none';\n        getId('extraResearch').style.display = 'none';\n        showF.push(1, 2, 3);\n        if (vacuum) {\n            getId('building2').style.display = '';\n            showU.push(1, 2);\n            showR.push(1, 2);\n        }\n    }\n\n    (getId('autoWaitInput') as HTMLInputElement).value = format(player.toggles.shop.wait[active], { type: 'input' });\n    getId('reset1Text').innerHTML = specialHTML.resetHTML[active]; //New ID's inside\n    if (active === 3) { updateRankInfo(); }\n\n    const buildingHTML = specialHTML.buildingHTML[active];\n    for (let i = 1; i < buildingsInfo.maxActive[active]; i++) {\n        (getId(`building${i}Image`) as HTMLImageElement).src = `Used_art/${buildingHTML[i - 1]}`;\n        getId(`building${i}StatName`).textContent = buildingsInfo.name[active][i];\n        getId(`building${i}Name`).textContent = buildingsInfo.name[active][i];\n        getQuery(`#building${i}ProdDiv > span`).textContent = buildingsInfo.type[active][i];\n        getId(`building${i}ProdDiv`).title = buildingsInfo.hoverText[active][i - 1];\n        toggleSwap(i, 'buildings');\n    }\n    getId('building0StatName').textContent = buildingsInfo.name[active][0];\n    toggleSwap(0, 'buildings');\n\n    const upgradeHTML = specialHTML.upgradeHTML[active];\n    for (let i = 0; i < global.upgradesInfo[active].maxActive; i++) {\n        const image = getId(`upgrade${i + 1}`) as HTMLInputElement;\n        if (showU.includes(i + 1)) { image.style.display = ''; }\n        image.src = `Used_art/${upgradeHTML[i][0]}`;\n        image.alt = upgradeHTML[i][1];\n        visualUpdateUpgrades(i, active, 'upgrades');\n    }\n\n    const researchHTML = specialHTML.researchHTML[active];\n    for (let i = 0; i < global.researchesInfo[active].maxActive; i++) {\n        const main = getId(`research${i + 1}`);\n        if (showR.includes(i + 1)) { main.style.display = ''; }\n        main.className = researchHTML[i][2];\n        const image = getId(`research${i + 1}Image`) as HTMLInputElement;\n        image.src = `Used_art/${researchHTML[i][0]}`;\n        image.alt = researchHTML[i][1];\n        visualUpdateResearches(i, active, 'researches');\n    }\n\n    if (active !== 5) {\n        const researchExtraHTML = specialHTML.researchExtraHTML[active];\n        for (let i = 0; i < global.researchesExtraInfo[active].maxActive; i++) {\n            const main = getId(`researchExtra${i + 1}`);\n            if (showRE.includes(i + 1)) { main.style.display = ''; }\n            main.className = researchExtraHTML[i][2];\n            const image = getId(`researchExtra${i + 1}Image`) as HTMLInputElement;\n            image.src = `Used_art/${researchExtraHTML[i][0]}`;\n            image.alt = researchExtraHTML[i][1];\n            visualUpdateResearches(i, active, 'researchesExtra');\n        }\n        getQuery('#extraResearch > div').className = specialHTML.researchExtraDivHTML[active][1];\n        (getQuery('#extraResearch > img') as HTMLImageElement).src = `Used_art/${specialHTML.researchExtraDivHTML[active][0]}`;\n    }\n    visualUpdateResearches(0, active, 'ASR');\n\n    const footerStatsHTML = specialHTML.footerStatsHTML[active];\n    for (let i = 0; i < footerStatsHTML.length; i++) {\n        if (showF.includes(i + 1)) { getId(`footerStat${i + 1}`).style.display = ''; }\n        (getQuery(`#footerStat${i + 1} > img`) as HTMLImageElement).src = `Used_art/${footerStatsHTML[i][0]}`;\n        getQuery(`#footerStat${i + 1} > p`).className = footerStatsHTML[i][1];\n        getId(`footerStat${i + 1}Name`).textContent = footerStatsHTML[i][2];\n    }\n\n    stageInfo.priceName = ['', 'Energy', 'Drops', 'Mass', 'Elements', 'Elements'][active];\n    const body = document.body.style;\n\n    if (active === 1) {\n        body.removeProperty('--stage-text-color');\n        body.removeProperty('--stage-button-color');\n        body.removeProperty('--stage-button-border');\n        body.removeProperty('--image-border-main');\n        body.removeProperty('--image-stage-outer');\n    } else {\n        body.setProperty('--stage-text-color', stageInfo.textColor[active]);\n        body.setProperty('--stage-button-color', stageInfo.buttonBackgroundColor[active]);\n        body.setProperty('--stage-button-border', stageInfo.buttonBorderColor[active]);\n        body.setProperty('--image-border-main', `url(\"Used_art/Stage${active} border.png\")`);\n        body.setProperty('--image-stage-outer', stageInfo.imageBorderColor[active]);\n    }\n    getId('currentSwitch').textContent = stageInfo.word[active];\n\n    if (global.lastActive === null) { switchTab(checkTab(global.tab) ? global.tab : 'stage'); }\n    switchTheme();\n};\n\nexport const updateRankInfo = () => { //Visual only\n    const name = getId('rankName', false);\n    if (name === null) { return; } //Safety\n    const rank = player.accretion.rank;\n\n    getId('rankMessage', false).textContent = rank === 0 ?\n        'Might need more than just water... Increase Rank with Mass.' :\n        `Increase it with Mass. (Return back to ${player.inflation.vacuum ? 'Preons' : 'Dust'}, but unlock something new)`;\n    if (global.accretionInfo.rankCost[rank] === 0) { getId('reset1Button').textContent = 'Max Rank achieved'; }\n\n    (getId('rankImage', false) as HTMLImageElement).src = `Used_art/${global.accretionInfo.rankImage[rank]}`;\n    name.textContent = global.accretionInfo.rankName[rank];\n    if (rank === 0) {\n        name.style.color = 'var(--blue-text-color)';\n    } else if (rank === 1) {\n        name.style.color = 'var(--cyan-text-color)';\n    } else if (rank === 5) {\n        name.style.color = 'var(--darkviolet-text-color)';\n    } else if (rank === 6) {\n        name.style.color = 'var(--orange-text-color)';\n    } else {\n        name.style.color = 'var(--gray-text-color)';\n    }\n};\n", "import { allowedToBeReset } from './Check';\nimport { cloneArray, global, player, playerStart } from './Player';\nimport { autoResearchesSet, autoUpgradesSet, calculateMaxLevel, calculateResearchCost, assignBuildingInformation, autoElementsSet, assignEnergy, calculateMilestoneInformation, assignStrangeBoost } from './Stage';\nimport { numbersUpdate, stageUpdate, updateRankInfo, visualUpdate, visualUpdateResearches, visualUpdateUpgrades } from './Update';\n\nexport const reset = (type: 'discharge' | 'vaporization' | 'rank' | 'collapse' | 'galaxy', stageIndex: number[]) => {\n    if (type === 'galaxy') {\n        const { elements } = player;\n\n        for (let i = 1; i < elements.length; i++) {\n            if (!allowedToBeReset(i, 4, 'elements')) { continue; }\n\n            elements[i] = 0;\n            visualUpdateUpgrades(i, 4, 'elements');\n        }\n        autoElementsSet();\n\n        player.collapse.mass = 0.01235;\n        player.collapse.stars = [0, 0, 0];\n    }\n\n    for (const s of stageIndex) {\n        if (s === 2) {\n            global.researchesInfo[2].effect[0] = 0;\n            global.researchesInfo[2].effect[1] = 0;\n        } else if (s === 4) {\n            global.collapseInfo.trueStars = 0;\n        }\n\n        const buildings = player.buildings[s];\n        buildings[0].current = cloneArray(playerStart.buildings[s][0].current);\n        buildings[0].total = cloneArray(playerStart.buildings[s][0].total);\n        for (let i = 1; i < global.buildingsInfo.maxActive[s]; i++) {\n            if (!allowedToBeReset(i, s, 'structures')) { continue; }\n\n            buildings[i as 1].true = 0;\n            buildings[i].current = [0, 0];\n            buildings[i].total = [0, 0];\n        }\n\n        if (type === 'discharge') { continue; }\n        const upgrades = player.upgrades[s];\n\n        for (let i = 0; i < global.upgradesInfo[s].maxActive; i++) {\n            if (!allowedToBeReset(i, s, 'upgrades')) { continue; }\n\n            upgrades[i] = 0;\n            visualUpdateUpgrades(i, s, 'upgrades');\n        }\n        autoUpgradesSet(s);\n\n        if (type === 'vaporization') { continue; }\n        const researches = player.researches[s];\n\n        for (let i = 0; i < global.researchesInfo[s].maxActive; i++) {\n            if (!allowedToBeReset(i, s, 'researches')) { continue; }\n\n            researches[i] = 0;\n            visualUpdateResearches(i, s, 'researches');\n            calculateResearchCost(i, s, 'researches');\n        }\n        autoResearchesSet('researches', s);\n\n        if (type === 'rank') { continue; }\n        const researchesExtra = player.researchesExtra[s];\n\n        for (let i = 0; i < global.researchesExtraInfo[s].maxActive; i++) {\n            if (!allowedToBeReset(i, s, 'researchesExtra')) { continue; }\n\n            researchesExtra[i] = 0;\n            visualUpdateResearches(i, s, 'researchesExtra');\n            calculateResearchCost(i, s, 'researchesExtra');\n        }\n        autoResearchesSet('researchesExtra', s);\n    }\n\n    if (player.inflation.vacuum || type === 'discharge') {\n        if (player.strangeness[1][11] < 1) {\n            const startEnergy = type === 'galaxy' ? global.dischargeInfo.getEnergy(3, 5) : 0;\n            player.discharge.energy = startEnergy;\n            global.dischargeInfo.energyTrue = startEnergy;\n        } else { assignEnergy(); }\n    }\n\n    assignBuildingInformation();\n    if (stageIndex.includes(player.stage.active)) { numbersUpdate(); }\n    visualUpdate();\n};\n\nexport const resetStage = (stageIndex: number[], update = 'normal' as false | 'normal' | 'soft') => {\n    for (const s of stageIndex) {\n        const buildings = player.buildings[s];\n        const buildingsStart = playerStart.buildings[s];\n\n        for (let i = 1; i < global.buildingsInfo.maxActive[s]; i++) {\n            buildings[i as 1].true = 0;\n            buildings[i].current = [0, 0];\n            buildings[i].total = [0, 0];\n            buildings[i].trueTotal = [0, 0];\n        }\n        buildings[0].current = cloneArray(buildingsStart[0].current);\n        buildings[0].total = cloneArray(buildingsStart[0].total);\n        buildings[0].trueTotal = cloneArray(buildingsStart[0].trueTotal);\n\n        player.upgrades[s] = cloneArray(playerStart.upgrades[s]);\n        player.researches[s] = cloneArray(playerStart.researches[s]);\n        player.researchesExtra[s] = cloneArray(playerStart.researchesExtra[s]);\n        player.ASR[s] = player.strangeness[s][[6, 5, 5, 6, 7][s - 1]];\n        autoUpgradesSet(s);\n\n        global.lastUpgrade[s] = -1;\n        global.lastResearch[s][0] = -1;\n        if (s === 1) {\n            player.discharge.current = 0;\n            player.discharge.energy = 0;\n            global.dischargeInfo.energyTrue = 0;\n        } else if (s === 2) {\n            player.vaporization.clouds = [0, 0];\n            global.researchesInfo[2].effect[0] = 0;\n            global.researchesInfo[2].effect[1] = 0;\n        } else if (s === 3) {\n            if (player.inflation.vacuum) {\n                player.accretion.rank = 1;\n            } else {\n                player.accretion.rank = 0;\n                buildings[0].current = [5.97, 27];\n            }\n        } else if (s === 4) {\n            global.collapseInfo.trueStars = 0;\n            player.collapse.mass = 0.01235;\n            player.collapse.stars = [0, 0, 0];\n            player.elements = cloneArray(playerStart.elements);\n            player.elements[0] = player.strangeness[4][10] >= 1 ? 1 : 0;\n            autoElementsSet();\n            for (let i = 0; i < player.elements.length; i++) { visualUpdateUpgrades(i, 4, 'elements'); }\n            global.lastElement = -1;\n        } else if (s === 5) {\n            if (player.strangeness[5][6] >= 2) { player.ASR[5]++; }\n        }\n    }\n\n    for (const s of stageIndex) { //Less errors if do it separatly\n        for (let i = 0; i < global.researchesInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researches'); }\n        for (let i = 0; i < global.researchesExtraInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researchesExtra'); }\n        calculateMaxLevel(0, s, 'ASR');\n\n        autoResearchesSet('researches', s);\n        autoResearchesSet('researchesExtra', s);\n    }\n\n    assignBuildingInformation();\n\n    if (update !== false) {\n        global.lastActive = null;\n        stageUpdate(update);\n        if (update === 'soft') {\n            const active = player.stage.active;\n            for (let i = 0; i < global.upgradesInfo[active].maxActive; i++) { visualUpdateUpgrades(i, active, 'upgrades'); }\n            if (active === 3) { updateRankInfo(); }\n        }\n    }\n};\n\nexport const resetVacuum = () => {\n    for (let s = 1; s <= 5; s++) {\n        const buildings = player.buildings[s];\n        const buildingsStart = playerStart.buildings[s];\n\n        for (let i = 1; i < buildingsStart.length; i++) {\n            buildings[i as 1].true = 0;\n            buildings[i].current = [0, 0];\n            buildings[i].total = [0, 0];\n            buildings[i].trueTotal = [0, 0];\n            buildings[i].highest = [0, 0];\n        }\n        buildings[0].current = cloneArray(buildingsStart[0].current);\n        buildings[0].total = cloneArray(buildingsStart[0].total);\n        buildings[0].trueTotal = cloneArray(buildingsStart[0].trueTotal);\n        buildings[0].highest = cloneArray(buildingsStart[0].highest);\n\n        player.upgrades[s] = cloneArray(playerStart.upgrades[s]);\n        player.researches[s] = cloneArray(playerStart.researches[s]);\n        player.researchesExtra[s] = cloneArray(playerStart.researchesExtra[s]);\n        player.strangeness[s] = cloneArray(playerStart.strangeness[s]);\n        player.milestones[s] = cloneArray(playerStart.milestones[s]);\n        player.ASR[s] = 0;\n    }\n\n    //Stage 1\n    player.discharge.energy = 0;\n    player.discharge.energyMax = 0;\n    player.discharge.current = 0;\n    global.dischargeInfo.energyTrue = 0;\n\n    //Stage 2\n    player.vaporization.clouds = [0, 0];\n    player.vaporization.cloudsMax = [0, 0];\n    global.researchesInfo[2].effect[0] = 0;\n    global.researchesInfo[2].effect[1] = 0;\n\n    //Stage 3\n    if (player.inflation.vacuum) {\n        player.accretion.rank = 1;\n    } else {\n        player.accretion.rank = 0;\n        player.buildings[3][0].current = [5.97, 27];\n    }\n\n    //Stage 4\n    global.collapseInfo.trueStars = 0;\n    player.collapse.mass = 0.01235;\n    player.collapse.massMax = 0.01235;\n    player.collapse.stars = [0, 0, 0];\n    player.collapse.show = 0;\n    player.elements = cloneArray(playerStart.elements);\n\n    //Stage 5 and rest\n    global.historyStorage.stage = [];\n    player.history.stage.best = [0, 1, 0];\n    player.stage.resets = 0;\n    player.stage.best = 0;\n    player.stage.time = 0;\n    for (let i = 0; i < player.strange.length; i++) {\n        player.strange[i].current = 0;\n        player.strange[i].total = 0;\n    }\n\n    assignStrangeBoost();\n    for (let s = 1; s <= 5; s++) {\n        for (let i = 0; i < global.researchesInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researches'); }\n        for (let i = 0; i < global.researchesExtraInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researchesExtra'); }\n        calculateMaxLevel(0, s, 'ASR');\n    }\n    for (let s = 1; s < playerStart.strangeness.length; s++) {\n        for (let i = 0; i < global.strangenessInfo[s].maxActive; i++) {\n            calculateMaxLevel(i, s, 'strangeness');\n        }\n    }\n    for (let s = 1; s < playerStart.milestones.length; s++) {\n        for (let i = 0; i < playerStart.milestones[s].length; i++) {\n            calculateMilestoneInformation(i, s);\n        }\n    }\n\n    stageUpdate('reload');\n};\n", "import { checkBuilding, checkUpgrade, milestoneCheck } from './Check';\nimport Limit from './Limit';\nimport { getId } from './Main';\nimport { cloneArray, global, logAny, player } from './Player';\nimport { reset, resetStage } from './Reset';\nimport { Alert, Confirm, Notify, playEvent } from './Special';\nimport type { overlimit } from './Types';\nimport { format, getChallengeDescription, getStrangenessDescription, numbersUpdate, stageUpdate, switchTab, updateRankInfo, visualUpdateResearches, visualUpdateUpgrades } from './Update';\n\nexport const assignBuildingInformation = () => { //Sets buildingInfo.producing for all active buildings, also most of effects\n    const { upgradesInfo, researchesInfo, researchesExtraInfo, dischargeInfo, vaporizationInfo, milestonesInfo } = global;\n    const { buildings, upgrades, researches, researchesExtra, strangeness, discharge } = player;\n    const producing = global.buildingsInfo.producing;\n    const stageBoost = global.strangeInfo.stageBoost;\n    const activeAll = global.stageInfo.activeAll;\n    const vacuum = player.inflation.vacuum;\n    const inVoid = player.challenges.active === 0;\n    const energyMin = Math.max(discharge.energy, 1);\n\n    if (activeAll.includes(1)) {\n        const b3 = vacuum ? 3 : 1;\n        const b4 = vacuum ? 4 : 2;\n        const b5 = vacuum ? 5 : 3;\n\n        dischargeInfo.bonus = strangeness[1][2] / 2;\n        if (stageBoost[1] !== null) { dischargeInfo.bonus += stageBoost[1]; }\n        const dischargeBase = 4 + researches[1][4] + strangeness[1][0];\n        upgradesInfo[1].effect[5] = inVoid ? (dischargeBase - 1) / 2 + 1 : dischargeBase;\n        upgradesInfo[1].effect[7] = (102 + researches[1][1]) / 100;\n        researchesExtraInfo[1].effect[4] = 1 + upgradesInfo[1].effect[5] / 100;\n        let totalMultiplier = (upgradesInfo[1].effect[5] ** (discharge.current + dischargeInfo.bonus)) * (1.3 ** strangeness[1][9]);\n        if (vacuum) { totalMultiplier *= milestonesInfo[1].reward[0]; }\n\n        const listForMult5 = [buildings[1][b5].current];\n        let prod5Number = 0.2 * totalMultiplier;\n        if (vacuum && upgrades[1][4] === 1) { prod5Number *= 5; }\n        if (upgrades[1][7] === 1) { listForMult5.push(Limit(upgradesInfo[1].effect[7]).power(buildings[1][b5].true).toArray()); }\n        producing[1][b5] = Limit(prod5Number).multiply(...listForMult5).toArray();\n\n        upgradesInfo[1].effect[9] = energyMin > 4e4 ? (energyMin / 4e4) ** 0.4 * 4e4 : energyMin;\n        researchesInfo[1].effect[2] = 20 + strangeness[1][5];\n        researchesInfo[1].effect[5] = (discharge.current + dischargeInfo.bonus) ** (1.25 + researches[1][5] / 4);\n        researchesExtraInfo[1].effect[1] = researchesExtra[1][1] >= 4 ? 1.1 : researchesExtra[1][1] >= 3 ? 1.2 : (20 - 3 * researchesExtra[1][1]) / 10;\n        if (Limit(producing[1][b5]).moreThan('1')) {\n            let radiation = researchesInfo[1].effect[2] ** researches[1][2];\n            if (upgrades[1][9] === 1) { radiation *= upgradesInfo[1].effect[9]; }\n            if (researches[1][5] >= 1) { radiation *= researchesInfo[1].effect[5]; }\n            upgradesInfo[1].effect[8] = Limit(producing[1][b5]).log(researchesExtraInfo[1].effect[1]).multiply(radiation).toArray();\n        } else { upgradesInfo[1].effect[8] = [0, 0]; }\n\n        const listForMult4 = [buildings[1][b4].current];\n        let prod4Number = (vacuum ? 0.2 : 0.6) * totalMultiplier;\n        if (vacuum) {\n            if (upgrades[1][3] === 1) { prod4Number *= 5; }\n        } else if (upgrades[1][4] === 1) { prod4Number *= 5; }\n        if (upgrades[1][7] === 1) { listForMult4.push(Limit(upgradesInfo[1].effect[7]).power(buildings[1][b4].true).toArray()); }\n        producing[1][b4] = Limit(prod4Number).multiply(...listForMult4).toArray();\n\n        const listForMult3 = [buildings[1][b3].current];\n        let prod3Number = (vacuum ? 0.2 : 0.4) * totalMultiplier;\n        if (upgrades[1][0] === 1) { prod3Number *= 5; }\n        if (!vacuum && upgrades[1][3] === 1) { prod3Number *= 5; }\n        if (upgrades[1][7] === 1) { listForMult3.push(Limit(upgradesInfo[1].effect[7]).power(buildings[1][b3].true).toArray()); }\n        producing[1][b3] = Limit(prod3Number).multiply(...listForMult3).toArray();\n\n        if (vacuum) {\n            const listForMult2 = [buildings[1][2].current];\n            if (upgrades[1][7] === 1) { listForMult2.push(Limit(upgradesInfo[1].effect[7]).power(buildings[1][2].true).toArray()); }\n            producing[1][2] = Limit(0.2 * totalMultiplier).multiply(...listForMult2).toArray();\n\n            const listForMult1 = [buildings[1][1].current];\n            if (upgrades[1][7] === 1) { listForMult1.push(Limit(upgradesInfo[1].effect[7]).power(buildings[1][1].true).toArray()); }\n            producing[1][1] = Limit(0.001 * totalMultiplier).multiply(...listForMult1).toArray();\n            if (Limit(producing[1][1]).moreThan('1')) { producing[1][1] = Limit(producing[1][1]).power(0.15).toArray(); }\n        }\n    }\n    if (activeAll.includes(2)) {\n        let current5 = buildings[2][5].true;\n        let current4 = buildings[2][4].true;\n        let current3 = buildings[2][3].true;\n        let current2 = buildings[2][2].true;\n        if (upgrades[2][8] === 1) { current5 += buildings[2][6].true; }\n        if (upgrades[2][7] === 1) { current4 += current5; }\n        upgradesInfo[2].effect[6] = 1 + researches[2][5];\n        if (upgrades[2][6] === 1) { current3 += current4 * upgradesInfo[2].effect[6]; }\n        upgradesInfo[2].effect[5] = 1 + researches[2][4];\n        if (upgrades[2][5] === 1) { current2 += current3 * upgradesInfo[2].effect[5]; }\n        buildings[2][5].current = Limit(current5).toArray();\n        buildings[2][4].current = Limit(current4).toArray();\n        buildings[2][3].current = Limit(current3).toArray();\n        buildings[2][2].current = Limit(current2).toArray();\n\n        producing[2][6] = Limit(Math.max(2 * buildings[2][6].true, 1)).toArray();\n\n        const listForMult5 = [producing[2][6]];\n        const rain = vaporizationInfo.rainEffect();\n        researchesExtraInfo[2].effect[2] = (rain - 1) / 16 + 1;\n        let prod5Number = 2 * current5;\n        if (researchesExtra[2][2] >= 1) { prod5Number *= researchesExtraInfo[2].effect[2]; }\n        producing[2][5] = Limit(prod5Number).multiply(...listForMult5).max('1').toArray();\n\n        producing[2][4] = Limit(2 * current4).multiply(producing[2][5]).max('1').toArray();\n\n        producing[2][3] = Limit(2 * current3).multiply(producing[2][4]).max('1').toArray();\n\n        const listForMult2 = [producing[2][3], vaporizationInfo.cloudEffect()];\n        upgradesInfo[2].effect[3] = (1 + researches[2][2] / 2) / 100;\n        upgradesInfo[2].effect[4] = (1 + researches[2][3] / 2) / 100;\n        vaporizationInfo.tension = upgrades[2][3] === 1 ? Limit(buildings[2][0].current).max('1').power(upgradesInfo[2].effect[3]).toNumber() : 1;\n        vaporizationInfo.stress = upgrades[2][4] === 1 ? Limit(buildings[2][1].current).max('1').power(upgradesInfo[2].effect[4]).toNumber() : 1;\n        let prod2Number = (inVoid ? 0.0025 : 2) * current2 * vaporizationInfo.tension * vaporizationInfo.stress * rain * (1.5 ** strangeness[2][1]);\n        if (inVoid) {\n            upgradesInfo[2].effect[1] = Limit('1.01').power((current2 - buildings[2][2].true) ** 0.7 + buildings[2][2].true).toArray();\n        } else {\n            upgradesInfo[2].effect[1] = Limit('1.02').power((current2 - buildings[2][2].true) ** 0.7 + Math.min(buildings[2][2].true, 200)).toArray();\n            if (buildings[2][2].true > 200) { upgradesInfo[2].effect[1] = Limit('1.01').power(buildings[2][2].true - 200).multiply(upgradesInfo[2].effect[1]).toArray(); }\n        }\n        if (upgrades[2][1] === 1) { listForMult2.push(upgradesInfo[2].effect[1]); }\n        if (researches[2][1] >= 1) {\n            if (researchesInfo[2].effect[1] !== researches[2][1]) {\n                const scaling = researchesInfo[2].scaling[1];\n                researchesInfo[2].effect[1] = Math.min(researches[2][1], Math.max(Math.floor(Limit(buildings[2][1].total).multiply(scaling - 1).divide(researchesInfo[2].startCost[1]).plus('1').log(scaling).toNumber()), 0));\n            }\n            prod2Number *= 2 ** researchesInfo[2].effect[1];\n        }\n        if (vacuum) { prod2Number *= milestonesInfo[2].reward[1]; }\n        if (stageBoost[2] !== null) { prod2Number *= stageBoost[2]; }\n        producing[2][2] = Limit(prod2Number).multiply(...listForMult2).toArray();\n\n        const listForMult1 = [];\n        if (inVoid) {\n            listForMult1.push(Limit(buildings[2][1].current).moreThan('1') ? Limit(buildings[2][1].current).power(0.1).toArray() : buildings[2][1].current);\n        } else if (vacuum) {\n            const excess = Limit(buildings[2][1].current).minus(buildings[2][1].true).toArray();\n            listForMult1.push(Limit(excess).moreThan('1') ? Limit(excess).power(0.2).plus(buildings[2][1].true).toArray() : buildings[2][1].current);\n        } else { listForMult1.push(buildings[2][1].current); }\n        if (upgrades[2][0] === 1) { listForMult1.push(Limit('1.04').power(buildings[2][1].true).toArray()); }\n        let prod1Number = (vacuum ? 1 : 2e-4) * (1.5 ** strangeness[2][0]);\n        if (researches[2][0] >= 1) {\n            if (researchesInfo[2].effect[0] !== researches[2][0]) { researchesInfo[2].effect[0] = Math.min(researches[2][0], Math.max(Math.floor(Limit(buildings[2][1].total).divide(researchesInfo[2].startCost[0]).log(researchesInfo[2].scaling[0]).toNumber() + 1), 0)); }\n            prod1Number *= 3 ** researchesInfo[2].effect[0];\n        }\n        producing[2][1] = Limit(prod1Number).multiply(...listForMult1).toArray();\n        if (vacuum) {\n            producing[2][1] = Limit(producing[2][1]).plus('1').toArray();\n            upgradesInfo[1].effect[8] = Limit(upgradesInfo[1].effect[8] as overlimit).multiply(producing[2][1]).toArray(); //Move to bottom if anything from further Stages will boost Drops\n        }\n    } //else if (vacuum) { producing[2][1] = [1, 0]; }\n    if (activeAll.includes(3)) {\n        global.accretionInfo.effective = player.accretion.rank + (strangeness[3][10] / 1.25);\n        if (vacuum && stageBoost[3] !== null) {\n            global.accretionInfo.effective += stageBoost[3];\n        }\n\n        producing[3][5] = Limit('1.1').power(buildings[3][5].true).toArray();\n\n        producing[3][4] = Limit((upgrades[3][12] === 1 ? '1.14' : '1.1')).power(buildings[3][4].true).multiply(producing[3][5]).toArray();\n        const satellitesBoost: overlimit = strangeness[3][3] < 1 ? [1, 0] : vacuum ? Limit(producing[3][4]).power(0.2).toArray() : producing[3][4];\n\n        const listForMult3 = [buildings[3][3].current, producing[3][4]];\n        let prod3Number = 0.2 * (1.5 ** strangeness[3][1]);\n        if (researchesExtra[3][2] >= 1) { prod3Number *= 2; }\n        if (upgrades[3][7] === 1) { listForMult3.push(Limit('1.02').power(buildings[3][3].true).toArray()); }\n        producing[3][3] = Limit(prod3Number).multiply(...listForMult3).toArray();\n\n        const listForMult2 = [buildings[3][2].current, satellitesBoost];\n        upgradesInfo[3].effect[3] = (102 + researches[3][4] / 2) / 100;\n        researchesInfo[3].effect[6] = Limit(buildings[3][0].current).power(researches[3][6] / 40).toArray();\n        let prod2Number = (3 ** researches[3][2]) * (1.5 ** strangeness[3][1]);\n        if (upgrades[3][3] === 1) { listForMult2.push(Limit(upgradesInfo[3].effect[3]).power(buildings[3][2].true).toArray()); }\n        if (upgrades[3][4] === 1) { prod2Number *= 3; }\n        if (researches[3][6] >= 1) { listForMult2.push(researchesInfo[3].effect[6]); }\n        producing[3][2] = Limit(prod2Number).multiply(...listForMult2).toArray();\n\n        const listForMult1 = [buildings[3][1].current, satellitesBoost];\n        upgradesInfo[3].effect[0] = (101 + researches[3][1]) / 100;\n        upgradesInfo[3].effect[1] = Limit(buildings[3][1].current).power((5 + researchesExtra[3][3]) / 100).toNumber();\n        upgradesInfo[3].effect[6] = 2 * 1.5 ** researches[3][7];\n        upgradesInfo[3].effect[10] = 8 * 2 ** researches[3][8];\n        researchesExtraInfo[3].effect[0] = 1.1 ** researchesExtra[3][0];\n        researchesExtraInfo[3].effect[1] = (1 + 0.1 * researchesExtra[3][1]) ** global.accretionInfo.effective;\n        let prod1Number = (vacuum ? 1 : 8e-20) * (3 ** researches[3][0]) * (2 ** researches[3][3]) * (3 ** researches[3][5]) * researchesExtraInfo[3].effect[0] * (1.5 ** strangeness[3][0]);\n        if (vacuum) { prod1Number *= milestonesInfo[3].reward[0]; }\n        if (upgrades[3][0] === 1) { listForMult1.push(Limit(upgradesInfo[3].effect[0]).power(buildings[3][1].true).toArray()); }\n        if (upgrades[3][1] === 1) { prod1Number *= upgradesInfo[3].effect[1]; }\n        if (upgrades[3][2] === 1) { prod1Number *= 2; }\n        if (upgrades[3][5] === 1) { prod1Number *= 3; }\n        if (upgrades[3][6] === 1) { prod1Number *= upgradesInfo[3].effect[6]; }\n        if (upgrades[3][9] === 1) { prod1Number *= 2; }\n        if (upgrades[3][10] === 1) { prod1Number *= upgradesInfo[3].effect[10]; }\n        if (researchesExtra[3][1] >= 1) { prod1Number *= researchesExtraInfo[3].effect[1]; }\n        producing[3][1] = Limit(prod1Number).multiply(...listForMult1).toArray();\n        if (vacuum) {\n            producing[3][1] = Limit(producing[3][1]).plus('1').toArray();\n            if (inVoid) {\n                producing[3][1] = Limit(producing[3][1]).power(player.accretion.rank >= 5 ? 0.84 : 0.92).toArray();\n            } else if (player.accretion.rank >= 5) { producing[3][1] = Limit(producing[3][1]).power(0.92).toArray(); }\n\n            researchesExtraInfo[3].effect[4] = (researchesExtraInfo[3].effect[1] - 1) / 32 * 2 ** researchesExtra[3][4] + 1;\n            if (researchesExtra[3][4] >= 1) { producing[2][2] = Limit(producing[2][2]).multiply(researchesExtraInfo[3].effect[4]).toArray(); }\n        } else if (player.accretion.rank >= 5) {\n            producing[3][1] = Limit(producing[3][1]).power(Limit(producing[3][1]).lessThan('1') ? 1.1 : 0.9).toArray();\n        }\n    } else if (vacuum) { producing[3][1] = [1, 0]; }\n    if (activeAll.includes(4)) {\n        const { elements } = player;\n        const { starEffect } = global.collapseInfo;\n        const elementsEffects = global.elementsInfo.effect;\n\n        let systemBase = inVoid ? 0.004 : 0.005;\n        if (researchesExtra[4][1] >= 1) { systemBase += 0.001; }\n        let effectiveLevel = researches[4][1] === 0 ? 0 : 1 + Math.min(researches[4][1], 4);\n        if (researches[4][1] > 4) { effectiveLevel += 0.5; }\n        if (researches[4][1] > 5) { effectiveLevel += researches[4][1] / 4 - 1.25; }\n        researchesInfo[4].effect[1] = Limit(1 + systemBase * effectiveLevel).power(global.collapseInfo.trueStars).toArray();\n        const listForTotal = [researchesInfo[4].effect[1]];\n        let planetBase = 1.3 + 0.15 * researches[4][2];\n        if (vacuum) { planetBase += milestonesInfo[3].reward[1]; }\n        researchesInfo[4].effect[0] = planetBase ** researches[4][0];\n        researchesInfo[4].effect[4] = logAny(player.collapse.stars[2] + 3, researches[4][4] >= 2 ? 2 : 3);\n        if (elements[23] === 1) { researchesInfo[4].effect[4] *= player.collapse.mass ** 0.1; }\n        elementsEffects[12] = 10 - strangeness[4][10];\n        elementsEffects[24] = vacuum || player.milestones[1][1] >= 6 ? 0.02 : 0.01;\n        elementsEffects[28] = researchesExtra[4][2] >= 1 ? 3 : 2;\n        let totalNumber = researchesInfo[4].effect[0] * global.collapseInfo.massEffect() * starEffect[1]() * (1.25 ** researches[4][3]) * (1.5 ** strangeness[4][0]);\n        if (researches[4][4] >= 1) { totalNumber *= researchesInfo[4].effect[4]; }\n        if (elements[4] === 1) { totalNumber *= 1.2; }\n        if (elements[14] === 1) { totalNumber *= 1.4; }\n        if (elements[19] === 1) { totalNumber *= 2; }\n        if (elements[24] === 1) { totalNumber *= Limit(buildings[4][0].current).max('1').power(elementsEffects[24]).toNumber(); }\n        if (elements[28] === 1) { totalNumber *= elementsEffects[28]; }\n        if (vacuum) {\n            if (researchesExtra[1][4] >= 1) { totalNumber *= (researchesExtraInfo[1].effect[4] as number) ** (discharge.current + dischargeInfo.bonus); }\n            if (researchesExtra[2][3] >= 1) { totalNumber *= vaporizationInfo.tension; }\n            if (researchesExtra[2][3] >= 2) { totalNumber *= vaporizationInfo.stress; }\n            totalNumber *= milestonesInfo[4].reward[0];\n        }\n        if (stageBoost[4] !== null) { totalNumber *= stageBoost[4]; }\n        const totalMultiplier = Limit(totalNumber).multiply(...listForTotal).toArray();\n\n        producing[4][5] = Limit('1e12').multiply(buildings[4][5].current, totalMultiplier).toArray();\n\n        producing[4][4] = Limit('2e9').multiply(buildings[4][4].current, totalMultiplier).toArray();\n\n        producing[4][3] = Limit('3e7').multiply(buildings[4][3].current, totalMultiplier).toArray();\n\n        elementsEffects[6] = researchesExtra[4][2] >= 1 ? 2 : 1.5;\n        const prod2Number = 400 * starEffect[0]() * (4 ** researches[4][3]);\n        producing[4][2] = Limit(prod2Number).multiply(buildings[4][2].current, totalMultiplier).toArray();\n\n        let prod1Number = 50;\n        if (elements[1] === 1) { prod1Number *= 2; }\n        producing[4][1] = Limit(prod1Number).multiply(buildings[4][1].current, totalMultiplier).toArray();\n    }\n    if (activeAll.includes(5)) {\n        let prod3Number = vacuum ? 2 : 10;\n        if (vacuum) {\n            if (upgrades[5][2] === 1) { prod3Number += 1; }\n            prod3Number += milestonesInfo[5].reward[1];\n        }\n        producing[5][3] = Limit(prod3Number).power(buildings[5][3].true).toArray();\n\n        const listForMult2 = [buildings[5][2].current, producing[5][3]];\n        let prod2Number = 1.5 * (3 ** researches[5][1]);\n        upgradesInfo[5].effect[1] = 2 * (3 ** strangeness[5][4]);\n        if (upgrades[5][1] === 1) { prod2Number *= upgradesInfo[5].effect[1]; }\n        producing[5][2] = Limit(prod2Number).multiply(...listForMult2).max('1').toArray();\n\n        const listForMult1 = [buildings[5][1].current, producing[5][3]];\n        let prod1Number = 4 ** researches[5][0];\n        upgradesInfo[5].effect[0] = 3 * (2 ** strangeness[5][3]);\n        if (upgrades[5][0] === 1) { prod1Number *= upgradesInfo[5].effect[0]; }\n        producing[5][1] = Limit(prod1Number).multiply(...listForMult1).toArray();\n\n        producing[4][4] = Limit(producing[4][4]).multiply(producing[5][2]).toArray();\n        if (researches[5][1] >= 1) { producing[4][3] = Limit(producing[4][3]).multiply(producing[5][2]).divide('3').toArray(); }\n        if (researches[5][1] >= 2) { producing[4][2] = Limit(producing[4][2]).multiply(producing[5][2]).divide('9').toArray(); }\n        if (researches[5][1] >= 3) { producing[4][1] = Limit(producing[4][1]).multiply(producing[5][2]).divide('27').toArray(); }\n    }\n    if (vacuum) {\n        const { inflationInfo } = global;\n        inflationInfo.preonTrue = producing[1][1];\n        inflationInfo.dustTrue = producing[3][1];\n\n        inflationInfo.dustCap = Limit(8e46 * calculateMassGain()).toArray();\n        if (Limit(producing[3][1]).moreThan(inflationInfo.dustCap)) {\n            const multiplier = Math.min(Limit(producing[3][1]).divide(inflationInfo.dustCap).toNumber(), 1.4 ** player.strangeness[3][9]);\n            inflationInfo.massCap = 60 / multiplier;\n            inflationInfo.dustCap = Limit(inflationInfo.dustCap).multiply(multiplier).toArray();\n            producing[3][1] = inflationInfo.dustCap;\n        } else { inflationInfo.massCap = 60; }\n\n        researchesExtraInfo[1].effect[3] = researchesExtra[1][3] / 20;\n        let preonsCap = 1e14 * (energyMin ** researchesExtraInfo[1].effect[3]) * global.collapseInfo.starEffect[2]() * milestonesInfo[4].reward[1];\n        if (player.elements[10] === 1) { preonsCap *= 2; }\n        if (researchesExtra[4][1] >= 1) { preonsCap *= global.collapseInfo.effect4RE1(); }\n        inflationInfo.preonCap = Limit(preonsCap).multiply(producing[3][1]).toArray();\n        if (Limit(producing[1][1]).moreThan(inflationInfo.preonCap)) { producing[1][1] = inflationInfo.preonCap; }\n    }\n};\n\nexport const buyBuilding = (index: number, stageIndex = player.stage.active, auto = false) => {\n    if (!checkBuilding(index, stageIndex)) { return; }\n    const building = player.buildings[stageIndex][index as 1];\n\n    let pointer; //For cost\n    let currency;\n    let special = '' as '' | 'Free' | 'Moles' | 'Mass' | 'Galaxy';\n    if (stageIndex === 1) {\n        pointer = player.buildings[1][index - 1];\n        if (index === 1 && player.inflation.vacuum && player.strangeness[1][10] >= 1) { special = 'Free'; }\n    } else if (stageIndex === 2) {\n        if (index === 1 && player.inflation.vacuum) {\n            special = 'Moles';\n            pointer = player.buildings[1][5];\n            currency = Limit(pointer.current).divide('6.02214076e23').toArray();\n        } else { pointer = player.buildings[2][index === 1 ? 0 : 1]; }\n    } else if (stageIndex === 3) {\n        if (player.inflation.vacuum) {\n            special = 'Mass';\n            pointer = player.buildings[1][0];\n            currency = Limit(pointer.current).multiply('1.78266192e-33').toArray();\n        } else { pointer = player.buildings[3][0]; }\n    } else /*if (stageIndex >= 4)*/ {\n        pointer = player.buildings[4][0];\n        if (stageIndex === 5 && index === 3) {\n            special = 'Galaxy';\n            currency = player.collapse.mass;\n        }\n    }\n    if (currency === undefined) { currency = pointer.current; }\n\n    let budget = currency;\n    if (auto && building.true > 0 && special !== 'Free' && special !== 'Galaxy') {\n        if (special === 'Mass' && player.strangeness[3][4] >= 2 && Limit(global.inflationInfo.dustTrue).moreOrEqual(global.inflationInfo.dustCap)) {\n            budget = Limit(global.inflationInfo.preonCap).multiply(global.inflationInfo.massCap, '-1.78266192e-33').plus(currency).toArray();\n        } else {\n            budget = Limit(currency).divide(player.strangeness[1][7] >= 1 ? player.toggles.shop.wait[stageIndex] : '2').toArray();\n        }\n    }\n\n    let total = calculateBuildingsCost(index, stageIndex); //This updates cost information\n    if (Limit(total).moreThan(budget)) { return; }\n    const howMany = auto ? -1 : (player.stage.resets < 1 && player.discharge.current < 1 ? 1 : player.toggles.shop.howMany);\n\n    let canAfford = 1;\n    if (howMany !== 1) {\n        const increase = global.buildingsInfo.increase[stageIndex][index]; //Must be >1\n        const firstCost = global.buildingsInfo.firstCost[stageIndex][index];\n        if (special === 'Free') {\n            canAfford = Math.floor(Limit(budget).divide(firstCost).log(increase).toNumber()) - building.true + 1;\n\n            if (howMany !== -1) {\n                if (canAfford < howMany) { return; }\n                canAfford = howMany;\n            }\n        } else {\n            /* Alternative formula */\n            //max = floor(log((firstCost * increase ** building.true + increase * budget - budget) / firstCost) / log(increase)) - building.true;\n            //total = firstCost * (increase ** (canAfford + building.true) - increase ** building.true) / (increase - 1);\n            const totalBefore = Limit(increase).power(building.true).minus('1').divide(increase - 1).multiply(firstCost).toArray();\n            canAfford = Math.floor(Limit(budget).plus(totalBefore).multiply(increase - 1).divide(firstCost).plus('1').log(increase).toNumber()) - building.true;\n\n            if (howMany !== -1) {\n                if (canAfford < howMany) { return; }\n                canAfford = howMany;\n            }\n            total = Limit(increase).power(canAfford + building.true).minus('1').divide(increase - 1).multiply(firstCost).minus(totalBefore).toArray();\n        }\n    }\n    if (!Limit(total).isFinite()) {\n        if (global.debug.errorGain) {\n            global.debug.errorGain = false;\n            Notify(`Error inside Structure creation (${Limit(total).isNaN() ? 'NaN' : 'Infinity'} detected, debug ${stageIndex}-${index})`);\n            setTimeout(() => { global.debug.errorGain = true; }, 6e4);\n        }\n        return;\n    }\n\n    building.true += canAfford;\n    building.current = Limit(building.current).plus(canAfford).toArray();\n    building.total = Limit(building.total).plus(canAfford).toArray();\n    building.trueTotal = Limit(building.trueTotal).plus(canAfford).toArray();\n    if (Limit(building.highest).lessThan(building.current)) { building.highest = cloneArray(building.current); }\n\n    if (special === 'Galaxy') { //&& allowedToReset\n        reset('galaxy', player.inflation.vacuum ? [1, 2, 3, 4, 5] : [4, 5]);\n        calculateMaxLevel(0, 4, 'researches');\n        calculateMaxLevel(1, 4, 'researches');\n        calculateMaxLevel(2, 4, 'researches');\n        calculateMaxLevel(3, 4, 'researches');\n    } else {\n        if (special !== 'Free') {\n            currency = Limit(currency).minus(total).toArray();\n\n            /*if (special === 'Galaxy') {\n                player.collapse.mass = currency;\n            } else*/ if (special === 'Moles') {\n                pointer.current = Limit(currency).multiply('6.02214076e23').toArray();\n                player.buildings[2][0].current = Limit(pointer.current).divide('6.02214076e23').toArray();\n            } else if (special === 'Mass') {\n                pointer.current = Limit(currency).divide('1.78266192e-33').toArray();\n                player.buildings[3][0].current = Limit(pointer.current).multiply('1.78266192e-33').toArray();\n            } else {\n                pointer.current = currency;\n            }\n        }\n\n        if (player.inflation.vacuum || stageIndex === 1) {\n            assignEnergy(global.dischargeInfo.getEnergy(index, stageIndex) * canAfford);\n            awardMilestone(1, 1);\n        }\n    }\n\n    //Milestones that are based on bought amount\n    if (stageIndex === 1) {\n        if (index === 5 && player.upgrades[1][8] === 0 && player.inflation.vacuum) { player.buildings[2][0].current = Limit(building.current).divide('6.02214076e23').toArray(); }\n    } else if (stageIndex === 2) {\n        if (index !== 1) { awardMilestone(1, 2); }\n    } else if (stageIndex === 3) {\n        if (index >= 4) { awardMilestone(1, 3); }\n    } else if (stageIndex === 4) {\n        global.collapseInfo.trueStars += canAfford;\n        awardMilestone(0, 5);\n    } else if (stageIndex === 5) {\n        if (index === 3) {\n            awardMilestone(1, 5);\n            if (!player.events[2]) { playEvent(5, 2); }\n        }\n    }\n\n    assignBuildingInformation();\n    if (!auto) {\n        numbersUpdate();\n        if (global.screenReader[0]) { getId('SRMain').textContent = `Made ${format(canAfford)} '${global.buildingsInfo.name[stageIndex][index]}'`; }\n    }\n};\n\nexport const assignEnergy = (add = null as number | null) => {\n    const { discharge } = player;\n\n    if (add === null) {\n        const { getEnergy, energyType } = global.dischargeInfo;\n\n        add = 0;\n        for (let s = 1; s < (player.inflation.vacuum ? energyType.length : 2); s++) {\n            const buildings = player.buildings[s];\n            for (let i = 1; i < energyType[s].length; i++) {\n                add += getEnergy(i, s) * buildings[i as 1].true;\n            }\n        }\n\n        global.dischargeInfo.energyTrue = add;\n        if (player.strangeness[1][11] >= 1) { discharge.energy = add; }\n    } else {\n        global.dischargeInfo.energyTrue += add;\n        discharge.energy += add;\n    }\n    if (discharge.energyMax < discharge.energy) { discharge.energyMax = discharge.energy; }\n};\n\nexport const calculateBuildingsCost = (index: number, stageIndex: number): overlimit => {\n    const { buildingsInfo } = global;\n\n    if (stageIndex === 1) {\n        const effect = 10 + 3 * player.researches[1][0];\n        global.upgradesInfo[1].effect[6] = effect / 100;\n\n        let increase = 140;\n        if (player.upgrades[1][6] === 1) { increase -= effect; }\n        buildingsInfo.increase[1][index] = increase / 100;\n\n        if (index === 1) {\n            let cost = buildingsInfo.startCost[1][1];\n            if (!player.inflation.vacuum && player.upgrades[1][2] === 1) { cost /= 10; }\n            buildingsInfo.firstCost[1][1] = cost;\n        } else if (index === 3) {\n            let cost = buildingsInfo.startCost[1][3];\n            if (player.upgrades[1][1] === 1) { cost /= 10; }\n            buildingsInfo.firstCost[1][3] = cost;\n        } else if (index === 4) {\n            let cost = buildingsInfo.startCost[1][4];\n            if (player.inflation.vacuum) {\n                if (player.upgrades[1][2] === 1) { cost /= 10; }\n                if (player.researchesExtra[1][0] >= 1) { cost /= 10; }\n            }\n            buildingsInfo.firstCost[1][4] = cost;\n        }\n    } else if (stageIndex === 3) {\n        buildingsInfo.firstCost[3][index] = buildingsInfo.startCost[3][index];\n        if (!player.inflation.vacuum && global.strangeInfo.stageBoost[3] !== null) { buildingsInfo.firstCost[3][index] /= global.strangeInfo.stageBoost[3]; }\n        if (index === 4) {\n            buildingsInfo.increase[3][4] = player.upgrades[3][11] === 1 ? 5 : 10;\n        }\n    } else if (stageIndex === 4) {\n        let increase = 125 + 15 * index;\n        if (player.elements[2] === 1) { increase -= 10; }\n        if (player.elements[8] === 1) { increase -= 5; }\n        buildingsInfo.increase[4][index] = increase / 100;\n\n        let cost = buildingsInfo.startCost[4][index] / (2 ** player.strangeness[4][1]);\n        if (player.elements[13] === 1) { cost /= 1e3; }\n        buildingsInfo.firstCost[4][index] = cost;\n    }\n\n    return Limit(buildingsInfo.increase[stageIndex][index]).power(player.buildings[stageIndex][index as 1].true).multiply(buildingsInfo.firstCost[stageIndex][index]).toArray();\n};\n\nexport const calculateGainedBuildings = (get: number, stageIndex: number, time: number) => {\n    let add: overlimit;\n    if (stageIndex === 1 && get === (player.inflation.vacuum ? 5 : 3)) {\n        add = Limit(global.upgradesInfo[1].effect[8] as overlimit).multiply(time).toArray();\n    } else if (stageIndex === 5) {\n        add = Limit(global.buildingsInfo.producing[5][1]).multiply(time).toArray();\n    } else {\n        add = Limit(global.buildingsInfo.producing[stageIndex][get + 1]).multiply(time).toArray();\n\n        if (stageIndex === 2 && get === 1 && player.buildings[2][2].current[0] === 0 && player.researchesExtra[2][1] >= 1) {\n            add = Limit(add).plus(time * (global.vaporizationInfo.rainEffect() - 1)).toArray();\n        }\n    }\n    if (add[0] === 0) { return; }\n    if (!Limit(add).isFinite()) {\n        if (global.debug.errorGain) {\n            global.debug.errorGain = false;\n            Notify(`Error inside income calculation (${Limit(add).isNaN() ? 'NaN' : 'Infinity'} detected, debug ${stageIndex}-${get})`);\n            setTimeout(() => { global.debug.errorGain = true; }, 6e4);\n        }\n        return;\n    }\n\n    let stageGet = stageIndex;\n    if (stageIndex === 4) {\n        get = 0;\n    } else if (stageIndex === 5) {\n        if (get > 0) { add = Limit(add).divide(4 ** get).toArray(); }\n        stageGet = 4;\n        get++;\n    }\n    const building = player.buildings[stageGet][get];\n\n    building.current = Limit(building.current).plus(add).toArray();\n    building.total = Limit(building.total).plus(add).toArray();\n    building.trueTotal = Limit(building.trueTotal).plus(add).toArray();\n    if (Limit(building.highest).lessThan(building.current)) { building.highest = cloneArray(building.current); }\n\n    //Milestones that are based on gained amount\n    if (stageIndex === 1) {\n        if (player.inflation.vacuum) {\n            if (get === 0) {\n                player.buildings[3][0].current = Limit(building.current).multiply('1.78266192e-33').toArray();\n                awardMilestone(0, 3);\n            } else if (get === 1) {\n                awardMilestone(0, 1);\n            } else if (get === 5) {\n                player.buildings[2][0].current = Limit(building.current).divide('6.02214076e23').toArray();\n            }\n        } else if (get === 0) { awardMilestone(0, 1); }\n    } else if (stageIndex === 3) {\n        if (get === 0) { //Never 0 for true vacuum\n            if (player.accretion.rank < 5 && Limit(building.current).moreThan('1e30')) { building.current = [1, 30]; }\n            awardMilestone(0, 3);\n        }\n    }\n};\n\nexport const assignStrangeBoost = () => {\n    const { strangeness } = player;\n    const stageBoost = global.strangeInfo.stageBoost;\n    const strangeQuarks = player.strange[0].current + 1;\n\n    stageBoost[1] = strangeness[1][8] < 1 ? null : strangeQuarks ** 0.08 - 1;\n    stageBoost[2] = strangeness[2][7] < 1 ? null : strangeQuarks ** 0.24;\n    stageBoost[3] = strangeness[3][7] < 1 ? null : player.inflation.vacuum ?\n        strangeQuarks ** 0.12 - 1 : strangeQuarks ** 0.8;\n    stageBoost[4] = strangeness[4][8] < 1 ? null : strangeQuarks ** 0.28;\n    stageBoost[5] = strangeness[5][9] < 1 ? null : strangeQuarks ** 0.06;\n};\n\nexport const calculateGainedStrangeness = (get: number, time: number) => {\n    const strange = player.strange[get];\n    const max = Math.floor(player.strange[get + 1].current * 1e12);\n    if (strange.current >= max) { return; }\n\n    const add = Math.max(time, max * time / 600);\n    strange.current += add;\n    strange.total += add;\n    if (strange.current > max) {\n        const old = strange.current;\n        strange.current = max;\n        strange.total = Math.round(strange.total - (old - strange.current));\n    }\n\n    if (get === 0) { assignStrangeBoost(); }\n};\n\nexport const buyUpgrades = (upgrade: number, stageIndex: number, type: 'upgrades' | 'researches' | 'researchesExtra' | 'ASR' | 'elements' | 'strangeness', auto = false): boolean => {\n    if (!auto && !checkUpgrade(upgrade, stageIndex, type)) { return false; } //Auto should already checked if allowed, also allows for delayed purchase of Elements\n\n    let currency: number | overlimit;\n    if (type === 'strangeness') {\n        currency = player.strange[0].current;\n    } else if (stageIndex === 1) {\n        currency = player.discharge.energy;\n    } else if (stageIndex === 2) {\n        currency = player.buildings[2][1].current;\n    } else if (stageIndex === 3) {\n        currency = player.inflation.vacuum ? Limit(player.buildings[1][0].current).multiply('1.78266192e-33').toArray() : player.buildings[3][0].current;\n    } else /* if (stageIndex === 4 || stageIndex === 5) */ {\n        currency = player.buildings[4][0].current;\n    }\n\n    if (type === 'upgrades') {\n        if (player.upgrades[stageIndex][upgrade] >= 1) { return false; }\n\n        const pointer = global.upgradesInfo[stageIndex];\n        if (Limit(currency).lessThan(pointer.startCost[upgrade])) { return false; }\n\n        player.upgrades[stageIndex][upgrade]++;\n        currency = Limit(currency).minus(pointer.startCost[upgrade]).toArray();\n\n        /* Special cases */\n        if (stageIndex === 4 && upgrade === 1 && global.tab === 'research') { switchTab('research'); }\n        if (!auto && global.screenReader[0]) { getId('SRMain').textContent = `New upgrade '${pointer.name[upgrade]}', has been created`; }\n    } else if (type === 'researches' || type === 'researchesExtra' || type === 'ASR') {\n        const pointer = type === 'researches' || type === 'researchesExtra' ? global[`${type}Info`][stageIndex] : global.ASRInfo;\n        const level = type === 'researches' || type === 'researchesExtra' ? player[type][stageIndex] : player.ASR;\n\n        if (level[upgrade] >= pointer.max[upgrade]) { return false; }\n        if (Limit(currency).lessThan(pointer.cost[upgrade])) { return false; }\n\n        level[upgrade]++;\n        currency = Limit(currency).minus(pointer.cost[upgrade]).toArray();\n\n        /* Special cases */\n        if (type === 'researches') {\n            if (stageIndex === 4 && upgrade === 2) {\n                calculateMaxLevel(0, 4, 'researches', true);\n            }\n        } else if (type === 'researchesExtra') {\n            if (stageIndex === 1) {\n                if (upgrade === 2) {\n                    if (player.stage.current < 4) { player.stage.current = player.researchesExtra[1][2] > 1 ? 2 : 3; }\n                    stageUpdate('soft');\n                    awardVoidReward(1);\n                }\n            } else if (stageIndex === 4) {\n                if (upgrade === 2) {\n                    calculateMaxLevel(3, 4, 'researches', true);\n                }\n            }\n        }\n        if (!auto && global.screenReader[0]) { getId('SRMain').textContent = `Research '${type === 'ASR' ? 'Structure Automation' : (pointer as { name: string[] }).name[upgrade]}' level increased, it is now ${level[upgrade]} ${level[upgrade] >= pointer.max[upgrade] ? 'maxed' : ''}`; }\n    } else if (type === 'elements') {\n        let level = player.elements[upgrade];\n        if (level >= 1) { return false; }\n\n        if (level === 0) {\n            const startCost = global.elementsInfo.startCost[upgrade];\n            if (Limit(currency).lessThan(startCost)) { return false; }\n            currency = Limit(currency).minus(startCost).toArray();\n        } else if (!auto) { return false; }\n        if (player.collapse.show < upgrade) { player.collapse.show = upgrade; }\n        level = player.strangeness[4][4] >= 1 || level === 0.5 ? 1 : 0.5;\n        player.elements[upgrade] = level;\n\n        /* Special cases */\n        if (level === 1) {\n            if (upgrade === 7 || upgrade === 16 || upgrade === 20 || upgrade === 25) {\n                calculateMaxLevel(1, 4, 'researches', true);\n            } else if (upgrade === 9 || upgrade === 17) {\n                calculateMaxLevel(0, 4, 'researches', true);\n            } else if (upgrade === 11) {\n                calculateMaxLevel(2, 4, 'researches', true);\n            } else if (upgrade === 26) {\n                if (player.stage.current < 5) {\n                    player.stage.current = 5;\n                    if (player.stage.true < 5) { player.stage.true = 5; }\n                }\n                stageUpdate('soft');\n            }\n        }\n        if (!auto && global.screenReader[0]) { getId('SRMain').textContent = `New Element '${global.elementsInfo.name[upgrade]}' ${player.elements[upgrade] >= 1 ? 'obtained' : 'awaiting activation'}`; }\n    } else if (type === 'strangeness') {\n        const pointer = global.strangenessInfo[stageIndex];\n\n        if (player.strangeness[stageIndex][upgrade] >= pointer.max[upgrade]) { return false; }\n        if ((currency as number) < global.strangenessInfo[stageIndex].cost[upgrade]) { return false; }\n\n        player.strangeness[stageIndex][upgrade]++;\n        (currency as number) -= pointer.cost[upgrade];\n\n        /* Special cases */\n        if (stageIndex === 1) {\n            if (upgrade === 4) {\n                assignEnergy();\n            } else if (upgrade === 6) {\n                player.ASR[1] = Math.max(player.strangeness[1][6], player.ASR[1]);\n                calculateMaxLevel(0, 1, 'ASR', true);\n            } else if (upgrade === 11) {\n                assignEnergy();\n                calculateMaxLevel(4, 2, 'strangeness', true);\n                calculateMaxLevel(4, 3, 'strangeness', true);\n                calculateMaxLevel(5, 4, 'strangeness', true);\n            }\n        } else if (stageIndex === 2) {\n            if (upgrade === 2) {\n                calculateMaxLevel(4, 2, 'researches', true);\n                calculateMaxLevel(5, 2, 'researches', true);\n            } else if (upgrade === 5) {\n                player.ASR[2] = Math.max(player.strangeness[2][5], player.ASR[2]);\n                calculateMaxLevel(0, 2, 'ASR', true);\n            } else if (upgrade === 8) {\n                calculateMaxLevel(0, 2, 'ASR', true);\n                calculateMaxLevel(5, 2, 'strangeness', true);\n            } else if (upgrade === 10) {\n                calculateMaxLevel(2, 2, 'researches', true);\n                calculateMaxLevel(3, 2, 'researches', true);\n            }\n        } else if (stageIndex === 3) {\n            if (upgrade === 2) {\n                calculateMaxLevel(0, 3, 'researchesExtra', true);\n                calculateMaxLevel(1, 3, 'researchesExtra', true);\n            } else if (upgrade === 5) {\n                player.ASR[3] = Math.max(player.strangeness[3][5], player.ASR[3]);\n                calculateMaxLevel(0, 3, 'ASR', true);\n            } else if (upgrade === 8) {\n                calculateMaxLevel(0, 3, 'ASR', true);\n                calculateMaxLevel(5, 3, 'strangeness', true);\n            }\n        } else if (stageIndex === 4) {\n            if (upgrade === 4) {\n                for (let i = 1; i < player.elements.length; i++) {\n                    if (player.elements[i] === 0.5) { buyUpgrades(i, 4, 'elements', true); }\n                }\n            } else if (upgrade === 6) {\n                player.ASR[4] = Math.max(player.strangeness[4][6], player.ASR[4]);\n                calculateMaxLevel(0, 4, 'ASR', true);\n            } else if (upgrade === 9) {\n                calculateMaxLevel(0, 4, 'ASR', true);\n                calculateMaxLevel(6, 4, 'strangeness', true);\n            } else if (upgrade === 10) {\n                if (player.elements[0] !== 1) {\n                    player.elements[0] = 1;\n                    visualUpdateUpgrades(0, 4, 'elements');\n                }\n            }\n        } else if (stageIndex === 5) {\n            if (upgrade === 0) {\n                if (!player.inflation.vacuum) { stageUpdate('soft'); }\n            } else if (upgrade === 5) {\n                if (player.inflation.vacuum) { stageUpdate('soft'); }\n            } else if (upgrade === 6 || upgrade === 7) {\n                player.ASR[5] = player.strangeness[5][7];\n                if (player.strangeness[5][6] >= 2) { player.ASR[5]++; }\n                calculateMaxLevel(0, 5, 'ASR', true);\n            } else if (upgrade === 8) {\n                if (player.inflation.vacuum && global.tab === 'strangeness') { switchTab('strangeness'); }\n            }\n        }\n        if (!auto && global.screenReader[0]) { getId('SRMain').textContent = `Strangeness of '${pointer.name[upgrade]}' for ${global.stageInfo.word[stageIndex]} Stage is increased, level is now ${player.strangeness[stageIndex][upgrade]}${player.strangeness[stageIndex][upgrade] >= pointer.max[upgrade] ? 'maxed' : ''}`; }\n    }\n\n    if (type === 'strangeness') {\n        player.strange[0].current = currency as number;\n        assignStrangeBoost();\n    } else if (stageIndex === 1) {\n        if (player.strangeness[1][11] < 1) { player.discharge.energy = Limit(currency).toNumber(); }\n    } else if (stageIndex === 2) {\n        player.buildings[2][1].current = currency as overlimit;\n\n        if (player.buildings[2][2].current[0] === 0 && Limit(player.buildings[2][1].current).lessThan(player.buildings[2][1].true)) {\n            const old = player.buildings[2][1].true;\n            player.buildings[2][1].true = Math.floor(Limit(player.buildings[2][1].current).toNumber());\n            if (player.inflation.vacuum) {\n                const decreased = (old - player.buildings[2][1].true) * global.dischargeInfo.getEnergy(1, 2);\n                global.dischargeInfo.energyTrue -= decreased;\n                player.discharge.energy -= decreased;\n            } else if (player.buildings[2][1].current[0] === 0 && Limit(player.buildings[2][0].current).lessThan('2.8e-3')) {\n                player.buildings[2][0].current = [2.8, -3];\n            }\n        }\n    } else if (stageIndex === 3) {\n        if (player.inflation.vacuum) {\n            player.buildings[1][0].current = Limit(currency).divide('1.78266192e-33').toArray();\n            player.buildings[3][0].current = Limit(player.buildings[1][0].current).multiply('1.78266192e-33').toArray();\n            //Currency can be assigned directly, but due to floating points accuracy will reduce a little\n        } else { player.buildings[3][0].current = currency as overlimit; }\n    } else /*if (stageIndex === 4 || stageIndex === 5)*/ {\n        player.buildings[4][0].current = currency as overlimit;\n    }\n\n    assignBuildingInformation();\n    if (type === 'upgrades' || type === 'elements') {\n        visualUpdateUpgrades(upgrade, stageIndex, type);\n    } else {\n        calculateResearchCost(upgrade, stageIndex, type);\n        visualUpdateResearches(upgrade, stageIndex, type);\n    }\n    if (!auto) {\n        if (type === 'strangeness') { getStrangenessDescription(upgrade, stageIndex, type); } //Remove if auto description will be added\n        numbersUpdate();\n    }\n    return true;\n};\n\n//Currently can't allow price to be more than 2**1024. Because missing sorting function for numbers that big\nexport const calculateResearchCost = (research: number, stageIndex: number, type: 'researches' | 'researchesExtra' | 'ASR' | 'strangeness') => {\n    if (type === 'researches' || type === 'researchesExtra') {\n        const pointer = global[`${type}Info`][stageIndex];\n\n        pointer.cost[research] = stageIndex === 1 ?\n            pointer.startCost[research] + pointer.scaling[research] * player[type][stageIndex][research] :\n            pointer.startCost[research] * pointer.scaling[research] ** player[type][stageIndex][research];\n\n        if (pointer.cost[research] < 1) { //Remove all but 2 digits\n            const digits = 10 ** (-Math.floor(Math.log10(pointer.cost[research])) + 2);\n            pointer.cost[research] = Math.round(pointer.cost[research] * digits) / digits;\n        } else {\n            pointer.cost[research] = Math.round(pointer.cost[research] * 100) / 100;\n        }\n    } else if (type === 'ASR') {\n        global.ASRInfo.cost[stageIndex] = global.ASRInfo.costRange[stageIndex][player.ASR[stageIndex]];\n    } else if (type === 'strangeness') {\n        global.strangenessInfo[stageIndex].cost[research] = player.inflation.vacuum ?\n            Math.floor(Math.round((global.strangenessInfo[stageIndex].startCost[research] * global.strangenessInfo[stageIndex].scaling[research] ** player.strangeness[stageIndex][research]) * 100) / 100) :\n            Math.floor(Math.round((global.strangenessInfo[stageIndex].startCost[research] + global.strangenessInfo[stageIndex].scaling[research] * player.strangeness[stageIndex][research]) * 100) / 100);\n    }\n};\n\nexport const calculateMaxLevel = (research: number, stageIndex: number, type: 'researches' | 'researchesExtra' | 'ASR' | 'strangeness', addAuto = false) => {\n    let max = null;\n    if (type === 'ASR') {\n        if (stageIndex === 1) {\n            max = player.inflation.vacuum ? 5 : 3;\n        } else if (stageIndex === 2) {\n            max = player.strangeness[2][8] >= 1 ? 6 : 5;\n        } else if (stageIndex === 3) {\n            max = player.strangeness[3][8] >= 1 ? 5 : 4;\n        } else if (stageIndex === 4) {\n            max = player.strangeness[4][9] >= 1 ? 5 : 4;\n        } else if (stageIndex === 5) {\n            max = player.strangeness[5][7];\n            if (player.strangeness[5][6] >= 2) { max++; }\n        }\n    } else if (type === 'researches') {\n        if (stageIndex === 2) {\n            if (research === 2) {\n                max = 4;\n                if (player.strangeness[2][10] >= 1) { max++; }\n            } else if (research === 3) {\n                max = 4;\n                if (player.strangeness[2][10] >= 2) { max++; }\n            } else if (research === 4) {\n                max = 2;\n                if (player.strangeness[2][2] >= 1) { max++; }\n            } else if (research === 5) {\n                max = 1;\n                if (player.strangeness[2][2] >= 2) { max++; }\n            }\n        } else if (stageIndex === 4) {\n            if (research === 0) {\n                max = 3 + (3 * player.researches[4][2]);\n                if (player.elements[9] === 1) { max += 12; }\n                if (player.elements[17] === 1) { max += 24; }\n            } else if (research === 1) {\n                max = 2;\n                if (player.elements[7] === 1) { max += 2; }\n                if (player.elements[16] === 1) { max++; }\n                if (player.elements[20] === 1) { max++; }\n                if (player.elements[25] === 1) { max++; }\n            } else if (research === 2) {\n                max = 1;\n                if (player.elements[11] === 1) { max++; }\n            } else if (research === 3) {\n                max = 1 + player.researchesExtra[4][2];\n            }\n        }\n    } else if (type === 'researchesExtra') {\n        if (stageIndex === 3) {\n            if (research === 0) {\n                max = 12;\n                if (player.accretion.rank >= 3) { max += 17; }\n                if (player.strangeness[3][2] >= 1) { max += 7; }\n            } else if (research === 1) {\n                max = 5;\n                if (player.strangeness[3][2] >= 2) { max += 2; }\n            } else if (research === 4) {\n                max = player.accretion.rank - 2;\n            }\n        }\n    } else if (type === 'strangeness') {\n        if (stageIndex === 1) {\n            if (research === 0) {\n                max = 4 + Math.min(player.challenges.void[3], 4);\n            } else if (research === 2) {\n                max = 2 + Math.min(Math.floor(player.challenges.void[3] / 2), 2);\n            } else if (research === 4) {\n                max = player.inflation.vacuum ? 2 : 1;\n            } else if (research === 5) {\n                max = 4 + Math.min(player.challenges.void[3], 4);\n            } else if (research === 6) {\n                max = player.inflation.vacuum ? 5 : 3;\n            } else if (research === 9) {\n                max = 6 + Math.min(player.challenges.void[3], 4);\n            }\n        } else if (stageIndex === 2) {\n            if (research === 0) {\n                max = (player.inflation.vacuum ? 6 : 9) + Math.min(player.challenges.void[3], 4);\n            } else if (research === 1) {\n                max = 6 + Math.min(player.challenges.void[3], 4);\n            } else if (research === 3) {\n                max = 3 + Math.min(Math.floor(player.challenges.void[3] / 2), 2);\n            } else if (research === 4) {\n                max = player.strangeness[1][11] >= 1 ? 2 : 1;\n            } else if (research === 5) {\n                max = player.strangeness[2][8] >= 1 ? 6 : 5;\n            } else if (research === 6) {\n                max = player.stage.true >= 6 ? 2 : 1;\n            }\n        } else if (stageIndex === 3) {\n            if (research === 0) {\n                max = 8 + Math.min(player.challenges.void[3], 4);\n            } else if (research === 1) {\n                max = 4 + Math.min(Math.floor(player.challenges.void[3] / 2), 2);\n            } else if (research === 4) {\n                max = player.strangeness[1][11] >= 1 ? 2 : 1;\n            } else if (research === 5) {\n                max = player.strangeness[3][8] >= 1 ? 5 : 4;\n            } else if (research === 10) {\n                max = 2 + Math.min(Math.floor(player.challenges.void[3] / 2), 2);\n            }\n        } else if (stageIndex === 4) {\n            if (research === 0) {\n                max = 8 + Math.min(player.challenges.void[3], 4);\n            } else if (research === 1) {\n                max = 4 + Math.min(Math.floor(player.challenges.void[3] / 2), 2);\n            } else if (research === 4) {\n                max = player.stage.true >= 6 || player.events[2] ? 2 : 1;\n            } else if (research === 5) {\n                max = player.strangeness[1][11] >= 1 ? 2 : 1;\n            } else if (research === 6) {\n                max = player.strangeness[4][9] >= 1 ? 5 : 4;\n            } else if (research === 7) {\n                max = 3 + Math.min(player.challenges.void[3], 4);\n            }\n        } else if (stageIndex === 5) {\n            if (research === 0) {\n                max = player.inflation.vacuum ? 1 : 3;\n            } else if (research === 1) {\n                max = 1 + Math.min(Math.floor(player.challenges.void[3] / 2), 2);\n            }\n        }\n    }\n    if (max !== null) {\n        if (max < 0) { max = 0; }\n        if (type === 'ASR') {\n            global.ASRInfo.max[stageIndex] = max;\n        } else {\n            global[`${type}Info`][stageIndex].max[research] = max;\n        }\n    }\n\n    calculateResearchCost(research, stageIndex, type);\n    visualUpdateResearches(research, stageIndex, type);\n    if (addAuto && (type === 'researches' || type === 'researchesExtra')) { autoResearchesSet(type, [stageIndex, research]); }\n};\n\nexport const autoUpgradesSet = (which: 'all' | number) => {\n    if (!player.toggles.auto[5]) { return; }\n    const { autoU: auto } = global.automatization;\n\n    if (which === 'all') {\n        for (let s = 0; s <= 5; s++) {\n            auto[s] = [];\n            for (let i = 0; i < global.upgradesInfo[s].maxActive; i++) {\n                if (player.upgrades[s][i] < 1) {\n                    auto[s].push(i);\n                }\n            }\n\n            const { startCost } = global.upgradesInfo[s];\n            auto[s].sort((a, b) => startCost[a] - startCost[b]);\n        }\n    } else if (typeof which === 'number') {\n        auto[which] = [];\n        for (let i = 0; i < global.upgradesInfo[which].maxActive; i++) {\n            if (player.upgrades[which][i] < 1) {\n                auto[which].push(i);\n            }\n        }\n\n        const { startCost } = global.upgradesInfo[which];\n        auto[which].sort((a, b) => startCost[a] - startCost[b]);\n    }\n};\n\nexport const autoUpgradesBuy = (stageIndex: number) => {\n    if (player.strangeness[3][6] < 1 || !player.toggles.auto[5]) { return; }\n    const auto = global.automatization.autoU[stageIndex];\n\n    for (let i = 0; i < auto.length; i++) {\n        const index = auto[i];\n\n        if (!checkUpgrade(index, stageIndex, 'upgrades')) { continue; }\n        buyUpgrades(index, stageIndex, 'upgrades', true);\n\n        if (player.upgrades[stageIndex][index] >= 1) {\n            auto.splice(i, 1);\n            i--;\n        } else { break; }\n    }\n};\n\n//All = reset all of current active stages; As number means reset that stage only; As array means add [1] into stage [0] if it's not already inside\nexport const autoResearchesSet = (type: 'researches' | 'researchesExtra', which: 'all' | number | number[]) => {\n    if (type === 'researches') {\n        if (!player.toggles.auto[6]) { return; }\n    } else if (type === 'researchesExtra') {\n        if (!player.toggles.auto[7]) { return; }\n    }\n\n    const { [type === 'researches' ? 'autoR' : 'autoE']: auto } = global.automatization;\n\n    if (which === 'all') {\n        for (let s = 0; s <= 5; s++) {\n            const pointer = global[`${type}Info`][s];\n\n            auto[s] = [];\n            for (let i = 0; i < pointer.maxActive; i++) {\n                if (player[type][s][i] < pointer.max[i]) {\n                    auto[s].push(i);\n                }\n            }\n            auto[s].sort((a, b) => pointer.cost[a] - pointer.cost[b]);\n        }\n    } else if (typeof which === 'number') {\n        const pointer = global[`${type}Info`][which];\n\n        auto[which] = [];\n        for (let i = 0; i < pointer.maxActive; i++) {\n            if (player[type][which][i] < pointer.max[i]) {\n                auto[which].push(i);\n            }\n        }\n        auto[which].sort((a, b) => pointer.cost[a] - pointer.cost[b]);\n    } else { //Will get sorted automatically\n        if (!auto[which[0]].some((a) => a === which[1])) { auto[which[0]].unshift(which[1]); }\n    }\n};\n\nexport const autoResearchesBuy = (type: 'researches' | 'researchesExtra', stageIndex: number) => {\n    if (type === 'researches') {\n        if (player.strangeness[3][6] < 2 || !player.toggles.auto[6]) { return; }\n    } else if (type === 'researchesExtra') {\n        if (player.strangeness[3][6] < 3 || !player.toggles.auto[7]) { return; }\n    }\n\n    const auto = global.automatization[type === 'researches' ? 'autoR' : 'autoE'][stageIndex];\n    const pointer = global[`${type}Info`][stageIndex];\n\n    let sort = false;\n    for (let i = 0; i < auto.length; i++) {\n        if (!checkUpgrade(auto[i], stageIndex, type)) { continue; }\n        const bought = buyUpgrades(auto[i], stageIndex, type, true);\n\n        if (player[type][stageIndex][auto[i]] >= pointer.max[auto[i]]) {\n            auto.splice(i, 1);\n            i--;\n        } else {\n            if (!bought) {\n                if (pointer.cost[auto[i]] > pointer.cost[auto[i + 1]]) {\n                    sort = true;\n                    continue;\n                }\n                break;\n            } else { i--; }\n        }\n    }\n    if (sort) { auto.sort((a, b) => pointer.cost[a] - pointer.cost[b]); }\n};\n\nexport const autoElementsSet = () => {\n    if (!player.toggles.auto[8]) { return; }\n    const { elements: auto } = global.automatization;\n    const { elements } = player;\n\n    for (let i = 1; i < global.elementsInfo.startCost.length; i++) {\n        if (elements[i] === 0) { auto.push(i); }\n    }\n\n    const { startCost } = global.elementsInfo;\n    auto.sort((a, b) => startCost[a] - startCost[b]);\n};\n\nexport const autoElementsBuy = () => {\n    if (player.strangeness[4][4] < 2 || !player.toggles.auto[8]) { return; }\n    const { elements: auto } = global.automatization;\n    const { elements } = player;\n\n    for (let i = 0; i < auto.length; i++) {\n        const index = auto[i];\n\n        if (!checkUpgrade(index, 4, 'elements')) { break; }\n        buyUpgrades(index, 4, 'elements', true);\n\n        if (elements[index] === 1) {\n            auto.splice(i, 1);\n            i--;\n        } else { break; }\n    }\n};\n\nexport const toggleSwap = (number: number, type: 'normal' | 'buildings' | 'auto', change = false) => {\n    const toggles = type === 'buildings' ? player.toggles.buildings[player.stage.active] : player.toggles[type];\n\n    if (change) {\n        if (type === 'buildings') {\n            if (number === 0) {\n                if (player.strangeness[1][7] < 1) { return; }\n\n                toggles[0] = !toggles[0];\n                for (let i = 1; i < toggles.length; i++) {\n                    toggles[i] = toggles[0];\n                    toggleSwap(i, 'buildings');\n                }\n            } else {\n                const buildings = player.buildings[player.stage.active];\n                if (number >= buildings.length) { return; }\n\n                let anyOn = false;\n                toggles[number] = !toggles[number];\n                for (let i = 1; i < global.buildingsInfo.maxActive[player.stage.active]; i++) {\n                    if (toggles[i] && buildings[i].highest[0] > 0) {\n                        anyOn = true;\n                        break;\n                    }\n                }\n                if (toggles[0] !== anyOn) {\n                    toggles[0] = anyOn;\n                    toggleSwap(0, 'buildings');\n                }\n            }\n        } else { toggles[number] = !toggles[number]; }\n    }\n\n    let toggleHTML;\n    if (type === 'normal') {\n        toggleHTML = getId(`toggle${number}`);\n    } else if (type === 'buildings') {\n        toggleHTML = getId(`toggleBuilding${number}`);\n    } else {\n        toggleHTML = getId(`toggleAuto${number}`);\n    }\n\n    const extraText = type === 'normal' ? '' : (type === 'buildings' && number === 0 ? 'All ' : 'Auto ');\n    if (!toggles[number]) {\n        toggleHTML.style.color = 'var(--red-text-color)';\n        toggleHTML.style.borderColor = 'crimson';\n        toggleHTML.textContent = `${extraText}OFF`;\n    } else {\n        toggleHTML.style.color = '';\n        toggleHTML.style.borderColor = '';\n        toggleHTML.textContent = `${extraText}ON`;\n    }\n};\n\nexport const toggleConfirm = (number: number, change = false) => {\n    const toggles = player.toggles.confirm;\n    if (change) { toggles[number] = toggles[number] === 'All' ? 'Safe' : toggles[number] === 'Safe' ? 'None' : 'All'; }\n\n    const toggleHTML = getId(`toggleConfirm${number}`);\n    if (toggles[number] === 'All' || toggles[number] === 'Safe') {\n        toggleHTML.style.color = '';\n        toggleHTML.style.borderColor = '';\n        toggleHTML.textContent = toggles[number];\n    } else {\n        toggleHTML.style.color = 'var(--red-text-color)';\n        toggleHTML.style.borderColor = 'crimson';\n        toggleHTML.textContent = 'None';\n    }\n};\n\nexport const toggleBuy = (type = 'none' as 'none' | '1' | 'max' | 'any') => {\n    const input = getId('buyAnyInput') as HTMLInputElement;\n    const shop = player.toggles.shop;\n\n    switch (type) {\n        case '1':\n            shop.howMany = 1;\n            break;\n        case 'max':\n            shop.howMany = -1;\n            break;\n        case 'any':\n            shop.input = Math.max(Math.trunc(Number(input.value)), -1);\n            if (shop.input === 0) { shop.input = 1; }\n            shop.howMany = shop.input;\n    }\n    getId('buy1x').style.backgroundColor = shop.howMany === 1 ? 'green' : '';\n    getId('buyAny').style.backgroundColor = Math.abs(shop.howMany) !== 1 ? 'green' : '';\n    getId('buyMax').style.backgroundColor = shop.howMany === -1 ? 'green' : '';\n    if (type === 'none' || type === 'any') { input.value = format(shop.input, { type: 'input' }); }\n    if (type !== 'none') { numbersUpdate(); }\n};\n\nexport const stageResetCheck = (stageIndex: number, auto = false): boolean => {\n    let allowed = false;\n    if (stageIndex >= 5) {\n        allowed = player.stage.current >= 5; //player.elements[26] === 1;\n    } else if (stageIndex === 4) {\n        return false;\n    } else if (stageIndex === 3) {\n        allowed = Limit(player.buildings[3][0].current).moreOrEqual('2.47e31');\n    } else if (stageIndex === 2) {\n        allowed = Limit(player.buildings[2][1].current).moreOrEqual('1.194e29');\n    } else if (stageIndex === 1) {\n        allowed = Limit(player.buildings[1][3].current).moreOrEqual('1.67e21');\n    }\n\n    if (auto && allowed) {\n        if (player.strangeness[5][2] < 1 || (stageIndex >= 4 && global.strangeInfo.gain(stageIndex) / 1e12 ** player.strangeness[5][10] < player.stage.input)) { return false; }\n        stageResetReward(stageIndex);\n    }\n    return allowed;\n};\n\nexport const stageAsyncReset = async() => {\n    const { stage } = player;\n    const active = player.inflation.vacuum ? 6 : (stage.active === 4 && stage.current === 5 && player.events[1] ? 5 : stage.active);\n\n    if (!stageResetCheck(active)) {\n        if (player.toggles.confirm[0] === 'None' || (stage.resets < 1 && (player.inflation.vacuum ? stage.current < 5 : player.upgrades[1][9] !== 1))) { return; }\n        if (active >= 5) { return void Alert('Awaiting \"Iron\" Element'); }\n        if (active === 4) { return void Alert('Enter Intergalactic space first'); }\n        if (active === 3) { return void Alert(`Self sustaining is not yet possible, obtain at least ${format(2.47e31)} Mass`); }\n        if (active === 2) { return void Alert(`Look's like more Mass expected, need even more Drops, around ${format(1.194e29)} in total`); }\n        if (active === 1) { return void Alert(`Not enough to form a single Drop of water, need at least ${format(1.67e21)} Molecules`); }\n    } else {\n        if (player.toggles.confirm[0] !== 'None') {\n            const noCobalt = active >= 4 && player.strangeness[4][4] >= 1 && player.elements[27] < 1;\n            const inChallenge = player.challenges.active !== -1;\n            if (player.toggles.confirm[0] !== 'Safe' || inChallenge || noCobalt) {\n                let text;\n                if (active === 6) {\n                    text = `Ready to reset progress for ${format(global.strangeInfo.gain(active) / 1e12 ** player.strangeness[5][10])} ${global.strangeInfo.name[player.strangeness[5][10]]}?`;\n                    if (noCobalt) { text += '\\n(Not all important Elements obtained)'; }\n                    if (inChallenge) { text += `\\n(${global.challengesInfo.name[player.challenges.active]} is active)`; }\n                } else if (active === 5) {\n                    text = `Return back to Microworld for ${format(global.strangeInfo.gain(active))} Strange quarks?`;\n                    if (noCobalt) { text += '\\n(Not all important Elements obtained)'; }\n                } else if (active !== stage.current) {\n                    text = `Reset this Stage for ${format(global.strangeInfo.gain(active))} Strange quarks?`;\n                } else {\n                    text = 'Ready to enter next Stage? Next one will be harder than current';\n                }\n                if (!await Confirm(text)) { return; }\n                if (!stageResetCheck(active)) { return Notify('Stage reset canceled, requirements are no longer met'); }\n            }\n        }\n        stageResetReward(active);\n    }\n};\n\nconst stageResetReward = (stageIndex: number) => {\n    const { stage } = player;\n    const time = stage.time;\n\n    stage.resets++;\n    let update: false | 'normal' | 'soft' = 'normal';\n    const resetThese = player.inflation.vacuum ? [1, 2, 3, 4, 5] : [stageIndex];\n    if (player.inflation.vacuum) {\n        stage.active = 1;\n        stage.current = 1;\n        stage.time = 0;\n    } else if (stageIndex === stage.current) {\n        if (stageIndex < 5) {\n            stage.current++;\n            if (stage.active === stage.current - 1) {\n                stage.active = stage.current;\n            } else { update = 'soft'; }\n            if (stage.current > stage.true) {\n                stage.true = stage.current;\n                player.events[0] = false;\n            }\n        } else {\n            stage.current = 1 + player.strangeness[5][0];\n            if ((stage.active === 4 && stage.current !== 4) || stage.active === 5) {\n                stage.active = stage.current;\n            } else { update = 'soft'; }\n            resetThese.unshift(4);\n        }\n        stage.time = 0;\n    } else { update = stageIndex === stage.active ? 'soft' : false; }\n\n    if (stage.true >= 5) {\n        const trueGain = global.strangeInfo.gain(stageIndex);\n        if (trueGain > stage.best) { stage.best = trueGain; }\n\n        const resetType = player.strangeness[5][10];\n        const postGain = trueGain / 1e12 ** resetType;\n        player.strange[resetType].current += postGain;\n        player.strange[resetType].total += postGain;\n        assignStrangeBoost();\n\n        if (stageIndex >= 4) {\n            const storage = global.historyStorage.stage;\n            const history = player.history.stage;\n            storage.unshift([trueGain, time, resetType]);\n            if (storage.length > history.input[1]) { storage.length = history.input[1]; }\n            if (trueGain / time > history.best[0] / history.best[1]) { history.best = [trueGain, time, resetType]; }\n        }\n    }\n\n    resetStage(resetThese, update);\n};\n\nexport const switchStage = (stage: number) => {\n    if (player.stage.active === stage) {\n        if (global.lastActive !== null) {\n            global.lastActive = null;\n        } else if (!global.screenReader[0]) { getId('stageSelect').classList.remove('active'); }\n        return;\n    }\n    if (!global.stageInfo.activeAll.includes(stage)) { return; }\n    if (((global.tab === 'research' && global.subtab.researchCurrent === 'Elements') || global.tab === 'Elements') && stage !== 4 && stage !== 5) {\n        switchTab('research', global.tab === 'research' ? 'Researches' : null);\n    }\n\n    player.stage.active = stage;\n    stageUpdate();\n\n    if (!player.events[1]) { playEvent(4, 1); }\n};\n\nexport const assignDischargeInformation = () => {\n    global.dischargeInfo.next = Math.round((10 - (2 * player.researches[1][3]) - (player.strangeness[1][1] / 2)) ** player.discharge.current);\n};\n\nexport const dischargeResetCheck = (auto = false): boolean => {\n    if (player.upgrades[1][5] < 1 || player.buildings[1][1].true <= 0) { return false; }\n    assignDischargeInformation();\n    const info = global.dischargeInfo;\n    const energy = player.discharge.energy;\n\n    if (auto) {\n        if (player.strangeness[1][3] < 1) { return false; }\n        if (energy >= info.next) {\n            dischargeReset();\n            return true;\n        }\n\n        if (player.strangeness[1][11] >= 1 || energy >= info.energyTrue) { return false; }\n        dischargeReset();\n        return true;\n    }\n    return energy < info.energyTrue || energy >= info.next;\n};\n\nexport const dischargeAsyncReset = async() => {\n    if (!dischargeResetCheck()) { return; }\n    const info = global.dischargeInfo;\n    const energy = player.discharge.energy;\n\n    if (player.toggles.confirm[1] !== 'None') {\n        const active = player.stage.active;\n        if (player.toggles.confirm[1] !== 'Safe' || active !== 1) {\n            if (!await Confirm(`${active === 1 ? 'This will reset all current Structures and Energy. ' : `Discarge attempt while inside '${global.stageInfo.word[active]}'.\\n`}${energy >= info.next ? 'Enough Energy to gain boost from a new goal' : `Can regain at least ${format(info.energyTrue - energy)} Energy`}, continue?`)) { return; }\n            if (!dischargeResetCheck()) { return Notify('Discharge canceled, requirements are no longer met'); }\n        }\n    }\n\n    if (global.screenReader[0]) { getId('SRMain').textContent = `Structures and Energy were reset${energy >= info.next ? ', also gained boost from reaching new goal' : ''}`; }\n    dischargeReset();\n};\n\nconst dischargeReset = () => {\n    if (player.discharge.energy >= global.dischargeInfo.next) {\n        player.discharge.current++;\n    }\n    awardVoidReward(1);\n    reset('discharge', player.inflation.vacuum ? [1, 2, 3, 4, 5] : [1]);\n};\n\nexport const assignVaporizationInformation = () => {\n    let get = Limit(player.buildings[2][1][player.researchesExtra[2][0] >= 1 ? 'total' : 'current']).divide(global.vaporizationInfo.effect2U2()).toArray();\n\n    if (Limit(get).moreOrEqual('1')) {\n        get = player.inflation.vacuum ?\n            Limit(player.vaporization.clouds).power(2.5).plus(get).power(0.4).minus(player.vaporization.clouds).multiply(global.milestonesInfo[2].reward[0]).toArray() :\n            Limit(player.vaporization.clouds).power(1 / 0.6).plus(get).power(0.6).minus(player.vaporization.clouds).toArray();\n        global.vaporizationInfo.get = get;\n    } else { global.vaporizationInfo.get = [0, 0]; }\n};\n\nexport const vaporizationResetCheck = (auto = false, clouds = 0): boolean => {\n    assignVaporizationInformation();\n    const info = global.vaporizationInfo;\n    if (player.upgrades[2][2] < 1 || info.get[0] === 0) { return false; }\n\n    if (auto) {\n        if (player.strangeness[2][4] < 1) { return false; }\n        if (Limit(info.cloudEffect(true)).multiply(info.rainEffect(true)).divide(info.cloudEffect(), info.rainEffect()).moreOrEqual(player.vaporization.input)) {\n            vaporizationReset();\n            return true;\n        } else if (clouds <= 0) { return false; }\n    }\n    if (clouds > 0) {\n        if (player.strangeness[2][4] < 2) { return false; }\n        vaporizationReset(clouds);\n        return !auto;\n    }\n    return true;\n};\n\nexport const vaporizationAsyncReset = async() => {\n    if (!vaporizationResetCheck()) { return; }\n    const info = global.vaporizationInfo;\n    const increase = player.vaporization.clouds[0] > 0 ? Limit(info.get).divide(player.vaporization.clouds).multiply('1e2').toArray() : '1e2';\n\n    if (player.toggles.confirm[2] !== 'None') {\n        const active = player.stage.active;\n        if (player.toggles.confirm[2] !== 'Safe' || active !== 2 || Limit(increase).lessThan('1e2')) {\n            if (!await Confirm(`${active === 2 ? 'Reset structures and upgrades' : `Vaporization attempt while inside '${global.stageInfo.word[active]}'.\\nConfirm`} for ${Limit(info.get).format()} (+${Limit(increase).format()}%) Clouds?`)) { return; }\n            if (!vaporizationResetCheck()) { return Notify('Vaporization canceled, requirements are no longer met'); }\n        }\n    }\n\n    if (global.screenReader[0]) { getId('SRMain').textContent = `Progress were reset for ${Limit(info.get).format()} (+${Limit(increase).format()}%) Clouds`; }\n    vaporizationReset();\n};\n\nconst vaporizationReset = (autoClouds = 0) => {\n    const { vaporization } = player;\n\n    vaporization.clouds = Limit(global.vaporizationInfo.get).multiply(autoClouds > 0 ? autoClouds / 4 : '1').plus(vaporization.clouds).toArray();\n    if (Limit(vaporization.cloudsMax).lessThan(vaporization.clouds)) { vaporization.cloudsMax = cloneArray(vaporization.clouds); }\n    awardMilestone(0, 2);\n    awardVoidReward(2);\n    if (autoClouds <= 0) { reset('vaporization', player.inflation.vacuum ? [1, 2, 3, 4, 5] : [2]); }\n};\n\nexport const rankResetCheck = (auto = false): boolean => {\n    const requirement = global.accretionInfo.rankCost[player.accretion.rank];\n    if (requirement === 0) { return false; }\n\n    if (player.inflation.vacuum) {\n        if (Limit(player.buildings[1][0].current).multiply('1.78266192e-33').lessThan(requirement)) { return false; }\n    } else if (Limit(player.buildings[3][0].current).lessThan(requirement)) { return false; }\n\n    if (auto) {\n        if (player.strangeness[3][4] < 1) { return false; }\n        rankReset();\n    }\n    return true;\n};\n\nexport const rankAsyncReset = async() => {\n    if (!rankResetCheck()) { return; }\n\n    if (player.toggles.confirm[3] !== 'None' && player.accretion.rank !== 0) {\n        const active = player.stage.active;\n        if (player.toggles.confirm[3] !== 'Safe' || active !== 3) {\n            if (!await Confirm(active === 3 ?\n                'Increasing Rank will reset structures, upgrades and Stage researches. But unlock something new' :\n                `Rank increase attempt while inside '${global.stageInfo.word[active]}'. Continue anyway?`)) { return; }\n            if (!rankResetCheck()) { return Notify('Rank increase canceled, requirements are no longer met'); }\n        }\n    }\n\n    rankReset();\n    if (global.screenReader[0]) { getId('SRMain').textContent = `Rank is now '${global.accretionInfo.rankName[player.accretion.rank]}'`; }\n};\n\nconst rankReset = () => {\n    player.accretion.rank++;\n    if (player.accretion.rank === 6) {\n        player.stage.current = 4;\n        stageUpdate('soft');\n    }\n    awardVoidReward(3);\n    reset('rank', player.inflation.vacuum ? [1, 2, 3, 4, 5] : [3]);\n    calculateMaxLevel(0, 3, 'researchesExtra', true);\n    calculateMaxLevel(4, 3, 'researchesExtra', true);\n    if (player.stage.active === 3) { updateRankInfo(); }\n};\n\nconst calculateMassGain = (): number => {\n    const { elements } = player;\n\n    let massGain = 0.004;\n    if (elements[3] === 1) { massGain += 0.002; }\n    if (elements[5] === 1) { massGain += 0.0002 * player.buildings[4][1].true; }\n    massGain *= elements[15] === 1 ? global.collapseInfo.trueStars : player.buildings[4][1].true;\n    if (player.inflation.vacuum) {\n        massGain = (massGain * 80) + 1;\n    } else {\n        if (elements[10] === 1) { massGain *= 2; }\n        if (player.researchesExtra[4][1] >= 1) { massGain *= global.collapseInfo.effect4RE1(); }\n        massGain *= global.collapseInfo.starEffect[2]();\n    }\n\n    if (global.strangeInfo.stageBoost[5] !== null && (player.inflation.vacuum || player.milestones[5][0] >= 6)) { massGain *= global.strangeInfo.stageBoost[5]; }\n    return massGain;\n};\n\nexport const assignCollapseInformation = () => {\n    const building = player.buildings[4];\n    const { starCheck } = global.collapseInfo;\n    const { stars } = player.collapse;\n    global.collapseInfo.newMass = !player.inflation.vacuum ? calculateMassGain() :\n        Limit(global.buildingsInfo.producing[1][1]).multiply(global.inflationInfo.massCap).min(player.buildings[1][0].current).multiply('8.96499278339628e-67').toNumber(); //1.78266192e-33 / 1.98847e33\n    starCheck[0] = building[2].true > 0 ? Math.max(building[2].true + Math.floor(building[1].true * player.strangeness[4][3] / 10) - stars[0], 0) : 0;\n    starCheck[1] = Math.max(building[3].true - stars[1], 0);\n    starCheck[2] = Math.max(building[4].true - stars[2], 0);\n};\n\nexport const collapseResetCheck = (auto = false, remnants = false): boolean => {\n    if (player.upgrades[4][0] < 1) { return false; }\n    assignCollapseInformation();\n    const info = global.collapseInfo;\n\n    if (auto) {\n        if (player.strangeness[4][5] < 1) { return false; }\n        if (player.toggles.buildings[5][3] && player.strangeness[5][6] >= 2 && Limit(calculateBuildingsCost(3, 5)).lessOrEqual(info.newMass)) {\n            collapseReset();\n            return true;\n        }\n\n        if (player.strangeness[4][5] < 2) {\n            const { starEffect } = info;\n            if ((info.massEffect(true) / info.massEffect()) * (starEffect[0](true) / starEffect[0]()) * (starEffect[1](true) / starEffect[1]()) * (starEffect[2](true) / starEffect[2]()) < player.collapse.input) { return false; }\n            collapseReset();\n            return true;\n        }\n\n        if (info.massEffect(true) / info.massEffect() >= player.collapse.input) {\n            collapseReset();\n            return true;\n        } else if (!remnants) { return false; }\n    }\n    if (remnants) {\n        if (player.strangeness[4][5] < 2 || (info.starCheck[0] <= 0 && info.starCheck[1] <= 0 && info.starCheck[2] <= 0)) { return false; }\n        collapseReset(false);\n        return !auto;\n    }\n\n    return info.newMass > player.collapse.mass || info.starCheck[0] > 0 || info.starCheck[1] > 0 || info.starCheck[2] > 0 || player.elements.includes(0.5);\n};\n\nexport const collapseAsyncReset = async() => {\n    if (!collapseResetCheck()) { return; }\n    const { newMass, starCheck: newStars } = global.collapseInfo;\n    const mass = player.collapse.mass;\n\n    if (player.toggles.confirm[4] !== 'None') {\n        const active = player.stage.active;\n        const unlockedG = mass >= 1e5 && player.strangeness[5][6] >= 1;\n        const cantAfford = !unlockedG || Limit(calculateBuildingsCost(3, 5)).moreThan(newMass);\n        const notMaxed = player.inflation.vacuum && newMass > mass && Limit(global.buildingsInfo.producing[1][1]).multiply(global.inflationInfo.massCap).moreThan(player.buildings[1][0].current);\n        if (player.toggles.confirm[4] !== 'Safe' || active !== 4 || (cantAfford && (notMaxed || unlockedG))) {\n            let message = active === 4 ? 'This will reset all researches and upgrades' : `Collapse attempt while inside '${global.stageInfo.word[active]}'`;\n            if (newMass > mass) {\n                message += `\\nSolar mass will increase to ${format(newMass)}`;\n                if (notMaxed) { message += '\\n(Hardcap is not reached)'; }\n                if (unlockedG) { message += `\\n(${cantAfford ? 'Not enough for' : 'Will be able to make'} a new Galaxy)`; }\n            } else { message += \"\\nSolar mass won't change\"; }\n            if (newStars[0] > 0 || newStars[1] > 0 || newStars[2] > 0) {\n                message += '\\nAlso will gain new Star remnants:';\n                if (newStars[0] > 0) { message += `\\n'Red giants' - ${format(newStars[0])}`; }\n                if (newStars[1] > 0) { message += `\\n'Neutron stars' - ${format(newStars[1])}`; }\n                if (newStars[2] > 0) { message += `\\n'Black holes' - ${format(newStars[2])}`; }\n            }\n            if (player.elements.includes(0.5)) {\n                let count = 0;\n                for (let i = 1; i < player.elements.length; i++) {\n                    if (player.elements[i] === 0.5) { count++; }\n                }\n                message += `\\n${format(count)} new Elements will activate`;\n            }\n            if (active !== 4) { message += '\\nContinue?'; }\n\n            if (!await Confirm(message)) { return; }\n            if (!collapseResetCheck()) { return Notify('Collapse canceled, requirements are no longer met'); }\n        }\n    }\n\n    if (global.screenReader[0]) {\n        let message = `Solar mass ${newMass > mass ? `is now ${format(newMass)}` : \"haven't changed\"}`;\n        if (newStars[0] > 0 || newStars[1] > 0 || newStars[2] > 0) {\n            message += ', also gained';\n            if (newStars[0] > 0) { message += ` ${format(newStars[0])} Red giants`; }\n            if (newStars[1] > 0) { message += `, ${format(newStars[1])} Neutron stars`; }\n            if (newStars[2] > 0) { message += `, ${format(newStars[2])} Black holes`; }\n        }\n        getId('SRMain').textContent = message;\n    }\n    collapseReset();\n};\n\nconst collapseReset = (toReset = true) => {\n    const { collapseInfo } = global;\n    const { collapse } = player;\n\n    collapse.stars[0] += collapseInfo.starCheck[0];\n    collapse.stars[1] += collapseInfo.starCheck[1];\n    collapse.stars[2] += collapseInfo.starCheck[2];\n    awardMilestone(1, 4);\n    if (toReset) {\n        const { elements } = player;\n\n        if (elements.includes(0.5)) {\n            for (let i = 1; i < elements.length; i++) {\n                if (elements[i] === 0.5) { buyUpgrades(i, 4, 'elements', true); }\n            }\n        }\n        if (collapseInfo.newMass > collapse.mass) {\n            collapse.mass = collapseInfo.newMass;\n            if (collapse.massMax < collapse.mass) { collapse.massMax = collapse.mass; }\n        }\n\n        awardMilestone(0, 4);\n        reset('collapse', player.inflation.vacuum ? [1, 2, 3, 4, 5] : (player.strangeness[5][5] < 1 ? [4, 5] : [4]));\n        calculateMaxLevel(0, 4, 'researches');\n        calculateMaxLevel(3, 4, 'researches');\n    }\n    awardVoidReward(4);\n};\n\nexport const calculateInstability = () => {\n    const { milestones } = player;\n    let value = 0;\n    if (milestones[1][0] >= 6) { value++; }\n    if (milestones[2][1] >= 6) { value++; }\n    if (milestones[3][1] >= 7) { value++; }\n    if (milestones[4][1] >= 8) { value++; }\n    if (milestones[5][1] >= 6) { value++; }\n    global.strangeInfo.instability = value;\n};\n\nexport const calculateMilestoneInformation = (index: number, stageIndex: number) => {\n    const { need, reward } = global.milestonesInfo[stageIndex];\n    const level = player.milestones[stageIndex][index];\n    if (!player.inflation.vacuum) {\n        const scaling = global.milestonesInfo[stageIndex].scalingOld[index];\n        need[index] = level < scaling.length ? Limit(scaling[level]).toArray() : [0, 0];\n    } else {\n        if (stageIndex === 1) {\n            if (index === 0) {\n                need[0] = Limit('1e80').power(level).multiply('1e80').toArray();\n                reward[0] = 1.04 ** level;\n            } else if (index === 1) {\n                need[1] = Limit(4e4 + 4e4 * level).toArray();\n                reward[1] = 2 * level;\n            }\n        } else if (stageIndex === 2) {\n            if (index === 0) {\n                need[0] = Limit('1e2').power(level).multiply('1e2').toArray();\n                reward[0] = 1.04 ** level;\n            } else if (index === 1) {\n                need[1] = Limit(80 + 80 * level).toArray();\n                reward[1] = 1.02 ** level;\n            }\n        } else if (stageIndex === 3) {\n            if (index === 0) {\n                need[0] = Limit('1e3').power(level).multiply('1e-15').toArray();\n                reward[0] = 1.03 ** level;\n            } else if (index === 1) {\n                need[1] = Limit(4 + 4 * level).toArray();\n                reward[1] = level / 400;\n            }\n        } else if (stageIndex === 4) {\n            if (index === 0) {\n                need[0] = Limit('1e4').power(level).multiply('1e4').toArray();\n                reward[0] = 1.05 ** level;\n            } else if (index === 1) {\n                need[1] = Limit(40 + 40 * level).toArray();\n                reward[1] = 1.03 ** level;\n            }\n        } else if (stageIndex === 5) {\n            if (index === 0) {\n                need[0] = Limit(160 + 160 * level).toArray();\n                reward[0] = 1.02 ** level;\n            } else if (index === 1) {\n                need[1] = Limit(1 + level).toArray();\n                reward[1] = level / 40;\n            }\n        }\n    }\n};\n\nconst awardMilestone = (index: number, stageIndex: number, count = 0) => {\n    if (!milestoneCheck(index, stageIndex)) {\n        if (count > 0) {\n            Notify(`Milestone '${global.milestonesInfo[stageIndex].name[index]}' ${count > 1 ? `${format(count)} new tiers` : 'new tier'} reached\\nTotal is now: ${format(player.milestones[stageIndex][index])}`);\n            if (player.inflation.vacuum) {\n                if (stageIndex === 1) {\n                    if (index === 1) {\n                        assignEnergy();\n                        awardMilestone(1, 1);\n                    }\n                }\n            } else {\n                player.strange[0].current += count;\n                player.strange[0].total += count;\n                calculateInstability();\n                assignStrangeBoost();\n            }\n        }\n        return;\n    }\n\n    player.milestones[stageIndex][index]++;\n    calculateMilestoneInformation(index, stageIndex);\n    awardMilestone(index, stageIndex, count + 1);\n};\n\nconst awardVoidReward = (index: number) => {\n    if (player.challenges.active !== 0) { return; }\n    const old = player.challenges.void[index];\n\n    let progress = 1;\n    if (index === 1) {\n        progress += player.researchesExtra[1][2];\n    } else if (index === 2) {\n        if (Limit(player.vaporization.clouds).moreThan('1e4')) { progress++; }\n    } else if (index === 3) {\n        progress = player.accretion.rank - 1;\n    } else if (index === 4) {\n        if (player.collapse.stars[0] > 1) { progress++; }\n        if (player.collapse.stars[1] > 1) { progress++; }\n        if (player.collapse.stars[2] > 1) { progress++; }\n    }\n    if (old >= progress) { return; }\n\n    player.challenges.void[index] = progress;\n    for (let i = old; i < progress; i++) {\n        Notify(`New Void reward achieved\\nReward: ${global.challengesInfo.rewardText[0][index][i]}`);\n    }\n    if (index === 3 && old < 4) {\n        calculateMaxLevel(0, 1, 'strangeness', true);\n        calculateMaxLevel(2, 1, 'strangeness', true);\n        calculateMaxLevel(5, 1, 'strangeness', true);\n        calculateMaxLevel(9, 1, 'strangeness', true);\n        calculateMaxLevel(0, 2, 'strangeness', true);\n        calculateMaxLevel(1, 2, 'strangeness', true);\n        calculateMaxLevel(3, 2, 'strangeness', true);\n        calculateMaxLevel(0, 3, 'strangeness', true);\n        calculateMaxLevel(1, 3, 'strangeness', true);\n        calculateMaxLevel(10, 3, 'strangeness', true);\n        calculateMaxLevel(0, 4, 'strangeness', true);\n        calculateMaxLevel(1, 4, 'strangeness', true);\n        calculateMaxLevel(7, 4, 'strangeness', true);\n        calculateMaxLevel(1, 5, 'strangeness', true);\n    }\n};\n\nexport const enterExitChallenge = async(index: number) => {\n    if (player.challenges.active === index) {\n        if (!await Confirm(`Leave the '${global.challengesInfo.name[index]}'?`)) { return; }\n        index = -1;\n    } else {\n        if (!player.inflation.vacuum) { return; }\n        if (index === 0 && player.strangeness[5][0] < 1) { return; }\n        if (!await Confirm(`Enter the '${global.challengesInfo.name[index]}'?\\nStage reset will be forced`)) { return; }\n    }\n\n    const reward = stageResetCheck(5); //Just in case\n    player.challenges.active = index;\n    if (!reward) {\n        player.stage.time = 0;\n        player.stage.active = 1;\n        player.stage.current = 1;\n        resetStage([1, 2, 3, 4, 5]);\n    } else { stageResetReward(5); }\n\n    getChallengeDescription(index);\n    if (global.screenReader[0]) { getId('SRStage').textContent = index === -1 ? 'Challenge is no longer active' : `'${global.challengesInfo.name[index]}' is now active`; }\n};\n", "import { getId, getQuery } from './Main';\nimport { global, player } from './Player';\nimport { calculateMaxLevel } from './Stage';\nimport { numbersUpdate, stageUpdate, visualUpdate, visualUpdateResearches } from './Update';\n\nexport const specialHTML = { //First values for images from here must be from true vacuum\n    resetHTML: [\n        '',\n        '<span class=\"bigWord orangeText\">Discharge</span>. Reset current Structures and Energy. Will also boost production by <span id=\"dischargeEffect\" class=\"orangeText\"></span>, if to reset with enough Energy.',\n        '<span class=\"bigWord grayText\">Vaporization</span>. Structures, upgrades, will be reset. But in return gain <span class=\"grayText\">Clouds</span>. It takes a lot to form more than one.',\n        '<img id=\"rankImage\" src=\"Used_art/Missing.png\" alt=\"\">Current <span class=\"bigWord darkorchidText\">Rank</span> is: <span id=\"rankName\"></span>. <span id=\"rankMessage\"></span>',\n        '<span class=\"bigWord orchidText\">Collapse</span> - Everything will be lost, but at same time gained. Even remnants have their own unique strength and effects.',\n        ''\n    ],\n    longestBuilding: 7, //+1\n    buildingHTML: [ //outerHTML is slow\n        [],\n        ['Preon.png', 'Quarks.png', 'Particle.png', 'Atom.png', 'Molecule.png'], //[0] === src\n        ['Drop.png', 'Puddle.png', 'Pond.png', 'Lake.png', 'Sea.png', 'Ocean.png'],\n        ['Cosmic%20dust.png', 'Planetesimal.png', 'Protoplanet.png', 'Natural%20satellite.png', 'Subsatellite.png'],\n        ['Brown%20dwarf.png', 'Orange%20dwarf.png', 'Red%20supergiant.png', 'Blue%20hypergiant.png', 'Quasi%20star.png'],\n        ['Nebula.png', 'Star%20cluster.png', 'Galaxy.png']\n    ],\n    longestUpgrade: 13,\n    upgradeHTML: [\n        [],\n        [\n            ['UpgradeQ1.png', 'Weak force'], //[1] === alt\n            ['UpgradeQ2.png', 'Strong force'],\n            ['UpgradeQ3.png', 'Electron'],\n            ['UpgradeQ4.png', 'Proton'],\n            ['UpgradeQ5.png', 'Neutron'],\n            ['UpgradeQ6.png', 'Superposition'],\n            ['UpgradeQ7.png', 'Protium'],\n            ['UpgradeQ8.png', 'Deuterium'],\n            ['UpgradeQ9.png', 'Tritium'],\n            ['UpgradeQ10.png', 'Fusion']\n        ],\n        [\n            ['UpgradeW1.png', 'H2O'],\n            ['UpgradeW2.png', 'Spread'],\n            ['UpgradeW3.png', 'Vaporization'],\n            ['UpgradeW4.png', 'Tension'],\n            ['UpgradeW5.png', 'Stress'],\n            ['UpgradeW6.png', 'Stream'],\n            ['UpgradeW7.png', 'River'],\n            ['UpgradeW8.png', 'Tsunami'],\n            ['UpgradeW9.png', 'Tide']\n        ],\n        [\n            ['UpgradeA1.png', 'Motion'],\n            ['UpgradeA2.png', 'Gas'],\n            ['UpgradeA3.png', 'Micrometeoroid'],\n            ['UpgradeA4.png', 'Instability'],\n            ['UpgradeA5.png', 'Gravity'],\n            ['UpgradeA6.png', 'Pile'],\n            ['UpgradeA7.png', 'Magma'],\n            ['UpgradeA8.png', 'Equilibrium'],\n            ['UpgradeA9.png', 'Orbit'],\n            ['UpgradeA10.png', 'Atmosphere'],\n            ['UpgradeA11.png', 'Pebble'],\n            ['UpgradeA12.png', 'Tidal force'],\n            ['UpgradeA13.png', 'Ring']\n        ],\n        [\n            ['UpgradeS1.png', 'Collapse'],\n            ['UpgradeS2.png', 'Reaction'],\n            ['UpgradeS3.png', 'CNO'],\n            ['UpgradeS4.png', 'Helium fusion']\n        ],\n        [\n            ['UpgradeG1.png', 'Instability'],\n            ['UpgradeG2.png', 'Super cluster'],\n            ['UpgradeG3.png', 'Quasar']\n        ]\n    ],\n    longestResearch: 9,\n    researchHTML: [\n        [],\n        [\n            ['ResearchQ1.png', 'Protium+', 'stage1borderImage'], //[2] === className\n            ['ResearchQ2.png', 'Deuterium+', 'stage1borderImage'],\n            ['ResearchQ3.png', 'Tritium+', 'stage1borderImage'],\n            ['ResearchQ4.png', 'Discharge-', 'stage4borderImage'],\n            ['ResearchQ5.png', 'Discharge+', 'stage4borderImage'],\n            ['ResearchQ6.png', 'Discharge++', 'stage4borderImage']\n        ],\n        [\n            ['ResearchW1.png', 'H2O+', 'stage2borderImage'],\n            ['ResearchW2.png', 'H2O++', 'stage2borderImage'],\n            ['ResearchW3.png', 'Tension+', 'stage2borderImage'],\n            ['ResearchW4.png', 'Stress+', 'stage2borderImage'],\n            ['ResearchW5.png', 'Streams+', 'stage2borderImage'],\n            ['ResearchW6.png', 'Channel', 'stage2borderImage']\n        ],\n        [\n            ['ResearchA1.png', 'Mass+', 'stage3borderImage'],\n            ['ResearchA2.png', 'Adhesion', 'stage2borderImage'],\n            ['ResearchA3.png', 'Weathering', 'stage3borderImage'],\n            ['ResearchA4.png', 'Shattering', 'stage3borderImage'],\n            ['ResearchA5.png', 'Collision', 'stage3borderImage'],\n            ['ResearchA6.png', 'Binary', 'stage3borderImage'],\n            ['ResearchA7.png', 'Gravity+', 'stage1borderImage'],\n            ['ResearchA8.png', 'Layers', 'stage7borderImage'],\n            ['ResearchA9.png', 'Drag', 'stage1borderImage']\n        ],\n        [\n            ['ResearchS1.png', 'Orbit', 'stage5borderImage'],\n            ['ResearchS2.png', '2 stars', 'stage5borderImage'],\n            ['ResearchS3.png', 'Protodisc', 'stage7borderImage'],\n            ['ResearchS4.png', 'Planetary nebula', 'stage5borderImage'],\n            ['ResearchS5.png', 'Gamma-rays', 'stage6borderImage']\n        ],\n        [\n            ['ResearchG1.png', 'Density', 'stage1borderImage'],\n            ['ResearchG2.png', 'Frequency', 'stage6borderImage']\n        ]\n    ],\n    longestResearchExtra: 5,\n    researchExtraDivHTML: [\n        [],\n        ['Energy%20Researches.png', 'stage4borderImage'],\n        ['Cloud%20Researches.png', 'stage2borderImage'],\n        ['Rank%20Researches.png', 'stage6borderImage'],\n        ['Collapse%20Researches.png', 'stage6borderImage'],\n        []\n    ],\n    researchExtraHTML: [\n        [],\n        [\n            ['ResearchEnergy1.png', 'Strong force+', 'stage1borderImage'],\n            ['ResearchEnergy2.png', 'Radiation+', 'stage5borderImage'],\n            ['ResearchEnergy3.png', 'Accretion', 'stage3borderImage'],\n            ['ResearchEnergy4.png', 'Preon Mass', 'stage1borderImage'],\n            ['ResearchEnergy5.png', 'Impulse', 'stage6borderImage']\n        ],\n        [\n            ['ResearchClouds1.png', 'Vaporization+', 'stage3borderImage'],\n            ['ResearchClouds2.png', 'Rain', 'stage2borderImage'],\n            ['ResearchClouds3.png', 'Storm', 'stage4borderImage'],\n            ['ResearchClouds4.png', 'Water Accretion', 'stage2borderImage']\n        ],\n        [\n            ['ResearchRank1.png', 'Ocean', 'stage3borderImage'],\n            ['ResearchRank2.png', 'Rank', 'stage3borderImage'],\n            ['ResearchRank3.png', 'Weight', 'stage3borderImage'],\n            ['ResearchRank4.png', 'Viscosity', 'stage2borderImage'],\n            ['ResearchRank5.png', 'Water Rank', 'stage2borderImage']\n        ],\n        [\n            ['ResearchCollapse1.png', 'Supernova', 'stage6borderImage'],\n            ['ResearchCollapse2.png', 'Mass transfer', 'stage7borderImage'],\n            ['ResearchCollapse3.png', 'White dwarf', 'stage1borderImage']\n        ],\n        []\n    ],\n    longestFooterStats: 3,\n    footerStatsHTML: [\n        [],\n        [\n            ['Energy%20mass.png', 'stage1borderImage cyanText', 'Mass'], //[2] === textcontent\n            ['Energy.png', 'stage4borderImage orangeText', 'Energy']\n        ],\n        [\n            ['Clouds.png', 'stage3borderImage grayText', 'Clouds'],\n            ['Water.png', 'stage2borderImage blueText', 'Moles'],\n            ['Drop.png', 'stage2borderImage blueText', 'Drops']\n        ],\n        [\n            ['Mass.png', 'stage3borderImage grayText', 'Mass']\n        ],\n        [\n            ['Main_sequence%20mass.png', 'stage1borderImage cyanText', 'Mass'],\n            ['Elements.png', 'stage4borderImage orangeText', 'Elements']\n        ],\n        [\n            ['Main_sequence%20mass.png', 'stage1borderImage cyanText', 'Mass'],\n            ['Elements.png', 'stage4borderImage orangeText', 'Elements'],\n            ['Stars.png', 'stage7borderImage redText', 'Stars']\n        ]\n    ],\n    cache: {\n        imagesDiv: document.createElement('div'),\n        idMap: new Map<string, HTMLElement>(),\n        classMap: new Map<string, HTMLCollectionOf<HTMLElement>>(),\n        queryMap: new Map<string, HTMLElement>()\n    }\n};\n\nexport const preventImageUnload = () => {\n    const { footerStatsHTML: footer, buildingHTML: build, upgradeHTML: upgrade, researchHTML: research, researchExtraHTML: extra, researchExtraDivHTML: extraDiv } = specialHTML;\n    //Duplicates are ignored, unless they are from Strangeness, because duplicates from there could become unique in future\n\n    let images = '';\n    for (let s = 1; s <= 5; s++) {\n        for (let i = 0; i < footer[s].length; i++) {\n            if (s === 2) {\n                if (i === 2) { continue; } //Drops\n            } else if (s === 5 && i < 2) { continue; } //Solar mass and Elements\n            images += `<img src=\"Used_art/${footer[s][i][0]}\" loading=\"lazy\">`;\n        }\n        for (let i = 0; i < build[s].length; i++) {\n            images += `<img src=\"Used_art/${build[s][i]}\" loading=\"lazy\">`;\n        }\n        for (let i = 0; i < upgrade[s].length; i++) {\n            images += `<img src=\"Used_art/${upgrade[s][i][0]}\" loading=\"lazy\">`;\n        }\n        for (let i = 0; i < research[s].length; i++) {\n            images += `<img src=\"Used_art/${research[s][i][0]}\" loading=\"lazy\">`;\n        }\n        for (let i = 0; i < extra[s].length; i++) {\n            images += `<img src=\"Used_art/${extra[s][i][0]}\" loading=\"lazy\">`;\n        }\n        if (extraDiv[s].length > 0) { images += `<img src=\"Used_art/${extraDiv[s][0]}\" loading=\"lazy\">`; }\n        images += `<img src=\"Used_art/Stage${s}%20border.png\" loading=\"lazy\">`;\n    }\n    specialHTML.cache.imagesDiv.innerHTML = images; //Saved just in case\n};\n\nexport const setTheme = (theme: number | null) => {\n    if (theme !== null) {\n        if (player.stage.true < theme) { theme = null; }\n        if (theme === 6 && player.stage.true < 7 && player.strangeness[5][0] < 1) { theme = null; }\n    }\n\n    global.theme = theme;\n    theme === null ? localStorage.removeItem('theme') : localStorage.setItem('theme', `${theme}`);\n    switchTheme();\n};\n\nexport const switchTheme = () => {\n    const body = document.body.style;\n    const theme = global.theme ?? player.stage.active;\n    getId('currentTheme').textContent = global.theme === null ? 'Default' : global.stageInfo.word[theme];\n\n    let dropStatColor = '';\n    let waterStatColor = '';\n    body.setProperty('--transition-all', '1s');\n    body.setProperty('--transition-buttons', '700ms');\n\n    /* Full reset, because better response from CSS (also easier) */\n    body.removeProperty('--background-color');\n    body.removeProperty('--window-color');\n    body.removeProperty('--window-border');\n    body.removeProperty('--footer-color');\n    body.removeProperty('--button-main-color');\n    body.removeProperty('--button-main-border');\n    body.removeProperty('--button-main-hover');\n    body.removeProperty('--building-can-buy');\n    body.removeProperty('--button-tab-border');\n    body.removeProperty('--button-tab-active');\n    body.removeProperty('--button-tab-elements');\n    body.removeProperty('--button-tab-strangeness');\n    body.removeProperty('--button-image-hover');\n    body.removeProperty('--button-footer-hover');\n    body.removeProperty('--button-delete-color');\n    body.removeProperty('--button-delete-hover');\n    body.removeProperty('--input-border-color');\n    body.removeProperty('--input-text-color');\n    body.removeProperty('--button-text-color');\n    body.removeProperty('--main-text-color');\n    body.removeProperty('--white-text-color');\n    //body.removeProperty('--cyan-text-color');\n    body.removeProperty('--blue-text-color');\n    body.removeProperty('--orange-text-color');\n    body.removeProperty('--gray-text-color');\n    body.removeProperty('--orchid-text-color');\n    body.removeProperty('--darkorchid-text-color');\n    body.removeProperty('--darkviolet-text-color');\n    body.removeProperty('--red-text-color');\n    body.removeProperty('--green-text-color');\n    body.removeProperty('--yellow-text-color');\n    /* These colors will need to be changed in other places as well: (not just 2, but from 2 to max)\n        --window-color > '.stage2windowBackground';\n        --button-main-color > '.stage2backgroundButton' and 'global.stageInfo.buttonBackgroundColor[2]';\n        --button-main-border > '.stage2borderButton' and 'global.stageInfo.buttonBorderColor[2]'; */\n    switch (theme) {\n        case 1:\n            for (const text of ['upgrade', 'research', 'element']) {\n                getId(`${text}Effect`).style.color = '';\n                getId(`${text}Cost`).style.color = '';\n                if (text === 'upgrade') { continue; } //Not changed anywhere\n                getId(`${text}Text`).style.color = '';\n            }\n            break;\n        case 2:\n            for (const text of ['upgrade', 'research', 'element']) {\n                getId(`${text}Effect`).style.color = 'var(--green-text-color)';\n                getId(`${text}Cost`).style.color = 'var(--cyan-text-color)';\n                if (text === 'upgrade') { continue; }\n                getId(`${text}Text`).style.color = '';\n            }\n            body.setProperty('--background-color', '#070026');\n            body.setProperty('--window-color', '#000052');\n            body.setProperty('--window-border', 'blue');\n            body.setProperty('--footer-color', '#0000db');\n            body.setProperty('--button-main-color', 'blue');\n            body.setProperty('--button-main-border', '#427be1');\n            body.setProperty('--button-main-hover', '#1111b0');\n            body.setProperty('--button-tab-border', '#376ac5');\n            body.setProperty('--button-tab-active', '#990000');\n            body.setProperty('--button-image-hover', '#2400d7');\n            body.setProperty('--input-border-color', '#4747ff');\n            body.setProperty('--input-text-color', 'dodgerblue');\n            body.setProperty('--main-text-color', 'var(--blue-text-color)');\n            body.setProperty('--gray-text-color', '#9b9b9b');\n            body.setProperty('--darkorchid-text-color', '#c71bff');\n            body.setProperty('--darkviolet-text-color', '#8b6bff');\n            body.setProperty('--green-text-color', '#82cb3b');\n            body.setProperty('--red-text-color', '#f70000');\n            if (player.stage.active === 2) {\n                dropStatColor = '#3099ff';\n                waterStatColor = '#3099ff';\n            }\n            break;\n        case 3:\n            for (const text of ['upgrade', 'research', 'element']) {\n                getId(`${text}Effect`).style.color = '';\n                getId(`${text}Cost`).style.color = 'var(--green-text-color)';\n                if (text === 'upgrade') { continue; }\n                getId(`${text}Text`).style.color = 'var(--orange-text-color)';\n            }\n            body.setProperty('--background-color', '#000804');\n            body.setProperty('--window-color', '#2e1200');\n            body.setProperty('--window-border', '#31373e');\n            body.setProperty('--footer-color', '#221a00');\n            body.setProperty('--button-main-color', '#291344');\n            body.setProperty('--button-main-border', '#404040');\n            body.setProperty('--button-main-hover', '#382055');\n            body.setProperty('--button-tab-border', '#484848');\n            body.setProperty('--button-tab-active', '#8d4c00');\n            body.setProperty('--button-tab-elements', 'var(--button-tab-active)');\n            body.setProperty('--button-image-hover', '#5a2100');\n            body.setProperty('--button-footer-hover', '#1a1a1a');\n            body.setProperty('--button-delete-color', '#891313');\n            body.setProperty('--button-delete-hover', '#a80b0b');\n            body.setProperty('--input-border-color', '#8b4a00');\n            body.setProperty('--input-text-color', '#e77e00');\n            body.setProperty('--main-text-color', 'var(--gray-text-color)');\n            body.setProperty('--white-text-color', '#dfdfdf');\n            body.setProperty('--orange-text-color', '#f58600');\n            body.setProperty('--green-text-color', '#00db00');\n            if (player.stage.active === 2) {\n                dropStatColor = '#3099ff';\n                waterStatColor = '#3099ff';\n            }\n            break;\n        case 4:\n            for (const text of ['upgrade', 'research', 'element']) {\n                getId(`${text}Effect`).style.color = 'var(--green-text-color)';\n                getId(`${text}Cost`).style.color = 'var(--cyan-text-color)';\n                if (text === 'upgrade') { continue; }\n                getId(`${text}Text`).style.color = 'var(--blue-text-color)';\n            }\n            body.setProperty('--background-color', '#140e04');\n            body.setProperty('--window-color', '#4e0000');\n            body.setProperty('--window-border', '#894800');\n            body.setProperty('--footer-color', '#4e0505');\n            body.setProperty('--button-main-color', '#6a3700');\n            body.setProperty('--button-main-border', '#9f6700');\n            body.setProperty('--button-main-hover', '#914b00');\n            body.setProperty('--building-can-buy', '#007f95');\n            body.setProperty('--button-tab-border', '#af5d00');\n            body.setProperty('--button-tab-active', '#008297');\n            body.setProperty('--button-tab-elements', 'var(--button-tab-active)');\n            body.setProperty('--button-tab-strangeness', '#00a500');\n            body.setProperty('--button-image-hover', '#605100');\n            body.setProperty('--button-footer-hover', '#212121');\n            body.setProperty('--button-delete-color', '#8f0000');\n            body.setProperty('--button-delete-hover', '#ad0000');\n            body.setProperty('--input-border-color', '#008399');\n            body.setProperty('--input-text-color', '#05c3c3');\n            body.setProperty('--button-text-color', '#d9d900');\n            body.setProperty('--main-text-color', 'var(--orange-text-color)');\n            body.setProperty('--white-text-color', '#e5e500');\n            body.setProperty('--blue-text-color', '#2e96ff');\n            body.setProperty('--gray-text-color', '#8b8b8b');\n            body.setProperty('--darkorchid-text-color', '#c71bff');\n            body.setProperty('--darkviolet-text-color', '#9457ff');\n            body.setProperty('--red-text-color', 'red');\n            body.setProperty('--green-text-color', '#00e600');\n            body.setProperty('--yellow-text-color', 'var(--green-text-color)');\n            break;\n        case 5:\n            for (const text of ['upgrade', 'research', 'element']) {\n                getId(`${text}Effect`).style.color = 'var(--green-text-color)';\n                getId(`${text}Cost`).style.color = 'var(--red-text-color)';\n                if (text === 'upgrade') { continue; }\n                getId(`${text}Text`).style.color = 'var(--orange-text-color)';\n            }\n            body.setProperty('--background-color', '#060010');\n            body.setProperty('--window-color', '#001d42');\n            body.setProperty('--window-border', '#35466e');\n            body.setProperty('--footer-color', '#2f005c');\n            body.setProperty('--button-main-color', '#4a008f');\n            body.setProperty('--button-main-border', '#8a0049');\n            body.setProperty('--button-main-hover', '#6800d6');\n            body.setProperty('--building-can-buy', '#8603ff');\n            body.setProperty('--button-tab-border', '#9d0054');\n            body.setProperty('--button-tab-active', '#8500ff');\n            body.setProperty('--button-image-hover', '#3b0080');\n            body.setProperty('--button-footer-hover', '#1a1a1a');\n            body.setProperty('--button-delete-color', '#800000');\n            body.setProperty('--button-delete-hover', '#9b1212');\n            body.setProperty('--input-border-color', '#3656a1');\n            body.setProperty('--input-text-color', '#6a88cd');\n            body.setProperty('--button-text-color', '#fc9cfc');\n            body.setProperty('--main-text-color', 'var(--darkorchid-text-color)');\n            body.setProperty('--white-text-color', '#ff79ff');\n            body.setProperty('--orchid-text-color', '#ff00f4');\n            body.setProperty('--darkorchid-text-color', '#c000ff');\n            body.setProperty('--darkviolet-text-color', '#9f52ff');\n            body.setProperty('--yellow-text-color', 'var(--darkviolet-text-color)');\n            break;\n        case 6:\n            for (const text of ['upgrade', 'research', 'element']) {\n                getId(`${text}Effect`).style.color = 'var(--red-text-color)';\n                getId(`${text}Cost`).style.color = '';\n                if (text === 'upgrade') { continue; }\n                getId(`${text}Text`).style.color = 'var(--orchid-text-color)';\n            }\n            body.setProperty('--background-color', 'black');\n            body.setProperty('--window-color', '#01003c');\n            body.setProperty('--window-border', '#7100ff');\n            body.setProperty('--footer-color', '#00007a');\n            body.setProperty('--button-main-color', '#2b0095');\n            body.setProperty('--button-main-border', '#711bda');\n            body.setProperty('--button-main-hover', '#3d00d6');\n            body.setProperty('--building-can-buy', '#a80000');\n            body.setProperty('--button-tab-border', '#6719c8');\n            body.setProperty('--button-tab-active', '#8d0000');\n            body.setProperty('--button-image-hover', '#490070');\n            body.setProperty('--button-delete-color', '#930606');\n            body.setProperty('--button-delete-hover', '#b80000');\n            body.setProperty('--input-border-color', '#a50000');\n            body.setProperty('--input-text-color', 'red');\n            body.setProperty('--button-text-color', '#efe0ff');\n            body.setProperty('--main-text-color', 'var(--darkviolet-text-color)');\n            body.setProperty('--gray-text-color', '#9b9b9b');\n            body.setProperty('--darkviolet-text-color', '#8157ff');\n            body.setProperty('--white-text-color', '#f9f5ff');\n            body.setProperty('--red-text-color', 'red');\n            body.setProperty('--yellow-text-color', 'var(--red-text-color)');\n    }\n    getQuery('#footerStat2 > p').style.color = dropStatColor;\n    getQuery('#footerStat3 > p').style.color = waterStatColor;\n\n    setTimeout(() => {\n        body.removeProperty('--transition-all');\n        body.removeProperty('--transition-buttons');\n    }, 1000);\n};\n\nexport const Alert = async(text: string): Promise<void> => {\n    return await new Promise((resolve) => {\n        const blocker = getId('blocker');\n        if (blocker.style.display !== 'none') {\n            resolve();\n            Notify('Another Alert is already active');\n            return;\n        }\n\n        getId('alertText').textContent = text;\n        const confirm = getId('confirmBtn');\n        blocker.style.display = '';\n        confirm.focus();\n\n        const key = async(button: KeyboardEvent) => {\n            if (button.key === 'Escape' || button.key === 'Enter' || button.key === ' ') {\n                button.preventDefault();\n                close();\n            }\n        };\n        const close = () => {\n            blocker.style.display = 'none';\n            document.removeEventListener('keydown', key);\n            confirm.removeEventListener('click', close);\n            resolve();\n        };\n        document.addEventListener('keydown', key);\n        confirm.addEventListener('click', close);\n    });\n};\n\nexport const Confirm = async(text: string): Promise<boolean> => {\n    return await new Promise((resolve) => {\n        const blocker = getId('blocker');\n        if (blocker.style.display !== 'none') {\n            resolve(false);\n            Notify('Another Alert is already active');\n            return;\n        }\n\n        getId('alertText').textContent = text;\n        const cancel = getId('cancelBtn');\n        const confirm = getId('confirmBtn');\n        blocker.style.display = '';\n        cancel.style.display = '';\n        confirm.focus();\n\n        const yes = () => { close(true); };\n        const no = () => { close(false); };\n        const key = (button: KeyboardEvent) => {\n            if (button.key === 'Escape') {\n                button.preventDefault();\n                no();\n            } else if (button.key === 'Enter' || button.key === ' ') {\n                if (document.activeElement !== cancel) {\n                    button.preventDefault();\n                    yes();\n                }\n            }\n        };\n        const close = (result: boolean) => {\n            blocker.style.display = 'none';\n            cancel.style.display = 'none';\n            document.removeEventListener('keydown', key);\n            confirm.removeEventListener('click', yes);\n            cancel.removeEventListener('click', no);\n            resolve(result);\n        };\n        document.addEventListener('keydown', key);\n        confirm.addEventListener('click', yes);\n        cancel.addEventListener('click', no);\n    });\n};\n\nexport const Prompt = async(text: string, inputValue = ''): Promise<string | null> => {\n    return await new Promise((resolve) => {\n        const blocker = getId('blocker');\n        if (blocker.style.display !== 'none') {\n            resolve(null);\n            Notify('Another Alert is already active');\n            return;\n        }\n\n        getId('alertText').textContent = text;\n        const input = getId('inputArea') as HTMLInputElement;\n        const cancel = getId('cancelBtn');\n        const confirm = getId('confirmBtn');\n        blocker.style.display = '';\n        cancel.style.display = '';\n        input.style.display = '';\n        input.value = inputValue;\n        input.focus();\n\n        const yes = () => { close(input.value); };\n        const no = () => { close(null); };\n        const key = (button: KeyboardEvent) => {\n            if (button.key === 'Escape') {\n                button.preventDefault();\n                no();\n            } else if (button.key === 'Enter' || button.key === ' ') {\n                if (document.activeElement !== cancel) {\n                    button.preventDefault();\n                    yes();\n                }\n            }\n        };\n        const close = (result: string | null) => {\n            blocker.style.display = 'none';\n            cancel.style.display = 'none';\n            input.style.display = 'none';\n            document.removeEventListener('keydown', key);\n            confirm.removeEventListener('click', yes);\n            cancel.removeEventListener('click', no);\n            resolve(result);\n        };\n        document.addEventListener('keydown', key);\n        confirm.addEventListener('click', yes);\n        cancel.addEventListener('click', no);\n    });\n};\n\nexport const Notify = (text: string) => {\n    const div = getId('notifications');\n    const notification = document.createElement('p');\n    notification.textContent = text;\n    notification.style.animation = 'hideX 1s ease-in-out reverse';\n    div.style.pointerEvents = '';\n    if (global.screenReader[0]) { notification.setAttribute('role', 'alert'); } //Firefox doesn't support any Aria shorthands\n\n    const mainDiv = getId('notifications');\n    mainDiv.appendChild(notification);\n\n    let timeout: number | undefined;\n    const remove = () => {\n        notification.removeEventListener('click', remove);\n        notification.style.animation = 'hideX 1s ease-in-out forwards';\n        setTimeout(() => {\n            mainDiv.removeChild(notification);\n            div.style.pointerEvents = '';\n        }, 1000);\n        clearTimeout(timeout);\n    };\n\n    setTimeout(() => {\n        notification.style.animation = '';\n        div.style.pointerEvents = 'auto';\n        timeout = setTimeout(remove, 9000);\n        notification.addEventListener('click', remove);\n    }, 1000);\n};\n\nexport const hideFooter = () => {\n    const footer = getId('footer');\n    const footerArea = getId('footerMain');\n    const toggle = getId('hideToggle');\n    const arrow = getId('hideArrow');\n\n    const animationReset = () => {\n        footer.style.animation = '';\n        arrow.style.animation = '';\n        toggle.addEventListener('click', hideFooter);\n    };\n\n    global.footer = !global.footer;\n    toggle.removeEventListener('click', hideFooter);\n    if (global.footer) {\n        footerArea.style.display = '';\n        arrow.style.transform = '';\n        footer.style.animation = 'hideY 1s reverse';\n        arrow.style.animation = 'rotate 1s reverse';\n        getId('hideText').textContent = 'Hide';\n        setTimeout(animationReset, 1000);\n\n        numbersUpdate();\n        visualUpdate();\n    } else {\n        footer.style.animation = 'hideY 1s backwards';\n        arrow.style.animation = 'rotate 1s backwards';\n        getId('hideText').textContent = 'Show';\n        setTimeout(() => {\n            footerArea.style.display = 'none';\n            arrow.style.transform = 'rotate(180deg)';\n            animationReset();\n        }, 1000);\n    }\n};\n\nexport const mobileDeviceSupport = (change = false) => {\n    let enabled = localStorage.getItem('support') === 'MD';\n    const toggle = getId('MDMainToggle');\n\n    if (change) { enabled = !enabled; }\n\n    if (enabled) {\n        toggle.textContent = 'ON';\n        toggle.style.color = 'var(--red-text-color)';\n        toggle.style.borderColor = 'crimson';\n        localStorage.setItem('support', 'MD');\n        global.mobileDevice = true;\n        if (change) { void Alert('To enable touchStart events (as example: touching an upgrade to view description), will need to reload'); }\n        if (global.screenReader[0]) { screenReaderSupport(); }\n        (getId('file') as HTMLInputElement).accept = ''; //Accept for unknown reason not properly supported on phones\n    } else {\n        toggle.textContent = 'OFF';\n        toggle.style.color = '';\n        toggle.style.borderColor = '';\n        global.mobileDevice = false;\n        if (change) { localStorage.removeItem('support'); }\n        (getId('file') as HTMLInputElement).accept = '.txt';\n    }\n};\n\nexport const screenReaderSupport = (change = false) => {\n    let enabled = localStorage.getItem('support') === 'SR';\n    const toggle = getId('SRMainToggle');\n\n    if (change) { enabled = !enabled; }\n\n    if (enabled) {\n        toggle.textContent = 'ON';\n        toggle.style.color = 'var(--red-text-color)';\n        toggle.style.borderColor = 'crimson';\n        localStorage.setItem('support', 'SR');\n        global.screenReader[0] = true;\n        if (change) { void Alert(\"To enable focus events (as example: view description of an upgrade by pressing 'tab'), will need to reload\"); }\n        if (global.mobileDevice) { mobileDeviceSupport(); }\n        SRCreateHTML();\n        stageUpdate();\n    } else {\n        toggle.textContent = 'OFF';\n        toggle.style.color = '';\n        toggle.style.borderColor = '';\n        global.screenReader[0] = false;\n        if (change) { localStorage.removeItem('support'); }\n    }\n};\n\nconst SRCreateHTML = () => {\n    getId('stageSelect').classList.add('active');\n    if (getId('SRMain', false) !== null) { return; }\n    global.screenReader[2] = true;\n    getId('SRMessage1', false).remove();\n\n    const SRMainDiv = document.createElement('article');\n    SRMainDiv.innerHTML = '<p id=\"SRTab\" aria-live=\"polite\"></p><p id=\"SRStage\" aria-live=\"polite\"></p><p id=\"SRMain\" aria-live=\"assertive\"></p>';\n    SRMainDiv.classList.add('reader');\n    SRMainDiv.setAttribute('aria-label', 'Information for Screen reader');\n    getId('fakeFooter').before(SRMainDiv);\n\n    const SRSettings = document.createElement('section');\n    SRSettings.innerHTML = '<button type=\"button\" id=\"SRToggle1\">Return index tab to created Upgrades/Researches and etc.</button><button type=\"button\" id=\"SRToggle2\">Return index tab to primary buttons</button>';\n    SRSettings.classList.add('reader');\n    SRSettings.setAttribute('aria-label', 'Settings for Screen reader');\n    getQuery('#settingsSubtabSettings .options').before(SRSettings);\n\n    const hangleToggle = (number: number) => {\n        global.screenReader[number] = !global.screenReader[number];\n        const toggleHTML = getId(`SRToggle${number}`) as { textContent: string };\n        toggleHTML.textContent = toggleHTML.textContent.replace(global.screenReader[number] ? 'Remove tab from' : 'Return tab to', global.screenReader[number] ? 'Return tab to' : 'Remove tab from');\n    };\n    getId('SRToggle1').addEventListener('click', () => {\n        hangleToggle(1);\n        stageUpdate('reload');\n        for (let s = 1; s < player.strangeness.length; s++) {\n            for (let i = 0; i < global.strangenessInfo[s].maxActive; i++) {\n                visualUpdateResearches(i, s, 'strangeness');\n            }\n        }\n    });\n    getId('SRToggle2').addEventListener('click', () => {\n        hangleToggle(2);\n        const newTab = global.screenReader[2] ? -1 : 0;\n        getId('stageReset').tabIndex = newTab;\n        getId('reset1Button').tabIndex = newTab;\n        for (let i = 1; i < specialHTML.longestBuilding; i++) {\n            getId(`building${i}Btn`).tabIndex = newTab;\n            getId(`toggleBuilding${i}`).tabIndex = newTab;\n        }\n        getId('toggleBuilding0').tabIndex = newTab;\n        for (const tabText of global.tabList.tabs) {\n            getId(`${tabText}TabBtn`).tabIndex = newTab;\n            if (!Object.hasOwn(global.tabList, `${tabText}Subtabs`)) { continue; }\n            for (const subtabText of global.tabList[`${tabText as 'stage'}Subtabs`]) {\n                getId(`${tabText}SubtabBtn${subtabText}`).tabIndex = newTab;\n            }\n        }\n        for (let i = 1; i < global.stageInfo.word.length; i++) {\n            getId(`${global.stageInfo.word[i]}Switch`).tabIndex = newTab;\n        }\n    });\n};\n\nexport const changeFontSize = (change = false) => {\n    const input = getId('customFontSize') as HTMLInputElement;\n    let size = Number(change ? input.value : localStorage.getItem('fontSize'));\n    if (size === 0) { size = 16; }\n\n    if (size === 16) {\n        document.body.style.fontSize = '';\n        localStorage.removeItem('fontSize');\n    } else {\n        size = Math.floor(Math.min(Math.max(size, 10), 32) * 10) / 10;\n        document.body.style.fontSize = `${size}px`;\n        localStorage.setItem('fontSize', `${size}`);\n    }\n    input.value = `${size}`;\n};\n\nexport const changeFormat = (point: boolean) => {\n    const htmlInput = (point ? getId('decimalPoint') : getId('thousandSeparator')) as HTMLInputElement;\n    const allowed = ['.', ',', ' ', '_', '^', '\"', \"'\", '`', '|'].includes(htmlInput.value);\n    if (!allowed || (point ? player.separator[0] : player.separator[1]) === htmlInput.value) {\n        if (point && player.separator[0] === '.') {\n            (getId('thousandSeparator') as HTMLInputElement).value = '';\n            player.separator[0] = '';\n        }\n        htmlInput.value = point ? '.' : '';\n    }\n    point ? player.separator[1] = htmlInput.value : player.separator[0] = htmlInput.value;\n};\n\nexport const replayEvent = async() => {\n    if (getId('blocker').style.display !== 'none') { return; }\n    const { events } = player;\n\n    let last;\n    if (events[2]) {\n        last = 6;\n    } else if (events[1]) {\n        last = 5;\n    } else {\n        last = player.stage.true - (events[0] ? 0 : 1);\n    }\n\n    const event = Number(await Prompt(`Which event do you want to see again?\\n(Number of highest unlocked event is ${last})`, `${last}`));\n    if (!isFinite(event) || event <= 0) { return; }\n    if (event > last) { return void Alert(`Event ${event} isn't unlocked`); }\n\n    playEvent(event - 1, -1);\n};\n\nexport const playEvent = (event: number, index: number) => {\n    if (getId('blocker').style.display !== 'none') { return; }\n    if (index !== -1) { player.events[index] = true; }\n\n    switch (event) {\n        case 0: //[0] Discharge explanation\n            return void Alert(\"Energy that had been spent, can't be obtained again. But doing Discharge will reset spent Energy\\n(How much Energy should be if none was used can be seen in stats)\");\n        case 1: //[0] Clouds softcap\n            return void Alert('Cloud density is too high... Strength of new Clouds will be weaker (strength can be seen in stats)');\n        case 2: //[0] Accretion new Rank unlocked\n            if (index !== -1) { global.accretionInfo.rankCost[4] = 5e29; }\n            return void Alert('Getting more Mass, seems impossible. We need to change our approach, next Rank is going to be softcapped');\n        case 3: //[0] Element activation\n            return void Alert(\"Elements require Collapse to be activated. Soon even more Star remnants will be obtained through Collapse (Solar mass cannot decrease), remnants strength can be seen in stats, effects will be known with proper Elements (Like Solar mass effect and '[1] Hydrogen')\");\n        case 4: //[1] Entering Intergalactic\n            return void Alert(\"There doesn't seem to be anything here. Let's try going back to start and find what is missing\");\n        case 5: //[2] Creating Galaxy\n            if (index !== -1) { calculateMaxLevel(4, 4, 'strangeness', true); }\n            return void Alert('Galaxy will boost production of Nebulas and Star clusters, but for the cost of every other structure/upgrade and even Elements');\n    }\n};\n", "import Limit from './Limit';\nimport { getId } from './Main';\nimport { setTheme } from './Special';\nimport { assignEnergy, assignStrangeBoost, calculateInstability, calculateMaxLevel, calculateMilestoneInformation, toggleBuy, toggleConfirm, toggleSwap } from './Stage';\nimport type { globalType, overlimit, playerType } from './Types';\nimport { format, visualUpdateResearches } from './Update';\nimport { prepareVacuum } from './Vacuum';\n\nexport const player: playerType = { //Only for information that need to be saved (cannot be calculated)\n    version: 'v0.1.7',\n    fileName: 'Fundamental, [date] [time], [stage]',\n    separator: ['', '.'], //[0] separator, [1] point\n    stage: {\n        true: 1,\n        current: 1,\n        active: 1,\n        resets: 0,\n        export: 86400,\n        best: 0,\n        time: 0,\n        input: 20\n    },\n    discharge: { //Stage 1\n        energy: 0,\n        energyMax: 0,\n        current: 0\n    },\n    vaporization: { //Stage 2\n        clouds: [0, 0],\n        cloudsMax: [0, 0],\n        input: 3\n    },\n    accretion: { //Stage 3\n        rank: 0\n    },\n    collapse: { //Stage 4, 5\n        mass: 0.01235,\n        massMax: 0.01235,\n        stars: [0, 0, 0],\n        show: 0,\n        input: 2\n    },\n    inflation: { //Stage 6\n        vacuum: false,\n        age: 0\n    },\n    intervals: {\n        main: 20,\n        numbers: 80,\n        visual: 1000,\n        autoSave: 20000\n    },\n    time: {\n        updated: Date.now(),\n        started: Date.now(),\n        offline: 0\n    },\n    buildings: [\n        [] as unknown as playerType['buildings'][0], [ //Stage 1\n            {\n                current: [3, 0],\n                total: [3, 0],\n                trueTotal: [3, 0],\n                highest: [3, 0]\n            }, {\n                true: 0, //Bought\n                current: [0, 0], //On hands\n                total: [0, 0], //This reset\n                trueTotal: [0, 0], //This stage\n                highest: [0, 0] //Highest 'current' in any stage\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }\n        ], [ //Stage 2\n            {\n                current: [2.8, -3],\n                total: [2.8, -3],\n                trueTotal: [2.8, -3],\n                highest: [2.8, -3]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }\n        ], [ //Stage 3\n            {\n                current: [1, -19],\n                total: [1, -19],\n                trueTotal: [1, -19],\n                highest: [1, -19]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }\n        ], [ //Stage 4\n            {\n                current: [1, 0],\n                total: [1, 0],\n                trueTotal: [1, 0],\n                highest: [1, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }\n        ], [ //Stage 5\n            {\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }\n        ]\n    ],\n    strange: [ //Stage 5\n        {\n            current: 0,\n            total: 0\n        }, {\n            current: 0,\n            total: 0\n        }\n    ],\n    /* Because I'm lazy to write 50+ 0's, all empty [] auto added */\n    upgrades: [],\n    researches: [],\n    researchesExtra: [],\n    ASR: [], //Auto Structures Research\n    elements: [],\n    strangeness: [],\n    milestones: [],\n    challenges: {\n        active: -1,\n        void: [0, 0, 0, 0, 0, 0]\n    },\n    toggles: {\n        normal: [], //Auto added for every element with a class 'toggle'\n        /* Offline auto use[0]; Hotkeys type[1]; Elements as tab[2] */\n        confirm: [], //Class 'toggleConfirm'\n        /* Stage[0]; Discharge[1]; Vaporization[2]; Rank[3]; Collapse[4] */\n        buildings: [], //Class 'toggleBuilding' ([0] everywhere, is toggle all)\n        auto: [], //Class 'toggleAuto'\n        /* Stage[0], Discharge[1], Vaporization[2], Rank[3], Collapse[4],\n           Upgrades[5], Researches[6], ResearchesExtra[7], Elements[8] */\n        shop: {\n            howMany: 1,\n            input: 10,\n            wait: [2]\n        }\n    },\n    history: {\n        stage: {\n            best: [0, 1, 0],\n            list: [],\n            input: [5, 10]\n        }\n    },\n    events: [false, false, false] //One time events, set in playEvent\n};\n\nexport const global: globalType = { //For information that doesn't need to be saved\n    tab: 'stage',\n    subtab: {\n        stageCurrent: 'Structures',\n        settingsCurrent: 'Settings',\n        researchCurrent: 'Researches',\n        strangenessCurrent: 'Matter'\n    },\n    tabList: { //Order comes from footer\n        tabs: ['stage', 'research', 'strangeness', 'settings'],\n        stageSubtabs: ['Structures', 'Advanced'],\n        settingsSubtabs: ['Settings', 'History', 'Stats'],\n        researchSubtabs: ['Researches', 'Elements'],\n        strangenessSubtabs: ['Matter', 'Milestones']\n    },\n    debug: {\n        errorID: true, //Notify about missing ID\n        errorQuery: true, //About incorect Query\n        errorGain: true //About NaN or Infinity\n    },\n    lastActive: null,\n    lastSave: 0,\n    footer: true,\n    mobileDevice: false,\n    screenReader: [false, true], //[0] Enabled; No tabindex [1] on bought upgrades, [2] on main buttons\n    automatization: { //Sorted cheapest first\n        autoU: [ //Upgrades\n            [],\n            [],\n            [],\n            [],\n            [],\n            []\n        ],\n        autoR: [ //Researches\n            [],\n            [],\n            [],\n            [],\n            [],\n            []\n        ],\n        autoE: [ //Researches Extra\n            [],\n            [],\n            [],\n            [],\n            [],\n            []\n        ],\n        elements: []\n    },\n    theme: null,\n    dischargeInfo: {\n        getEnergy: (index: number, stageIndex: number) => {\n            let value = global.dischargeInfo.energyType[stageIndex][index];\n            if (stageIndex === 1 && index === 1) { value += player.strangeness[1][4] * (player.inflation.vacuum ? 2 : 1); }\n            if (player.inflation.vacuum) {\n                value += Math.floor(value / 100 * global.milestonesInfo[1].reward[1]);\n                if (player.challenges.active === 0) { value -= Math.ceil(value / 5); }\n            }\n            return value;\n        },\n        energyType: [\n            [],\n            [0, 1, 3, 5, 10, 20],\n            [0, 10, 20, 30, 40, 50, 60],\n            [0, 10, 20, 40, 80, 100],\n            [0, 100, 200, 300, 400, 500],\n            [0, 400, 400, 1000]\n        ],\n        energyTrue: 0,\n        bonus: 0,\n        next: 1\n    },\n    vaporizationInfo: {\n        effect2U2: () => 1e10 / 2 ** player.strangeness[2][3],\n        oceanWorld: () => {\n            if (Limit(player.vaporization.clouds).lessOrEqual('1')) { return 1; }\n            return Limit(player.vaporization.clouds).log(10).toNumber() / 50 + 1;\n        },\n        cloudEffect: (post = false) => {\n            let effect = Limit(player.vaporization.clouds).plus('1').toArray();\n            if (post) { effect = Limit(effect).plus(global.vaporizationInfo.get).toArray(); }\n\n            if (Limit(effect).moreThan('1e4')) { effect = Limit(effect).minus('1e4').power(0.7).plus('1e4').toArray(); }\n            return effect;\n        },\n        rainEffect: (post = false) => {\n            if (player.researchesExtra[2][1] < 1) { return 1; }\n            let effect = player.vaporization.clouds;\n            if (post) { effect = Limit(effect).plus(global.vaporizationInfo.get).toArray(); }\n            return Limit(effect).max('1').power(player.researchesExtra[2][2] >= 1 ? 0.11 : 0.1).toNumber();\n        },\n        tension: 1,\n        stress: 1,\n        get: [0, 0]\n    },\n    accretionInfo: {\n        effective: 0,\n        rankU: [1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5, 5], //Upgrades\n        rankR: [1, 1, 2, 2, 3, 3, 3, 4, 5], //Researches\n        rankE: [2, 3, 4, 5, 3], //Researches Extra\n        rankCost: [5.97e27, 1e-7, 1e10, 1e24, 5e29, 2.47e31, 0],\n        rankName: ['Ocean world', 'Cosmic dust', 'Meteoroid', 'Asteroid', 'Planet', 'Jovian planet', 'Protostar'],\n        rankImage: ['Ocean%20world.png', 'Dust.png', 'Meteoroids.png', 'Asteroid.png', 'Planet.png', 'Giant.png', 'Protostar.png']\n    },\n    collapseInfo: {\n        effect4RE1: () => (10 + player.researches[4][1]) / 10,\n        unlockB: [0, 0.01235, 0.23, 10, 40, 1000], //Buildings (stage 4)\n        unlockG: [0, 100, 1000], //Buildings (stage 5, first two)\n        unlockU: [0.01235, 0.076, 1.3, 10], //Upgrades\n        unlockR: [0.18, 0.3, 0.8, 1.3], //Researches\n        newMass: 0,\n        massEffect: (post = false) => {\n            let minValue = 1;\n\n            let effect = player.collapse.mass;\n            if (post) {\n                minValue = 0.5;\n                if (global.collapseInfo.newMass > effect) { effect = global.collapseInfo.newMass; }\n            }\n\n            let power = 1;\n            if (player.challenges.active === 0) {\n                effect /= 20;\n                power -= 0.2;\n            }\n\n            if (player.elements[21] >= minValue) { power += 0.1; }\n            return effect ** (effect > 1 ? power : 2 - power);\n        },\n        starCheck: [0, 0, 0],\n        starEffect: [\n            (post = false) => {\n                let minValue = 1;\n\n                let effect = player.collapse.stars[0] + 1;\n                if (post) {\n                    minValue = 0.5;\n                    effect += global.collapseInfo.starCheck[0];\n                }\n\n                if (player.elements[6] >= minValue) { effect **= global.elementsInfo.effect[6] as number; }\n                return effect;\n            },\n            (post = false) => {\n                let minValue = 1;\n\n                let stars = player.collapse.stars[1];\n                if (post) {\n                    minValue = 0.5;\n                    stars += global.collapseInfo.starCheck[1];\n                    if (player.elements[22] >= minValue) { stars += global.collapseInfo.starCheck[0]; }\n                }\n                if (player.elements[22] >= minValue) { stars += player.collapse.stars[0]; }\n\n                let effect = (stars + 1) ** (0.5 + player.strangeness[4][10] / 40);\n                if (player.elements[12] >= minValue) { effect *= logAny(stars + (global.elementsInfo.effect[12] as number), global.elementsInfo.effect[12] as number); }\n                return effect;\n            },\n            (post = false) => {\n                let minValue = 1;\n\n                let blackHoles = player.collapse.stars[2];\n                if (post) {\n                    minValue = 0.5;\n                    blackHoles += global.collapseInfo.starCheck[2];\n                }\n\n                if (blackHoles < 1) { return 1; }\n                return (blackHoles + 1) / logAny(blackHoles + 2, player.elements[18] >= minValue ? 3 : 2);\n            }\n        ],\n        trueStars: 0\n    },\n    inflationInfo: {\n        preonCap: [1, 14],\n        dustCap: [8, 46],\n        massCap: 60, //Seconds\n        preonTrue: [0, 0],\n        dustTrue: [0, 0]\n    },\n    intervalsId: {\n        main: undefined,\n        numbers: undefined,\n        visual: undefined,\n        autoSave: undefined\n    },\n    stageInfo: {\n        word: ['', 'Microworld', 'Submerged', 'Accretion', 'Interstellar', 'Intergalactic', 'Void'],\n        textColor: ['', 'var(--cyan-text-color)', 'var(--blue-text-color)', 'var(--gray-text-color)', 'var(--orange-text-color)', 'var(--darkorchid-text-color)', 'var(--darkviolet-text-color)'],\n        buttonBackgroundColor: ['', 'mediumblue', 'blue', '#291344', '#6a3700', '#4a008f', '#2b0095'],\n        buttonBorderColor: ['', 'darkcyan', '#427be1', '#404040', '#9f6700', '#8a0049', '#711bda'],\n        imageBorderColor: ['', '#008b8b', '#1460a8', '#5b5b75', '#e87400', '#b324e2', '#5300c1'],\n        priceName: 'Energy',\n        activeAll: [1]\n    },\n    buildingsInfo: {\n        maxActive: [0, 4, 6, 5, 5, 4], //Pre vacuum ([1] > [5])\n        name: [\n            [],\n            ['Mass', 'Preons', 'Quarks', 'Particles', 'Atoms', 'Molecules'], //[0] Must be 'Mass'\n            ['Moles', 'Drops', 'Puddles', 'Ponds', 'Lakes', 'Seas', 'Oceans'],\n            ['Mass', 'Cosmic dust', 'Planetesimals', 'Protoplanets', 'Satellites', 'Subsatellites'],\n            ['Elements', 'Brown dwarfs', 'Main sequence', 'Red supergiants', 'Blue hypergiants', 'Quasi stars'],\n            ['Stars', 'Nebulas', 'Star clusters', 'Galaxies']\n        ],\n        hoverText: [\n            [],\n            ['Mass', 'Preons', 'Quarks', 'Particles', 'Atoms'],\n            ['Tritium', 'Drops', 'Puddles', 'Ponds', 'Lakes', 'Seas'],\n            ['Preons hardcap', 'Cosmic dust', 'Planetesimals', 'Protoplanets', 'Satellites'],\n            ['Elements', 'Elements', 'Elements', 'Elements', 'Elements'],\n            ['Interstellar Stars', 'Interstellar Stars', 'Nebulas and Star clusters']\n        ],\n        type: [ //'Not allowed index x', means that this index is reserved for gain calculation\n            [] as unknown as [''],\n            ['', 'producing', 'producing', 'producing', 'producing', 'producing'], //Not allowed index 6 (for 'producing')\n            ['', 'producing', 'producing', 'improving', 'improving', 'improving', 'improving'],\n            ['', 'producing', 'producing', 'producing', 'improving', 'improving'],\n            ['', 'producing', 'producing', 'producing', 'producing', 'producing'],\n            ['', 'producing', 'improving', 'improving'] //Not allowed index 2, 3, 4 (for 'producing')\n        ],\n        firstCost: [],\n        startCost: [\n            [],\n            [0, 0.005476, 6, 3, 24, 3],\n            [0, 0.0028, 100, 1e7, 1e18, 1e23, 2.676e25],\n            [0, 1e-19, 1e-9, 1e21, 1e17, 1e22],\n            [0, 1, 1e5, 1e15, 1e28, 1e56],\n            [0, 1e30, 1e40, 1e5]\n        ],\n        increase: [\n            [],\n            [0, 1.4, 1.4, 1.4, 1.4, 1.4],\n            [0, 1.15, 1.2, 1.25, 1.35, 1.4, 1.45],\n            [0, 1.15, 1.25, 1.35, 10, 10],\n            [0, 1.4, 1.55, 1.70, 1.85, 2],\n            [0, 4, 4, 1.11]\n        ],\n        producing: []\n    },\n    strangeInfo: {\n        Element27: () => {\n            let effect = Limit(player.buildings[4][0].trueTotal).log(10).toNumber() - 48;\n            if (!player.inflation.vacuum && player.upgrades[5][2] === 1) { effect **= 1.5; }\n            return Math.max(Math.floor(effect), 0);\n        },\n        gain: (stage: number) => {\n            const interstellar = stage >= 4 || player.inflation.vacuum;\n\n            let gain = 1;\n            if (interstellar && player.elements[27] === 1) { gain += global.strangeInfo.Element27(); }\n            if (player.inflation.vacuum) {\n                gain += player.strangeness[5][5] > 0 ? 4 : 3;\n                gain *= global.milestonesInfo[5].reward[0];\n                if (player.strangeness[2][9] >= 1) { gain *= global.vaporizationInfo.oceanWorld(); }\n            } else { gain += global.strangeInfo.instability; }\n            if (interstellar) { gain *= 1.5 ** player.strangeness[5][1]; }\n            return Math.floor(gain);\n        },\n        name: ['Strange quarks', 'Strangelets'],\n        stageBoost: [],\n        instability: 0\n    },\n    upgradesInfo: [\n        {} as globalType['upgradesInfo'][0], { //Stage 1\n            name: [\n                'Weak force',\n                'Strong force',\n                'Bigger electrons',\n                'Stronger protons',\n                'More neutrons',\n                'Superposition',\n                'Protium',\n                'Deuterium',\n                'Tritium',\n                'Nuclear fusion'\n            ],\n            effectText: [\n                () => 'Particles produce 5 times more Quarks.',\n                () => 'Gluons now bind Quarks into Particles, which makes Particles 10 times cheaper.',\n                () => `${player.inflation.vacuum ? 'Atoms' : 'Particle'} cost is 10 times cheaper.`,\n                () => `${player.inflation.vacuum ? 'Atoms' : 'Particle'} produce 5 times more ${player.inflation.vacuum ? 'Particles' : 'Quarks'}.`,\n                () => `${player.inflation.vacuum ? 'Molecules' : 'Atoms'} produce 5 times more ${player.inflation.vacuum ? 'Atoms' : 'Particles'}.`,\n                () => `Ability to regain spent Energy and if had enough Energy will also boost production for all Structures by ${format(global.upgradesInfo[1].effect[5] as number)}.\\nTotal boost from goals: ${Limit(global.upgradesInfo[1].effect[5] as number).power(player.discharge.current + global.dischargeInfo.bonus).format()}.`,\n                () => `Cost scaling is decreased by ${format(global.upgradesInfo[1].effect[6] as number)}.`,\n                () => `Self-made structures boost themselves by ${format(global.upgradesInfo[1].effect[7] as number)} times.`,\n                () => `Molecules produce Molecules. At a reduced rate.\\n(${Limit(global.upgradesInfo[1].effect[8] as overlimit).format({ padding: true })} per second)`,\n                () => `Unspent Energy boost Molecules production of themselves ${player.discharge.energy !== global.upgradesInfo[1].effect[9] ? `${format(player.discharge.energy / (global.upgradesInfo[1].effect[9] as number), { padding: true })} to 1. (Softcapped)\\n(Actual boost is ${format(global.upgradesInfo[1].effect[9] as number, { padding: true })})` : '1 to 1.'}`\n            ],\n            effect: [],\n            startCost: [36, 48, 60, 90, 150, 400, 2000, 4000, 20000, 70000],\n            maxActive: 10\n        }, { //Stage 2\n            name: [\n                'Molecules to Moles',\n                'Water spread',\n                'Vaporization',\n                'Surface tension',\n                'Surface stress',\n                'Stream',\n                'River',\n                'Tsunami',\n                'Tide'\n            ],\n            effectText: [\n                () => `Drops will produce Moles ${format(1.04)} times faster for every self-made Drop.`,\n                () => `Spread water faster with every Puddle, weaker for non self-made ones.\\n(Total effect is ${Limit(global.upgradesInfo[2].effect[1] as overlimit).format({ padding: true })})`,\n                () => `Gain ability to convert Drops into Clouds. (Puddles get a boost from Clouds, can be seen in Stats)\\nCurrent Cloud gain is (Drops / ${format(global.vaporizationInfo.effect2U2())})^${format(player.inflation.vacuum ? 0.4 : 0.6)}.`,\n                () => `Puddles get boost based on Moles ^${format(global.upgradesInfo[2].effect[3] as number)}.\\n(Boost is equal to ${format(global.vaporizationInfo.tension, { padding: true })})`,\n                () => `Puddles get boost based on Drops ^${format(global.upgradesInfo[2].effect[4] as number)}.\\n(Boost is equal to ${format(global.vaporizationInfo.stress, { padding: true })})`,\n                () => `Ponds now create extra Puddles. (${format(global.upgradesInfo[2].effect[5] as number)} extra Puddles per Pond)`,\n                () => `Lakes now create extra Ponds. (${format(global.upgradesInfo[2].effect[6] as number)} extra Ponds per Lake)`,\n                () => 'Spreads enough water to make each Sea create 1 extra Lake.',\n                () => 'Spreads water too fast. 1 extra Sea per Ocean.'\n            ],\n            effect: [],\n            startCost: [1e4, 1e6, 1e10, 1e3, 1e4, 2e9, 5e20, 1e28, 4e40],\n            maxActive: 8\n        }, { //Stage 3\n            name: [\n                'Brownian motion',\n                'Gas',\n                'Micrometeoroid',\n                'Streaming instability',\n                'Gravitational field',\n                'Rubble pile',\n                'Magma ocean',\n                'Hydrostatic equilibrium',\n                'Satellite system',\n                'Atmosphere',\n                'Pebble accretion',\n                'Tidal force',\n                'Ring system'\n            ],\n            effectText: [\n                () => `Through random collisions every self-made Dust speeds up Accretion speed. (By ${format(global.upgradesInfo[3].effect[0] as number)})`,\n                () => `New substance for Accretion, will provide boost to Accretion speed based on current Dust quantity.\\n(${format(global.upgradesInfo[3].effect[1] as number, { padding: true })}x boost)`,\n                () => 'Just a small meteoroid, but it will be a good base for what to come. (Unlock a new Structure and get 2x boost to Dust)',\n                () => `Small bodies spontaneously concentrate into clumps. (Self-made Planetesimals boost each other by ${format(global.upgradesInfo[3].effect[3] as number)})`,\n                () => 'Bodies are now massive enough to affect each other with gravity. (Unlock a new Structure and get 3x boost to Planetesimals)',\n                () => 'Shattered pieces fall back together. Accretion speed increased by 3.',\n                () => `Core melted, Accretion speed increased. (Mass production increased by ${format(global.upgradesInfo[3].effect[6] as number)})`,\n                () => `After reaching equilibrium self-made Protoplanets will boost each other by ${format(1.02)}.`,\n                () => 'Unlock yet another Structure.',\n                () => 'Accretion speed increased again (because of drag and escape velocity), by 2.',\n                () => `Accretion speed greatly increased by ${format(global.upgradesInfo[3].effect[10] as number)}.`,\n                () => `Satellites cost scaling is now 2 times smaller.${player.strangeness[3][8] >= 1 ? '\\nAlso unlock a new Structure.' : ''}`,\n                () => 'Satellites effect scales better.'\n            ],\n            effect: [],\n            startCost: [1e-16, 1e-13, 1e-13, 1, 1e14, 1e17, 1e10, 1e22, 1e22, 1e23, 1e9, 1e26, 1e29],\n            maxActive: 13\n        }, { //Stage 4\n            name: [\n                'Gravitational Collapse',\n                'Proton-proton chain',\n                'Carbon-Nitrogen-Oxygen cycle',\n                'Helium fusion'\n            ],\n            effectText: [\n                () => 'As fuel runs out, every Star will boost production in its own special way.',\n                () => `Fuse with Protium instead of Deuterium. Unlock ${player.stage.true >= 5 ? '5 first Elements' : 'a new upgrade type (Research tab)'}.`,\n                () => `CNO cycle is now a better source of Helium and Energy. Unlock ${player.stage.true >= 5 ? '5 more Elements' : 'even more of that upgrade type'}.`,\n                () => 'Through Triple-alpha and then Alpha process, unlock a few more Elements.'\n            ],\n            effect: [],\n            startCost: [100, 1000, 1e9, 1e48],\n            maxActive: 4\n        }, { //Stage 5\n            name: [\n                'Jeans instability',\n                'Super star cluster',\n                'Quasar'\n            ],\n            effectText: [\n                () => `Gravitational Collapse within Nebulas will increase speed for production of Stars by ${format(global.upgradesInfo[5].effect[0] as number)} times.`,\n                () => `A very massive Star clusters, that will boost Stars by ${format(global.upgradesInfo[5].effect[1] as number)}.`,\n                () => player.inflation.vacuum ? `Boost per Galaxy increased by +1.\\nRequires ${format(1e6)} Solar mass.` : `'[27] Cobalt' Element receives super boost of ^${format(1.5)}.`\n            ],\n            effect: [],\n            startCost: [1e50, 1e60, 1e120],\n            maxActive: 3\n        }\n    ],\n    researchesInfo: [\n        {} as globalType['researchesInfo'][0], { //Stage 1\n            name: [\n                'Stronger Protium',\n                'Better Deuterium',\n                'Improved Tritium',\n                'Requirement decrease',\n                'Discharge improvement',\n                'Radioactive Discharge'\n            ],\n            effectText: [\n                () => `Cost scaling is ${format(0.03)} smaller with each level.`,\n                () => `Self-made Structures boost each other by additional ${format(0.01)}.`,\n                () => `Molecules now produce themselves ${format(global.researchesInfo[1].effect[2] as number)} times quicker.`,\n                () => 'Next goal for Discharge bonus scales by -2 less.',\n                () => 'Discharge production boost from reached goals is now +1.',\n                () => `Discharge will boost 'Tritium' upgrade for every reached goal. (Effect: ${format(global.researchesInfo[1].effect[5] as number)})`\n            ],\n            effect: [],\n            cost: [],\n            startCost: [2400, 6000, 24000, 30000, 24000, 30000],\n            scaling: [400, 2000, 6000, 24000, 12000, 12000],\n            max: [5, 4, 8, 2, 4, 3],\n            maxActive: 6\n        }, { //Stage 2\n            name: [\n                'Better Mole production',\n                'Better Drop production',\n                'Stronger surface tension',\n                'Stronger surface stress',\n                'More streams',\n                'Distributary channel'\n            ],\n            effectText: [\n                () => `Drops produce 3 times more Moles.${global.researchesInfo[2].effect[0] !== player.researches[2][0] ? `\\nWeakened by recent ${player.inflation.vacuum ? 'reset' : 'Vaporization'}, effective level is ${format(global.researchesInfo[2].effect[0] as number)} (will be restored with more Drops).` : ''}`,\n                () => `Puddles produce 2 times more Drops.${global.researchesInfo[2].effect[1] !== player.researches[2][1] ? `\\nWeakened by recent ${player.inflation.vacuum ? 'reset' : 'Vaporization'}, effective level is ${format(global.researchesInfo[2].effect[1] as number)} (will be restored with more Drops).` : ''}`,\n                () => `Surface tension upgrade is now +${format(0.005)} stronger.`,\n                () => `Surface stress upgrade is now +${format(0.005)} stronger.`,\n                () => 'With more streams, can have even more extra Puddles. (+1 extra Puddles per Pond)',\n                () => 'Rivers can split now, that allows even more Ponds per Lake. (+1 per)'\n            ],\n            effect: [],\n            cost: [],\n            startCost: [10, 400, 1e4, 1e5, 1e14, 1e22],\n            scaling: [1.36, 5, 1e3, 1e2, 1e3, 1e4],\n            max: [8, 8, 4, 4, 2, 1],\n            maxActive: 6\n        }, { //Stage 3\n            name: [\n                'More massive bodies',\n                'Adhesion',\n                'Space weathering',\n                'Inelastic collisions',\n                'Destructive collisions',\n                'Contact binary',\n                'Gravity',\n                'Planetary differentiation',\n                'Aerodynamic drag'\n            ],\n            effectText: [\n                () => 'Dust production is increased by 3.',\n                () => `Dust particles cling to each other. (+${format(0.01)} to 'Brownian motion')`,\n                () => 'Planetesimals produce more Dust. (3 times more)',\n                () => 'Slow encounter velocities will result in a more efficient growth, so this research will make bodies lose more Energy from each deflection. Mass production increased by 2.',\n                () => `Planetesimals when shatter replenish small grains quantity. 'Streaming instability' effect increased by +${format(0.005)}.`,\n                () => 'Some Planetesimals instead of shattering form a contact binary or even trinary. Mass production increased by 3.',\n                () => `Planetesimals attract other bodies with own gravity. Planetesimals get boost to production based on unspent Mass.\\n(Total boost: ${Limit(global.researchesInfo[3].effect[6] as overlimit).format({ padding: true })})`,\n                () => `'Magma Ocean' upgrade is stronger now. (${format(1.5)}x times)`,\n                () => \"Accretion speed for 'Pebble accretion' increased again, by 2.\"\n            ],\n            effect: [],\n            cost: [],\n            startCost: [1e-16, 1e-15, 1e-5, 1e2, 1e10, 1e11, 1e15, 1e14, 1e12],\n            scaling: [11, 111, 22, 10, 100, 100, 10, 1e4, 1e3],\n            max: [9, 3, 8, 8, 2, 2, 5, 4, 4],\n            maxActive: 9\n        }, { //Stage 4\n            name: [\n                'Planetary system',\n                'Star system',\n                'Protoplanetary disk',\n                'Planetary nebula',\n                'Gamma-ray burst'\n            ],\n            effectText: [\n                () => `From Planetesimals to Planets, will get ${format(global.researchesInfo[4].effect[0] as number, { padding: true })}x boost to all Stars.`,\n                () => `All Stars boost each other. (Total boost is ${Limit(global.researchesInfo[4].effect[1] as overlimit).format({ padding: true })})`,\n                () => \"Improve effect scaling of 'Planetary system', as well increase its max level by +3.\",\n                () => `Matter expelled from Red giants, this will boost Main-sequence stars by 4, as well boost all Stars by ${format(1.25)}.`,\n                () => `An immensely energetic explosion that will boost all Stars by ${format(global.researchesInfo[4].effect[4] as number, { padding: true })}. (Effect is stronger with more Black holes)`\n            ],\n            effect: [],\n            cost: [],\n            startCost: [1e3, 5e4, 1e8, 2e10, 1e28],\n            scaling: [10, 200, 1e12, 5e44, 2e8],\n            max: [3, 2, 1, 1, 2],\n            maxActive: 5\n        }, { //Stage 5\n            name: [\n                'Higher density',\n                'Type frequency'\n            ],\n            effectText: [\n                () => `Higher density of Nebulas, will allow them to produce higher tier of Stars, but each tier is 4 times slower than previous one. Also will boost Nebulas by 4.\\nNext tier will be ${global.buildingsInfo.name[4][Math.min(player.researches[5][0] + 2, 4)]}.`,\n                () => `More types of Stars are found within Star cluster. Increasing effect by 3, but also boosting lower tier of Stars. (3 times less than higher one)\\nNext tier will be ${global.buildingsInfo.name[4][Math.max(3 - player.researches[5][1], 1)]}.`\n            ],\n            effect: [],\n            cost: [],\n            startCost: [1e45, 1e50],\n            scaling: [1e15, 1e15],\n            max: [3, 3],\n            maxActive: 2\n        }\n    ],\n    researchesExtraInfo: [\n        {} as globalType['researchesExtraInfo'][0], { //Stage 1\n            name: [\n                'Extra strong force',\n                'Improved formula',\n                'Accretion',\n                'Later Preons',\n                'Impulse'\n            ],\n            effectText: [\n                () => \"Mesons now binds Particles to form Atoms, which makes Atoms to be affected by 'Strong force'.\\n(Atoms are 10 times cheaper)\",\n                () => `Improve scaling for 'Tritium' formula, current formula is log${format(global.researchesExtraInfo[1].effect[1] as number)}.`,\n                () => 'First level is to begin the Accretion, second level is to Submerge it.\\nAll Structures produce Energy on creation, as well Mass from all Stages is connected.',\n                () => `Delay Preons hardcap by current Energy ^${format(global.researchesExtraInfo[1].effect[3] as number)}.\\n(Effect is equal to ${format(player.discharge.energy ** (global.researchesExtraInfo[1].effect[3] as number), { padding: true })})`,\n                () => `Discharge goals will now boost all Interstellar Stars, but at reduced base.\\nCurrent base is ${format(global.researchesExtraInfo[1].effect[4] as number)}, total boost is ${Limit(global.researchesExtraInfo[1].effect[4] as number).power(player.discharge.current + global.dischargeInfo.bonus).format()}.`\n            ],\n            effect: [],\n            cost: [],\n            startCost: [12000, 54000, 16000, 24000, 140000],\n            scaling: [0, 12000, 62000, 18000, 0],\n            max: [1, 4, 2, 6, 1],\n            maxActive: 0\n        }, { //Stage 2\n            name: [\n                'Natural Vaporization',\n                'Rain Clouds',\n                'Storm Clouds',\n                'Water Accretion'\n                //'Jeans Mass'\n            ],\n            effectText: [\n                () => 'When formed Clouds will use this reset produced Drops instead of current.',\n                () => `Some Clouds will start pouring Drops themselves. This will produce Drops until a Puddle, afterwards it will boost Puddles.\\n(Effect: ${format(global.vaporizationInfo.rainEffect() - (player.buildings[2][2].current[0] === 0 ? 1 : 0), { padding: true })})`,\n                () => `Improve 'Rain Clouds', and also boost Seas at a reduced rate. (Boost for Seas: ${format(global.researchesExtraInfo[2].effect[2] as number, { padding: true })})`,\n                () => `Submerge and boost Stars with 'Surface tension' upgrade, also with 'Surface stress' at level 2.\\n(Boost to Stars: ${format(global.vaporizationInfo.tension * (player.researchesExtra[2][3] >= 2 ? global.vaporizationInfo.stress : 1), { padding: true })})`\n                //() => \"High density of Drops resulted in gravitational Collapse. 'Water Accretion' will now boost Nebulas.\"\n            ],\n            effect: [],\n            cost: [],\n            startCost: [1e18, 1e13, 1e26, 1e13],\n            scaling: [1, 1, 1, 1e5],\n            max: [1, 1, 1, 2],\n            maxActive: 3\n        }, { //Stage 3\n            name: [\n                'Rank boost',\n                'Efficient growth',\n                'Weight',\n                'Viscosity',\n                'Efficient submersion'\n            ],\n            effectText: [\n                () => `Dust production is increased by another ${format(global.researchesExtraInfo[3].effect[0] as number)}.`,\n                () => `Accretion speed is even quicker. Improved by effective Rank. (Total boost: ${format(global.researchesExtraInfo[3].effect[1] as number)})`,\n                () => \"'Gravitational field' upgrade will now boost Protoplanets at reduced strength. (2x boost)\",\n                () => \"'Gas' upgrade is now a little stronger.\",\n                () => `'Efficient growth' will now boost Puddles at reduced rate. (Current boost: ${format(global.researchesExtraInfo[3].effect[4] as number)})`\n            ],\n            effect: [],\n            cost: [],\n            startCost: [1e-18, 1e-16, 1e26, 1e-6, 1e23],\n            scaling: [10, 100, 1, 1e5, 1e3],\n            max: [12, 5, 1, 8, 1],\n            maxActive: 4\n        }, { //Stage 4\n            name: [\n                'Nova',\n                'Mass transfer',\n                'White dwarfs'\n            ],\n            effectText: [\n                () => 'This violent stellar explosion is main source of Elements, also starts new Star formations.\\nUnlock new Structure and even more, after Collapse of that Structure.',\n                () => `Star material transfers from one Star to another, ${player.inflation.vacuum ? 'delaying Preons hardcap' : 'improving Solar mass gain'} by ${format(global.collapseInfo.effect4RE1())}.\\nAlso makes 'Star system' levels scale better.`,\n                () => `Matter were dispeled from Red giant and White dwarf is all that remained, improves effect of '[6] Carbon' by +${format(0.5)} and '[28] Nickel' by ${format(1.5)}. Also increase max level of 'Planetary nebula' by +1.`\n            ],\n            effect: [],\n            cost: [],\n            startCost: [4e4, 2e9, 1e50],\n            scaling: [1e10, 1, 1],\n            max: [3, 1, 1],\n            maxActive: 3\n        }, { //Stage 5\n            name: [],\n            effectText: [],\n            effect: [],\n            cost: [],\n            startCost: [],\n            scaling: [],\n            max: [],\n            maxActive: 0\n        }\n    ],\n    ASRInfo: { //Auto Structures Research\n        cost: [0, 4000, 1e10, 1e-7, 1e6, 1],\n        costRange: [ //Random scaling\n            [],\n            [4000, 10000, 16000, 24000, 32000],\n            [1e10, 1e14, 1e18, 1e23, 1e28, 1e34],\n            [1e-7, 1e10, 5e29, 2e30, 1e36],\n            [1e6, 1e17, 1e28, 1e39, 1e61],\n            [1, 1, 1, 1]\n        ],\n        max: [0, 5, 5, 4, 4, 0]\n    },\n    elementsInfo: {\n        name: [\n            '[0] Neutronium',\n            '[1] Hydrogen',\n            '[2] Helium',\n            '[3] Lithium',\n            '[4] Beryllium',\n            '[5] Boron',\n            '[6] Carbon',\n            '[7] Nitrogen',\n            '[8] Oxygen',\n            '[9] Fluorine',\n            '[10] Neon',\n            '[11] Sodium',\n            '[12] Magnesium',\n            '[13] Aluminium',\n            '[14] Silicon',\n            '[15] Phosphorus',\n            '[16] Sulfur',\n            '[17] Chlorine',\n            '[18] Argon',\n            '[19] Potassium',\n            '[20] Calcium',\n            '[21] Scandium',\n            '[22] Titanium',\n            '[23] Vanadium',\n            '[24] Chromium',\n            '[25] Manganese',\n            '[26] Iron',\n            '[27] Cobalt',\n            '[28] Nickel'\n        ],\n        effectText: [\n            () => `Element with no protons, true head of this table.\\nThis one is ${Math.random() < 0.1 ? (Math.random() < 0.1 ? 'an illusive Tetraneutron, or maybe even Pentaneutron, wait where did it go? Was it even there?' : 'a rare Dineutron, but it is already gone...') : 'a simple Mononeutron, it will stay with you for as long as it can.'}`,\n            () => 'Most basic Element, increases Brown dwarf production by 2.\\nAlso Solar mass effect is now known - boost to all Stars.',\n            () => `Fusion reaction by product, makes everything Interstellar scale ${format(0.1)} less.`,\n            () => `First metal, ${player.inflation.vacuum ? 'hardcap for Cosmic dust' : 'Solar mass gain'} per Brown dwarf lightly ${player.inflation.vacuum ? 'delayed' : 'increased'}.`,\n            () => `Brittle earth metal, so is brittle increase to production. (${format(1.2)}x to all Stars)`,\n            () => `A new color, and a new ${player.inflation.vacuum ? 'delay to Cosmic dust hardcap' : 'boost to Solar mass gain'} that is based on current Dwarf Stars.`,\n            () => `Base for organics, boost from Red giants is now increased to the power of ${format(global.elementsInfo.effect[6] as number)}.\\nRed giants effect is now known - boost to all Main-sequence stars.`,\n            () => \"Most abundant uncombined Element in atmosphere of some Planets, also allows to have 2 extra levels of 'Star system'.\",\n            () => `An oxidizing agent, that will make everything Interstellar scale even slower. (${format(0.05)} less)`,\n            () => \"Highly toxic and reactive, +12 to max level of 'Planetary system'.\",\n            () => `A noble 2x ${player.inflation.vacuum ? 'delay to Preons hardcap' : 'boost to Solar mass gain'}.`,\n            () => \"Through leaching, get 1 extra level of 'Protoplanetary disk'.\",\n            () => `Stars are inside you, as well Neutrons stars strength is now increased by log${format(global.elementsInfo.effect[12] as number)}.\\nNeutron stars effect is now known - boost to all Stars.`,\n            () => `Has a great affinity towards Oxygen and to decrease cost for all Stars by ${format(1e3)}.`,\n            () => `Just another tetravalent metalloid, and so is another ${format(1.4)}x boost to all Stars.`,\n            () => `One of the Fundamentals of Life and to make all Stars ${player.inflation.vacuum ? 'delay Cosmic dust hardcap' : 'boost Solar mass gain'}.`,\n            () => \"From hot area, to increase max level of 'Star system' by 1.\",\n            () => \"Extremely reactive to extend max level of 'Planetary system', by another 24 levels.\",\n            () => `Less noble, but Black holes effect scales better.\\nBlack holes effect is now known - ${player.inflation.vacuum ? 'delay for Preon hardcap' : 'boost to Solar mass gain'}.`,\n            () => \"Don't forget about it and get a 2x boost to all Stars.\",\n            () => \"Get stronger with 1 extra level of 'Star system'.\",\n            () => `A new color and a rare bonus of +^${format(0.1)} to Solar mass effect.`,\n            () => 'New alloy allowing Red giants to be added into effective amount of Neutron stars.',\n            () => `Catalyst for production of Elements. 'Gamma-ray burst' effect increased by Solar mass ^${format(0.1)}.\\n(Effect is equal to ${format(player.collapse.mass ** 0.1, { padding: true })})`,\n            () => `No corrosion, only boost to all Stars that is based on unspent Elements ^${format(global.elementsInfo.effect[24] as number)}.\\n(Boost is equal to ${Limit(player.buildings[4][0].current).power(global.elementsInfo.effect[24] as number).format({ padding: true })})`,\n            () => \"Brittle Element, but not the bonus - 1 more level in 'Star system'.\",\n            () => `Any further fusion will be an endothermic process${player.inflation.vacuum ? `. Unlock a Stage reset${player.challenges.active === 0 ? ' and Intergalactic Stage' : ''}.` : ', but what next?\\nEnter Intergalactic space. (Can change active Stage from footer)'}`,\n            () => `Combined and ready to increase Stage reset reward with every new reached digit of total Elements past 48.\\n(+${format(global.strangeInfo.Element27())} ${player.strangeness[5][10] >= 1 ? 'of a Strange value' : 'extra Strange quarks'})`,\n            () => `Slow to react, but will still boost all Stars by ${format(global.elementsInfo.effect[28] as number)}.`\n        ],\n        effect: [],\n        startCost: [\n            0, 1000, 4000, 2e4, 1e5, 1e8, 1e10, 4e11, 8e12, 6e13,\n            1e15, 1e20, 1e22, 1e24, 1.4e26, 1e28, 1e30, 1e32, 1e35, 2e36,\n            1e39, 1e41, 2e42, 3e43, 4e44, 5e45, 1e48, 1e50, 1e52\n        ]\n    },\n    strangenessInfo: [\n        {} as globalType['strangenessInfo'][0], { //Stage 1\n            name: [\n                'Stronger Discharge',\n                'Cheaper Discharge',\n                'Free Discharge',\n                'Automatic Discarge',\n                'Increased Energy',\n                'Better improvement',\n                'Keep auto Structures',\n                'More toggles',\n                'Strange boost',\n                'Fundamental boost',\n                'Conservation of Mass',\n                'Conservation of Energy'\n            ],\n            effectText: [\n                () => 'Base Discharge effect is now +1.',\n                () => `Discharge goal scales slower. (-${format(0.5)})`,\n                () => `Obtain +${format(0.5)} bonus Discharge goals.`,\n                () => 'Automatically Discharge upon reaching next goal or spending Energy.',\n                () => `Gain more Energy from creating ${player.inflation.vacuum ? 'Preons, +2' : 'Particles, +1'}.`,\n                () => \"Research 'Improved Tritium' is now better. (+1)\",\n                () => `Always have auto for ${global.buildingsInfo.name[1][Math.min(player.strangeness[1][6] + 1, global.ASRInfo.max[1])]}.`,\n                () => 'First level - improve control over auto Structures toggles.\\nSecond level - improve control over consumption of Offline storage.',\n                () => 'Unspent Strange quarks will boost this Stage. (Bonus goals)',\n                () => `Minor boost of ${format(1.3)}x per level to all Microworld structures.`,\n                () => 'No Mass will be lost when Creating Preons.',\n                () => 'Energy is now directly based on current self-made amount of Structures.\\nThis will also unlock better Reset automatization.'\n            ],\n            cost: [],\n            startCost: [2, 1, 4, 24, 2, 1, 2, 4, 36, 2, 16, 4000],\n            scaling: [2.4, 4, 6, 1, 4, 2.2, 2, 2, 1, 1.8, 1, 1],\n            max: [4, 4, 2, 1, 2, 4, 3, 2, 1, 6, 1, 1],\n            maxActive: 9\n        }, { //Stage 2\n            name: [\n                'More Moles',\n                'Bigger Puddles',\n                'More spread',\n                'Cloud density',\n                'Automatic Vaporization',\n                'Keep auto Structures',\n                'Longer offline',\n                'Strange boost',\n                'New Structure',\n                'Ocean world',\n                'Mechanical spread'\n            ],\n            effectText: [\n                () => `Mole production increased by ${format(1.5)}.`,\n                () => `Puddles produce ${format(1.5)} times more.`,\n                () => 'Increase max level for one of researches by +1.\\nFinal level will instead unlock a new upgrade.',\n                () => 'Decrease requirement per Cloud.',\n                () => `Automatically Vaporize when reached enough boost from new Clouds.${player.strangeness[1][11] >= 1 ? '\\nSecond level - Automatically gain 25% of Clouds per second.' : ''}`,\n                () => `Always have auto for ${global.buildingsInfo.name[2][Math.min(player.strangeness[2][5] + 1, global.ASRInfo.max[2])]}.`,\n                () => 'Decrease Offline time waste by -1 second per level.\\n(Effect is weaker for Warps)',\n                () => 'Unspent Strange quarks will boost this Stage. (Puddle production)',\n                () => 'Current Universe state allows for another Submerged Structure.',\n                () => `Increase ${global.strangeInfo.name[player.strangeness[5][10]]} gained from this Stage reset based on current Cloud amount.\\n(Effect can be seen in stats)`,\n                () => 'Increase max level for one of researches again by +1.\\nFinal level will instead unlock an even better new upgrade.'\n            ],\n            cost: [],\n            startCost: [1, 2, 16, 2, 24, 2, 4, 36, 40, 800, 2400],\n            scaling: [1.8, 1.8, 2, 4, 650, 2, 2, 1, 1, 1, 2],\n            max: [6, 6, 3, 3, 1, 5, 1, 1, 1, 1, 3],\n            maxActive: 8\n        }, { //Stage 3\n            name: [\n                'Faster Accretion',\n                'Intense weathering',\n                'More levels',\n                'Improved Satellites',\n                'Automatic Rank',\n                'Keep auto Structures',\n                'Automatization for Upgrades',\n                'Strange boost',\n                'New Structure',\n                'Mass shift',\n                'Massive Ranks'\n                //'Rank raise'\n            ],\n            effectText: [\n                () => `Accretion speed is ${format(1.5)} times faster.`,\n                () => `Accretion Structures that produce another Structures now do it ${format(1.5)} times faster.`,\n                () => 'Some Rank researches receive extra Max level.\\nFinal level will instead unlock a new upgrade.',\n                () => `Satellites now improve all Accretion Structures${player.inflation.vacuum ? ' with reduced strength' : ''}.`,\n                () => `Automatically increase Rank when available.${player.strangeness[1][11] >= 1 ? '\\nSecond level - auto creation of Accretion structures after reaching cosmic dust hardcap will always keep enough for highest Solar mass conversion.' : ''}`,\n                () => `Always have auto for ${global.buildingsInfo.name[3][Math.min(player.strangeness[3][5] + 1, global.ASRInfo.max[3])]}.`,\n                () => 'Will automatically create all upgrades and researches from any Stage.\\n(Need to be enabled in settings, order of automatization is Upgrades > Stage researches > Special researches)',\n                () => `Unspent Strange quarks will boost this Stage. (${player.inflation.vacuum ? 'Effective Rank' : 'Cheaper Accretion'})`,\n                () => 'Current Universe state allows for another Accretion Structure.\\n(Not recommended until way later)',\n                () => `Reduce amount of time required to reach Solar mass hardcap by shifting Cosmic dust and Solar mass hardcaps.\\nEach level allows for ${format(1.4)} times bigger shift. (Automatic)`,\n                () => `Increase effective Rank by +${format(0.8)} with each level.`\n            ],\n            cost: [],\n            startCost: [1, 2, 3, 9, 24, 3, 12, 36, 20, 2400, 6],\n            scaling: [1.8, 2.8, 2, 1, 400, 2.3, 2, 1, 1, 2, 6],\n            max: [8, 4, 3, 1, 1, 4, 3, 1, 1, 4, 2],\n            maxActive: 8\n        }, { //Stage 4\n            name: [\n                'Hotter Stars',\n                'Cheaper Stars',\n                'New Upgrade',\n                'Main giants',\n                'Remnants of past',\n                'Automatic Collapse',\n                'Keep auto Structures',\n                'Daily gain',\n                'Strange boost',\n                'New Structure',\n                'Neutronium'\n            ],\n            effectText: [\n                () => `All Stars produce ${format(1.5)} times more Elements.`,\n                () => 'Stars are 2 times cheaper.',\n                () => 'Unlock a new Upgrade.\\nFirst one is extra good.',\n                () => '10% of Brown dwarfs will turn into Red giants now.',\n                () => `Elements will not require Collapse for activation.\\n${player.stage.true >= 6 || player.events[2] ? 'Second level will unlock auto creation of Elements.' : '(Auto creation of Elements is not yet possible in Interstellar space)'}`,\n                () => `Automatically Collapse once reached enough boost.${player.strangeness[1][11] >= 1 ? '\\nSecond level - Star remnants will now be gained automatically.' : ''}`,\n                () => `Always have auto for ${global.buildingsInfo.name[4][Math.min(player.strangeness[4][6] + 1, global.ASRInfo.max[4])]}.`,\n                () => `Increase multiplier of ${global.strangeInfo.name[player.strangeness[5][10]]} gained from export per day by +1.${player.strangeness[5][10] >= 1 ? '' : ' (Can claim only full ones)'}\\n(Export base is increased by +10% of best Stage reset value even without this Strangeness)`,\n                () => 'Unspent Strange quarks will boost this Stage. (All Stars production)',\n                () => 'Current Universe state allows for another Interstellar Structure.',\n                () => \"Improve Neutron Stars strength and improve scaling of '[12] Magnesium' effect.\"\n            ],\n            cost: [],\n            startCost: [1, 3, 5, 5, 6, 24, 3, 4, 36, 20, 1600],\n            scaling: [1.8, 2.8, 2.4, 4, 16, 250, 2.3, 2, 1, 1, 1.4],\n            max: [8, 4, 3, 2, 1, 1, 4, 3, 1, 1, 8],\n            maxActive: 9\n        }, { //Stage 5\n            name: [\n                'Omnipresent reality',\n                'Strange gain',\n                'Auto Stage',\n                'Bigger Nebulas',\n                'Denser Clusters',\n                'Gravitational bound',\n                'Hypercompact stellar system',\n                'Auto Structures',\n                'New Milestones',\n                'Strange boost',\n                'Strange growth'\n            ],\n            effectText: [\n                () => player.inflation.vacuum ? 'Unlock the Void. (Advanced subtab)\\nAlso a new color theme.' : `${global.stageInfo.word[player.strangeness[5][0] + 1]} will now be permanent. Permanent Stages do not affect timer.`,\n                () => `Gain ${format(1.5)} times more ${global.strangeInfo.name[player.strangeness[5][10]]} from ${player.inflation.vacuum ? '' : 'Interstellar'} Stage resets.`,\n                () => 'Allows to auto reset Stage, has some special settings.',\n                () => \"Bigger Nebulas, more matter for Accretion. 'Jeans instability' upgrade is 2 times stronger.\",\n                () => \"'Super star cluster' is now even bigger. Effect increased by 3.\",\n                () => player.inflation.vacuum ? 'Unlock Intergalactic Stage.' : 'Intergalactic is no longer affected by Collapse reset.',\n                () => `With this a new Intergalactic Structure can be created.${player.stage.true >= 6 ? '' : \" (Also will increase max level of 'Remnants of past' after creating that Structure)\"}\\nSecond level will unlock its auto and improve auto Collapse.${player.inflation.vacuum ? \"\\nCan't be created, until next game version.\" : ''}`,\n                () => \"Increase permanent level of auto Structures. It's the only way to do it.\",\n                () => `Unlock ${player.inflation.vacuum ? 'Void' : 'Intergalactic'} Milestones.`,\n                () => `Unspent Strange quarks will boost this Stage. (${player.inflation.vacuum ? 'Cosmic dust hardcap delay' : 'Solar mass gain'})`,\n                () => `Unlock a new Strange structure and replace Stage reset reward, it will produce ${global.strangeInfo.name[player.strangeness[5][10]]}, but hardcaps easily.\\n(Hardcap delayed by quantity of a higher tier Structure)`\n            ],\n            cost: [],\n            startCost: [4, 16, 2400, 8, 10, 64, 2400, 60, 1600, 180, 800],\n            scaling: [1, 5, 1, 1.8, 1.8, 1, 4, 2, 1, 1, 1],\n            max: [3, 1, 1, 9, 9, 1, 2, 2, 1, 1, 1],\n            maxActive: 10\n        }\n    ],\n    lastUpgrade: [-1, -1, -1, -1, -1, -1], //One per subtab\n    lastResearch: [[-1, 'researches'], [-1, 'researches'], [-1, 'researches'], [-1, 'researches'], [-1, 'researches'], [-1, 'researches']],\n    lastElement: -1,\n    milestonesInfo: [\n        {} as globalType['milestonesInfo'][0], { //Stage 1\n            name: [\n                'Fundamental Matter',\n                'Energized'\n            ],\n            needText: [\n                () => `Have at least ${Limit(global.milestonesInfo[1].need[0]).format()} ${player.inflation.vacuum ? 'Preons' : 'Quarks'} at once.`,\n                () => `Have current Energy reach ${Limit(global.milestonesInfo[1].need[1]).format()}.`\n            ],\n            rewardText: [\n                () => player.inflation.vacuum ? `All Microworld Structures receive ${format(global.milestonesInfo[1].reward[0], { padding: true })}x boost.` : \"Unknown Structure, it doesn't belong to this Universe.\\nVacuum instability increased.\",\n                () => player.inflation.vacuum ? `Energy from creating Stuctures increased by ${format(global.milestonesInfo[1].reward[1])}%. (Rounds down)` : `Improve effect of '[24] Chromium' by +${format(0.01)}.`\n            ],\n            need: [[1, 200], [4, 4]],\n            reward: [1, 1],\n            scalingOld: [\n                [1e160, 1e170, 1e180, 1e190, 1e200, 1e220],\n                [24000, 26000, 28000, 30000, 32000, 34000]\n            ]\n        }, { //Stage 2\n            name: [\n                'A Nebula of Drops',\n                'Just a bigger Puddle'\n            ],\n            needText: [\n                () => `Vaporize ${player.inflation.vacuum ? 'to at least' : ''} ${Limit(global.milestonesInfo[2].need[0]).format()} ${player.inflation.vacuum ? 'Clouds' : 'Drops at once'}.`,\n                () => `Have at least ${Limit(global.milestonesInfo[2].need[1]).format()} Puddles at same time.`\n            ],\n            rewardText: [\n                () => player.inflation.vacuum ? `Clouds gain increased by ${format(global.milestonesInfo[2].reward[0], { padding: true })}.` : 'A new Intergalactic Structure.',\n                () => player.inflation.vacuum ? `Puddles are now stronger by ${format(global.milestonesInfo[2].reward[1], { padding: true })}.` : \"Unknown Structure, it doesn't belong to this Universe.\\nVacuum instability increased.\"\n            ],\n            need: [[1, 30], [1.5, 3]],\n            reward: [1, 1],\n            scalingOld: [\n                [1e30, 1e33, 1e36, 1e39, 1e42, 1e45],\n                [1000, 2500, 4000, 5500, 7000, 9000]\n            ]\n        }, { //Stage 3\n            name: [\n                'Cluster of Mass',\n                'Satellites of Satellites'\n            ],\n            needText: [\n                () => `Have at least ${Limit(global.milestonesInfo[3].need[0]).format()} Mass at once.`,\n                () => `Have more than ${Limit(global.milestonesInfo[3].need[1]).format()} Satellites ${player.inflation.vacuum ? 'and Subsatellites' : ''}.`\n            ],\n            rewardText: [\n                () => player.inflation.vacuum ? `Accretion speed increased by ${format(global.milestonesInfo[3].reward[0], { padding: true })}.` : 'A new Intergalactic Structure.',\n                () => player.inflation.vacuum ? `Improve effect of 'Planetary system' base by +${format(global.milestonesInfo[3].reward[1])}.` : \"Unknown Structure, it doesn't belong to this Universe.\\nVacuum instability increased.\"\n            ],\n            need: [[1, 30], [2.5, 1]],\n            reward: [1, 1],\n            scalingOld: [\n                [1e30, 1e33, 1e36, 1e39, 1e42, 1e45, 1e48],\n                [25, 35, 45, 55, 65, 75, 85]\n            ]\n        }, { //Stage 4\n            name: [\n                'Supermassive',\n                'Biggest of all'\n            ],\n            needText: [\n                () => `Collapse ${player.inflation.vacuum ? '' : 'to'} at least ${Limit(global.milestonesInfo[4].need[0]).format()} ${player.inflation.vacuum ? 'Elements' : 'Solar mass'}.`,\n                () => `Collapse to ${Limit(global.milestonesInfo[4].need[1]).format()} Black holes or more.`\n            ],\n            rewardText: [\n                () => player.inflation.vacuum ? `Stars produce ${format(global.milestonesInfo[4].reward[0], { padding: true })} times more Elements.` : 'New Intergalactic themed Strangenesses.',\n                () => player.inflation.vacuum ? `Preons hardcap delayed by ${format(global.milestonesInfo[4].reward[1], { padding: true })}.` : \"Unknown Structure, it doesn't belong to this Universe.\\nVacuum instability increased.\"\n            ],\n            need: [[8, 3], [1, 2]],\n            reward: [1, 1],\n            scalingOld: [\n                [8000, 10000, 12000, 14000, 16000, 18000, 20000, 22000],\n                [100, 120, 140, 160, 180, 200, 220, 240]\n            ]\n        }, { //Stage 5\n            name: [\n                'Light in the dark',\n                'End of Greatness'\n            ],\n            needText: [\n                () => `Have self-made Stars count reach at least ${Limit(global.milestonesInfo[5].need[0]).format()}.`,\n                () => `Have ${Limit(global.milestonesInfo[5].need[1]).format()} Galaxies or more.`\n            ],\n            rewardText: [\n                () => player.inflation.vacuum ? `Increase ${global.strangeInfo.name[player.strangeness[5][10]]} income from Stage reset by ${format(global.milestonesInfo[5].reward[0], { padding: true })}.` : 'Intergalactic is always active now. (But only seen when Intestellar active)',\n                () => player.inflation.vacuum ? `Boost per Galaxy is now +${format(global.milestonesInfo[5].reward[1])} bigger.` : 'Unknown Structure, it cannot exist in false Vacuum.\\nVacuum instability increased.'\n            ],\n            need: [[1.5, 3], [2, 0]],\n            reward: [5, 25],\n            scalingOld: [\n                [1500, 1600, 1700, 1800, 1900, 2000],\n                [2, 4, 8, 12, 16, 20]\n            ]\n        }\n    ],\n    challengesInfo: {\n        name: [\n            'Void'\n        ],\n        description: [\n            'Result of Vacuum Instabillity, investigate at your own will'\n        ],\n        effectText: [\n            () => {\n                const progress = player.challenges.void;\n                if (progress[1] === 0) { return '<span class=\"orangeText\">- Unknown, but maybe with more Energy</span>'; }\n                let text = '<span class=\"orangeText\">- Energy gain is decreased by 20%\\n- Discharge base reduced</span>';\n                if (progress[1] >= 3) { text += `\\n\\n<span class=\"blueText\">- ${progress[2] > 0 ? `Effective Drops amount softcap is stronger and no longer delayed by self-made ones (^${format(0.2)} > ^${format(0.1)})\\n- Puddles are 800 times weaker\\n- 'Water spread' scales slower` : 'Unknown, but maybe if deeper'}</span>`; }\n                if (progress[1] >= 2) { text += `\\n\\n<span class=\"grayText\">- ${progress[3] > 0 ? `'Jovian planet' Rank softcap starts immediately (^${format(0.92)})\\n- Softcap is stronger after reaching that Rank (^${format(0.84)})` : 'Unknown, but maybe if more Mass'}</span>`; }\n                if (progress[3] >= 5) { text += `\\n\\n<span class=\"darkorchidText\">- ${progress[4] > 0 ? `Solar mass is 20 times weaker\\n- Solar mass strength scales slower (-^${format(0.2)})\\n- 'Star system' is weaker` : 'Unknown, but maybe if long enough'}</span>`; }\n                return text;\n            }\n        ],\n        needText: [\n            [\n                [],\n                ['Perform Discharge', \"Get first level of 'Accretion'\", \"Get second level of 'Accretion'\"],\n                ['Have more than 1 Cloud', 'Have more than 1e4 Clouds'],\n                [\"Reach 'Meteoroid' Rank\", \"Reach 'Asteroid' Rank\", \"Reach 'Planet' Rank\", \"Reach 'Jovian planet' Rank\", \"Reach 'Protostar' Rank\"],\n                ['Cause the Collapse', 'Get first Red giant', 'Get first Neutron star', 'Get first Black hole'],\n                []\n            ]\n        ],\n        rewardText: [\n            [\n                [],\n                [\"'Fundamental boost' (Microworld)\", \"'Conservation of Mass' (Microworld)\", \"'Massive Ranks' (Accretion)\"],\n                [\"'Ocean world' (Submerged)\", \"'Mechanical spread' (Submerged)\"],\n                ['Multiple max level increases', 'Multiple max level increases', 'Multiple max level increases', 'Multiple max level increases', \"'Strange growth' (Intergalactic)\"],\n                [\"'New Milestones' (Intergalactic)\", \"'Conservation of Energy' (Microworld)\", \"'Neutronium' (Interstellar)\", \"'Mass shift' (Accretion)\"],\n                []\n            ]\n        ],\n        color: [\n            'darkviolet'\n        ]\n    },\n    historyStorage: {\n        stage: []\n    }\n};\n\n//Math.log extension for any base\nexport const logAny = (number: number, base: number) => Math.log(number) / Math.log(base);\n\n//Not for deep copy. Actual type is any[], it's because TS is dumb\nexport const cloneArray = <ArrayClone extends Array<number | string | boolean | null | undefined>>(array: ArrayClone) => array.slice(0) as ArrayClone; //[...array] is better when >10000 keys\n\n//For non deep clone use { ...object } or cloneArray when possible\nexport const deepClone = <CloneType>(toClone: CloneType): CloneType => {\n    if (typeof toClone !== 'object' || toClone === null) { return toClone; }\n\n    let value: any;\n    if (Array.isArray(toClone)) {\n        value = []; //Faster this way\n        for (let i = 0; i < toClone.length; i++) { value.push(deepClone(toClone[i])); }\n    } else {\n        value = {};\n        for (const check in toClone) { value[check] = deepClone(toClone[check]); }\n    }\n    return value;\n};\n\nconst createArray = (amount: number, type: 'toggle' | 'toggleAuto' | 'toggleConfirm' | 'upgrade') => {\n    const array = [];\n    for (let i = 0; i < amount; i++) {\n        if (type === 'toggle') {\n            array.push(true);\n        } else if (type === 'toggleAuto') {\n            array.push(false);\n        } else if (type === 'toggleConfirm') {\n            array.push('All');\n        } else if (type === 'upgrade') {\n            array.push(0);\n        }\n    }\n    return array;\n};\n\nfor (let s = 0; s < global.buildingsInfo.startCost.length; s++) {\n    global.buildingsInfo.firstCost[s] = cloneArray(global.buildingsInfo.startCost[s]);\n    global.buildingsInfo.producing[s] = [];\n    for (let i = 0; i < global.buildingsInfo.startCost[s].length; i++) {\n        global.buildingsInfo.producing[s].push([0, 0]);\n    }\n}\nfor (const upgradeType of ['researches', 'researchesExtra', 'strangeness'] as const) {\n    const pointer = global[`${upgradeType}Info`];\n    for (let s = 1; s < pointer.length; s++) {\n        pointer[s].cost = cloneArray(pointer[s].startCost);\n    }\n}\nfor (const upgradeType of ['upgrades', 'researches', 'researchesExtra'] as const) {\n    const pointer = global[`${upgradeType}Info`];\n    for (let s = 1; s < pointer.length; s++) {\n        for (let i = 0; i < pointer[s].name.length; i++) {\n            pointer[s].effect[i] = null;\n        }\n    }\n}\nfor (let i = 0; i < global.elementsInfo.name.length; i++) {\n    global.elementsInfo.effect[i] = null;\n}\n\nObject.assign(player, {\n    upgrades: [\n        [],\n        createArray(global.upgradesInfo[1].startCost.length, 'upgrade'),\n        createArray(global.upgradesInfo[2].startCost.length, 'upgrade'),\n        createArray(global.upgradesInfo[3].startCost.length, 'upgrade'),\n        createArray(global.upgradesInfo[4].startCost.length, 'upgrade'),\n        createArray(global.upgradesInfo[5].startCost.length, 'upgrade')\n    ],\n    researches: [\n        [],\n        createArray(global.researchesInfo[1].startCost.length, 'upgrade'),\n        createArray(global.researchesInfo[2].startCost.length, 'upgrade'),\n        createArray(global.researchesInfo[3].startCost.length, 'upgrade'),\n        createArray(global.researchesInfo[4].startCost.length, 'upgrade'),\n        createArray(global.researchesInfo[5].startCost.length, 'upgrade')\n    ],\n    researchesExtra: [\n        [],\n        createArray(global.researchesExtraInfo[1].startCost.length, 'upgrade'),\n        createArray(global.researchesExtraInfo[2].startCost.length, 'upgrade'),\n        createArray(global.researchesExtraInfo[3].startCost.length, 'upgrade'),\n        createArray(global.researchesExtraInfo[4].startCost.length, 'upgrade'),\n        createArray(global.researchesExtraInfo[5].startCost.length, 'upgrade')\n    ],\n    ASR: createArray(global.ASRInfo.costRange.length, 'upgrade'),\n    elements: createArray(global.elementsInfo.startCost.length, 'upgrade'),\n    strangeness: [\n        [],\n        createArray(global.strangenessInfo[1].startCost.length, 'upgrade'),\n        createArray(global.strangenessInfo[2].startCost.length, 'upgrade'),\n        createArray(global.strangenessInfo[3].startCost.length, 'upgrade'),\n        createArray(global.strangenessInfo[4].startCost.length, 'upgrade'),\n        createArray(global.strangenessInfo[5].startCost.length, 'upgrade')\n    ],\n    milestones: [\n        [],\n        createArray(global.milestonesInfo[1].need.length, 'upgrade'),\n        createArray(global.milestonesInfo[2].need.length, 'upgrade'),\n        createArray(global.milestonesInfo[3].need.length, 'upgrade'),\n        createArray(global.milestonesInfo[4].need.length, 'upgrade'),\n        createArray(global.milestonesInfo[5].need.length, 'upgrade')\n    ]\n});\nObject.assign(player.toggles, { //Done separately to keep 'shop'\n    normal: createArray(document.getElementsByClassName('toggle').length, 'toggle'),\n    confirm: createArray(document.getElementsByClassName('toggleConfirm').length, 'toggleConfirm'),\n    buildings: [\n        [],\n        createArray(player.buildings[1].length, 'toggleAuto'),\n        createArray(player.buildings[2].length, 'toggleAuto'),\n        createArray(player.buildings[3].length, 'toggleAuto'),\n        createArray(player.buildings[4].length, 'toggleAuto'),\n        createArray(player.buildings[5].length, 'toggleAuto')\n    ],\n    auto: createArray(document.getElementsByClassName('toggleAuto').length, 'toggleAuto')\n});\nplayer.toggles.normal[0] = false;\n\n//player.example = playerStart.example; Is not allowed (if example is an array or object), instead iterate or create clone\nexport const playerStart = deepClone(player);\n\nexport const updatePlayer = (load: playerType): string => {\n    if (Object.hasOwn(load, 'player')) { load = load['player' as keyof unknown]; } //Old save had it\n\n    prepareVacuum(Boolean(load.inflation?.vacuum)); //Only to set starting buildings values\n    for (const key in playerStart) {\n        if (!Object.hasOwn(load, key)) {\n            if (key === 'discharge') {\n                throw new ReferenceError('This save file is missing important information and is most likely not from this game');\n            } else if (key !== 'version') {\n                load[key as 'ASR'] = deepClone(playerStart[key as 'ASR']);\n            } else { load.version = '0.0.0'; }\n        }\n    }\n\n    const oldVersion = load.version;\n    if (oldVersion !== playerStart.version) {\n        if (load.version === '0.0.0') {\n            load.version = 'v0.0.1';\n            if (Object.hasOwn(load, 'energy')) { load.discharge.energy = load['energy' as 'discharge']['current' as 'energy']; }\n            load.researchesExtra = []; //Required for v0.0.9\n        }\n        if (load.version === 'v0.0.1') {\n            load.version = 'v0.0.2';\n            load.stage.resets = load.stage.current - 1;\n        }\n        if (load.version === 'v0.0.2' || load.version === 'v0.0.3') {\n            load.version = 'v0.0.4';\n            delete load['energy' as keyof unknown];\n            delete load['buyToggle' as keyof unknown];\n        }\n        if (load.version === 'v0.0.4' || load.version === 'v0.0.5') {\n            load.version = 'v0.0.6';\n            load.events = [false];\n        }\n        if (load.version === 'v0.0.6') {\n            load.version = 'v0.0.7';\n            load.vaporization.input = 3;\n            load.stage.input = 20;\n        }\n        if (load.version === 'v0.0.7') {\n            load.version = 'v0.0.8';\n            load.stage.export = 86400;\n        }\n        if (load.version === 'v0.0.8') {\n            load.version = 'v0.0.9';\n            load.stage.active = Math.min(load.stage.current, 4);\n            const a = load.stage.active;\n            const oldB = load.buildings as unknown as playerType['buildings'][0];\n            load.buildings = deepClone(playerStart.buildings);\n            load.buildings[a] = oldB;\n            const oldU = load.upgrades as unknown as playerType['upgrades'][0];\n            load.upgrades = deepClone(playerStart.upgrades);\n            load.upgrades[a] = oldU;\n            const oldR = load.researches as unknown as playerType['researches'][0];\n            load.researches = deepClone(playerStart.researches);\n            load.researches[a] = oldR;\n            const oldE = load.researchesExtra as unknown as playerType['researchesExtra'][0];\n            load.researchesExtra = deepClone(playerStart.researchesExtra);\n            load.researchesExtra[a] = oldE;\n            if (load.strangeness.length < 5) { load.strangeness.unshift([]); }\n        }\n        if (load.version === 'v0.0.9' || load.version === 'v0.1.0') {\n            load.version = 'v0.1.1';\n            if (Object.hasOwn(load.discharge, 'energyCur')) { load.discharge.energy = load.discharge['energyCur' as 'energy']; }\n            delete load.discharge['energyCur' as keyof unknown];\n            load.collapse.massMax = load.collapse.mass;\n        }\n        if (load.version === 'v0.1.1') {\n            load.version = 'v0.1.2';\n            for (let s = 1; s < load.buildings.length; s++) {\n                const buildings = load.buildings[s];\n                for (let i = 0; i < buildings.length; i++) {\n                    buildings[i].current = Limit(buildings[i].current).toArray();\n                    buildings[i].total = Limit(buildings[i].total).toArray();\n                    buildings[i].trueTotal = Limit(buildings[i].total).toArray(); //Intentional\n                    buildings[i].highest = [0, 0];\n                }\n            }\n            load.vaporization.clouds = Limit(load.vaporization.clouds).toArray();\n            if (Object.hasOwn(load.strange[0], 'true')) { load.strange[0].current = load.strange[0]['true' as 'current']; }\n            delete load.vaporization['current' as keyof unknown];\n            delete load.strange[0]['true' as keyof unknown];\n            load.time.offline = 0;\n        }\n        if (load.version === 'v0.1.2') {\n            load.version = 'v0.1.3';\n            load.stage.best = 0;\n            load.stage.time = 0;\n            load.inflation.age = 0;\n            load.discharge.energyMax = load.discharge.energy;\n            load.vaporization.cloudsMax = cloneArray(load.vaporization.clouds);\n        }\n        if (load.version === 'v0.1.3') {\n            load.version = 'v0.1.4';\n            delete load.collapse['disabled' as keyof unknown];\n            delete load.collapse['inputM' as keyof unknown];\n            delete load.collapse['inputS' as keyof unknown];\n        }\n        if (load.version === 'v0.1.4' || load.version === 'v0.1.5') {\n            load.version = 'v0.1.6';\n            load.collapse.show = 0;\n            load.collapse.input = 2;\n            load.toggles = deepClone(playerStart.toggles);\n            load.history.stage.best[2] = 0;\n            for (let i = 0; i < load.history.stage.list.length; i++) {\n                load.history.stage.list[i][2] = 0;\n            }\n            delete load.time['disabled' as keyof unknown];\n            delete load['researchesAuto' as keyof unknown];\n            delete load.discharge['unlock' as keyof unknown];\n\n            /* Can be removed eventually */\n            load.vaporization.clouds = Limit(load.vaporization.clouds).minus('1').toArray();\n            if (load.inflation.vacuum) {\n                if (load.strangeness[3][9] > 0) {\n                    load.strange[0].current += (4 ** load.strangeness[3][9] - 1) * 8;\n                    load.strangeness[3][9] = 0;\n                }\n                if (load.strangeness[5][2] > 0) {\n                    load.strange[0].current += 50;\n                    load.strangeness[5][2] = 0;\n                }\n            }\n        }\n        if (load.version === 'v0.1.6') {\n            load.version = 'v0.1.7';\n            if (load.buildings[5].length > 4) { load.buildings[5].length = 4; }\n            if (!Object.hasOwn(load, 'saveUpdate016')) {\n                load.strangeness[2].splice(6, 1);\n                load.strangeness[4].splice(8, 1);\n                load.intervals = deepClone(playerStart.intervals);\n            }\n            delete load['saveUpdate016' as keyof unknown];\n            delete load.accretion['input' as keyof unknown];\n            delete load.collapse['elementsMax' as keyof unknown];\n        }\n\n        if (load.version !== playerStart.version) {\n            throw new ReferenceError('Save file version is higher than game version');\n        }\n    }\n\n    for (let s = 1; s < playerStart.buildings.length; s++) {\n        if (isNaN(load.toggles.shop.wait[s])) { load.toggles.shop.wait[s] = 2; }\n        if (!Array.isArray(load.buildings[s])) {\n            load.buildings[s] = deepClone(playerStart.buildings[s]);\n        } else {\n            for (let i = load.buildings[s].length; i < playerStart.buildings[s].length; i++) {\n                load.buildings[s][i] = deepClone(playerStart.buildings[s][i]);\n            }\n        }\n    }\n    for (let i = load.strange.length; i < playerStart.strange.length; i++) {\n        load.strange[i] = deepClone(playerStart.strange[i]);\n    }\n\n    for (let s = 1; s < playerStart.upgrades.length; s++) {\n        if (!Array.isArray(load.upgrades[s])) {\n            load.upgrades[s] = cloneArray(playerStart.upgrades[s]);\n        } else {\n            for (let i = load.upgrades[s].length; i < playerStart.upgrades[s].length; i++) {\n                load.upgrades[s][i] = 0;\n            }\n        }\n    }\n    for (let s = 1; s < playerStart.researches.length; s++) {\n        if (!Array.isArray(load.researches[s])) {\n            load.researches[s] = cloneArray(playerStart.researches[s]);\n        } else {\n            for (let i = load.researches[s].length; i < playerStart.researches[s].length; i++) {\n                load.researches[s][i] = 0;\n            }\n        }\n    }\n    for (let s = 1; s < playerStart.researchesExtra.length; s++) {\n        if (!Array.isArray(load.researchesExtra[s])) {\n            load.researchesExtra[s] = cloneArray(playerStart.researchesExtra[s]);\n        } else {\n            for (let i = load.researchesExtra[s].length; i < playerStart.researchesExtra[s].length; i++) {\n                load.researchesExtra[s][i] = 0;\n            }\n        }\n    }\n    for (let i = load.ASR.length; i < playerStart.ASR.length; i++) {\n        load.ASR[i] = 0;\n    }\n    for (let i = load.elements.length; i < playerStart.elements.length; i++) {\n        load.elements[i] = 0;\n    }\n    for (let s = 0; s < playerStart.strangeness.length; s++) {\n        if (!Array.isArray(load.strangeness[s])) {\n            load.strangeness[s] = cloneArray(playerStart.strangeness[s]);\n        } else {\n            for (let i = load.strangeness[s].length; i < playerStart.strangeness[s].length; i++) {\n                load.strangeness[s][i] = 0;\n            }\n        }\n    }\n    for (let s = 0; s < playerStart.milestones.length; s++) {\n        if (!Array.isArray(load.milestones[s])) {\n            load.milestones[s] = cloneArray(playerStart.milestones[s]);\n        } else {\n            for (let i = load.milestones[s].length; i < playerStart.milestones[s].length; i++) {\n                load.milestones[s][i] = 0;\n            }\n        }\n    }\n\n    for (let s = 1; s < playerStart.toggles.buildings.length; s++) {\n        if (!Array.isArray(load.toggles.buildings[s])) {\n            load.toggles.buildings[s] = cloneArray(playerStart.toggles.buildings[s]);\n        } else {\n            for (let i = load.toggles.buildings[s].length; i < playerStart.toggles.buildings[s].length; i++) {\n                load.toggles.buildings[s][i] = false;\n            }\n        }\n    }\n    for (let i = load.toggles.confirm.length; i < playerStart.toggles.confirm.length; i++) {\n        load.toggles.confirm[i] = playerStart.toggles.confirm[i];\n    }\n    for (let i = load.toggles.normal.length; i < playerStart.toggles.normal.length; i++) {\n        load.toggles.normal[i] = playerStart.toggles.normal[i];\n    }\n    for (let i = load.toggles.auto.length; i < playerStart.toggles.auto.length; i++) {\n        load.toggles.auto[i] = false;\n    }\n\n    if (load.intervals.main < 20) { load.intervals.main = 20; }\n    for (let i = load.events.length; i < playerStart.events.length; i++) {\n        load.events[i] = false;\n    }\n\n    Object.assign(player, load);\n\n    /* Prepare fake save file data */\n    global.debug.errorID = true;\n    global.debug.errorQuery = true;\n    global.debug.errorGain = true;\n\n    global.researchesInfo[2].effect[0] = 0;\n    global.researchesInfo[2].effect[1] = 0;\n    global.accretionInfo.rankCost[4] = player.stage.true > 3 || (player.stage.true === 3 && player.events[0]) ? 5e29 : 0;\n    const stars = player.buildings[4];\n    global.collapseInfo.trueStars = stars[1].true + stars[2].true + stars[3].true + stars[4].true + stars[5].true;\n    global.historyStorage.stage = player.history.stage.list;\n    if (player.inflation.vacuum) {\n        player.buildings[2][0].current = Limit(player.buildings[1][5].current).divide('6.02214076e23').toArray();\n        player.buildings[3][0].current = Limit(player.buildings[1][0].current).multiply('1.78266192e-33').toArray();\n    } else if (player.accretion.rank === 0) { player.buildings[3][0].current = [5.97, 27]; }\n\n    for (let s = 1; s < playerStart.milestones.length; s++) {\n        for (let i = 0; i < playerStart.milestones[s].length; i++) {\n            calculateMilestoneInformation(i, s);\n        }\n    }\n    for (let s = 1; s < playerStart.strangeness.length; s++) {\n        const strangeness = player.strangeness[s];\n        const strangenessMax = global.strangenessInfo[s].max;\n        for (let i = 0; i < global.strangenessInfo[s].maxActive; i++) {\n            calculateMaxLevel(i, s, 'strangeness');\n            if (strangeness[i] > strangenessMax[i]) {\n                strangeness[i] = strangenessMax[i];\n                visualUpdateResearches(i, s, 'strangeness');\n            }\n        }\n    }\n    for (let s = 1; s <= 5; s++) {\n        calculateMaxLevel(0, s, 'ASR');\n        const extra = player.researchesExtra[s];\n        const extraMax = global.researchesExtraInfo[s].max;\n        for (let i = 0; i < global.researchesExtraInfo[s].maxActive; i++) {\n            calculateMaxLevel(i, s, 'researchesExtra');\n            if (extra[i] > extraMax[i]) {\n                extra[i] = extraMax[i];\n            }\n        }\n        const researches = player.researches[s];\n        const researchesMax = global.researchesInfo[s].max;\n        for (let i = 0; i < global.researchesInfo[s].maxActive; i++) {\n            calculateMaxLevel(i, s, 'researches');\n            if (researches[i] > researchesMax[i]) {\n                researches[i] = researchesMax[i];\n            }\n        }\n    }\n\n    assignStrangeBoost();\n    assignEnergy();\n    if (!player.inflation.vacuum) { calculateInstability(); }\n\n    /* Finish visuals */\n    const theme = localStorage.getItem('theme');\n    setTheme(theme === null ? null : Number(theme));\n\n    (getId('saveFileNameInput') as HTMLInputElement).value = player.fileName;\n    (getId('mainInterval') as HTMLInputElement).value = `${player.intervals.main}`;\n    (getId('numbersInterval') as HTMLInputElement).value = `${player.intervals.numbers}`;\n    (getId('visualInterval') as HTMLInputElement).value = `${player.intervals.visual / 1000}`;\n    (getId('autoSaveInterval') as HTMLInputElement).value = `${player.intervals.autoSave / 1000}`;\n    (getId('thousandSeparator') as HTMLInputElement).value = player.separator[0];\n    (getId('decimalPoint') as HTMLInputElement).value = player.separator[1];\n    (getId('stageInput') as HTMLInputElement).value = format(player.stage.input, { type: 'input' });\n    (getId('vaporizationInput') as HTMLInputElement).value = format(player.vaporization.input, { type: 'input' });\n    (getId('collapseStarsInput') as HTMLInputElement).value = format(player.collapse.input, { type: 'input' });\n    (getId('stageResetsSave') as HTMLInputElement).value = `${player.history.stage.input[0]}`;\n    (getId('stageResetsKeep') as HTMLInputElement).value = `${player.history.stage.input[1]}`;\n    for (let i = 0; i < playerStart.toggles.normal.length; i++) { toggleSwap(i, 'normal'); }\n    for (let i = 0; i < playerStart.toggles.confirm.length; i++) { toggleConfirm(i); }\n    for (let i = 0; i < playerStart.toggles.auto.length; i++) { toggleSwap(i, 'auto'); }\n    toggleBuy();\n\n    return oldVersion;\n};\n\nexport const buildVersionInfo = () => {\n    if (getId('versionText', false) !== null) { return; }\n\n    const changeVersion = (version: string) => {\n        let text = '';\n        switch (version) {\n            case 'v0.0.1':\n                text = '- Stage 2 full rework\\n- Introduced automatic changelog\\n- Auto Structures do not wait for 2x cost if making the 1st one\\n\\n';\n                text += '- Mobile device support\\n\\n';\n                text += \"- 'Tritium' now shows how much Molecules being produced per second\\n- Upgrades auto update description\";\n                break;\n            case 'v0.0.2':\n                text = '- Added stats subtab\\n- Added Stage resets into save file';\n                break;\n            case 'v0.0.3':\n                text = '- Added new content (Stage 3)\\n- Stage 2 extended\\n- Max offline time base and from research is now 2 times longer\\n- Offline time calculated better\\n- Toggles have been reset\\n- Researches auto update description\\n- Some new stats';\n                break;\n            case 'v0.0.4':\n                text = '- Buffed all Stages\\n- Added events for early Stages\\n- Update to stats visuals\\n- Intervals have been reset\\n\\n';\n                text += '- Numbers are now formated\\n\\n';\n                text += '- New stat for Stage 3';\n                break;\n            case 'v0.0.5':\n                text = '- New content (Stage 4)\\n- Basic loading screen\\n- Full visual update\\n- New formula for multi making Structures\\n- Visual indication for how many Structures can be made\\n\\n';\n                text += '- Created Elements will show effects after Collapse\\n- Improved transition when changing themes\\n- Fixed being able to create automatization research when can\\'t afford them\\n\\n';\n                text += '- Added hotkeys\\n- Stage event reset';\n                break;\n            case 'v0.0.6':\n                text = '- List of hotkeys can be seen now\\n\\n';\n                text += '- Option to remove text movement\\n- Ability to rename save file';\n                break;\n            case 'v0.0.7':\n                text = '- New content (Stage 5)\\n- Stage 1 rework\\n- Self-made Structures stat moved into Stage tab\\n- Hotkeys for Resets\\n- Pressing keyboard (unless tab) no longer highlights buttons\\n- Removed old number format (it was painfully slow) in favor of self-made one\\n\\n';\n                text += '- Numpad can now be used as digits for hotkeys\\n\\n';\n                text += '- Save file name can now display in game stats';\n                break;\n            case 'v0.0.8':\n                text = '- Minor speed up to almost all Stages (not first one)';\n                break;\n            case 'v0.0.9':\n                text = '- New content (Milestones)\\n- Stage 4 speed up\\n- Fixed export reward not being saved into exported file\\n- Auto Structures toggles have been reset\\n\\n';\n                text += '- Fixed F1 - F12 buttons working as digits\\n- Milestones are now unlocked instanly (with Stage 5)\\n- New event that must be triggered to progress (entering Intergalactic space)\\n\\n';\n                text += '- Max offline base and research is increased by 2 times, related Strangeness cost and max level have been balanced\\n\\n';\n                text += '- Some quick balance changes for Stage 3 and 5';\n                break;\n            case 'v0.1.0':\n                text = '- New content and balance for end of Stage 5\\n- New stats for Stage 5';\n                break;\n            case 'v0.1.1':\n                text = '- More balance for Stage 5\\n- New stats for Stage 2 and 4, max energy no longer resets\\n- New hotkeys to change Active Stage';\n                break;\n            case 'v0.1.2':\n                text = '- New content (Vacuum)\\n- Some descriptions have been expanded\\n- Added self-made break infinity\\n- Offline time been reworked\\n- Added version window (removed automatic change log)\\n- Removed option to remove text movement (always on now)\\n\\n';\n                text += '- New color theme\\n- Offline warp now unlocked instantly\\n- New stats for Stage 4\\n\\n';\n                text += '- Auto Structures now correctly spend currency';\n                break;\n            case 'v0.1.3':\n                text = '- Puddles production base increased from 3 to 4, Clouds gain decreased by -1 (formula fix)\\n- New stats for Stage 3, 4 and 5\\n- More Stage 6 balance (Strangeness, reduced max level and adjusted cost; Submerged proper balance; Strange boost new effects)\\n- Replay event button\\n\\n';\n                text += '- History for Stage resets\\n- New hotkeys (A - toggle all Structures, O - toggle Offline)\\n\\n';\n                text += '- Added requirement to unlock better control over Warp (also Warp now has a minimum value)\\n- Automatically made Structures/Upgrades no longer visually update numbers';\n                break;\n            case 'v0.1.4':\n                text = '- Warps now waste offline (half of normal); Max offline from upgrades decreased, cost adjusted\\n- Custom scrolls\\n- Notifications\\n- Fixed and updated Mobile device and Screen reader supports\\n- Auto Collapse settings reset';\n                break;\n            case 'v0.1.5':\n                text = \"- Stage 6 minor balance changes\\n- Images should no longer unload on Stage change\\n- Elements subtab can now be entered from any Stage or turned into a tab\\n- Footer now affects page height\\n- Many small changes to improve quality of life\\n- 'Any' make toggle is now always Strict, related button removed\\n- More information for save files\\n- New hotkeys\\n- Screen reader support rework (also removed special tab)\";\n                break;\n            case 'v0.1.6':\n                text = '- Massive rebalance and reworks for all Stages\\n- Auto Collapse reworked (also its settings reset)\\n- Small changes to auto Vaporization\\n- New input for Auto Structures wait value\\n- New stats for Stage 1, 2 and 3\\n- New notifications\\n- Removed almost all Automatization researches\\n- Export reward now unlocked for free\\n- Created Elements will show effects after Stage reset\\n- Auto Galaxy is now better\\n- Descriptions no longer reset when changing active Stage\\n- More quality of life improvements\\n- More work on Mobile device and Screen reader supports\\n- Toggles and intervals have been reset';\n                break;\n            case 'v0.1.7':\n                text = \"- New content (Void)\\n- Further balance and quality of life changes\\n- Removed 'Max gain' and 'Longer offline' strangeness\\n- Max offline storage is based on Stage resets now\\n- Offline storage will no longer decrease when switching vacuum state\\n- Export base is now improved by best Stage reset\\n- '[27] Cobalt' effect is now based on total Elements\\n- Updated logic for entering and leaving Elements subtab\\n- Warp minimum value is now 10 minutes and calculated better\\n- Discharge is no longer allowed if no reason in doing it\\n- Fixed import not working on some Mobile devices\\n- Art, themes and overall small visual updates\\n- Updated numbers to move less, also to use new format\";\n        }\n        getId('versionText').textContent = text;\n        getId('currentVesion').textContent = version;\n    };\n\n    const max = 17; //v0.2.4 -> 24\n    let autoText = '';\n    for (let i = 1; i <= max; i++) {\n        const index = `${i}`.padStart(2, '0');\n        const version = `v0.${index[0]}.${index[1]}`;\n        autoText += `<button type=\"button\" id=\"${version}\">${version}</button>`;\n    }\n\n    getId('versionInfo').innerHTML = `<div style=\"display: flex; flex-direction: column; justify-content: space-between; align-items: center; width: clamp(42vw, 36em, 80vw); height: clamp(26vh, 36em, 90vh); background-color: var(--window-color); border: 3px solid var(--window-border); border-radius: 12px; padding: 1em 1em 0.8em; row-gap: 1em;\">\n        <div style=\"display: flex; justify-content: center; flex-wrap: wrap; gap: 0.06em;\">${autoText}</div>\n        <div style=\"width: 100%; overflow-y: auto;\">\n            <label id=\"currentVesion\" class=\"bigWord\"></label>\n            <p id=\"versionText\" class=\"whiteText\" style=\"white-space: pre-line; line-height: 1.3em; margin-top: 0.4em;\"></p>\n        </div>\n        <button type=\"button\" id=\"closeVersionInfo\" style=\"width: 6em; border-radius: 4px; font-size: 0.92em;\">Close</button>\n    </div>`;\n    document.head.appendChild(document.createElement('style')).textContent = '#versionInfo > div > div:first-of-type > button { width: 3.8em; height: 2em; font-size: 0.88em; }';\n    getId('closeVersionInfo').addEventListener('click', () => { getId('versionInfo').style.display = 'none'; });\n    for (let i = 1; i <= max; i++) {\n        const index = `${i}`.padStart(2, '0');\n        const version = `v0.${index[0]}.${index[1]}`;\n        getId(version).addEventListener('click', () => changeVersion(version));\n    }\n    changeVersion(playerStart.version);\n};\n", "import { global, player } from './Player';\nimport { checkTab } from './Check';\nimport { switchTab } from './Update';\nimport { buyBuilding, collapseAsyncReset, dischargeAsyncReset, rankAsyncReset, stageAsyncReset, switchStage, toggleSwap, vaporizationAsyncReset } from './Stage';\nimport { timeWarp } from './Main';\n\nexport const detectHotkey = (check: KeyboardEvent) => {\n    if (check.code === 'Tab') {\n        document.body.classList.add('outlineOnFocus');\n        return;\n    } else {\n        const activeType = (document.activeElement as HTMLInputElement).type;\n        if (activeType === 'text' || activeType === 'number') { return; }\n        document.body.classList.remove('outlineOnFocus');\n    }\n    if (check.ctrlKey || check.altKey) { return; }\n    const { key, code } = check;\n\n    const numberKey = Number(code.slice(-1));\n    if (!isNaN(numberKey)) {\n        let isShift = check.shiftKey;\n        if (isNaN(Number(key))) {\n            if (code === '' || code[0] === 'F') { return; }\n            if (!isShift) { //Numpad\n                isShift = true;\n                check.preventDefault();\n            }\n        }\n\n        if (isShift) {\n            if (check.repeat) { return; }\n            toggleSwap(numberKey, 'buildings', true);\n        } else { buyBuilding(numberKey); }\n    } else if (key.length === 1) {\n        const stringKey = (player.toggles.normal[1] ? code.replace('Key', '') : key).toLowerCase();\n        if (check.shiftKey) {\n            if (stringKey === 'a') {\n                toggleSwap(0, 'buildings', true);\n            }\n        } else {\n            if (stringKey === 'o') {\n                toggleSwap(0, 'normal', true);\n            } else if (stringKey === 'w') {\n                check.preventDefault();\n                void timeWarp();\n            } else if (stringKey === 's') {\n                void stageAsyncReset();\n            } else if (stringKey === 'd') {\n                if (global.stageInfo.activeAll.includes(1)) { void dischargeAsyncReset(); }\n            } else if (stringKey === 'v') {\n                if (global.stageInfo.activeAll.includes(2)) { void vaporizationAsyncReset(); }\n            } else if (stringKey === 'r') {\n                if (global.stageInfo.activeAll.includes(3)) { void rankAsyncReset(); }\n            } else if (stringKey === 'c') {\n                if (global.stageInfo.activeAll.includes(4)) { void collapseAsyncReset(); }\n            }\n        }\n    } else if (key === 'ArrowLeft' || key === 'ArrowRight') {\n        if (check.repeat) { return; }\n        if (check.shiftKey) {\n            const activeAll = global.stageInfo.activeAll;\n            if (activeAll.length === 1) { return; }\n            let index = activeAll.indexOf(player.stage.active);\n\n            if (key === 'ArrowLeft') {\n                if (index <= 0) {\n                    index = activeAll.length - 1;\n                } else { index--; }\n                switchStage(activeAll[index]);\n            } else {\n                if (index >= activeAll.length - 1) {\n                    index = 0;\n                } else { index++; }\n                switchStage(activeAll[index]);\n            }\n        } else {\n            const tabs = global.tabList.tabs;\n            let index = tabs.indexOf(global.tab);\n\n            if (key === 'ArrowLeft') {\n                do {\n                    if (index <= 0) {\n                        index = tabs.length - 1;\n                    } else { index--; }\n                } while (!checkTab(tabs[index]));\n                switchTab(tabs[index]);\n            } else {\n                do {\n                    if (index >= tabs.length - 1) {\n                        index = 0;\n                    } else { index++; }\n                } while (!checkTab(tabs[index]));\n                switchTab(tabs[index]);\n            }\n        }\n    } else if (key === 'ArrowDown' || key === 'ArrowUp') {\n        if (check.shiftKey || check.repeat || !Object.hasOwn(global.subtab, `${global.tab}Current`)) { return; }\n        const subtabs = global.tabList[`${global.tab as 'stage'}Subtabs`];\n        let index = subtabs.indexOf(global.subtab[`${global.tab as 'stage'}Current`]);\n\n        if (key === 'ArrowDown') {\n            do {\n                if (index <= 0) {\n                    index = subtabs.length - 1;\n                } else { index--; }\n            } while (!checkTab(global.tab, subtabs[index]));\n            switchTab(global.tab, subtabs[index]);\n        } else {\n            do {\n                if (index >= subtabs.length - 1) {\n                    index = 0;\n                } else { index++; }\n            } while (!checkTab(global.tab, subtabs[index]));\n            switchTab(global.tab, subtabs[index]);\n        }\n    }\n};\n", "import { player, global, playerStart, updatePlayer, buildVersionInfo, deepClone } from './Player';\nimport { getUpgradeDescription, timeUpdate, switchTab, numbersUpdate, visualUpdate, format, maxOfflineTime, exportMultiplier, maxExportTime, getChallengeDescription, getChallengeReward, stageUpdate, getStrangenessDescription, offlineWaste } from './Update';\nimport { assignStrangeBoost, autoElementsSet, autoResearchesSet, autoUpgradesSet, buyBuilding, buyUpgrades, collapseAsyncReset, dischargeAsyncReset, enterExitChallenge, rankAsyncReset, stageAsyncReset, switchStage, toggleBuy, toggleConfirm, toggleSwap, vaporizationAsyncReset } from './Stage';\nimport { Alert, hideFooter, Prompt, setTheme, changeFontSize, screenReaderSupport, mobileDeviceSupport, changeFormat, specialHTML, replayEvent, Confirm, preventImageUnload, Notify } from './Special';\nimport { detectHotkey } from './Hotkeys';\nimport { prepareVacuum, switchVacuum } from './Vacuum';\n\n/* This is how much I like to non stop write that element is not null */\nexport const getId = (id: string, cacheIn = true): HTMLElement => {\n    if (!cacheIn) { return document.getElementById(id) as HTMLElement; }\n    const test = specialHTML.cache.idMap.get(id);\n    if (test === undefined) {\n        const store = document.getElementById(id);\n        if (store === null) {\n            if (global.debug.errorID) {\n                global.debug.errorID = false;\n                Notify(`Error encountered, ID - '${id}' doesn't exist`);\n                setTimeout(() => { global.debug.errorID = true; }, 6e4);\n            }\n            throw new ReferenceError(`ID - '${id}' doesn't exist`);\n        }\n        specialHTML.cache.idMap.set(id, store);\n        return store;\n    }\n    return test;\n};\nexport const getClass = (idCollection: string): HTMLCollectionOf<HTMLElement> => {\n    //Might require to remove old values: 'specialHTML.cache.classMap.delete(oldValue)'\n    const test = specialHTML.cache.classMap.get(idCollection);\n    if (test === undefined) {\n        const store = document.getElementsByClassName(idCollection) as HTMLCollectionOf<HTMLElement>;\n        specialHTML.cache.classMap.set(idCollection, store);\n        return store;\n    }\n    return test;\n};\nexport const getQuery = (query: string): HTMLElement => {\n    const test = specialHTML.cache.queryMap.get(query);\n    if (test === undefined) {\n        const store = document.querySelector(query) as HTMLElement;\n        if (store === null) {\n            if (global.debug.errorQuery) {\n                global.debug.errorQuery = false;\n                Notify(`Error encountered, Query - '${query}' failed to find anything`);\n                setTimeout(() => { global.debug.errorQuery = true; }, 6e4);\n            }\n            throw new ReferenceError(`Query - '${query}' failed`);\n        }\n        specialHTML.cache.queryMap.set(query, store);\n        return store;\n    }\n    return test;\n};\n\nconst handleOfflineTime = (): number => {\n    const { time } = player;\n    const timeNow = Date.now();\n    const offlineTime = (timeNow - time.updated) / 1000;\n    time.updated = timeNow;\n    const maxOffline = maxOfflineTime();\n    if (time.offline < maxOffline) { time.offline = Math.min(time.offline + offlineTime, maxOffline); }\n    player.stage.export = Math.min(player.stage.export + offlineTime, maxExportTime());\n    return offlineTime;\n};\n\nconst changeIntervals = (pause = false) => {\n    const { intervalsId } = global;\n    const { intervals } = player;\n\n    clearInterval(intervalsId.main);\n    clearInterval(intervalsId.numbers);\n    clearInterval(intervalsId.visual);\n    clearInterval(intervalsId.autoSave);\n    intervalsId.main = pause ? undefined : setInterval(timeUpdate, intervals.main);\n    intervalsId.numbers = pause ? undefined : setInterval(numbersUpdate, intervals.numbers);\n    intervalsId.visual = pause ? undefined : setInterval(visualUpdate, intervals.visual);\n    intervalsId.autoSave = pause ? undefined : setInterval(saveGame, intervals.autoSave);\n};\n\nconst saveGame = async() => {\n    try {\n        player.history.stage.list = global.historyStorage.stage.slice(0, player.history.stage.input[0]);\n\n        const save = btoa(JSON.stringify(player));\n        localStorage.setItem('save', save);\n        clearInterval(global.intervalsId.autoSave);\n        global.intervalsId.autoSave = setInterval(saveGame, player.intervals.autoSave);\n        getId('isSaved').textContent = 'Saved';\n        global.lastSave = 0;\n    } catch (error) {\n        void Alert(`Failed to save file\\nFull error is: '${error}'`);\n    }\n};\nconst loadFileGame = async() => {\n    const id = getId('file') as HTMLInputElement;\n    changeIntervals(true);\n\n    try {\n        const save = await (id.files as FileList)[0].text();\n        const versionCheck = updatePlayer(JSON.parse(atob(save)));\n\n        Notify(`This save is ${format(handleOfflineTime(), { type: 'time' })} old. Save file version is ${versionCheck}`);\n        getId('isSaved').textContent = 'Imported';\n        global.lastSave = 0;\n        stageUpdate('reload');\n    } catch (error) {\n        void Alert(`Incorrect save file format\\nFull error is: '${error}'`);\n    } finally {\n        changeIntervals();\n        id.value = '';\n    }\n};\nconst exportFileGame = async() => {\n    player.history.stage.list = global.historyStorage.stage.slice(0, player.history.stage.input[0]);\n\n    if (player.strange[0].total > 0 && player.stage.export > 0) {\n        const rewardType = player.strangeness[5][10];\n        const multiplier = exportMultiplier();\n\n        let strangeGain;\n        if (rewardType >= 1) {\n            strangeGain = player.stage.export * multiplier / 86400 / 1e12 ** rewardType;\n            player.stage.export = 0;\n        } else {\n            strangeGain = Math.floor(player.stage.export * multiplier / 86400);\n            player.stage.export -= strangeGain * 86400 / multiplier;\n        }\n        player.strange[rewardType].current += strangeGain;\n        player.strange[rewardType].total += strangeGain;\n        if (rewardType === 0) { assignStrangeBoost(); }\n    }\n\n    const save = btoa(JSON.stringify(player));\n    const a = document.createElement('a');\n    a.href = `data:text/plain,${save}`;\n    a.download = replaceSaveFileSpecials();\n    a.click();\n};\nconst deleteGame = async() => {\n    const ok = await Prompt(\"Type 'delete' to confirm delete your save file (there is no reward for doing it)\\nOr 'clear' to clear local storage (this will delete all data from domain, including other games)\");\n    if (ok === null || ok === '') { return; }\n    const lower = ok.toLowerCase();\n    if (lower !== 'delete' && lower !== 'clear') { return Notify(`Deletion canceled, wrong input '${ok}'`); }\n\n    changeIntervals(true);\n    if (lower === 'delete') {\n        localStorage.removeItem('save');\n    } else { localStorage.clear(); }\n    window.location.reload();\n    void Alert('Game will auto refresh. If not then do it manually');\n};\n\nconst changeSaveFileName = () => {\n    const input = getId('saveFileNameInput') as HTMLInputElement;\n    const newValue = input.value.length === 0 ? playerStart.fileName : input.value.replaceAll(/[\\\\/:*?\"<>|]/g, '_');\n\n    try {\n        btoa(newValue); //Test for any illegal characters\n        player.fileName = newValue;\n        input.value = newValue;\n    } catch (error) {\n        void Alert(`Save file name is not allowed\\nFull error is: '${error}'`);\n    }\n};\nconst replaceSaveFileSpecials = (): string => {\n    let realName = player.fileName;\n    const special = [\n        '[stage]',\n        '[true]',\n        '[strange]',\n        '[matter]',\n        '[vacuum]',\n        '[date]',\n        '[time]'\n    ];\n    const replaceWith = [\n        global.stageInfo.word[player.stage.active],\n        global.stageInfo.word[player.stage.true],\n        `${global.strangeInfo.gain(player.stage.active)}`,\n        `${global.strangeInfo.name[player.strangeness[5][10]]}`,\n        `${player.inflation.vacuum}`,\n        getDate('dateDMY'),\n        getDate('timeHMS')\n    ];\n    for (let i = 0; i < special.length; i++) {\n        realName = realName.replaceAll(special[i], replaceWith[i]);\n    }\n    return `${realName}.txt`;\n};\nconst getDate = (type: 'dateDMY' | 'timeHMS'): string => {\n    const current = new Date();\n    switch (type) {\n        case 'dateDMY': {\n            const day = `${current.getDate()}`.padStart(2, '0');\n            const month = `${current.getMonth() + 1}`.padStart(2, '0');\n            return `${day}.${month}.${current.getFullYear()}`;\n        }\n        case 'timeHMS': {\n            const minutes = `${current.getMinutes()}`.padStart(2, '0');\n            const seconds = `${current.getSeconds()}`.padStart(2, '0');\n            return `${current.getHours()}-${minutes}-${seconds}`;\n        }\n    }\n};\n\nexport const timeWarp = async() => {\n    const { time } = player;\n    const waste = offlineWaste() / 1.5;\n    if (time.offline < 600 * waste) { return void Alert(`Need at least ${format(10 * waste)} minutes of storaged Offline time to Warp`); }\n\n    let warpTime: number;\n    const improved = player.strangeness[1][7] >= 2;\n    if (improved) {\n        warpTime = Math.min(Number(await Prompt(`How many seconds do you wish to Warp forward? (Minimum value is 10 minutes)\\nCurrent Offline time is ${format(time.offline, { type: 'time' })} (${format(time.offline / waste, { type: 'time' })} effective, ${format(waste)} seconds per added second)\\n(One tick will be equal to warp time / 1000)`, '600')), time.offline / waste);\n        if (!isFinite(warpTime)) { return Notify('Warp failed, input is invalid'); }\n    } else {\n        const minimum = Math.min(1200, time.offline / waste);\n        warpTime = await Confirm(`Do you wish to Warp ${format(minimum, { type: 'time' })} forward? Current Offline time is ${format(time.offline, { type: 'time' })} (${format(time.offline / waste, { type: 'time' })} effective), will consume ${format(minimum * waste, { type: 'time' })}\\n(One tick is 20 seconds)`) ? minimum : 0;\n    }\n    if (warpTime < 600) { return warpTime === 0 ? undefined : Notify('Warp failed, storage or input is below minimum value'); }\n\n    time.offline -= warpTime * waste;\n    try {\n        timeUpdate(warpTime, improved ? warpTime / 1000 : 20);\n    } catch (error) { Notify(`Warp failed due to Error:\\n${error}`); }\n};\n\nconst pauseGame = async() => {\n    changeIntervals(true);\n    await Alert(\"Game is currently paused. Press 'confirm' to unpause it. Time spent here will be moved into offline storage\");\n\n    Notify(`Game was paused for ${format(handleOfflineTime(), { type: 'time' })}`);\n    changeIntervals();\n    numbersUpdate();\n    visualUpdate();\n};\n\ntry { //Start everything\n    preventImageUnload();\n\n    const save = localStorage.getItem('save');\n    if (save !== null) {\n        const load = JSON.parse(atob(save));\n        const versionCheck = updatePlayer(load);\n        void Alert(`Welcome back, you were away for ${format(handleOfflineTime(), { type: 'time' })}\\n${versionCheck !== player.version ? `Game have been updated from ${versionCheck} to ${player.version}` : `Current version is ${player.version}`}`);\n    } else {\n        prepareVacuum(false); //Set buildings values\n        updatePlayer(deepClone(playerStart));\n        void Alert(`Welcome to 'Fundamental' ${player.version}, a test-project created by awWhy\\n(This idle game is not meant to be fast)`);\n    }\n\n    if (!player.toggles.normal[2]) {\n        const elementsArea = getId('researchSubtabElements', false);\n        elementsArea.id = 'ElementsTab';\n        getId('researchTab').after(elementsArea);\n\n        const elementsButton = getId('researchSubtabBtnElements', false);\n        elementsButton.id = 'ElementsTabBtn';\n        elementsButton.classList.add('stage4Include');\n        getId('researchTabBtn').after(elementsButton);\n\n        const tabList = global.tabList;\n        tabList.researchSubtabs.splice(tabList.researchSubtabs.indexOf('Elements'), 1);\n        tabList.tabs.splice(tabList.tabs.indexOf('research') + 1, 0, 'Elements');\n    }\n    mobileDeviceSupport();\n    screenReaderSupport();\n    changeFontSize();\n\n    /* Global */\n    const SR = global.screenReader[0];\n    const hover = global.mobileDevice ? 'touchstart' : 'mouseover';\n    document.addEventListener('keydown', (key: KeyboardEvent) => detectHotkey(key));\n    for (let i = 0; i < playerStart.toggles.normal.length; i++) {\n        getId(`toggle${i}`).addEventListener('click', () => toggleSwap(i, 'normal', true));\n    }\n    for (let i = 0; i < playerStart.toggles.confirm.length; i++) {\n        getId(`toggleConfirm${i}`).addEventListener('click', () => toggleConfirm(i, true));\n    }\n    for (let i = 0; i < specialHTML.longestBuilding; i++) {\n        getId(`toggleBuilding${i}`).addEventListener('click', () => toggleSwap(i, 'buildings', true));\n    }\n    for (let i = 0; i < playerStart.toggles.auto.length; i++) {\n        getId(`toggleAuto${i}`).addEventListener('click', () => toggleSwap(i, 'auto', true));\n    }\n\n    /* Stage tab */\n    for (let i = 1; i < specialHTML.longestBuilding; i++) {\n        getId(`building${i}Btn`).addEventListener('click', () => buyBuilding(i));\n    }\n    for (let i = 0; i < specialHTML.longestUpgrade; i++) {\n        const image = getId(`upgrade${i + 1}`);\n        if (SR) { image.addEventListener('focus', () => getUpgradeDescription(i, 'upgrades')); }\n        image.addEventListener(hover, () => getUpgradeDescription(i, 'upgrades'));\n        image.addEventListener('click', () => buyUpgrades(i, player.stage.active, 'upgrades'));\n    }\n    getId('stageReset').addEventListener('click', () => { void stageAsyncReset(); });\n    getId('reset1Button').addEventListener('click', () => {\n        const { active } = player.stage;\n        if (active === 1) {\n            void dischargeAsyncReset();\n        } else if (active === 2) {\n            void vaporizationAsyncReset();\n        } else if (active === 3) {\n            void rankAsyncReset();\n        } else if (active === 4) {\n            void collapseAsyncReset();\n        }\n    });\n    getId('buy1x').addEventListener('click', () => toggleBuy('1'));\n    getId('buyAny').addEventListener('click', () => toggleBuy('any'));\n    getId('buyMax').addEventListener('click', () => toggleBuy('max'));\n    getId('buyAnyInput').addEventListener('change', () => toggleBuy('any'));\n    getId('autoWaitInput').addEventListener('change', () => {\n        const input = getId('autoWaitInput') as HTMLInputElement;\n        let value = Math.max(Number(input.value), 1);\n        if (isNaN(value)) { value = 2; }\n        player.toggles.shop.wait[player.stage.active] = value;\n        input.value = format(value, { type: 'input' });\n    });\n\n    for (let i = -1; i < global.challengesInfo.name.length; i++) {\n        const image = getId(`challenge${i + 1}`);\n        if (SR) { image.addEventListener('focus', () => getChallengeDescription(i)); }\n        image.addEventListener(hover, () => getChallengeDescription(i));\n        image.addEventListener('click', i === -1 ? switchVacuum : () => { void enterExitChallenge(i); });\n    }\n    for (let i = 1; i < global.challengesInfo.rewardText[0].length; i++) {\n        if (i === 5) { continue; } //Missing for now\n        const image = getId(`voidReward${global.stageInfo.word[i]}`);\n        image.addEventListener('click', () => getChallengeReward(i/*, 'void'*/));\n        if (global.mobileDevice) { //Safari bugs with no focus events\n            image.addEventListener('click', () => { getId('voidRewardsDiv').style.display = 'block'; });\n        }\n    }\n    if (global.mobileDevice) {\n        getId('voidRewardsDiv').addEventListener('click', () => { getId('voidRewardsDiv').style.display = ''; });\n    }\n\n    /* Research tab */\n    for (let i = 0; i < specialHTML.longestResearch; i++) {\n        const image = getId(`research${i + 1}Image`);\n        if (SR) { image.addEventListener('focus', () => getUpgradeDescription(i, 'researches')); }\n        image.addEventListener(hover, () => getUpgradeDescription(i, 'researches'));\n        image.addEventListener('click', () => buyUpgrades(i, player.stage.active, 'researches'));\n    }\n    for (let i = 0; i < specialHTML.longestResearchExtra; i++) {\n        const image = getId(`researchExtra${i + 1}Image`);\n        if (SR) { image.addEventListener('focus', () => getUpgradeDescription(i, 'researchesExtra')); }\n        image.addEventListener(hover, () => getUpgradeDescription(i, 'researchesExtra'));\n        image.addEventListener('click', () => buyUpgrades(i, player.stage.active, 'researchesExtra'));\n    }\n    {\n        const image = getId('ASRImage');\n        if (SR) { image.addEventListener('focus', () => getUpgradeDescription(0, 'ASR')); }\n        image.addEventListener(hover, () => getUpgradeDescription(0, 'ASR'));\n        image.addEventListener('click', () => buyUpgrades(player.stage.active, player.stage.active, 'ASR'));\n    }\n\n    getId('element0').addEventListener('dblclick', () => getUpgradeDescription(0, 'elements'));\n    for (let i = 1; i < global.elementsInfo.startCost.length; i++) {\n        const image = getId(`element${i}`);\n        if (SR) { image.addEventListener('focus', () => getUpgradeDescription(i, 'elements')); }\n        image.addEventListener(hover, () => getUpgradeDescription(i, 'elements'));\n        image.addEventListener('click', () => buyUpgrades(i, 4, 'elements'));\n    }\n\n    /* Strangeness tab */\n    for (let s = 1; s < global.strangenessInfo.length; s++) {\n        for (let i = 0; i < global.strangenessInfo[s].startCost.length; i++) {\n            const image = getId(`strange${i + 1}Stage${s}Image`);\n            if (SR) { image.addEventListener('focus', () => getStrangenessDescription(i, s, 'strangeness')); }\n            image.addEventListener(hover, () => getStrangenessDescription(i, s, 'strangeness'));\n            image.addEventListener('click', () => buyUpgrades(i, s, 'strangeness'));\n        }\n    }\n    for (let s = 1; s < global.milestonesInfo.length; s++) {\n        for (let i = 0; i < global.milestonesInfo[s].need.length; i++) {\n            const image = getQuery(`#milestone${i + 1}Stage${s}Div > img`);\n            if (SR) { image.addEventListener('focus', () => getStrangenessDescription(i, s, 'milestones')); }\n            image.addEventListener(hover, () => getStrangenessDescription(i, s, 'milestones'));\n        }\n    }\n\n    /* Settings tab */\n    getId('vaporizationInput').addEventListener('change', () => {\n        const input = getId('vaporizationInput') as HTMLInputElement;\n        player.vaporization.input = Math.max(Number(input.value), 0);\n        input.value = format(player.vaporization.input, { type: 'input' });\n    });\n    getId('collapseStarsInput').addEventListener('change', () => {\n        const input = getId('collapseStarsInput') as HTMLInputElement;\n        player.collapse.input = Math.max(Number(input.value), 1);\n        input.value = format(player.collapse.input, { type: 'input' });\n    });\n    getId('stageInput').addEventListener('change', () => {\n        const input = getId('stageInput') as HTMLInputElement;\n        player.stage.input = Math.max(Number(input.value), 0);\n        input.value = format(player.stage.input, { type: 'input' });\n    });\n    getId('versionButton').addEventListener('click', () => {\n        buildVersionInfo();\n        getId('versionInfo').style.display = '';\n    });\n    getId('save').addEventListener('click', () => { void saveGame(); });\n    getId('file').addEventListener('change', () => { void loadFileGame(); });\n    getId('export').addEventListener('click', () => { void exportFileGame(); });\n    getId('delete').addEventListener('click', () => { void deleteGame(); });\n    getId('switchTheme0').addEventListener('click', () => setTheme(null));\n    for (let i = 1; i < global.stageInfo.word.length; i++) {\n        getId(`switchTheme${i}`).addEventListener('click', () => setTheme(i));\n    }\n    getId('toggleAuto8').addEventListener('click', () => autoElementsSet());\n    getId('toggleAuto5').addEventListener('click', () => autoUpgradesSet('all'));\n    getId('toggleAuto6').addEventListener('click', () => autoResearchesSet('researches', 'all'));\n    getId('toggleAuto7').addEventListener('click', () => autoResearchesSet('researchesExtra', 'all'));\n    getId('saveFileNameInput').addEventListener('change', () => changeSaveFileName());\n    {\n        const button = getId('saveFileHoverButton');\n        if (SR) { button.addEventListener('focus', () => (getId('saveFileNamePreview').textContent = replaceSaveFileSpecials())); }\n        button.addEventListener(hover, () => (getId('saveFileNamePreview').textContent = replaceSaveFileSpecials()));\n    }\n    getId('mainInterval').addEventListener('change', () => {\n        const mainInput = getId('mainInterval') as HTMLInputElement;\n        player.intervals.main = Math.min(Math.max(Math.trunc(Number(mainInput.value)), 20), 100);\n        mainInput.value = `${player.intervals.main}`;\n        changeIntervals();\n    });\n    getId('numbersInterval').addEventListener('change', () => {\n        const numberInput = getId('numbersInterval') as HTMLInputElement;\n        player.intervals.numbers = Math.min(Math.max(Math.trunc(Number(numberInput.value)), 40), 200);\n        numberInput.value = `${player.intervals.numbers}`;\n        changeIntervals();\n    });\n    getId('visualInterval').addEventListener('change', () => {\n        const visualInput = getId('visualInterval') as HTMLInputElement;\n        player.intervals.visual = Math.min(Math.max(Math.trunc(Number(visualInput.value) * 10), 2), 40) * 100;\n        visualInput.value = `${player.intervals.visual / 1000}`;\n        changeIntervals();\n    });\n    getId('autoSaveInterval').addEventListener('change', () => {\n        const autoSaveInput = getId('autoSaveInterval') as HTMLInputElement;\n        player.intervals.autoSave = Math.min(Math.max(Math.trunc(Number(autoSaveInput.value)), 4), 1800) * 1000;\n        autoSaveInput.value = `${player.intervals.autoSave / 1000}`;\n        changeIntervals();\n    });\n    getId('thousandSeparator').addEventListener('change', () => changeFormat(false));\n    getId('decimalPoint').addEventListener('change', () => changeFormat(true));\n    getId('MDMainToggle').addEventListener('click', () => mobileDeviceSupport(true));\n    getId('SRMainToggle').addEventListener('click', () => screenReaderSupport(true));\n    getId('pauseGame').addEventListener('click', () => { void pauseGame(); });\n    getId('reviewEvents').addEventListener('click', () => { void replayEvent(); });\n    getId('offlineWarp').addEventListener('click', () => { void timeWarp(); });\n    getId('customFontSize').addEventListener('change', () => changeFontSize(true));\n\n    getId('stageResetsSave').addEventListener('change', () => {\n        const inputID = getId('stageResetsSave') as HTMLInputElement;\n        const { input } = player.history.stage;\n        input[0] = Math.min(Math.max(Math.trunc(Number(inputID.value)), 0), 20);\n        inputID.value = `${input[0]}`;\n\n        if (input[1] < input[0]) {\n            (getId('stageResetsKeep') as HTMLInputElement).value = inputID.value;\n            input[1] = input[0];\n        }\n    });\n    getId('stageResetsKeep').addEventListener('change', () => {\n        const input = getId('stageResetsKeep') as HTMLInputElement;\n        player.history.stage.input[1] = Math.min(Math.max(Math.trunc(Number(input.value)), player.history.stage.input[0], 3), 100);\n        input.value = `${player.history.stage.input[1]}`;\n    });\n\n    /* Footer */\n    getId('hideToggle').addEventListener('click', hideFooter);\n    for (const tabText of global.tabList.tabs) {\n        getId(`${tabText}TabBtn`).addEventListener('click', () => switchTab(tabText));\n        if (!Object.hasOwn(global.tabList, `${tabText}Subtabs`)) { continue; }\n        for (const subtabText of global.tabList[`${tabText as 'stage'}Subtabs`]) {\n            getId(`${tabText}SubtabBtn${subtabText}`).addEventListener('click', () => switchTab(tabText, subtabText));\n        }\n    }\n    for (let i = 1; i < global.stageInfo.word.length; i++) {\n        getId(`${global.stageInfo.word[i]}Switch`).addEventListener('click', () => switchStage(i));\n    }\n    getId('currentSwitch').addEventListener('click', () => getId('stageSelect').classList.add('active'));\n\n    /* Post */\n    stageUpdate('reload');\n    getId('body').style.display = '';\n    getId('loading').style.display = 'none';\n    Notify(`Game successfully loaded after ${Date.now() - playerStart.time.started} ms`);\n\n    changeIntervals();\n    document.title = `Fundamental ${playerStart.version}`;\n} catch (error) {\n    const buttonDiv = document.createElement('div');\n    buttonDiv.innerHTML = '<button type=\"button\" id=\"exportError\" style=\"width: 7em;\">Export save</button><button type=\"button\" id=\"deleteError\" style=\"width: 7em;\">Delete save</button>';\n    buttonDiv.style.cssText = 'display: flex; column-gap: 0.6em; margin-top: 0.4em;';\n    getId('loading').append(buttonDiv);\n    getId('exportError').addEventListener('click', () => {\n        const save = localStorage.getItem('save');\n        if (save === null) { return void Alert('No save file detected'); }\n        const a = document.createElement('a');\n        a.href = `data:text/plain,${save}`;\n        a.download = 'Fundamental post error export';\n        a.click();\n    });\n    getId('deleteError').addEventListener('click', async() => {\n        if (!await Confirm(\"Press 'Confirm' to delete your save file\\nThis will not be possible to undo, so export save file first\")) { return; }\n        if (!await Confirm(\"Last warning, press 'Confirm' to delete your save file\")) { return; }\n        localStorage.removeItem('save');\n        window.location.reload();\n        void Alert('Game will auto refresh. If not then do it manually');\n    });\n    void Alert(`Error detected during game loading:\\n${error}`);\n}\n"],
  "mappings": "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",
  "names": ["overlimit", "number", "technical", "result", "numbers", "array", "i", "power", "base", "compare", "allEqual", "settings", "toSort", "descend", "main", "initial", "target", "merge", "first", "second", "f", "s", "clone", "left", "right", "check", "difference", "after", "digits", "negative", "base10", "tooSmall", "test", "exponent", "player", "formated", "index", "convert", "Limit", "LimitAlt", "Limit_default", "checkTab", "tab", "subtab", "player", "global", "checkBuilding", "index", "stageIndex", "checkUpgrade", "upgrade", "type", "allowedToBeReset", "check", "milestoneCheck", "need", "Limit_default", "prepareVacuum", "state", "buildings", "playerStart", "buildingsInfo", "upgradesInfo", "researchesInfo", "researchesExtraInfo", "strangenessInfo", "global", "specialHTML", "maxBuildings", "upgrades1Cost", "researches1Cost", "researches1Scaling", "strangeness1Cost", "strangeness1Scaling", "strangeness2Cost", "strangeness2Scaling", "strangeness3Cost", "strangeness3Scaling", "strangeness4Cost", "strangeness4Scaling", "strangeness5Cost", "strangeness5Scaling", "getId", "milestone1S2", "getQuery", "s", "element", "getClass", "i", "newValue", "cloneArray", "switchVacuum", "player", "Alert", "count", "Confirm", "resetVacuum", "updateUnknown", "milestones", "text", "div", "switchTab", "tab", "subtab", "oldTab", "global", "getId", "inside", "subtabAmount", "checkTab", "oldSubtab", "switchStage", "active", "player", "visualUpdate", "numbersUpdate", "maxOfflineTime", "maxExportTime", "offlineWaste", "exportMultiplier", "timeUpdate", "timeWarp", "tick", "auto", "autoBuy", "vacuum", "maxActive", "type", "autoU", "autoR", "autoE", "autoElements", "passedSeconds", "extraTime", "time", "currentTime", "stageResetCheck", "i", "calculateGainedStrangeness", "assignBuildingInformation", "s", "collapseResetCheck", "autoElementsBuy", "rankResetCheck", "vaporizationResetCheck", "dischargeResetCheck", "autoUpgradesBuy", "autoResearchesBuy", "buyBuilding", "calculateGainedBuildings", "research", "buildings", "Limit_default", "format", "stars", "buildingsInfo", "howMany", "trueCountID", "costName", "currency", "free", "e", "extra", "totalBuy", "totalCost", "calculateBuildingsCost", "increase", "firstCost", "totalBefore", "assignDischargeInformation", "effect", "assignVaporizationInformation", "rankCost", "collapse", "collapseInfo", "assignCollapseInformation", "getUpgradeDescription", "trueSubtab", "stageGain", "maxTimeExp", "info", "before", "rainBefore", "moles", "mass", "starEffect", "massEffect", "strange", "strangeMax", "check", "playEvent", "multiMake", "ASR", "resetMessage", "failMessage", "first3Discharges", "rank", "upgrades", "nova", "nebula", "cluster", "galaxy", "neutron", "grid", "bound", "voidProgress", "strange5", "strangeness", "trueStage", "stageBest", "converted", "updateHistory", "updateUnknown", "index", "elementsInfo", "stageIndex", "pointer", "autoIndex", "getStrangenessDescription", "stageText", "getChallengeDescription", "multi", "text", "color", "progress", "getChallengeReward", "need", "reward", "level", "visualUpdateUpgrades", "image", "visualUpdateResearches", "max", "upgradeHTML", "getQuery", "list", "listID", "input", "settings", "inputAbs", "precision", "digits", "result", "formated", "stageUpdate", "stageInfo", "current", "highest", "resets", "activeAll", "element", "getClass", "stageWord", "autoUpgradesSet", "autoResearchesSet", "autoElementsSet", "specialHTML", "showU", "showR", "showRE", "showF", "updateRankInfo", "buildingHTML", "toggleSwap", "researchHTML", "main", "researchExtraHTML", "footerStatsHTML", "body", "switchTheme", "name", "reset", "type", "stageIndex", "elements", "player", "i", "allowedToBeReset", "visualUpdateUpgrades", "autoElementsSet", "global", "buildings", "cloneArray", "playerStart", "upgrades", "autoUpgradesSet", "researches", "visualUpdateResearches", "calculateResearchCost", "autoResearchesSet", "researchesExtra", "startEnergy", "assignEnergy", "assignBuildingInformation", "numbersUpdate", "visualUpdate", "resetStage", "update", "buildingsStart", "calculateMaxLevel", "stageUpdate", "active", "updateRankInfo", "resetVacuum", "s", "assignStrangeBoost", "calculateMilestoneInformation", "assignBuildingInformation", "upgradesInfo", "researchesInfo", "researchesExtraInfo", "dischargeInfo", "vaporizationInfo", "milestonesInfo", "global", "buildings", "upgrades", "researches", "researchesExtra", "strangeness", "discharge", "player", "producing", "stageBoost", "activeAll", "vacuum", "inVoid", "energyMin", "b3", "b4", "b5", "dischargeBase", "totalMultiplier", "listForMult5", "prod5Number", "Limit_default", "radiation", "listForMult4", "prod4Number", "listForMult3", "prod3Number", "listForMult2", "listForMult1", "current5", "current4", "current3", "current2", "rain", "prod2Number", "scaling", "excess", "prod1Number", "satellitesBoost", "elements", "starEffect", "elementsEffects", "systemBase", "effectiveLevel", "listForTotal", "planetBase", "logAny", "totalNumber", "inflationInfo", "calculateMassGain", "multiplier", "preonsCap", "buyBuilding", "index", "stageIndex", "auto", "checkBuilding", "building", "pointer", "currency", "special", "budget", "total", "calculateBuildingsCost", "howMany", "canAfford", "increase", "firstCost", "totalBefore", "Notify", "cloneArray", "reset", "calculateMaxLevel", "assignEnergy", "awardMilestone", "playEvent", "numbersUpdate", "getId", "format", "add", "getEnergy", "energyType", "s", "i", "buildingsInfo", "effect", "cost", "calculateGainedBuildings", "get", "time", "stageGet", "assignStrangeBoost", "strangeQuarks", "calculateGainedStrangeness", "strange", "max", "old", "buyUpgrades", "upgrade", "type", "checkUpgrade", "switchTab", "level", "stageUpdate", "awardVoidReward", "startCost", "visualUpdateUpgrades", "decreased", "calculateResearchCost", "visualUpdateResearches", "getStrangenessDescription", "research", "digits", "addAuto", "autoResearchesSet", "autoUpgradesSet", "which", "b", "a", "autoUpgradesBuy", "autoResearchesBuy", "sort", "bought", "autoElementsSet", "autoElementsBuy", "toggleSwap", "number", "change", "toggles", "anyOn", "toggleHTML", "extraText", "toggleConfirm", "toggleBuy", "input", "shop", "stageResetCheck", "allowed", "stageResetReward", "stageAsyncReset", "stage", "active", "noCobalt", "inChallenge", "text", "Confirm", "Alert", "update", "resetThese", "trueGain", "resetType", "postGain", "storage", "history", "resetStage", "switchStage", "assignDischargeInformation", "dischargeResetCheck", "info", "energy", "dischargeReset", "dischargeAsyncReset", "assignVaporizationInformation", "vaporizationResetCheck", "clouds", "vaporizationReset", "vaporizationAsyncReset", "autoClouds", "vaporization", "rankResetCheck", "requirement", "rankReset", "rankAsyncReset", "updateRankInfo", "massGain", "assignCollapseInformation", "starCheck", "stars", "collapseResetCheck", "remnants", "collapseReset", "collapseAsyncReset", "newMass", "newStars", "mass", "unlockedG", "cantAfford", "notMaxed", "message", "count", "toReset", "collapseInfo", "collapse", "calculateInstability", "milestones", "value", "calculateMilestoneInformation", "need", "reward", "milestoneCheck", "progress", "enterExitChallenge", "getChallengeDescription", "specialHTML", "preventImageUnload", "footer", "build", "upgrade", "research", "extra", "extraDiv", "images", "s", "i", "setTheme", "theme", "player", "global", "switchTheme", "_a", "body", "getId", "dropStatColor", "waterStatColor", "text", "getQuery", "Alert", "resolve", "blocker", "Notify", "confirm", "key", "button", "close", "Confirm", "cancel", "yes", "no", "result", "Prompt", "inputValue", "input", "div", "notification", "mainDiv", "timeout", "remove", "hideFooter", "footerArea", "toggle", "arrow", "animationReset", "numbersUpdate", "visualUpdate", "mobileDeviceSupport", "change", "enabled", "screenReaderSupport", "SRCreateHTML", "stageUpdate", "SRMainDiv", "SRSettings", "hangleToggle", "number", "toggleHTML", "visualUpdateResearches", "newTab", "tabText", "subtabText", "changeFontSize", "size", "changeFormat", "point", "htmlInput", "replayEvent", "events", "last", "event", "playEvent", "index", "calculateMaxLevel", "player", "global", "index", "stageIndex", "value", "Limit_default", "post", "effect", "minValue", "power", "stars", "logAny", "blackHoles", "stage", "interstellar", "gain", "format", "progress", "text", "number", "base", "cloneArray", "array", "deepClone", "toClone", "i", "check", "createArray", "amount", "type", "s", "upgradeType", "pointer", "playerStart", "updatePlayer", "load", "_a", "prepareVacuum", "key", "oldVersion", "a", "oldB", "oldU", "oldR", "oldE", "buildings", "calculateMilestoneInformation", "strangeness", "strangenessMax", "calculateMaxLevel", "visualUpdateResearches", "extra", "extraMax", "researches", "researchesMax", "assignStrangeBoost", "assignEnergy", "calculateInstability", "theme", "setTheme", "getId", "toggleSwap", "toggleConfirm", "toggleBuy", "buildVersionInfo", "changeVersion", "version", "max", "autoText", "detectHotkey", "check", "activeType", "key", "code", "numberKey", "stringKey", "player", "toggleSwap", "timeWarp", "stageAsyncReset", "global", "dischargeAsyncReset", "vaporizationAsyncReset", "rankAsyncReset", "collapseAsyncReset", "activeAll", "index", "switchStage", "tabs", "checkTab", "switchTab", "subtabs", "isShift", "buyBuilding", "getId", "id", "cacheIn", "test", "specialHTML", "store", "global", "Notify", "getClass", "idCollection", "getQuery", "query", "handleOfflineTime", "time", "player", "timeNow", "offlineTime", "maxOffline", "maxOfflineTime", "maxExportTime", "changeIntervals", "pause", "intervalsId", "intervals", "timeUpdate", "numbersUpdate", "visualUpdate", "saveGame", "save", "error", "Alert", "loadFileGame", "versionCheck", "updatePlayer", "format", "stageUpdate", "exportFileGame", "rewardType", "multiplier", "exportMultiplier", "strangeGain", "assignStrangeBoost", "a", "replaceSaveFileSpecials", "deleteGame", "ok", "Prompt", "lower", "changeSaveFileName", "input", "newValue", "playerStart", "realName", "special", "replaceWith", "getDate", "i", "type", "current", "day", "month", "minutes", "seconds", "timeWarp", "waste", "offlineWaste", "warpTime", "improved", "minimum", "Confirm", "pauseGame", "preventImageUnload", "load", "prepareVacuum", "deepClone", "elementsArea", "elementsButton", "tabList", "mobileDeviceSupport", "screenReaderSupport", "changeFontSize", "SR", "hover", "key", "detectHotkey", "toggleSwap", "toggleConfirm", "buyBuilding", "image", "getUpgradeDescription", "buyUpgrades", "stageAsyncReset", "active", "dischargeAsyncReset", "vaporizationAsyncReset", "rankAsyncReset", "collapseAsyncReset", "toggleBuy", "value", "getChallengeDescription", "switchVacuum", "enterExitChallenge", "getChallengeReward", "s", "getStrangenessDescription", "buildVersionInfo", "setTheme", "autoElementsSet", "autoUpgradesSet", "autoResearchesSet", "button", "mainInput", "numberInput", "visualInput", "autoSaveInput", "changeFormat", "replayEvent", "inputID", "hideFooter", "tabText", "switchTab", "subtabText", "switchStage", "buttonDiv"]
}
